{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/components/trading/FuturesTrading.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { TrendingUp, TrendingDown, DollarSign, Calendar, AlertTriangle, BarChart3, Settings, Plus, Minus, Target, Shield, Clock } from 'lucide-react';\n\ninterface FuturesContract {\n  id: string;\n  symbol: string;\n  name: string;\n  price: number;\n  change: number;\n  changePercent: number;\n  volume: number;\n  openInterest: number;\n  expiryDate: string;\n  tickSize: number;\n  contractSize: number;\n  marginRequired: number;\n  sector: string;\n}\n\ninterface Position {\n  id: string;\n  contractId: string;\n  symbol: string;\n  side: 'LONG' | 'SHORT';\n  quantity: number;\n  entryPrice: number;\n  currentPrice: number;\n  unrealizedPnL: number;\n  realizedPnL: number;\n  margin: number;\n  liquidationPrice: number;\n  openTime: string;\n  leverage: number;\n}\n\ninterface OrderForm {\n  contractId: string;\n  side: 'LONG' | 'SHORT';\n  orderType: 'MARKET' | 'LIMIT' | 'STOP';\n  quantity: number;\n  price?: number;\n  stopPrice?: number;\n  leverage: number;\n  reduceOnly: boolean;\n}\n\nconst FuturesTrading: React.FC = () => {\n  const [contracts, setContracts] = useState<FuturesContract[]>([]);\n  const [positions, setPositions] = useState<Position[]>([]);\n  const [selectedContract, setSelectedContract] = useState<FuturesContract | null>(null);\n  const [orderForm, setOrderForm] = useState<OrderForm>({\n    contractId: '',\n    side: 'LONG',\n    orderType: 'MARKET',\n    quantity: 1,\n    leverage: 1,\n    reduceOnly: false\n  });\n  const [accountBalance, setAccountBalance] = useState(50000);\n  const [totalMargin, setTotalMargin] = useState(0);\n  const [availableBalance, setAvailableBalance] = useState(50000);\n  const [selectedTab, setSelectedTab] = useState<'contracts' | 'positions' | 'orders'>('contracts');\n  const [filterSector, setFilterSector] = useState<string>('all');\n\n  // Mock futures contracts data\n  const mockContracts: FuturesContract[] = [\n    // Equity Index Futures\n    {\n      id: '1',\n      symbol: 'ES',\n      name: 'E-mini S&P 500',\n      price: 4850.25,\n      change: 12.50,\n      changePercent: 0.26,\n      volume: 2500000,\n      openInterest: 3200000,\n      expiryDate: '2024-03-15',\n      tickSize: 0.25,\n      contractSize: 50,\n      marginRequired: 12000,\n      sector: 'equity'\n    },\n    {\n      id: '2',\n      symbol: 'NQ',\n      name: 'E-mini NASDAQ-100',\n      price: 16750.50,\n      change: -45.25,\n      changePercent: -0.27,\n      volume: 1800000,\n      openInterest: 2100000,\n      expiryDate: '2024-03-15',\n      tickSize: 0.25,\n      contractSize: 20,\n      marginRequired: 16500,\n      sector: 'equity'\n    },\n    {\n      id: '7',\n      symbol: 'YM',\n      name: 'E-mini Dow Jones',\n      price: 38450.00,\n      change: 125.00,\n      changePercent: 0.33,\n      volume: 180000,\n      openInterest: 250000,\n      expiryDate: '2024-03-15',\n      tickSize: 1.00,\n      contractSize: 5,\n      marginRequired: 9500,\n      sector: 'equity'\n    },\n    {\n      id: '8',\n      symbol: 'RTY',\n      name: 'E-mini Russell 2000',\n      price: 2045.30,\n      change: -8.70,\n      changePercent: -0.42,\n      volume: 320000,\n      openInterest: 450000,\n      expiryDate: '2024-03-15',\n      tickSize: 0.10,\n      contractSize: 50,\n      marginRequired: 7200,\n      sector: 'equity'\n    },\n    // Energy Futures\n    {\n      id: '3',\n      symbol: 'CL',\n      name: 'Crude Oil',\n      price: 78.45,\n      change: 1.85,\n      changePercent: 2.42,\n      volume: 450000,\n      openInterest: 680000,\n      expiryDate: '2024-02-20',\n      tickSize: 0.01,\n      contractSize: 1000,\n      marginRequired: 4200,\n      sector: 'energy'\n    },\n    {\n      id: '9',\n      symbol: 'NG',\n      name: 'Natural Gas',\n      price: 2.85,\n      change: 0.12,\n      changePercent: 4.40,\n      volume: 280000,\n      openInterest: 420000,\n      expiryDate: '2024-02-28',\n      tickSize: 0.001,\n      contractSize: 10000,\n      marginRequired: 2800,\n      sector: 'energy'\n    },\n    {\n      id: '10',\n      symbol: 'RB',\n      name: 'RBOB Gasoline',\n      price: 2.45,\n      change: 0.08,\n      changePercent: 3.37,\n      volume: 95000,\n      openInterest: 140000,\n      expiryDate: '2024-02-29',\n      tickSize: 0.0001,\n      contractSize: 42000,\n      marginRequired: 3500,\n      sector: 'energy'\n    },\n    // Metals Futures\n    {\n      id: '4',\n      symbol: 'GC',\n      name: 'Gold',\n      price: 2045.60,\n      change: -8.40,\n      changePercent: -0.41,\n      volume: 280000,\n      openInterest: 520000,\n      expiryDate: '2024-04-26',\n      tickSize: 0.10,\n      contractSize: 100,\n      marginRequired: 8500,\n      sector: 'metals'\n    },\n    {\n      id: '11',\n      symbol: 'SI',\n      name: 'Silver',\n      price: 24.85,\n      change: 0.45,\n      changePercent: 1.84,\n      volume: 120000,\n      openInterest: 180000,\n      expiryDate: '2024-03-26',\n      tickSize: 0.005,\n      contractSize: 5000,\n      marginRequired: 6200,\n      sector: 'metals'\n    },\n    {\n      id: '12',\n      symbol: 'HG',\n      name: 'Copper',\n      price: 3.85,\n      change: 0.02,\n      changePercent: 0.52,\n      volume: 85000,\n      openInterest: 125000,\n      expiryDate: '2024-03-26',\n      tickSize: 0.0005,\n      contractSize: 25000,\n      marginRequired: 4800,\n      sector: 'metals'\n    },\n    // Bond Futures\n    {\n      id: '5',\n      symbol: 'ZN',\n      name: '10-Year Treasury Note',\n      price: 110.125,\n      change: 0.375,\n      changePercent: 0.34,\n      volume: 750000,\n      openInterest: 1200000,\n      expiryDate: '2024-03-20',\n      tickSize: 0.015625,\n      contractSize: 100000,\n      marginRequired: 1800,\n      sector: 'bonds'\n    },\n    {\n      id: '13',\n      symbol: 'ZB',\n      name: '30-Year Treasury Bond',\n      price: 125.50,\n      change: 0.25,\n      changePercent: 0.20,\n      volume: 320000,\n      openInterest: 480000,\n      expiryDate: '2024-03-20',\n      tickSize: 0.03125,\n      contractSize: 100000,\n      marginRequired: 3200,\n      sector: 'bonds'\n    },\n    {\n      id: '14',\n      symbol: 'ZF',\n      name: '5-Year Treasury Note',\n      price: 107.75,\n      change: 0.125,\n      changePercent: 0.12,\n      volume: 420000,\n      openInterest: 650000,\n      expiryDate: '2024-03-29',\n      tickSize: 0.0078125,\n      contractSize: 100000,\n      marginRequired: 1200,\n      sector: 'bonds'\n    },\n    // Cryptocurrency Futures\n    {\n      id: '6',\n      symbol: 'BTC',\n      name: 'Bitcoin',\n      price: 43250.00,\n      change: 1250.00,\n      changePercent: 2.98,\n      volume: 15000,\n      openInterest: 25000,\n      expiryDate: '2024-03-29',\n      tickSize: 5.00,\n      contractSize: 5,\n      marginRequired: 25000,\n      sector: 'crypto'\n    },\n    {\n      id: '15',\n      symbol: 'ETH',\n      name: 'Ethereum',\n      price: 2650.00,\n      change: 85.00,\n      changePercent: 3.32,\n      volume: 8500,\n      openInterest: 12000,\n      expiryDate: '2024-03-29',\n      tickSize: 0.05,\n      contractSize: 50,\n      marginRequired: 15000,\n      sector: 'crypto'\n    },\n    // Agricultural Futures\n    {\n      id: '16',\n      symbol: 'ZC',\n      name: 'Corn',\n      price: 485.25,\n      change: 8.50,\n      changePercent: 1.78,\n      volume: 180000,\n      openInterest: 320000,\n      expiryDate: '2024-05-14',\n      tickSize: 0.25,\n      contractSize: 5000,\n      marginRequired: 2200,\n      sector: 'agriculture'\n    },\n    {\n      id: '17',\n      symbol: 'ZS',\n      name: 'Soybeans',\n      price: 1245.50,\n      change: -12.25,\n      changePercent: -0.97,\n      volume: 95000,\n      openInterest: 180000,\n      expiryDate: '2024-05-14',\n      tickSize: 0.25,\n      contractSize: 5000,\n      marginRequired: 4500,\n      sector: 'agriculture'\n    },\n    {\n      id: '18',\n      symbol: 'ZW',\n      name: 'Wheat',\n      price: 625.75,\n      change: 5.25,\n      changePercent: 0.85,\n      volume: 65000,\n      openInterest: 120000,\n      expiryDate: '2024-05-14',\n      tickSize: 0.25,\n      contractSize: 5000,\n      marginRequired: 2800,\n      sector: 'agriculture'\n    }\n  ];\n\n  // Mock positions data\n  const mockPositions: Position[] = [\n    {\n      id: '1',\n      contractId: '1',\n      symbol: 'ES',\n      side: 'LONG',\n      quantity: 2,\n      entryPrice: 4825.50,\n      currentPrice: 4850.25,\n      unrealizedPnL: 2475.00,\n      realizedPnL: 0,\n      margin: 24000,\n      liquidationPrice: 4585.30,\n      openTime: '2024-01-15T09:30:00Z',\n      leverage: 10\n    },\n    {\n      id: '2',\n      contractId: '3',\n      symbol: 'CL',\n      side: 'SHORT',\n      quantity: 1,\n      entryPrice: 79.20,\n      currentPrice: 78.45,\n      unrealizedPnL: 750.00,\n      realizedPnL: 0,\n      margin: 4200,\n      liquidationPrice: 83.45,\n      openTime: '2024-01-15T11:15:00Z',\n      leverage: 5\n    }\n  ];\n\n  // Initialize data\n  useEffect(() => {\n    setContracts(mockContracts);\n    setPositions(mockPositions);\n    \n    // Calculate total margin\n    const margin = mockPositions.reduce((sum, pos) => sum + pos.margin, 0);\n    setTotalMargin(margin);\n    setAvailableBalance(accountBalance - margin);\n  }, [accountBalance]);\n\n  // Update selected contract when form changes\n  useEffect(() => {\n    if (orderForm.contractId) {\n      const contract = contracts.find(c => c.id === orderForm.contractId);\n      setSelectedContract(contract || null);\n    }\n  }, [orderForm.contractId, contracts]);\n\n  // Calculate order value and margin\n  const calculateOrderValue = () => {\n    if (!selectedContract) return { value: 0, margin: 0 };\n    \n    const value = selectedContract.price * selectedContract.contractSize * orderForm.quantity;\n    const margin = (selectedContract.marginRequired * orderForm.quantity) / orderForm.leverage;\n    \n    return { value, margin };\n  };\n\n  // Handle order submission\n  const handleSubmitOrder = () => {\n    if (!selectedContract) return;\n    \n    const { margin } = calculateOrderValue();\n    \n    if (margin > availableBalance) {\n      alert('Insufficient margin available');\n      return;\n    }\n    \n    // Simulate order execution\n    const newPosition: Position = {\n      id: Date.now().toString(),\n      contractId: selectedContract.id,\n      symbol: selectedContract.symbol,\n      side: orderForm.side,\n      quantity: orderForm.quantity,\n      entryPrice: selectedContract.price,\n      currentPrice: selectedContract.price,\n      unrealizedPnL: 0,\n      realizedPnL: 0,\n      margin: margin,\n      liquidationPrice: orderForm.side === 'LONG' \n        ? selectedContract.price * 0.8 \n        : selectedContract.price * 1.2,\n      openTime: new Date().toISOString(),\n      leverage: orderForm.leverage\n    };\n    \n    setPositions(prev => [...prev, newPosition]);\n    setTotalMargin(prev => prev + margin);\n    setAvailableBalance(prev => prev - margin);\n    \n    // Reset form\n    setOrderForm({\n      contractId: '',\n      side: 'LONG',\n      orderType: 'MARKET',\n      quantity: 1,\n      leverage: 1,\n      reduceOnly: false\n    });\n    \n    alert('Order executed successfully!');\n  };\n\n  // Close position\n  const closePosition = (positionId: string) => {\n    const position = positions.find(p => p.id === positionId);\n    if (!position) return;\n    \n    setPositions(prev => prev.filter(p => p.id !== positionId));\n    setTotalMargin(prev => prev - position.margin);\n    setAvailableBalance(prev => prev + position.margin + position.unrealizedPnL);\n    \n    alert(`Position closed. P&L: $${position.unrealizedPnL.toFixed(2)}`);\n  };\n\n  // Format number with commas\n  const formatNumber = (num: number, decimals: number = 2) => {\n    return new Intl.NumberFormat('en-US', {\n      minimumFractionDigits: decimals,\n      maximumFractionDigits: decimals\n    }).format(num);\n  };\n\n  // Get sector color\n  const getSectorColor = (sector: string) => {\n    const colors = {\n      equity: 'bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-400',\n      energy: 'bg-orange-100 text-orange-800 dark:bg-orange-900/20 dark:text-orange-400',\n      metals: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400',\n      bonds: 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400',\n      crypto: 'bg-purple-100 text-purple-800 dark:bg-purple-900/20 dark:text-purple-400',\n      agriculture: 'bg-emerald-100 text-emerald-800 dark:bg-emerald-900/20 dark:text-emerald-400'\n    };\n    return colors[sector as keyof typeof colors] || 'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-400';\n  };\n\n  // Filter contracts by sector\n  const filteredContracts = filterSector === 'all' \n    ? contracts \n    : contracts.filter(c => c.sector === filterSector);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <BarChart3 className=\"h-6 w-6 text-blue-600\" />\n          <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n            Futures Trading\n          </h1>\n        </div>\n        \n        <div className=\"flex items-center space-x-4\">\n          <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n            <div>Account Balance: <span className=\"font-semibold text-gray-900 dark:text-white\">${formatNumber(accountBalance)}</span></div>\n            <div>Available: <span className=\"font-semibold text-green-600\">${formatNumber(availableBalance)}</span></div>\n            <div>Used Margin: <span className=\"font-semibold text-orange-600\">${formatNumber(totalMargin)}</span></div>\n          </div>\n        </div>\n      </div>\n\n      {/* Navigation Tabs */}\n      <div className=\"border-b border-gray-200 dark:border-gray-700\">\n        <nav className=\"flex space-x-8\">\n          {[\n            { id: 'contracts', label: 'Contracts', icon: Target },\n            { id: 'positions', label: 'Positions', icon: Shield },\n            { id: 'orders', label: 'Orders', icon: Clock }\n          ].map(({ id, label, icon: Icon }) => (\n            <button\n              key={id}\n              onClick={() => setSelectedTab(id as any)}\n              className={`flex items-center space-x-2 py-2 px-1 border-b-2 font-medium text-sm ${\n                selectedTab === id\n                  ? 'border-blue-500 text-blue-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 dark:text-gray-400 dark:hover:text-gray-300'\n              }`}\n            >\n              <Icon className=\"h-4 w-4\" />\n              <span>{label}</span>\n            </button>\n          ))}\n        </nav>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Main Content */}\n        <div className=\"lg:col-span-2\">\n          {selectedTab === 'contracts' && (\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow\">\n              <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\n                <div className=\"flex items-center justify-between\">\n                  <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                    Futures Contracts\n                  </h2>\n                  <select\n                    value={filterSector}\n                    onChange={(e) => setFilterSector(e.target.value)}\n                    className=\"text-sm border border-gray-300 dark:border-gray-600 rounded-md px-2 py-1 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                  >\n                    <option value=\"all\">All Sectors</option>\n                    <option value=\"equity\">Equity</option>\n                    <option value=\"energy\">Energy</option>\n                    <option value=\"metals\">Metals</option>\n                    <option value=\"bonds\">Bonds</option>\n                    <option value=\"crypto\">Crypto</option>\n                    <option value=\"agriculture\">Agriculture</option>\n                  </select>\n                </div>\n              </div>\n              \n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full\">\n                  <thead className=\"bg-gray-50 dark:bg-gray-700\">\n                    <tr>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                        Contract\n                      </th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                        Price\n                      </th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                        Change\n                      </th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                        Volume\n                      </th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                        Expiry\n                      </th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                        Action\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                    {filteredContracts.map((contract) => (\n                      <tr key={contract.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n                        <td className=\"px-4 py-4\">\n                          <div>\n                            <div className=\"flex items-center space-x-2\">\n                              <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                                {contract.symbol}\n                              </span>\n                              <span className={`px-2 py-1 rounded-full text-xs font-medium ${getSectorColor(contract.sector)}`}>\n                                {contract.sector}\n                              </span>\n                            </div>\n                            <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                              {contract.name}\n                            </div>\n                          </div>\n                        </td>\n                        <td className=\"px-4 py-4 text-sm text-gray-900 dark:text-white\">\n                          ${formatNumber(contract.price)}\n                        </td>\n                        <td className=\"px-4 py-4\">\n                          <div className={`text-sm font-medium ${\n                            contract.change >= 0 ? 'text-green-600' : 'text-red-600'\n                          }`}>\n                            {contract.change >= 0 ? '+' : ''}${formatNumber(contract.change)}\n                            <div className=\"text-xs\">\n                              ({contract.changePercent >= 0 ? '+' : ''}{contract.changePercent.toFixed(2)}%)\n                            </div>\n                          </div>\n                        </td>\n                        <td className=\"px-4 py-4 text-sm text-gray-900 dark:text-white\">\n                          {formatNumber(contract.volume, 0)}\n                        </td>\n                        <td className=\"px-4 py-4 text-sm text-gray-900 dark:text-white\">\n                          {new Date(contract.expiryDate).toLocaleDateString()}\n                        </td>\n                        <td className=\"px-4 py-4\">\n                          <button\n                            onClick={() => setOrderForm(prev => ({ ...prev, contractId: contract.id }))}\n                            className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\"\n                          >\n                            Trade\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          )}\n\n          {selectedTab === 'positions' && (\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow\">\n              <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\n                <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                  Open Positions\n                </h2>\n              </div>\n              \n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full\">\n                  <thead className=\"bg-gray-50 dark:bg-gray-700\">\n                    <tr>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                        Symbol\n                      </th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                        Side\n                      </th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                        Quantity\n                      </th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                        Entry Price\n                      </th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                        Current Price\n                      </th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                        P&L\n                      </th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                        Action\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                    {positions.map((position) => (\n                      <tr key={position.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n                        <td className=\"px-4 py-4 text-sm font-medium text-gray-900 dark:text-white\">\n                          {position.symbol}\n                        </td>\n                        <td className=\"px-4 py-4\">\n                          <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                            position.side === 'LONG' \n                              ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400'\n                              : 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400'\n                          }`}>\n                            {position.side}\n                          </span>\n                        </td>\n                        <td className=\"px-4 py-4 text-sm text-gray-900 dark:text-white\">\n                          {position.quantity}\n                        </td>\n                        <td className=\"px-4 py-4 text-sm text-gray-900 dark:text-white\">\n                          ${formatNumber(position.entryPrice)}\n                        </td>\n                        <td className=\"px-4 py-4 text-sm text-gray-900 dark:text-white\">\n                          ${formatNumber(position.currentPrice)}\n                        </td>\n                        <td className=\"px-4 py-4\">\n                          <span className={`text-sm font-medium ${\n                            position.unrealizedPnL >= 0 ? 'text-green-600' : 'text-red-600'\n                          }`}>\n                            ${formatNumber(position.unrealizedPnL)}\n                          </span>\n                        </td>\n                        <td className=\"px-4 py-4\">\n                          <button\n                            onClick={() => closePosition(position.id)}\n                            className=\"text-red-600 hover:text-red-800 text-sm font-medium\"\n                          >\n                            Close\n                          </button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Order Form */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\n          <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n            Place Order\n          </h2>\n          \n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                Contract\n              </label>\n              <select\n                value={orderForm.contractId}\n                onChange={(e) => setOrderForm(prev => ({ ...prev, contractId: e.target.value }))}\n                className=\"w-full border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              >\n                <option value=\"\">Select Contract</option>\n                {contracts.map((contract) => (\n                  <option key={contract.id} value={contract.id}>\n                    {contract.symbol} - {contract.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n            \n            <div className=\"grid grid-cols-2 gap-3\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                  Side\n                </label>\n                <select\n                  value={orderForm.side}\n                  onChange={(e) => setOrderForm(prev => ({ ...prev, side: e.target.value as 'LONG' | 'SHORT' }))}\n                  className=\"w-full border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                >\n                  <option value=\"LONG\">Long</option>\n                  <option value=\"SHORT\">Short</option>\n                </select>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                  Order Type\n                </label>\n                <select\n                  value={orderForm.orderType}\n                  onChange={(e) => setOrderForm(prev => ({ ...prev, orderType: e.target.value as any }))}\n                  className=\"w-full border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                >\n                  <option value=\"MARKET\">Market</option>\n                  <option value=\"LIMIT\">Limit</option>\n                  <option value=\"STOP\">Stop</option>\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"grid grid-cols-2 gap-3\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                  Quantity\n                </label>\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  value={orderForm.quantity}\n                  onChange={(e) => setOrderForm(prev => ({ ...prev, quantity: parseInt(e.target.value) || 1 }))}\n                  className=\"w-full border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                  Leverage\n                </label>\n                <select\n                  value={orderForm.leverage}\n                  onChange={(e) => setOrderForm(prev => ({ ...prev, leverage: parseInt(e.target.value) }))}\n                  className=\"w-full border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                >\n                  {[1, 2, 3, 5, 10, 20, 50].map(lev => (\n                    <option key={lev} value={lev}>{lev}x</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            \n            {selectedContract && (\n              <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-3 space-y-2\">\n                <div className=\"text-sm\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600 dark:text-gray-400\">Contract Value:</span>\n                    <span className=\"font-medium text-gray-900 dark:text-white\">\n                      ${formatNumber(calculateOrderValue().value)}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600 dark:text-gray-400\">Required Margin:</span>\n                    <span className=\"font-medium text-gray-900 dark:text-white\">\n                      ${formatNumber(calculateOrderValue().margin)}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600 dark:text-gray-400\">Available Balance:</span>\n                    <span className={`font-medium ${\n                      availableBalance >= calculateOrderValue().margin \n                        ? 'text-green-600' \n                        : 'text-red-600'\n                    }`}>\n                      ${formatNumber(availableBalance)}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            )}\n            \n            <button\n              onClick={handleSubmitOrder}\n              disabled={!selectedContract || availableBalance < calculateOrderValue().margin}\n              className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed\"\n            >\n              Place Order\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FuturesTrading;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1564, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/app/trading/futures/page.tsx"],"sourcesContent":["'use client';\n\nimport FuturesTrading from '../../../../components/trading/FuturesTrading';\nimport { BarChart3, ArrowLeft } from 'lucide-react';\nimport Link from 'next/link';\n\nexport default function FuturesTradingPage() {\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      {/* Header */}\n      <div className=\"bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center space-x-4\">\n              <Link\n                href=\"/trading\"\n                className=\"flex items-center space-x-2 text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white transition-colors\"\n              >\n                <ArrowLeft className=\"h-5 w-5\" />\n                <span>Back to Trading</span>\n              </Link>\n              <div className=\"h-6 w-px bg-gray-300 dark:bg-gray-600\" />\n              <div className=\"flex items-center space-x-2\">\n                <BarChart3 className=\"h-6 w-6 text-blue-600\" />\n                <h1 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                  Futures Trading\n                </h1>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center space-x-3\">\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                <span>Advanced Trading Platform</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <FuturesTrading />\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AACA;AAJA;;;;;AAMe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,uKAAI;wCACH,MAAK;wCACL,WAAU;;0DAEV,8OAAC,6NAAS;gDAAC,WAAU;;;;;;0DACrB,8OAAC;0DAAK;;;;;;;;;;;;kDAER,8OAAC;wCAAI,WAAU;;;;;;kDACf,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,iOAAS;gDAAC,WAAU;;;;;;0DACrB,8OAAC;gDAAG,WAAU;0DAAsD;;;;;;;;;;;;;;;;;;0CAMxE,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;kDAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAQhB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,mJAAc;;;;;;;;;;;;;;;;AAIvB","debugId":null}}]
}