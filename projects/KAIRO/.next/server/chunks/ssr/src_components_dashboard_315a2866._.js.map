{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/dashboard/DashboardLayout.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useAuth } from '@/contexts/AuthContext';\nimport {\n  LayoutDashboard,\n  TrendingUp,\n  Wallet,\n  Settings,\n  Users,\n  BarChart3,\n  Bot,\n  Bell,\n  Search,\n  Menu,\n  X,\n  ChevronDown,\n  DollarSign,\n  Activity,\n  Target,\n  Zap,\n  Shield,\n  Star\n} from 'lucide-react';\nimport { useRouter, usePathname } from 'next/navigation';\nimport QuickTradeModal from '@/components/modals/QuickTradeModal';\n\ninterface DashboardLayoutProps {\n  children: React.ReactNode;\n}\n\ninterface NavItem {\n  name: string;\n  href: string;\n  icon: React.ComponentType<any>;\n  badge?: string;\n  submenu?: NavItem[];\n}\n\nconst navigation: NavItem[] = [\n  {\n    name: 'Dashboard',\n    href: '/dashboard',\n    icon: LayoutDashboard,\n  },\n  {\n    name: 'Portfolio',\n    href: '/portfolio',\n    icon: Wallet,\n    submenu: [\n      { name: 'Overview', href: '/portfolio', icon: BarChart3 },\n      { name: 'Holdings', href: '/portfolio/holdings', icon: TrendingUp },\n      { name: 'Performance', href: '/portfolio/performance', icon: Activity },\n    ]\n  },\n  {\n    name: 'Trading',\n    href: '/trading',\n    icon: TrendingUp,\n    submenu: [\n      { name: 'Spot Trading', href: '/trading/spot', icon: DollarSign },\n      { name: 'Futures', href: '/trading/futures', icon: Target },\n      { name: 'Options', href: '/trading/options', icon: Zap },\n    ]\n  },\n  {\n    name: 'Automation',\n    href: '/automation',\n    icon: Bot,\n    badge: 'Pro',\n    submenu: [\n      { name: 'Strategies', href: '/automation/strategies', icon: Bot },\n      { name: 'Copy Trading', href: '/copy-trade', icon: Users },\n      { name: 'Alerts', href: '/automation/alerts', icon: Bell },\n    ]\n  },\n  {\n    name: 'Social',\n    href: '/social',\n    icon: Users,\n    submenu: [\n      { name: 'Feed', href: '/social', icon: Activity },\n      { name: 'Creators', href: '/creators', icon: Star },\n      { name: 'Leaderboard', href: '/social/leaderboard', icon: TrendingUp },\n    ]\n  },\n  {\n    name: 'Analytics',\n    href: '/analytics',\n    icon: BarChart3,\n  },\n];\n\nexport default function DashboardLayout({ children }: DashboardLayoutProps) {\n  const { user, logout } = useAuth();\n  const router = useRouter();\n  const pathname = usePathname();\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const [expandedItems, setExpandedItems] = useState<string[]>([]);\n  const [userMenuOpen, setUserMenuOpen] = useState(false);\n  const [quickTradeModalOpen, setQuickTradeModalOpen] = useState(false);\n\n  const toggleExpanded = (itemName: string) => {\n    setExpandedItems(prev => \n      prev.includes(itemName) \n        ? prev.filter(item => item !== itemName)\n        : [...prev, itemName]\n    );\n  };\n\n  const isActive = (href: string) => {\n    return pathname === href || (href !== '/dashboard' && pathname.startsWith(href));\n  };\n\n  const handleLogout = async () => {\n    await logout();\n    router.push('/login');\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      {/* Mobile sidebar backdrop */}\n      {sidebarOpen && (\n        <div \n          className=\"fixed inset-0 z-40 bg-black bg-opacity-50 lg:hidden\"\n          onClick={() => setSidebarOpen(false)}\n        />\n      )}\n\n      {/* Sidebar */}\n      <div className={`\n        fixed inset-y-0 left-0 z-50 w-64 bg-white dark:bg-gray-800 shadow-lg transform transition-transform duration-300 ease-in-out lg:translate-x-0 lg:static lg:inset-0\n        ${sidebarOpen ? 'translate-x-0' : '-translate-x-full'}\n      `}>\n        <div className=\"flex flex-col h-full\">\n          {/* Logo */}\n          <div className=\"flex items-center justify-between h-16 px-6 border-b border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-8 h-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center\">\n                <span className=\"text-white font-bold text-sm\">K</span>\n              </div>\n              <span className=\"text-xl font-bold text-gray-900 dark:text-white\">KAIRO</span>\n            </div>\n            <button\n              onClick={() => setSidebarOpen(false)}\n              className=\"lg:hidden p-1 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 dark:hover:bg-gray-700\"\n            >\n              <X className=\"h-5 w-5\" />\n            </button>\n          </div>\n\n          {/* Navigation */}\n          <nav className=\"flex-1 px-4 py-6 space-y-2 overflow-y-auto\">\n            {navigation.map((item) => (\n              <div key={item.name}>\n                <div\n                  className={`\n                    flex items-center justify-between px-3 py-2 rounded-lg text-sm font-medium cursor-pointer transition-colors\n                    ${isActive(item.href) \n                      ? 'bg-blue-50 dark:bg-blue-900/20 text-blue-700 dark:text-blue-300' \n                      : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n                    }\n                  `}\n                  onClick={() => {\n                    if (item.submenu) {\n                      toggleExpanded(item.name);\n                    } else {\n                      router.push(item.href);\n                      setSidebarOpen(false);\n                    }\n                  }}\n                >\n                  <div className=\"flex items-center space-x-3\">\n                    <item.icon className=\"h-5 w-5\" />\n                    <span>{item.name}</span>\n                    {item.badge && (\n                      <span className=\"px-2 py-1 text-xs font-medium bg-gradient-to-r from-purple-500 to-blue-600 text-white rounded-full\">\n                        {item.badge}\n                      </span>\n                    )}\n                  </div>\n                  {item.submenu && (\n                    <ChevronDown className={`h-4 w-4 transition-transform ${\n                      expandedItems.includes(item.name) ? 'rotate-180' : ''\n                    }`} />\n                  )}\n                </div>\n                \n                {/* Submenu */}\n                {item.submenu && expandedItems.includes(item.name) && (\n                  <div className=\"ml-6 mt-2 space-y-1\">\n                    {item.submenu.map((subItem) => (\n                      <div\n                        key={subItem.name}\n                        className={`\n                          flex items-center space-x-3 px-3 py-2 rounded-lg text-sm cursor-pointer transition-colors\n                          ${isActive(subItem.href)\n                            ? 'bg-blue-50 dark:bg-blue-900/20 text-blue-700 dark:text-blue-300'\n                            : 'text-gray-600 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700'\n                          }\n                        `}\n                        onClick={() => {\n                          router.push(subItem.href);\n                          setSidebarOpen(false);\n                        }}\n                      >\n                        <subItem.icon className=\"h-4 w-4\" />\n                        <span>{subItem.name}</span>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n            ))}\n          </nav>\n\n          {/* User Profile */}\n          <div className=\"border-t border-gray-200 dark:border-gray-700 p-4\">\n            <div className=\"relative\">\n              <button\n                onClick={() => setUserMenuOpen(!userMenuOpen)}\n                className=\"flex items-center w-full px-3 py-2 text-sm rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\"\n              >\n                <div className=\"flex items-center space-x-3 flex-1\">\n                  <div className=\"w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center\">\n                    <span className=\"text-white text-sm font-medium\">\n                      {user?.firstName?.charAt(0) || 'U'}\n                    </span>\n                  </div>\n                  <div className=\"text-left\">\n                    <p className=\"font-medium text-gray-900 dark:text-white\">\n                      {user?.firstName} {user?.lastName}\n                    </p>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      {user?.email}\n                    </p>\n                  </div>\n                </div>\n                <ChevronDown className=\"h-4 w-4 text-gray-400\" />\n              </button>\n              \n              {/* User Menu Dropdown */}\n              {userMenuOpen && (\n                <div className=\"absolute bottom-full left-0 right-0 mb-2 bg-white dark:bg-gray-800 rounded-lg shadow-lg border border-gray-200 dark:border-gray-700 py-2\">\n                  <button\n                    onClick={() => {\n                      router.push('/settings');\n                      setUserMenuOpen(false);\n                      setSidebarOpen(false);\n                    }}\n                    className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                  >\n                    <Settings className=\"h-4 w-4 mr-3\" />\n                    Settings\n                  </button>\n                  <button\n                    onClick={() => {\n                      router.push('/security');\n                      setUserMenuOpen(false);\n                      setSidebarOpen(false);\n                    }}\n                    className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                  >\n                    <Shield className=\"h-4 w-4 mr-3\" />\n                    Security\n                  </button>\n                  <hr className=\"my-2 border-gray-200 dark:border-gray-700\" />\n                  <button\n                    onClick={handleLogout}\n                    className=\"flex items-center w-full px-4 py-2 text-sm text-red-600 dark:text-red-400 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                  >\n                    <span className=\"mr-3\">→</span>\n                    Sign out\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main content */}\n      <div className=\"lg:pl-64\">\n        {/* Top header */}\n        <header className=\"bg-white dark:bg-gray-800 shadow-sm border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex items-center justify-between px-4 py-4\">\n            <div className=\"flex items-center space-x-4\">\n              <button\n                onClick={() => setSidebarOpen(true)}\n                className=\"lg:hidden p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 dark:hover:bg-gray-700\"\n              >\n                <Menu className=\"h-5 w-5\" />\n              </button>\n              \n              {/* Search */}\n              <div className=\"relative hidden md:block\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <Search className=\"h-5 w-5 text-gray-400\" />\n                </div>\n                <input\n                  type=\"text\"\n                  placeholder=\"Search stocks, crypto, traders...\"\n                  className=\"block w-80 pl-10 pr-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n              </div>\n            </div>\n\n            <div className=\"flex items-center space-x-4\">\n              {/* Notifications */}\n              <button className=\"relative p-2 text-gray-400 hover:text-gray-500 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg\">\n                <Bell className=\"h-5 w-5\" />\n                <span className=\"absolute top-1 right-1 w-2 h-2 bg-red-500 rounded-full\"></span>\n              </button>\n              \n              {/* Quick Trade Button */}\n              <button \n                onClick={() => setQuickTradeModalOpen(true)}\n                className=\"bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white px-4 py-2 rounded-lg font-medium transition-all duration-200 shadow-lg hover:shadow-xl\"\n              >\n                Quick Trade\n              </button>\n            </div>\n          </div>\n        </header>\n\n        {/* Page content */}\n        <main className=\"flex-1\">\n          {children}\n        </main>\n      </div>\n\n      {/* Quick Trade Modal */}\n      <QuickTradeModal \n        isOpen={quickTradeModalOpen} \n        onClose={() => setQuickTradeModalOpen(false)} \n      />\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 670, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/dashboard/MarketDataWidget.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport {\n  TrendingUp,\n  TrendingDown,\n  BarChart3,\n  Activity,\n  Globe,\n  DollarSign,\n  Percent,\n  Clock,\n  RefreshCw\n} from 'lucide-react';\nimport { liveMarketService, useMarketData } from '@/services/liveMarketService';\n\ninterface MarketIndex {\n  symbol: string;\n  name: string;\n  price: number;\n  change: number;\n  changePercent: number;\n  volume: string;\n}\n\ninterface CryptoData {\n  symbol: string;\n  name: string;\n  price: number;\n  change: number;\n  changePercent: number;\n  marketCap: string;\n}\n\ninterface ForexPair {\n  pair: string;\n  price: number;\n  change: number;\n  changePercent: number;\n}\n\nexport default function MarketDataWidget() {\n  const [activeTab, setActiveTab] = useState<'indices' | 'crypto' | 'forex'>('indices');\n  const [lastUpdate, setLastUpdate] = useState(new Date());\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  \n  // Get live market data\n  const liveData = useMarketData();\n  \n  // Convert live data to component format\n  const getMarketIndices = (): MarketIndex[] => {\n    const indicesSymbols = ['SPY', 'QQQ', 'DJI', 'IXIC', 'RUT'];\n    const indicesNames = {\n      SPY: 'S&P 500 ETF',\n      QQQ: 'NASDAQ ETF', \n      DJI: 'Dow Jones',\n      IXIC: 'NASDAQ',\n      RUT: 'Russell 2000'\n    };\n    \n    if (!Array.isArray(liveData)) return [];\n    \n    return liveData\n      .filter(item => indicesSymbols.includes(item.symbol))\n      .map(item => ({\n        symbol: item.symbol,\n        name: indicesNames[item.symbol as keyof typeof indicesNames] || item.symbol,\n        price: item.price,\n        change: item.change,\n        changePercent: item.changePercent,\n        volume: `${(item.volume / 1000000).toFixed(1)}M`\n      }));\n  };\n  \n  const getCryptoData = (): CryptoData[] => {\n    const cryptoSymbols = ['BTCUSDT', 'ETHUSDT', 'SOLUSDT', 'ADAUSDT'];\n    const cryptoNames = {\n      BTCUSDT: 'Bitcoin',\n      ETHUSDT: 'Ethereum',\n      SOLUSDT: 'Solana',\n      ADAUSDT: 'Cardano'\n    };\n    \n    if (!Array.isArray(liveData)) return [];\n    \n    return liveData\n      .filter(item => cryptoSymbols.includes(item.symbol))\n      .map(item => ({\n        symbol: item.symbol.replace('USDT', ''),\n        name: cryptoNames[item.symbol as keyof typeof cryptoNames] || item.symbol,\n        price: item.price,\n        change: item.change,\n        changePercent: item.changePercent,\n        marketCap: item.marketCap ? `${(item.marketCap / 1000000000).toFixed(1)}B` : 'N/A'\n      }));\n  };\n  \n  const [marketIndices, setMarketIndices] = useState<MarketIndex[]>([\n    {\n      symbol: 'SPX',\n      name: 'S&P 500',\n      price: 4756.50,\n      change: 23.45,\n      changePercent: 0.49,\n      volume: '3.2B'\n    },\n    {\n      symbol: 'IXIC',\n      name: 'NASDAQ',\n      price: 14845.73,\n      change: 156.82,\n      changePercent: 1.07,\n      volume: '4.1B'\n    },\n    {\n      symbol: 'DJI',\n      name: 'Dow Jones',\n      price: 37689.54,\n      change: -89.23,\n      changePercent: -0.24,\n      volume: '2.8B'\n    },\n    {\n      symbol: 'RUT',\n      name: 'Russell 2000',\n      price: 2045.32,\n      change: 12.67,\n      changePercent: 0.62,\n      volume: '1.5B'\n    }\n  ]);\n\n  const [cryptoData, setCryptoData] = useState<CryptoData[]>([\n    {\n      symbol: 'BTC',\n      name: 'Bitcoin',\n      price: 67234.50,\n      change: 1234.67,\n      changePercent: 1.87,\n      marketCap: '1.32T'\n    },\n    {\n      symbol: 'ETH',\n      name: 'Ethereum',\n      price: 3456.78,\n      change: -89.23,\n      changePercent: -2.52,\n      marketCap: '415.6B'\n    },\n    {\n      symbol: 'BNB',\n      name: 'Binance Coin',\n      price: 345.67,\n      change: 12.34,\n      changePercent: 3.70,\n      marketCap: '53.2B'\n    },\n    {\n      symbol: 'SOL',\n      name: 'Solana',\n      price: 156.89,\n      change: 8.45,\n      changePercent: 5.69,\n      marketCap: '69.8B'\n    }\n  ]);\n\n  const [forexData, setForexData] = useState<ForexPair[]>([\n    {\n      pair: 'EUR/USD',\n      price: 1.0876,\n      change: 0.0023,\n      changePercent: 0.21\n    },\n    {\n      pair: 'GBP/USD',\n      price: 1.2654,\n      change: -0.0045,\n      changePercent: -0.35\n    },\n    {\n      pair: 'USD/JPY',\n      price: 149.87,\n      change: 0.67,\n      changePercent: 0.45\n    },\n    {\n      pair: 'AUD/USD',\n      price: 0.6543,\n      change: 0.0012,\n      changePercent: 0.18\n    }\n  ]);\n\n  // Update data when live data changes\n  useEffect(() => {\n    if (liveData) {\n      setMarketIndices(getMarketIndices());\n      setCryptoData(getCryptoData());\n      setLastUpdate(new Date());\n    }\n  }, [liveData]);\n  \n  const handleRefresh = async () => {\n    setIsRefreshing(true);\n    // Force refresh of live data\n    setLastUpdate(new Date());\n    setIsRefreshing(false);\n  };\n\n  const formatTime = (date: Date) => {\n    return date.toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    });\n  };\n\n  const tabs = [\n    { id: 'indices', label: 'Indices', icon: BarChart3 },\n    { id: 'crypto', label: 'Crypto', icon: Activity },\n    { id: 'forex', label: 'Forex', icon: Globe }\n  ];\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n      {/* Header */}\n      <div className=\"p-6 border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Market Data</h2>\n            <div className=\"flex items-center space-x-2 mt-1\">\n              <Clock className=\"h-4 w-4 text-gray-400\" />\n              <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                Last updated: {formatTime(lastUpdate)}\n              </span>\n            </div>\n          </div>\n          <button\n            onClick={handleRefresh}\n            disabled={isRefreshing}\n            className=\"flex items-center space-x-2 px-3 py-2 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white rounded-lg font-medium transition-colors\"\n          >\n            <RefreshCw className={`h-4 w-4 ${isRefreshing ? 'animate-spin' : ''}`} />\n            <span>Refresh</span>\n          </button>\n        </div>\n      </div>\n\n      {/* Tab Navigation */}\n      <div className=\"border-b border-gray-200 dark:border-gray-700\">\n        <nav className=\"flex space-x-8 px-6\">\n          {tabs.map((tab) => {\n            const Icon = tab.icon;\n            return (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id as any)}\n                className={`flex items-center space-x-2 py-4 px-1 border-b-2 font-medium text-sm transition-colors ${\n                  activeTab === tab.id\n                    ? 'border-blue-500 text-blue-600 dark:text-blue-400'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300'\n                }`}\n              >\n                <Icon className=\"h-4 w-4\" />\n                <span>{tab.label}</span>\n              </button>\n            );\n          })}\n        </nav>\n      </div>\n\n      {/* Content */}\n      <div className=\"p-6\">\n        {/* Market Indices */}\n        {activeTab === 'indices' && (\n          <div className=\"space-y-4\">\n            {marketIndices.map((index) => (\n              <div key={index.symbol} className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\">\n                <div className=\"flex items-center space-x-4\">\n                  <div className={`p-2 rounded-lg ${\n                    index.change >= 0 ? 'bg-green-100 dark:bg-green-900/20' : 'bg-red-100 dark:bg-red-900/20'\n                  }`}>\n                    {index.change >= 0 ? (\n                      <TrendingUp className=\"h-5 w-5 text-green-600 dark:text-green-400\" />\n                    ) : (\n                      <TrendingDown className=\"h-5 w-5 text-red-600 dark:text-red-400\" />\n                    )}\n                  </div>\n                  <div>\n                    <h3 className=\"font-medium text-gray-900 dark:text-white\">{index.symbol}</h3>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">{index.name}</p>\n                  </div>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"font-semibold text-gray-900 dark:text-white\">\n                    {index.price.toLocaleString()}\n                  </p>\n                  <div className=\"flex items-center space-x-2\">\n                    <p className={`text-sm font-medium ${\n                      index.change >= 0 ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'\n                    }`}>\n                      {index.change >= 0 ? '+' : ''}{index.change.toFixed(2)}\n                    </p>\n                    <p className={`text-sm ${\n                      index.changePercent >= 0 ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'\n                    }`}>\n                      ({index.changePercent >= 0 ? '+' : ''}{index.changePercent.toFixed(2)}%)\n                    </p>\n                  </div>\n                  <p className=\"text-xs text-gray-500 dark:text-gray-400\">Vol: {index.volume}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {/* Cryptocurrency */}\n        {activeTab === 'crypto' && (\n          <div className=\"space-y-4\">\n            {cryptoData.map((crypto) => (\n              <div key={crypto.symbol} className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\">\n                <div className=\"flex items-center space-x-4\">\n                  <div className={`p-2 rounded-lg ${\n                    crypto.change >= 0 ? 'bg-green-100 dark:bg-green-900/20' : 'bg-red-100 dark:bg-red-900/20'\n                  }`}>\n                    {crypto.change >= 0 ? (\n                      <TrendingUp className=\"h-5 w-5 text-green-600 dark:text-green-400\" />\n                    ) : (\n                      <TrendingDown className=\"h-5 w-5 text-red-600 dark:text-red-400\" />\n                    )}\n                  </div>\n                  <div>\n                    <h3 className=\"font-medium text-gray-900 dark:text-white\">{crypto.symbol}</h3>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">{crypto.name}</p>\n                  </div>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"font-semibold text-gray-900 dark:text-white\">\n                    ${crypto.price.toLocaleString()}\n                  </p>\n                  <div className=\"flex items-center space-x-2\">\n                    <p className={`text-sm font-medium ${\n                      crypto.change >= 0 ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'\n                    }`}>\n                      {crypto.change >= 0 ? '+' : ''}${crypto.change.toFixed(2)}\n                    </p>\n                    <p className={`text-sm ${\n                      crypto.changePercent >= 0 ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'\n                    }`}>\n                      ({crypto.changePercent >= 0 ? '+' : ''}{crypto.changePercent.toFixed(2)}%)\n                    </p>\n                  </div>\n                  <p className=\"text-xs text-gray-500 dark:text-gray-400\">MCap: ${crypto.marketCap}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {/* Forex */}\n        {activeTab === 'forex' && (\n          <div className=\"space-y-4\">\n            {forexData.map((pair) => (\n              <div key={pair.pair} className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\">\n                <div className=\"flex items-center space-x-4\">\n                  <div className={`p-2 rounded-lg ${\n                    pair.change >= 0 ? 'bg-green-100 dark:bg-green-900/20' : 'bg-red-100 dark:bg-red-900/20'\n                  }`}>\n                    {pair.change >= 0 ? (\n                      <TrendingUp className=\"h-5 w-5 text-green-600 dark:text-green-400\" />\n                    ) : (\n                      <TrendingDown className=\"h-5 w-5 text-red-600 dark:text-red-400\" />\n                    )}\n                  </div>\n                  <div>\n                    <h3 className=\"font-medium text-gray-900 dark:text-white\">{pair.pair}</h3>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Currency Pair</p>\n                  </div>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"font-semibold text-gray-900 dark:text-white\">\n                    {pair.price.toFixed(4)}\n                  </p>\n                  <div className=\"flex items-center space-x-2\">\n                    <p className={`text-sm font-medium ${\n                      pair.change >= 0 ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'\n                    }`}>\n                      {pair.change >= 0 ? '+' : ''}{pair.change.toFixed(4)}\n                    </p>\n                    <p className={`text-sm ${\n                      pair.changePercent >= 0 ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'\n                    }`}>\n                      ({pair.changePercent >= 0 ? '+' : ''}{pair.changePercent.toFixed(2)}%)\n                    </p>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Footer */}\n      <div className=\"px-6 py-4 bg-gray-50 dark:bg-gray-700/50 rounded-b-xl\">\n        <div className=\"flex items-center justify-between\">\n          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n            Real-time market data powered by GainzAlgo\n          </p>\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\n            <span className=\"text-sm text-green-600 dark:text-green-400 font-medium\">Live</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1457, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/dashboard/PortfolioOverview.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport MarketDataWidget from './MarketDataWidget';\nimport {\n  TrendingUp,\n  TrendingDown,\n  DollarSign,\n  Target,\n  Activity,\n  PieChart,\n  BarChart3,\n  Eye,\n  Users,\n  Star,\n  ArrowUpRight,\n  ArrowDownRight,\n  RefreshCw\n} from 'lucide-react';\n\ninterface PortfolioStats {\n  totalValue: number;\n  dayChange: number;\n  dayChangePercent: number;\n  totalReturn: number;\n  totalReturnPercent: number;\n  winRate: number;\n  profitFactor: number;\n  maxDrawdown: number;\n  sharpeRatio: number;\n  followers: number;\n  copiers: number;\n  rank: number;\n}\n\ninterface Position {\n  id: string;\n  symbol: string;\n  name: string;\n  shares: number;\n  currentPrice: number;\n  totalValue: number;\n  dayChange: number;\n  dayChangePercent: number;\n  allocation: number;\n  sector: string;\n  type: 'stock' | 'crypto' | 'forex' | 'commodity';\n}\n\ninterface Trade {\n  id: string;\n  symbol: string;\n  type: 'buy' | 'sell';\n  quantity: number;\n  price: number;\n  timestamp: Date;\n  pnl: number;\n  status: 'completed' | 'pending' | 'cancelled';\n}\n\nexport default function PortfolioOverview() {\n  const [portfolioStats, setPortfolioStats] = useState<PortfolioStats>({\n    totalValue: 247850.75,\n    dayChange: 4320.50,\n    dayChangePercent: 1.78,\n    totalReturn: 47850.75,\n    totalReturnPercent: 23.92,\n    winRate: 78.5,\n    profitFactor: 1.85,\n    maxDrawdown: 4.2,\n    sharpeRatio: 2.34,\n    followers: 2847,\n    copiers: 156,\n    rank: 12\n  });\n\n  const [positions, setPositions] = useState<Position[]>([\n    {\n      id: '1',\n      symbol: 'AAPL',\n      name: 'Apple Inc.',\n      shares: 100,\n      currentPrice: 185.25,\n      totalValue: 18525.00,\n      dayChange: 285.50,\n      dayChangePercent: 1.56,\n      allocation: 7.5,\n      sector: 'Technology',\n      type: 'stock'\n    },\n    {\n      id: '2',\n      symbol: 'BTC',\n      name: 'Bitcoin',\n      shares: 2.5,\n      currentPrice: 43250.00,\n      totalValue: 108125.00,\n      dayChange: 2150.00,\n      dayChangePercent: 2.03,\n      allocation: 43.6,\n      sector: 'Cryptocurrency',\n      type: 'crypto'\n    },\n    {\n      id: '3',\n      symbol: 'TSLA',\n      name: 'Tesla Inc.',\n      shares: 75,\n      currentPrice: 245.80,\n      totalValue: 18435.00,\n      dayChange: -425.25,\n      dayChangePercent: -2.26,\n      allocation: 7.4,\n      sector: 'Automotive',\n      type: 'stock'\n    },\n    {\n      id: '4',\n      symbol: 'ETH',\n      name: 'Ethereum',\n      shares: 15,\n      currentPrice: 2650.00,\n      totalValue: 39750.00,\n      dayChange: 795.00,\n      dayChangePercent: 2.04,\n      allocation: 16.0,\n      sector: 'Cryptocurrency',\n      type: 'crypto'\n    }\n  ]);\n\n  const [recentTrades, setRecentTrades] = useState<Trade[]>([\n    {\n      id: '1',\n      symbol: 'AAPL',\n      type: 'buy',\n      quantity: 25,\n      price: 182.50,\n      timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000),\n      pnl: 68.75,\n      status: 'completed'\n    },\n    {\n      id: '2',\n      symbol: 'BTC',\n      type: 'sell',\n      quantity: 0.5,\n      price: 42800.00,\n      timestamp: new Date(Date.now() - 4 * 60 * 60 * 1000),\n      pnl: 225.00,\n      status: 'completed'\n    },\n    {\n      id: '3',\n      symbol: 'MSFT',\n      type: 'buy',\n      quantity: 50,\n      price: 378.90,\n      timestamp: new Date(Date.now() - 6 * 60 * 60 * 1000),\n      pnl: 0,\n      status: 'pending'\n    }\n  ]);\n\n  const [loading, setLoading] = useState(false);\n  const [lastUpdate, setLastUpdate] = useState(new Date());\n\n  const refreshData = async () => {\n    setLoading(true);\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    setLastUpdate(new Date());\n    setLoading(false);\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2\n    }).format(amount);\n  };\n\n  const formatPercent = (percent: number) => {\n    return `${percent >= 0 ? '+' : ''}${percent.toFixed(2)}%`;\n  };\n\n  const getTypeIcon = (type: string) => {\n    switch (type) {\n      case 'crypto': return '₿';\n      case 'forex': return '💱';\n      case 'commodity': return '🥇';\n      default: return '📈';\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header with Refresh */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">Portfolio Overview</h1>\n          <p className=\"text-gray-600 dark:text-gray-400\">\n            Last updated: {lastUpdate.toLocaleTimeString()}\n          </p>\n        </div>\n        <button\n          onClick={refreshData}\n          disabled={loading}\n          className=\"flex items-center space-x-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white rounded-lg font-medium transition-colors\"\n        >\n          <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\n          <span>Refresh</span>\n        </button>\n      </div>\n\n      {/* Key Metrics Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        {/* Total Portfolio Value */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Total Value</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                {formatCurrency(portfolioStats.totalValue)}\n              </p>\n              <div className=\"flex items-center mt-1\">\n                <span className={`text-sm font-medium ${\n                  portfolioStats.dayChange >= 0 ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'\n                }`}>\n                  {formatCurrency(portfolioStats.dayChange)} ({formatPercent(portfolioStats.dayChangePercent)})\n                </span>\n              </div>\n            </div>\n            <div className=\"bg-blue-100 dark:bg-blue-900/20 p-3 rounded-lg\">\n              <DollarSign className=\"h-6 w-6 text-blue-600 dark:text-blue-400\" />\n            </div>\n          </div>\n        </div>\n\n        {/* Total Return */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Total Return</p>\n              <p className={`text-2xl font-bold ${\n                portfolioStats.totalReturn >= 0 ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'\n              }`}>\n                {formatCurrency(portfolioStats.totalReturn)}\n              </p>\n              <div className=\"flex items-center mt-1\">\n                <span className={`text-sm font-medium ${\n                  portfolioStats.totalReturnPercent >= 0 ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'\n                }`}>\n                  {formatPercent(portfolioStats.totalReturnPercent)}\n                </span>\n              </div>\n            </div>\n            <div className={`p-3 rounded-lg ${\n              portfolioStats.totalReturn >= 0 ? 'bg-green-100 dark:bg-green-900/20' : 'bg-red-100 dark:bg-red-900/20'\n            }`}>\n              {portfolioStats.totalReturn >= 0 ? (\n                <TrendingUp className=\"h-6 w-6 text-green-600 dark:text-green-400\" />\n              ) : (\n                <TrendingDown className=\"h-6 w-6 text-red-600 dark:text-red-400\" />\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Win Rate */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Win Rate</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                {portfolioStats.winRate}%\n              </p>\n              <div className=\"flex items-center mt-1\">\n                <span className=\"text-sm text-green-600 dark:text-green-400 font-medium\">\n                  Profit Factor: {portfolioStats.profitFactor}\n                </span>\n              </div>\n            </div>\n            <div className=\"bg-purple-100 dark:bg-purple-900/20 p-3 rounded-lg\">\n              <Target className=\"h-6 w-6 text-purple-600 dark:text-purple-400\" />\n            </div>\n          </div>\n        </div>\n\n        {/* Social Stats */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Followers</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                {portfolioStats.followers.toLocaleString()}\n              </p>\n              <div className=\"flex items-center mt-1\">\n                <span className=\"text-sm text-blue-600 dark:text-blue-400 font-medium\">\n                  Rank #{portfolioStats.rank}\n                </span>\n              </div>\n            </div>\n            <div className=\"bg-orange-100 dark:bg-orange-900/20 p-3 rounded-lg\">\n              <Users className=\"h-6 w-6 text-orange-600 dark:text-orange-400\" />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Performance Metrics */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Risk Metrics */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Risk Metrics</h3>\n          <div className=\"space-y-4\">\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-sm text-gray-600 dark:text-gray-400\">Max Drawdown</span>\n              <span className=\"text-sm font-medium text-red-600 dark:text-red-400\">\n                -{portfolioStats.maxDrawdown}%\n              </span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-sm text-gray-600 dark:text-gray-400\">Sharpe Ratio</span>\n              <span className=\"text-sm font-medium text-green-600 dark:text-green-400\">\n                {portfolioStats.sharpeRatio}\n              </span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-sm text-gray-600 dark:text-gray-400\">Volatility</span>\n              <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                12.4%\n              </span>\n            </div>\n          </div>\n        </div>\n\n        {/* Top Positions */}\n        <div className=\"lg:col-span-2 bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n          <div className=\"p-6 border-b border-gray-200 dark:border-gray-700\">\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Top Positions</h3>\n          </div>\n          <div className=\"p-6\">\n            <div className=\"space-y-4\">\n              {positions.slice(0, 4).map((position) => (\n                <div key={position.id} className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg\">\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"w-10 h-10 bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg flex items-center justify-center text-white font-bold\">\n                      {getTypeIcon(position.type)}\n                    </div>\n                    <div>\n                      <h4 className=\"font-medium text-gray-900 dark:text-white\">{position.symbol}</h4>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">{position.name}</p>\n                      <p className=\"text-xs text-gray-500 dark:text-gray-500\">\n                        {position.shares} shares • {position.allocation}% allocation\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"font-medium text-gray-900 dark:text-white\">\n                      {formatCurrency(position.totalValue)}\n                    </p>\n                    <div className=\"flex items-center space-x-1\">\n                      {position.dayChange >= 0 ? (\n                        <ArrowUpRight className=\"h-3 w-3 text-green-600 dark:text-green-400\" />\n                      ) : (\n                        <ArrowDownRight className=\"h-3 w-3 text-red-600 dark:text-red-400\" />\n                      )}\n                      <span className={`text-sm font-medium ${\n                        position.dayChange >= 0 ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'\n                      }`}>\n                        {formatPercent(position.dayChangePercent)}\n                      </span>\n                    </div>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-500\">\n                      {formatCurrency(position.currentPrice)}/share\n                    </p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Recent Trades */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n        <div className=\"p-6 border-b border-gray-200 dark:border-gray-700\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Recent Trades</h3>\n        </div>\n        <div className=\"p-6\">\n          <div className=\"space-y-3\">\n            {recentTrades.map((trade) => (\n              <div key={trade.id} className=\"flex items-center justify-between p-3 hover:bg-gray-50 dark:hover:bg-gray-700/50 rounded-lg transition-colors\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className={`w-8 h-8 rounded-full flex items-center justify-center text-white text-sm font-medium ${\n                    trade.type === 'buy' ? 'bg-green-500' : 'bg-red-500'\n                  }`}>\n                    {trade.type === 'buy' ? '↗' : '↙'}\n                  </div>\n                  <div>\n                    <p className=\"font-medium text-gray-900 dark:text-white\">\n                      {trade.type.toUpperCase()} {trade.symbol}\n                    </p>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      {trade.quantity} @ {formatCurrency(trade.price)}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"text-right\">\n                  <p className={`text-sm font-medium ${\n                    trade.status === 'completed' ? (\n                      trade.pnl >= 0 ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'\n                    ) : 'text-gray-600 dark:text-gray-400'\n                  }`}>\n                    {trade.status === 'completed' ? formatCurrency(trade.pnl) : trade.status}\n                  </p>\n                  <p className=\"text-xs text-gray-500 dark:text-gray-500\">\n                    {trade.timestamp.toLocaleTimeString()}\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Market Data Widget */}\n      <div className=\"mt-8\">\n        <MarketDataWidget />\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2395, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/dashboard/AutomatedStrategies.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Play, Pause, Settings, TrendingUp, TrendingDown, BarChart3, Zap, Target, Shield } from 'lucide-react';\n\ninterface Strategy {\n  id: string;\n  name: string;\n  type: 'scalping' | 'swing' | 'momentum' | 'arbitrage';\n  status: 'active' | 'paused' | 'stopped';\n  profit: number;\n  trades: number;\n  winRate: number;\n  riskLevel: 'low' | 'medium' | 'high';\n  allocation: number;\n  description: string;\n}\n\ninterface StrategyConfig {\n  stopLoss: number;\n  takeProfit: number;\n  maxTrades: number;\n  riskPerTrade: number;\n  timeframe: string;\n  indicators: string[];\n}\n\nconst AutomatedStrategies: React.FC = () => {\n  const [strategies, setStrategies] = useState<Strategy[]>([\n    {\n      id: '1',\n      name: 'Scalping Pro',\n      type: 'scalping',\n      status: 'active',\n      profit: 2847.50,\n      trades: 156,\n      winRate: 68.5,\n      riskLevel: 'medium',\n      allocation: 25,\n      description: 'High-frequency scalping with 1-5 minute timeframes'\n    },\n    {\n      id: '2',\n      name: 'Momentum Master',\n      type: 'momentum',\n      status: 'active',\n      profit: 5234.80,\n      trades: 89,\n      winRate: 72.1,\n      riskLevel: 'high',\n      allocation: 35,\n      description: 'Trend-following strategy with momentum indicators'\n    },\n    {\n      id: '3',\n      name: 'Swing Trader',\n      type: 'swing',\n      status: 'paused',\n      profit: 1456.20,\n      trades: 34,\n      winRate: 61.8,\n      riskLevel: 'low',\n      allocation: 20,\n      description: 'Medium-term swing trading with support/resistance'\n    },\n    {\n      id: '4',\n      name: 'Arbitrage Bot',\n      type: 'arbitrage',\n      status: 'active',\n      profit: 892.40,\n      trades: 203,\n      winRate: 89.2,\n      riskLevel: 'low',\n      allocation: 20,\n      description: 'Cross-exchange arbitrage opportunities'\n    }\n  ]);\n\n  const [selectedStrategy, setSelectedStrategy] = useState<Strategy | null>(null);\n  const [showConfig, setShowConfig] = useState(false);\n  const [config, setConfig] = useState<StrategyConfig>({\n    stopLoss: 2.0,\n    takeProfit: 4.0,\n    maxTrades: 10,\n    riskPerTrade: 1.0,\n    timeframe: '5m',\n    indicators: ['RSI', 'MACD', 'EMA']\n  });\n\n  const toggleStrategy = (strategyId: string) => {\n    setStrategies(prev => prev.map(strategy => {\n      if (strategy.id === strategyId) {\n        const newStatus = strategy.status === 'active' ? 'paused' : 'active';\n        return { ...strategy, status: newStatus };\n      }\n      return strategy;\n    }));\n  };\n\n  const getStrategyIcon = (type: string) => {\n    switch (type) {\n      case 'scalping': return <Zap className=\"w-4 h-4\" />;\n      case 'momentum': return <TrendingUp className=\"w-4 h-4\" />;\n      case 'swing': return <BarChart3 className=\"w-4 h-4\" />;\n      case 'arbitrage': return <Target className=\"w-4 h-4\" />;\n      default: return <BarChart3 className=\"w-4 h-4\" />;\n    }\n  };\n\n  const getRiskColor = (level: string) => {\n    switch (level) {\n      case 'low': return 'text-green-500';\n      case 'medium': return 'text-yellow-500';\n      case 'high': return 'text-red-500';\n      default: return 'text-gray-500';\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'active': return 'bg-green-500';\n      case 'paused': return 'bg-yellow-500';\n      case 'stopped': return 'bg-red-500';\n      default: return 'bg-gray-500';\n    }\n  };\n\n  const totalProfit = strategies.reduce((sum, strategy) => sum + strategy.profit, 0);\n  const activeStrategies = strategies.filter(s => s.status === 'active').length;\n  const avgWinRate = strategies.reduce((sum, strategy) => sum + strategy.winRate, 0) / strategies.length;\n\n  return (\n    <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6\">\n      <div className=\"flex items-center justify-between mb-6\">\n        <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">Automated Strategies</h2>\n        <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\">\n          Create Strategy\n        </button>\n      </div>\n\n      {/* Strategy Overview */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n        <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">Total Profit</p>\n              <p className=\"text-2xl font-bold text-green-600\">${totalProfit.toLocaleString()}</p>\n            </div>\n            <TrendingUp className=\"w-8 h-8 text-green-500\" />\n          </div>\n        </div>\n        <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">Active Strategies</p>\n              <p className=\"text-2xl font-bold text-blue-600\">{activeStrategies}</p>\n            </div>\n            <Play className=\"w-8 h-8 text-blue-500\" />\n          </div>\n        </div>\n        <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">Avg Win Rate</p>\n              <p className=\"text-2xl font-bold text-purple-600\">{avgWinRate.toFixed(1)}%</p>\n            </div>\n            <Target className=\"w-8 h-8 text-purple-500\" />\n          </div>\n        </div>\n      </div>\n\n      {/* Strategy List */}\n      <div className=\"space-y-4\">\n        {strategies.map((strategy) => (\n          <div key={strategy.id} className=\"border border-gray-200 dark:border-gray-600 rounded-lg p-4 hover:shadow-md transition-shadow\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"flex items-center space-x-2\">\n                  {getStrategyIcon(strategy.type)}\n                  <div>\n                    <h3 className=\"font-semibold text-gray-900 dark:text-white\">{strategy.name}</h3>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">{strategy.description}</p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"text-right\">\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Profit</p>\n                  <p className={`font-semibold ${strategy.profit >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                    ${strategy.profit.toLocaleString()}\n                  </p>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Win Rate</p>\n                  <p className=\"font-semibold text-gray-900 dark:text-white\">{strategy.winRate}%</p>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">Risk</p>\n                  <p className={`font-semibold ${getRiskColor(strategy.riskLevel)}`}>\n                    {strategy.riskLevel.toUpperCase()}\n                  </p>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <div className={`w-3 h-3 rounded-full ${getStatusColor(strategy.status)}`}></div>\n                  <span className=\"text-sm text-gray-600 dark:text-gray-400 capitalize\">{strategy.status}</span>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"mt-4 flex items-center justify-between\">\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                  Trades: <span className=\"font-semibold text-gray-900 dark:text-white\">{strategy.trades}</span>\n                </div>\n                <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                  Allocation: <span className=\"font-semibold text-gray-900 dark:text-white\">{strategy.allocation}%</span>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <button\n                  onClick={() => {\n                    setSelectedStrategy(strategy);\n                    setShowConfig(true);\n                  }}\n                  className=\"p-2 text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white transition-colors\"\n                >\n                  <Settings className=\"w-4 h-4\" />\n                </button>\n                <button\n                  onClick={() => toggleStrategy(strategy.id)}\n                  className={`px-3 py-1 rounded-lg text-sm font-medium transition-colors ${\n                    strategy.status === 'active'\n                      ? 'bg-red-100 text-red-700 hover:bg-red-200 dark:bg-red-900 dark:text-red-300'\n                      : 'bg-green-100 text-green-700 hover:bg-green-200 dark:bg-green-900 dark:text-green-300'\n                  }`}\n                >\n                  {strategy.status === 'active' ? (\n                    <><Pause className=\"w-3 h-3 inline mr-1\" />Pause</>\n                  ) : (\n                    <><Play className=\"w-3 h-3 inline mr-1\" />Start</>\n                  )}\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Strategy Configuration Modal */}\n      {showConfig && selectedStrategy && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 w-full max-w-md\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                Configure {selectedStrategy.name}\n              </h3>\n              <button\n                onClick={() => setShowConfig(false)}\n                className=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                  Stop Loss (%)\n                </label>\n                <input\n                  type=\"number\"\n                  value={config.stopLoss}\n                  onChange={(e) => setConfig(prev => ({ ...prev, stopLoss: parseFloat(e.target.value) }))}\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                  step=\"0.1\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                  Take Profit (%)\n                </label>\n                <input\n                  type=\"number\"\n                  value={config.takeProfit}\n                  onChange={(e) => setConfig(prev => ({ ...prev, takeProfit: parseFloat(e.target.value) }))}\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                  step=\"0.1\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                  Max Concurrent Trades\n                </label>\n                <input\n                  type=\"number\"\n                  value={config.maxTrades}\n                  onChange={(e) => setConfig(prev => ({ ...prev, maxTrades: parseInt(e.target.value) }))}\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                  Risk Per Trade (%)\n                </label>\n                <input\n                  type=\"number\"\n                  value={config.riskPerTrade}\n                  onChange={(e) => setConfig(prev => ({ ...prev, riskPerTrade: parseFloat(e.target.value) }))}\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                  step=\"0.1\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                  Timeframe\n                </label>\n                <select\n                  value={config.timeframe}\n                  onChange={(e) => setConfig(prev => ({ ...prev, timeframe: e.target.value }))}\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n                >\n                  <option value=\"1m\">1 Minute</option>\n                  <option value=\"5m\">5 Minutes</option>\n                  <option value=\"15m\">15 Minutes</option>\n                  <option value=\"1h\">1 Hour</option>\n                  <option value=\"4h\">4 Hours</option>\n                  <option value=\"1d\">1 Day</option>\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"flex space-x-3 mt-6\">\n              <button\n                onClick={() => setShowConfig(false)}\n                className=\"flex-1 px-4 py-2 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={() => {\n                  // Save configuration logic here\n                  setShowConfig(false);\n                }}\n                className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n              >\n                Save Changes\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AutomatedStrategies;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3332, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/dashboard/NotificationCenter.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Bell, X, CheckCircle, AlertTriangle, Info, TrendingUp, TrendingDown, Settings, Filter } from 'lucide-react';\n\ninterface Notification {\n  id: string;\n  type: 'trade' | 'alert' | 'system' | 'strategy';\n  priority: 'low' | 'medium' | 'high' | 'critical';\n  title: string;\n  message: string;\n  timestamp: Date;\n  read: boolean;\n  actionable?: boolean;\n  data?: any;\n}\n\ninterface NotificationCenterProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nconst NotificationCenter: React.FC<NotificationCenterProps> = ({ isOpen, onClose }) => {\n  const [notifications, setNotifications] = useState<Notification[]>([\n    {\n      id: '1',\n      type: 'trade',\n      priority: 'high',\n      title: 'Trade Executed',\n      message: 'BUY order for AAPL filled at $185.50 - Quantity: 100 shares',\n      timestamp: new Date(Date.now() - 5 * 60 * 1000),\n      read: false,\n      actionable: true,\n      data: { symbol: 'AAPL', price: 185.50, quantity: 100, side: 'buy' }\n    },\n    {\n      id: '2',\n      type: 'alert',\n      priority: 'critical',\n      title: 'Price Alert Triggered',\n      message: 'TSLA has reached your target price of $250.00',\n      timestamp: new Date(Date.now() - 15 * 60 * 1000),\n      read: false,\n      actionable: true,\n      data: { symbol: 'TSLA', price: 250.00, type: 'target' }\n    },\n    {\n      id: '3',\n      type: 'strategy',\n      priority: 'medium',\n      title: 'Strategy Performance',\n      message: 'Scalping Pro strategy achieved 15% profit this week',\n      timestamp: new Date(Date.now() - 30 * 60 * 1000),\n      read: true,\n      actionable: false,\n      data: { strategy: 'Scalping Pro', profit: 15 }\n    },\n    {\n      id: '4',\n      type: 'system',\n      priority: 'low',\n      title: 'Market Update',\n      message: 'US markets will close early today due to holiday',\n      timestamp: new Date(Date.now() - 60 * 60 * 1000),\n      read: true,\n      actionable: false\n    },\n    {\n      id: '5',\n      type: 'trade',\n      priority: 'high',\n      title: 'Stop Loss Triggered',\n      message: 'SELL order for NVDA executed at $420.00 - Loss: -$150.00',\n      timestamp: new Date(Date.now() - 90 * 60 * 1000),\n      read: false,\n      actionable: true,\n      data: { symbol: 'NVDA', price: 420.00, loss: -150.00, side: 'sell' }\n    }\n  ]);\n\n  const [filter, setFilter] = useState<'all' | 'unread' | 'trade' | 'alert' | 'strategy' | 'system'>('all');\n  const [showSettings, setShowSettings] = useState(false);\n\n  // Simulate real-time notifications\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const newNotification: Notification = {\n        id: Date.now().toString(),\n        type: ['trade', 'alert', 'strategy', 'system'][Math.floor(Math.random() * 4)] as any,\n        priority: ['low', 'medium', 'high'][Math.floor(Math.random() * 3)] as any,\n        title: 'New Market Update',\n        message: 'Real-time market data updated',\n        timestamp: new Date(),\n        read: false,\n        actionable: Math.random() > 0.5\n      };\n      \n      setNotifications(prev => [newNotification, ...prev.slice(0, 19)]); // Keep only 20 notifications\n    }, 30000); // New notification every 30 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const markAsRead = (id: string) => {\n    setNotifications(prev => prev.map(notif => \n      notif.id === id ? { ...notif, read: true } : notif\n    ));\n  };\n\n  const markAllAsRead = () => {\n    setNotifications(prev => prev.map(notif => ({ ...notif, read: true })));\n  };\n\n  const deleteNotification = (id: string) => {\n    setNotifications(prev => prev.filter(notif => notif.id !== id));\n  };\n\n  const getNotificationIcon = (type: string, priority: string) => {\n    const iconClass = `w-5 h-5 ${\n      priority === 'critical' ? 'text-red-500' :\n      priority === 'high' ? 'text-orange-500' :\n      priority === 'medium' ? 'text-yellow-500' : 'text-blue-500'\n    }`;\n\n    switch (type) {\n      case 'trade':\n        return <TrendingUp className={iconClass} />;\n      case 'alert':\n        return <AlertTriangle className={iconClass} />;\n      case 'strategy':\n        return <TrendingDown className={iconClass} />;\n      case 'system':\n        return <Info className={iconClass} />;\n      default:\n        return <Bell className={iconClass} />;\n    }\n  };\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case 'critical': return 'border-l-red-500 bg-red-50 dark:bg-red-900/20';\n      case 'high': return 'border-l-orange-500 bg-orange-50 dark:bg-orange-900/20';\n      case 'medium': return 'border-l-yellow-500 bg-yellow-50 dark:bg-yellow-900/20';\n      case 'low': return 'border-l-blue-500 bg-blue-50 dark:bg-blue-900/20';\n      default: return 'border-l-gray-500 bg-gray-50 dark:bg-gray-900/20';\n    }\n  };\n\n  const filteredNotifications = notifications.filter(notif => {\n    if (filter === 'all') return true;\n    if (filter === 'unread') return !notif.read;\n    return notif.type === filter;\n  });\n\n  const unreadCount = notifications.filter(n => !n.read).length;\n\n  const formatTime = (date: Date) => {\n    const now = new Date();\n    const diff = now.getTime() - date.getTime();\n    const minutes = Math.floor(diff / 60000);\n    const hours = Math.floor(diff / 3600000);\n    const days = Math.floor(diff / 86400000);\n\n    if (minutes < 1) return 'Just now';\n    if (minutes < 60) return `${minutes}m ago`;\n    if (hours < 24) return `${hours}h ago`;\n    return `${days}d ago`;\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-start justify-end pt-16 pr-4 z-50\">\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl w-96 max-h-[80vh] flex flex-col\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-600\">\n          <div className=\"flex items-center space-x-2\">\n            <Bell className=\"w-5 h-5 text-gray-600 dark:text-gray-400\" />\n            <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Notifications</h2>\n            {unreadCount > 0 && (\n              <span className=\"bg-red-500 text-white text-xs rounded-full px-2 py-1\">\n                {unreadCount}\n              </span>\n            )}\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={() => setShowSettings(!showSettings)}\n              className=\"p-1 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n            >\n              <Settings className=\"w-4 h-4\" />\n            </button>\n            <button\n              onClick={onClose}\n              className=\"p-1 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n            >\n              <X className=\"w-4 h-4\" />\n            </button>\n          </div>\n        </div>\n\n        {/* Filter Bar */}\n        <div className=\"p-4 border-b border-gray-200 dark:border-gray-600\">\n          <div className=\"flex items-center space-x-2 mb-2\">\n            <Filter className=\"w-4 h-4 text-gray-500\" />\n            <span className=\"text-sm text-gray-600 dark:text-gray-400\">Filter:</span>\n          </div>\n          <div className=\"flex flex-wrap gap-2\">\n            {['all', 'unread', 'trade', 'alert', 'strategy', 'system'].map((filterType) => (\n              <button\n                key={filterType}\n                onClick={() => setFilter(filterType as any)}\n                className={`px-3 py-1 text-xs rounded-full transition-colors ${\n                  filter === filterType\n                    ? 'bg-blue-600 text-white'\n                    : 'bg-gray-100 text-gray-600 hover:bg-gray-200 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600'\n                }`}\n              >\n                {filterType.charAt(0).toUpperCase() + filterType.slice(1)}\n              </button>\n            ))}\n          </div>\n          {unreadCount > 0 && (\n            <button\n              onClick={markAllAsRead}\n              className=\"mt-2 text-sm text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300\"\n            >\n              Mark all as read\n            </button>\n          )}\n        </div>\n\n        {/* Notifications List */}\n        <div className=\"flex-1 overflow-y-auto\">\n          {filteredNotifications.length === 0 ? (\n            <div className=\"p-8 text-center text-gray-500 dark:text-gray-400\">\n              <Bell className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\n              <p>No notifications found</p>\n            </div>\n          ) : (\n            <div className=\"space-y-1\">\n              {filteredNotifications.map((notification) => (\n                <div\n                  key={notification.id}\n                  className={`border-l-4 p-4 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors cursor-pointer ${\n                    getPriorityColor(notification.priority)\n                  } ${!notification.read ? 'font-medium' : 'opacity-75'}`}\n                  onClick={() => markAsRead(notification.id)}\n                >\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex items-start space-x-3 flex-1\">\n                      {getNotificationIcon(notification.type, notification.priority)}\n                      <div className=\"flex-1 min-w-0\">\n                        <div className=\"flex items-center justify-between\">\n                          <h4 className=\"text-sm font-medium text-gray-900 dark:text-white truncate\">\n                            {notification.title}\n                          </h4>\n                          <span className=\"text-xs text-gray-500 dark:text-gray-400 ml-2\">\n                            {formatTime(notification.timestamp)}\n                          </span>\n                        </div>\n                        <p className=\"text-sm text-gray-600 dark:text-gray-300 mt-1\">\n                          {notification.message}\n                        </p>\n                        {notification.actionable && (\n                          <div className=\"flex space-x-2 mt-2\">\n                            <button className=\"text-xs bg-blue-100 text-blue-700 px-2 py-1 rounded hover:bg-blue-200 dark:bg-blue-900 dark:text-blue-300 dark:hover:bg-blue-800\">\n                              View Details\n                            </button>\n                            {notification.type === 'alert' && (\n                              <button className=\"text-xs bg-green-100 text-green-700 px-2 py-1 rounded hover:bg-green-200 dark:bg-green-900 dark:text-green-300 dark:hover:bg-green-800\">\n                                Trade Now\n                              </button>\n                            )}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    <button\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        deleteNotification(notification.id);\n                      }}\n                      className=\"p-1 text-gray-400 hover:text-gray-600 dark:hover:text-gray-200 ml-2\"\n                    >\n                      <X className=\"w-3 h-3\" />\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n\n        {/* Settings Panel */}\n        {showSettings && (\n          <div className=\"border-t border-gray-200 dark:border-gray-600 p-4\">\n            <h3 className=\"text-sm font-medium text-gray-900 dark:text-white mb-3\">Notification Settings</h3>\n            <div className=\"space-y-2\">\n              <label className=\"flex items-center\">\n                <input type=\"checkbox\" defaultChecked className=\"rounded\" />\n                <span className=\"ml-2 text-sm text-gray-600 dark:text-gray-300\">Trade executions</span>\n              </label>\n              <label className=\"flex items-center\">\n                <input type=\"checkbox\" defaultChecked className=\"rounded\" />\n                <span className=\"ml-2 text-sm text-gray-600 dark:text-gray-300\">Price alerts</span>\n              </label>\n              <label className=\"flex items-center\">\n                <input type=\"checkbox\" defaultChecked className=\"rounded\" />\n                <span className=\"ml-2 text-sm text-gray-600 dark:text-gray-300\">Strategy updates</span>\n              </label>\n              <label className=\"flex items-center\">\n                <input type=\"checkbox\" defaultChecked className=\"rounded\" />\n                <span className=\"ml-2 text-sm text-gray-600 dark:text-gray-300\">System notifications</span>\n              </label>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default NotificationCenter;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3992, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/dashboard/SignalDeliverySystem.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Bell, TrendingUp, TrendingDown, AlertTriangle, CheckCircle, Clock, Zap, Settings, Filter } from 'lucide-react';\n\ninterface Signal {\n  id: string;\n  type: 'buy' | 'sell' | 'alert' | 'news';\n  symbol: string;\n  price: number;\n  confidence: number;\n  source: 'AI' | 'Technical' | 'Fundamental' | 'Copy Trading';\n  timestamp: Date;\n  message: string;\n  priority: 'high' | 'medium' | 'low';\n  status: 'new' | 'acknowledged' | 'executed' | 'expired';\n}\n\ninterface NotificationSettings {\n  enablePush: boolean;\n  enableEmail: boolean;\n  enableSMS: boolean;\n  minConfidence: number;\n  priorityFilter: string[];\n  sourceFilter: string[];\n}\n\nconst SignalDeliverySystem: React.FC = () => {\n  const [signals, setSignals] = useState<Signal[]>([]);\n  const [settings, setSettings] = useState<NotificationSettings>({\n    enablePush: true,\n    enableEmail: false,\n    enableSMS: false,\n    minConfidence: 70,\n    priorityFilter: ['high', 'medium'],\n    sourceFilter: ['AI', 'Technical']\n  });\n  const [showSettings, setShowSettings] = useState(false);\n  const [filter, setFilter] = useState('all');\n  const [isConnected, setIsConnected] = useState(true);\n\n  // Mock real-time signal generation\n  useEffect(() => {\n    const generateMockSignal = () => {\n      const symbols = ['BTC/USD', 'ETH/USD', 'AAPL', 'TSLA', 'GOOGL', 'EUR/USD'];\n      const types: Signal['type'][] = ['buy', 'sell', 'alert', 'news'];\n      const sources: Signal['source'][] = ['AI', 'Technical', 'Fundamental', 'Copy Trading'];\n      const priorities: Signal['priority'][] = ['high', 'medium', 'low'];\n      \n      const newSignal: Signal = {\n        id: Date.now().toString(),\n        type: types[Math.floor(Math.random() * types.length)],\n        symbol: symbols[Math.floor(Math.random() * symbols.length)],\n        price: Math.random() * 50000 + 1000,\n        confidence: Math.floor(Math.random() * 40) + 60,\n        source: sources[Math.floor(Math.random() * sources.length)],\n        timestamp: new Date(),\n        message: generateSignalMessage(),\n        priority: priorities[Math.floor(Math.random() * priorities.length)],\n        status: 'new'\n      };\n      \n      setSignals(prev => [newSignal, ...prev.slice(0, 49)]); // Keep last 50 signals\n    };\n\n    const generateSignalMessage = () => {\n      const messages = [\n        'Strong bullish momentum detected',\n        'Resistance level breakthrough imminent',\n        'Support level holding strong',\n        'Volume spike indicates potential breakout',\n        'RSI oversold condition - potential reversal',\n        'Moving average crossover signal',\n        'High volatility expected in next session',\n        'Institutional buying pressure detected'\n      ];\n      return messages[Math.floor(Math.random() * messages.length)];\n    };\n\n    // Generate initial signals\n    for (let i = 0; i < 10; i++) {\n      setTimeout(() => generateMockSignal(), i * 1000);\n    }\n\n    // Continue generating signals every 15-30 seconds\n    const interval = setInterval(() => {\n      if (Math.random() > 0.3) { // 70% chance to generate signal\n        generateMockSignal();\n      }\n    }, Math.random() * 15000 + 15000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const filteredSignals = signals.filter(signal => {\n    if (filter === 'all') return true;\n    if (filter === 'unread') return signal.status === 'new';\n    if (filter === 'high-priority') return signal.priority === 'high';\n    return signal.type === filter;\n  });\n\n  const acknowledgeSignal = (signalId: string) => {\n    setSignals(prev => prev.map(signal => \n      signal.id === signalId ? { ...signal, status: 'acknowledged' } : signal\n    ));\n  };\n\n  const executeSignal = (signalId: string) => {\n    setSignals(prev => prev.map(signal => \n      signal.id === signalId ? { ...signal, status: 'executed' } : signal\n    ));\n  };\n\n  const getSignalIcon = (type: Signal['type']) => {\n    switch (type) {\n      case 'buy': return <TrendingUp className=\"h-4 w-4 text-green-500\" />;\n      case 'sell': return <TrendingDown className=\"h-4 w-4 text-red-500\" />;\n      case 'alert': return <AlertTriangle className=\"h-4 w-4 text-yellow-500\" />;\n      case 'news': return <Bell className=\"h-4 w-4 text-blue-500\" />;\n    }\n  };\n\n  const getPriorityColor = (priority: Signal['priority']) => {\n    switch (priority) {\n      case 'high': return 'border-l-red-500 bg-red-50 dark:bg-red-900/20';\n      case 'medium': return 'border-l-yellow-500 bg-yellow-50 dark:bg-yellow-900/20';\n      case 'low': return 'border-l-green-500 bg-green-50 dark:bg-green-900/20';\n    }\n  };\n\n  const getStatusBadge = (status: Signal['status']) => {\n    switch (status) {\n      case 'new': return <span className=\"px-2 py-1 text-xs bg-blue-100 text-blue-800 rounded-full\">New</span>;\n      case 'acknowledged': return <span className=\"px-2 py-1 text-xs bg-yellow-100 text-yellow-800 rounded-full\">Acknowledged</span>;\n      case 'executed': return <span className=\"px-2 py-1 text-xs bg-green-100 text-green-800 rounded-full\">Executed</span>;\n      case 'expired': return <span className=\"px-2 py-1 text-xs bg-gray-100 text-gray-800 rounded-full\">Expired</span>;\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"p-2 bg-blue-100 dark:bg-blue-900/30 rounded-lg\">\n            <Zap className=\"h-6 w-6 text-blue-600 dark:text-blue-400\" />\n          </div>\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">Signal Delivery</h2>\n            <p className=\"text-gray-600 dark:text-gray-400\">Real-time trading signals and notifications</p>\n          </div>\n        </div>\n        <div className=\"flex items-center space-x-3\">\n          <div className={`flex items-center space-x-2 px-3 py-1 rounded-full text-sm ${\n            isConnected ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n          }`}>\n            <div className={`w-2 h-2 rounded-full ${\n              isConnected ? 'bg-green-500' : 'bg-red-500'\n            }`} />\n            <span>{isConnected ? 'Connected' : 'Disconnected'}</span>\n          </div>\n          <button\n            onClick={() => setShowSettings(!showSettings)}\n            className=\"p-2 text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\n          >\n            <Settings className=\"h-5 w-5\" />\n          </button>\n        </div>\n      </div>\n\n      {/* Settings Panel */}\n      {showSettings && (\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Notification Settings</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <h4 className=\"text-sm font-medium text-gray-900 dark:text-white mb-3\">Delivery Methods</h4>\n              <div className=\"space-y-2\">\n                <label className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    checked={settings.enablePush}\n                    onChange={(e) => setSettings(prev => ({ ...prev, enablePush: e.target.checked }))}\n                    className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                  />\n                  <span className=\"ml-2 text-sm text-gray-700 dark:text-gray-300\">Push Notifications</span>\n                </label>\n                <label className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    checked={settings.enableEmail}\n                    onChange={(e) => setSettings(prev => ({ ...prev, enableEmail: e.target.checked }))}\n                    className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                  />\n                  <span className=\"ml-2 text-sm text-gray-700 dark:text-gray-300\">Email Alerts</span>\n                </label>\n                <label className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    checked={settings.enableSMS}\n                    onChange={(e) => setSettings(prev => ({ ...prev, enableSMS: e.target.checked }))}\n                    className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                  />\n                  <span className=\"ml-2 text-sm text-gray-700 dark:text-gray-300\">SMS Notifications</span>\n                </label>\n              </div>\n            </div>\n            <div>\n              <h4 className=\"text-sm font-medium text-gray-900 dark:text-white mb-3\">Filters</h4>\n              <div className=\"space-y-3\">\n                <div>\n                  <label className=\"block text-sm text-gray-700 dark:text-gray-300 mb-1\">\n                    Minimum Confidence: {settings.minConfidence}%\n                  </label>\n                  <input\n                    type=\"range\"\n                    min=\"50\"\n                    max=\"95\"\n                    value={settings.minConfidence}\n                    onChange={(e) => setSettings(prev => ({ ...prev, minConfidence: parseInt(e.target.value) }))}\n                    className=\"w-full\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Filter Tabs */}\n      <div className=\"flex space-x-1 bg-gray-100 dark:bg-gray-800 p-1 rounded-lg\">\n        {[\n          { key: 'all', label: 'All Signals' },\n          { key: 'unread', label: 'Unread' },\n          { key: 'high-priority', label: 'High Priority' },\n          { key: 'buy', label: 'Buy Signals' },\n          { key: 'sell', label: 'Sell Signals' }\n        ].map(tab => (\n          <button\n            key={tab.key}\n            onClick={() => setFilter(tab.key)}\n            className={`px-4 py-2 rounded-md text-sm font-medium transition-colors ${\n              filter === tab.key\n                ? 'bg-white dark:bg-gray-700 text-gray-900 dark:text-white shadow-sm'\n                : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white'\n            }`}\n          >\n            {tab.label}\n          </button>\n        ))}\n      </div>\n\n      {/* Signals List */}\n      <div className=\"space-y-3\">\n        {filteredSignals.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <Bell className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n            <p className=\"text-gray-500 dark:text-gray-400\">No signals match your current filter</p>\n          </div>\n        ) : (\n          filteredSignals.map(signal => (\n            <div\n              key={signal.id}\n              className={`border-l-4 rounded-lg p-4 ${getPriorityColor(signal.priority)} border border-gray-200 dark:border-gray-700`}\n            >\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex items-start space-x-3\">\n                  {getSignalIcon(signal.type)}\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center space-x-2 mb-1\">\n                      <span className=\"font-semibold text-gray-900 dark:text-white\">{signal.symbol}</span>\n                      <span className=\"text-sm text-gray-500\">${signal.price.toFixed(2)}</span>\n                      <span className=\"text-xs bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded\">\n                        {signal.confidence}% confidence\n                      </span>\n                      {getStatusBadge(signal.status)}\n                    </div>\n                    <p className=\"text-gray-700 dark:text-gray-300 mb-2\">{signal.message}</p>\n                    <div className=\"flex items-center space-x-4 text-sm text-gray-500\">\n                      <span className=\"flex items-center space-x-1\">\n                        <Clock className=\"h-3 w-3\" />\n                        <span>{signal.timestamp.toLocaleTimeString()}</span>\n                      </span>\n                      <span>Source: {signal.source}</span>\n                      <span className={`capitalize ${signal.priority === 'high' ? 'text-red-600' : signal.priority === 'medium' ? 'text-yellow-600' : 'text-green-600'}`}>\n                        {signal.priority} priority\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"flex space-x-2\">\n                  {signal.status === 'new' && (\n                    <>\n                      <button\n                        onClick={() => acknowledgeSignal(signal.id)}\n                        className=\"px-3 py-1 text-xs bg-blue-100 text-blue-800 rounded hover:bg-blue-200 transition-colors\"\n                      >\n                        Acknowledge\n                      </button>\n                      {(signal.type === 'buy' || signal.type === 'sell') && (\n                        <button\n                          onClick={() => executeSignal(signal.id)}\n                          className=\"px-3 py-1 text-xs bg-green-100 text-green-800 rounded hover:bg-green-200 transition-colors\"\n                        >\n                          Execute\n                        </button>\n                      )}\n                    </>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n\n      {/* Statistics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-4\">\n          <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">{signals.length}</div>\n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">Total Signals</div>\n        </div>\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-4\">\n          <div className=\"text-2xl font-bold text-green-600\">\n            {signals.filter(s => s.status === 'executed').length}\n          </div>\n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">Executed</div>\n        </div>\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-4\">\n          <div className=\"text-2xl font-bold text-blue-600\">\n            {signals.filter(s => s.status === 'new').length}\n          </div>\n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">Pending</div>\n        </div>\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-4\">\n          <div className=\"text-2xl font-bold text-purple-600\">\n            {Math.round(signals.reduce((acc, s) => acc + s.confidence, 0) / signals.length || 0)}%\n          </div>\n          <div className=\"text-sm text-gray-600 dark:text-gray-400\">Avg Confidence</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignalDeliverySystem;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4863, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/dashboard/BacktestingEngine.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { BarChart3, TrendingUp, TrendingDown, Calendar, DollarSign, Target, Activity, Play, Pause, RotateCcw, Download, Settings } from 'lucide-react';\n\ninterface BacktestResult {\n  id: string;\n  strategyName: string;\n  symbol: string;\n  timeframe: string;\n  startDate: Date;\n  endDate: Date;\n  initialCapital: number;\n  finalCapital: number;\n  totalReturn: number;\n  annualizedReturn: number;\n  maxDrawdown: number;\n  sharpeRatio: number;\n  winRate: number;\n  profitFactor: number;\n  totalTrades: number;\n  winningTrades: number;\n  losingTrades: number;\n  avgWin: number;\n  avgLoss: number;\n  status: 'running' | 'completed' | 'failed';\n  progress: number;\n}\n\ninterface BacktestConfig {\n  strategyId: string;\n  symbol: string;\n  timeframe: '1m' | '5m' | '15m' | '1h' | '4h' | '1d';\n  startDate: string;\n  endDate: string;\n  initialCapital: number;\n  commission: number;\n  slippage: number;\n}\n\nconst BacktestingEngine: React.FC = () => {\n  const [backtests, setBacktests] = useState<BacktestResult[]>([]);\n  const [config, setConfig] = useState<BacktestConfig>({\n    strategyId: '',\n    symbol: 'BTC/USD',\n    timeframe: '1h',\n    startDate: '2023-01-01',\n    endDate: '2024-01-01',\n    initialCapital: 10000,\n    commission: 0.1,\n    slippage: 0.05\n  });\n  const [isRunning, setIsRunning] = useState(false);\n  const [selectedBacktest, setSelectedBacktest] = useState<string | null>(null);\n  const [showConfig, setShowConfig] = useState(false);\n\n  const strategies = [\n    { id: 'ma-cross', name: 'Moving Average Crossover' },\n    { id: 'rsi-mean', name: 'RSI Mean Reversion' },\n    { id: 'bollinger', name: 'Bollinger Bands' },\n    { id: 'macd-signal', name: 'MACD Signal' },\n    { id: 'custom-ai', name: 'Custom AI Strategy' }\n  ];\n\n  const symbols = ['BTC/USD', 'ETH/USD', 'AAPL', 'TSLA', 'GOOGL', 'EUR/USD', 'GBP/USD'];\n  const timeframes = [\n    { value: '1m', label: '1 Minute' },\n    { value: '5m', label: '5 Minutes' },\n    { value: '15m', label: '15 Minutes' },\n    { value: '1h', label: '1 Hour' },\n    { value: '4h', label: '4 Hours' },\n    { value: '1d', label: '1 Day' }\n  ];\n\n  // Mock backtest data\n  useEffect(() => {\n    const mockBacktests: BacktestResult[] = [\n      {\n        id: '1',\n        strategyName: 'Moving Average Crossover',\n        symbol: 'BTC/USD',\n        timeframe: '1h',\n        startDate: new Date('2023-01-01'),\n        endDate: new Date('2023-12-31'),\n        initialCapital: 10000,\n        finalCapital: 15420,\n        totalReturn: 54.2,\n        annualizedReturn: 42.8,\n        maxDrawdown: -18.5,\n        sharpeRatio: 1.85,\n        winRate: 68.5,\n        profitFactor: 2.34,\n        totalTrades: 147,\n        winningTrades: 101,\n        losingTrades: 46,\n        avgWin: 245.30,\n        avgLoss: -128.75,\n        status: 'completed',\n        progress: 100\n      },\n      {\n        id: '2',\n        strategyName: 'RSI Mean Reversion',\n        symbol: 'ETH/USD',\n        timeframe: '4h',\n        startDate: new Date('2023-06-01'),\n        endDate: new Date('2023-12-31'),\n        initialCapital: 10000,\n        finalCapital: 12850,\n        totalReturn: 28.5,\n        annualizedReturn: 35.2,\n        maxDrawdown: -12.3,\n        sharpeRatio: 1.92,\n        winRate: 72.1,\n        profitFactor: 2.89,\n        totalTrades: 89,\n        winningTrades: 64,\n        losingTrades: 25,\n        avgWin: 198.45,\n        avgLoss: -95.20,\n        status: 'completed',\n        progress: 100\n      },\n      {\n        id: '3',\n        strategyName: 'Custom AI Strategy',\n        symbol: 'BTC/USD',\n        timeframe: '15m',\n        startDate: new Date('2024-01-01'),\n        endDate: new Date('2024-01-31'),\n        initialCapital: 10000,\n        finalCapital: 10000,\n        totalReturn: 0,\n        annualizedReturn: 0,\n        maxDrawdown: 0,\n        sharpeRatio: 0,\n        winRate: 0,\n        profitFactor: 0,\n        totalTrades: 0,\n        winningTrades: 0,\n        losingTrades: 0,\n        avgWin: 0,\n        avgLoss: 0,\n        status: 'running',\n        progress: 45\n      }\n    ];\n    setBacktests(mockBacktests);\n  }, []);\n\n  const runBacktest = () => {\n    if (!config.strategyId) return;\n    \n    setIsRunning(true);\n    const strategy = strategies.find(s => s.id === config.strategyId);\n    \n    const newBacktest: BacktestResult = {\n      id: Date.now().toString(),\n      strategyName: strategy?.name || 'Unknown Strategy',\n      symbol: config.symbol,\n      timeframe: config.timeframe,\n      startDate: new Date(config.startDate),\n      endDate: new Date(config.endDate),\n      initialCapital: config.initialCapital,\n      finalCapital: config.initialCapital,\n      totalReturn: 0,\n      annualizedReturn: 0,\n      maxDrawdown: 0,\n      sharpeRatio: 0,\n      winRate: 0,\n      profitFactor: 0,\n      totalTrades: 0,\n      winningTrades: 0,\n      losingTrades: 0,\n      avgWin: 0,\n      avgLoss: 0,\n      status: 'running',\n      progress: 0\n    };\n    \n    setBacktests(prev => [newBacktest, ...prev]);\n    \n    // Simulate backtest progress\n    const progressInterval = setInterval(() => {\n      setBacktests(prev => prev.map(bt => {\n        if (bt.id === newBacktest.id && bt.status === 'running') {\n          const newProgress = Math.min(bt.progress + Math.random() * 15, 100);\n          if (newProgress >= 100) {\n            // Generate random results\n            const totalReturn = (Math.random() - 0.3) * 100; // -30% to +70%\n            const finalCapital = config.initialCapital * (1 + totalReturn / 100);\n            const totalTrades = Math.floor(Math.random() * 200) + 50;\n            const winRate = Math.random() * 40 + 50; // 50-90%\n            const winningTrades = Math.floor(totalTrades * winRate / 100);\n            \n            return {\n              ...bt,\n              status: 'completed' as const,\n              progress: 100,\n              finalCapital,\n              totalReturn,\n              annualizedReturn: totalReturn * 1.2,\n              maxDrawdown: -(Math.random() * 25 + 5),\n              sharpeRatio: Math.random() * 2 + 0.5,\n              winRate,\n              profitFactor: Math.random() * 2 + 1,\n              totalTrades,\n              winningTrades,\n              losingTrades: totalTrades - winningTrades,\n              avgWin: Math.random() * 300 + 100,\n              avgLoss: -(Math.random() * 150 + 50)\n            };\n          }\n          return { ...bt, progress: newProgress };\n        }\n        return bt;\n      }));\n    }, 1000);\n    \n    setTimeout(() => {\n      clearInterval(progressInterval);\n      setIsRunning(false);\n    }, 8000);\n  };\n\n  const stopBacktest = (backtestId: string) => {\n    setBacktests(prev => prev.map(bt => \n      bt.id === backtestId ? { ...bt, status: 'failed' as const } : bt\n    ));\n  };\n\n  const deleteBacktest = (backtestId: string) => {\n    setBacktests(prev => prev.filter(bt => bt.id !== backtestId));\n  };\n\n  const exportResults = (backtest: BacktestResult) => {\n    const data = {\n      strategy: backtest.strategyName,\n      symbol: backtest.symbol,\n      timeframe: backtest.timeframe,\n      period: `${backtest.startDate.toISOString().split('T')[0]} to ${backtest.endDate.toISOString().split('T')[0]}`,\n      results: {\n        initialCapital: backtest.initialCapital,\n        finalCapital: backtest.finalCapital,\n        totalReturn: `${backtest.totalReturn}%`,\n        annualizedReturn: `${backtest.annualizedReturn}%`,\n        maxDrawdown: `${backtest.maxDrawdown}%`,\n        sharpeRatio: backtest.sharpeRatio,\n        winRate: `${backtest.winRate}%`,\n        profitFactor: backtest.profitFactor,\n        totalTrades: backtest.totalTrades,\n        winningTrades: backtest.winningTrades,\n        losingTrades: backtest.losingTrades,\n        avgWin: backtest.avgWin,\n        avgLoss: backtest.avgLoss\n      }\n    };\n    \n    const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `backtest-${backtest.strategyName}-${backtest.symbol}-${Date.now()}.json`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const getStatusColor = (status: BacktestResult['status']) => {\n    switch (status) {\n      case 'running': return 'text-blue-600 bg-blue-100';\n      case 'completed': return 'text-green-600 bg-green-100';\n      case 'failed': return 'text-red-600 bg-red-100';\n    }\n  };\n\n  const getReturnColor = (value: number) => {\n    if (value > 0) return 'text-green-600';\n    if (value < 0) return 'text-red-600';\n    return 'text-gray-600';\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"p-2 bg-purple-100 dark:bg-purple-900/30 rounded-lg\">\n            <BarChart3 className=\"h-6 w-6 text-purple-600 dark:text-purple-400\" />\n          </div>\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">Strategy Backtesting</h2>\n            <p className=\"text-gray-600 dark:text-gray-400\">Test your strategies against historical data</p>\n          </div>\n        </div>\n        <button\n          onClick={() => setShowConfig(!showConfig)}\n          className=\"flex items-center space-x-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n        >\n          <Play className=\"h-4 w-4\" />\n          <span>New Backtest</span>\n        </button>\n      </div>\n\n      {/* Configuration Panel */}\n      {showConfig && (\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Backtest Configuration</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                Strategy\n              </label>\n              <select\n                value={config.strategyId}\n                onChange={(e) => setConfig(prev => ({ ...prev, strategyId: e.target.value }))}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              >\n                <option value=\"\">Select a strategy</option>\n                {strategies.map(strategy => (\n                  <option key={strategy.id} value={strategy.id}>{strategy.name}</option>\n                ))}\n              </select>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                Symbol\n              </label>\n              <select\n                value={config.symbol}\n                onChange={(e) => setConfig(prev => ({ ...prev, symbol: e.target.value }))}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              >\n                {symbols.map(symbol => (\n                  <option key={symbol} value={symbol}>{symbol}</option>\n                ))}\n              </select>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                Timeframe\n              </label>\n              <select\n                value={config.timeframe}\n                onChange={(e) => setConfig(prev => ({ ...prev, timeframe: e.target.value as any }))}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              >\n                {timeframes.map(tf => (\n                  <option key={tf.value} value={tf.value}>{tf.label}</option>\n                ))}\n              </select>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                Start Date\n              </label>\n              <input\n                type=\"date\"\n                value={config.startDate}\n                onChange={(e) => setConfig(prev => ({ ...prev, startDate: e.target.value }))}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                End Date\n              </label>\n              <input\n                type=\"date\"\n                value={config.endDate}\n                onChange={(e) => setConfig(prev => ({ ...prev, endDate: e.target.value }))}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                Initial Capital ($)\n              </label>\n              <input\n                type=\"number\"\n                value={config.initialCapital}\n                onChange={(e) => setConfig(prev => ({ ...prev, initialCapital: parseFloat(e.target.value) }))}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n              />\n            </div>\n          </div>\n          <div className=\"flex justify-end space-x-3 mt-6\">\n            <button\n              onClick={() => setShowConfig(false)}\n              className=\"px-4 py-2 text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white transition-colors\"\n            >\n              Cancel\n            </button>\n            <button\n              onClick={() => {\n                runBacktest();\n                setShowConfig(false);\n              }}\n              disabled={!config.strategyId || isRunning}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n            >\n              Run Backtest\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Backtests List */}\n      <div className=\"space-y-4\">\n        {backtests.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <BarChart3 className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n            <p className=\"text-gray-500 dark:text-gray-400\">No backtests yet. Create your first backtest to get started.</p>\n          </div>\n        ) : (\n          backtests.map(backtest => (\n            <div\n              key={backtest.id}\n              className=\"bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6\"\n            >\n              <div className=\"flex items-start justify-between mb-4\">\n                <div>\n                  <div className=\"flex items-center space-x-3 mb-2\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                      {backtest.strategyName}\n                    </h3>\n                    <span className={`px-2 py-1 text-xs rounded-full ${getStatusColor(backtest.status)}`}>\n                      {backtest.status.charAt(0).toUpperCase() + backtest.status.slice(1)}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center space-x-4 text-sm text-gray-600 dark:text-gray-400\">\n                    <span>{backtest.symbol}</span>\n                    <span>{backtest.timeframe}</span>\n                    <span>\n                      {backtest.startDate.toLocaleDateString()} - {backtest.endDate.toLocaleDateString()}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"flex space-x-2\">\n                  {backtest.status === 'running' && (\n                    <button\n                      onClick={() => stopBacktest(backtest.id)}\n                      className=\"p-2 text-red-600 hover:bg-red-100 rounded-lg transition-colors\"\n                    >\n                      <Pause className=\"h-4 w-4\" />\n                    </button>\n                  )}\n                  {backtest.status === 'completed' && (\n                    <button\n                      onClick={() => exportResults(backtest)}\n                      className=\"p-2 text-blue-600 hover:bg-blue-100 rounded-lg transition-colors\"\n                    >\n                      <Download className=\"h-4 w-4\" />\n                    </button>\n                  )}\n                  <button\n                    onClick={() => deleteBacktest(backtest.id)}\n                    className=\"p-2 text-gray-600 hover:bg-gray-100 rounded-lg transition-colors\"\n                  >\n                    <RotateCcw className=\"h-4 w-4\" />\n                  </button>\n                </div>\n              </div>\n\n              {backtest.status === 'running' && (\n                <div className=\"mb-4\">\n                  <div className=\"flex justify-between text-sm text-gray-600 dark:text-gray-400 mb-1\">\n                    <span>Progress</span>\n                    <span>{Math.round(backtest.progress)}%</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n                    <div\n                      className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                      style={{ width: `${backtest.progress}%` }}\n                    />\n                  </div>\n                </div>\n              )}\n\n              {backtest.status === 'completed' && (\n                <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4\">\n                  <div className=\"text-center\">\n                    <div className={`text-lg font-bold ${getReturnColor(backtest.totalReturn)}`}>\n                      {backtest.totalReturn > 0 ? '+' : ''}{backtest.totalReturn.toFixed(1)}%\n                    </div>\n                    <div className=\"text-xs text-gray-600 dark:text-gray-400\">Total Return</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-lg font-bold text-gray-900 dark:text-white\">\n                      ${backtest.finalCapital.toLocaleString()}\n                    </div>\n                    <div className=\"text-xs text-gray-600 dark:text-gray-400\">Final Capital</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className={`text-lg font-bold ${getReturnColor(backtest.maxDrawdown)}`}>\n                      {backtest.maxDrawdown.toFixed(1)}%\n                    </div>\n                    <div className=\"text-xs text-gray-600 dark:text-gray-400\">Max Drawdown</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-lg font-bold text-gray-900 dark:text-white\">\n                      {backtest.sharpeRatio.toFixed(2)}\n                    </div>\n                    <div className=\"text-xs text-gray-600 dark:text-gray-400\">Sharpe Ratio</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-lg font-bold text-gray-900 dark:text-white\">\n                      {backtest.winRate.toFixed(1)}%\n                    </div>\n                    <div className=\"text-xs text-gray-600 dark:text-gray-400\">Win Rate</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-lg font-bold text-gray-900 dark:text-white\">\n                      {backtest.totalTrades}\n                    </div>\n                    <div className=\"text-xs text-gray-600 dark:text-gray-400\">Total Trades</div>\n                  </div>\n                </div>\n              )}\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default BacktestingEngine;"],"names":[],"mappings":"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","debugId":null}}]
}