{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/components/trading/ProfitTargetSettings.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Target, TrendingUp, TrendingDown, DollarSign, Calendar, Settings, AlertTriangle, CheckCircle, Edit3, RotateCcw, Plus, Minus, Activity } from 'lucide-react';\nimport ProfitFactorTrackingSystem from '../src/services/profitFactorTrackingSystem';\n\ninterface ProfitTarget {\n  id: string;\n  date: string;\n  targetAmount: number;\n  currentProfit: number;\n  isActive: boolean;\n  strategy?: string;\n  riskLevel: 'LOW' | 'MEDIUM' | 'HIGH';\n  stopLoss?: number;\n}\n\ninterface ProfitTargetSettingsProps {\n  onTargetUpdate?: (target: ProfitTarget) => void;\n  onTargetAchieved?: (target: ProfitTarget) => void;\n}\n\nconst ProfitTargetSettings: React.FC<ProfitTargetSettingsProps> = ({\n  onTargetUpdate,\n  onTargetAchieved\n}) => {\n  const [dailyTarget, setDailyTarget] = useState<number>(1000);\n  const [currentProfit, setCurrentProfit] = useState<number>(0);\n  const [targets, setTargets] = useState<ProfitTarget[]>([]);\n  const [showSettings, setShowSettings] = useState(false);\n  const [autoStopEnabled, setAutoStopEnabled] = useState(true);\n  const [maxDailyLoss, setMaxDailyLoss] = useState<number>(500);\n  const [currentLoss, setCurrentLoss] = useState<number>(0);\n  const [notifications, setNotifications] = useState(true);\n  const [riskLevel, setRiskLevel] = useState<'LOW' | 'MEDIUM' | 'HIGH'>('MEDIUM');\n  \n  // New states for manual/automatic functionality\n  const [isManualMode, setIsManualMode] = useState<boolean>(false);\n  const [manualProfitInput, setManualProfitInput] = useState<string>('');\n  const [adjustmentAmount, setAdjustmentAmount] = useState<number>(50);\n  const [profitHistory, setProfitHistory] = useState<Array<{timestamp: Date, amount: number, type: 'manual' | 'automatic', action: string}>>([]);\n  const [autoCalculationEnabled, setAutoCalculationEnabled] = useState<boolean>(true);\n  const [lastAutoUpdate, setLastAutoUpdate] = useState<Date | null>(null);\n  const [profitTracker] = useState(() => new ProfitFactorTrackingSystem());\n  const [realTimeMetrics, setRealTimeMetrics] = useState<any>(null);\n\n  // Calculate progress percentage\n  const progressPercentage = Math.min((currentProfit / dailyTarget) * 100, 100);\n  const lossPercentage = Math.min((Math.abs(currentLoss) / maxDailyLoss) * 100, 100);\n\n  // Check if target is achieved\n  const isTargetAchieved = currentProfit >= dailyTarget;\n  const isMaxLossReached = Math.abs(currentLoss) >= maxDailyLoss;\n\n  // Create new daily target\n  const createDailyTarget = () => {\n    const today = new Date().toISOString().split('T')[0];\n    const newTarget: ProfitTarget = {\n      id: Date.now().toString(),\n      date: today,\n      targetAmount: dailyTarget,\n      currentProfit: 0,\n      isActive: true,\n      riskLevel,\n      stopLoss: maxDailyLoss\n    };\n    \n    setTargets(prev => {\n      // Deactivate previous targets\n      const updated = prev.map(t => ({ ...t, isActive: false }));\n      return [...updated, newTarget];\n    });\n    \n    onTargetUpdate?.(newTarget);\n  };\n\n  // Update current profit (enhanced with tracking)\n  const updateProfit = (amount: number, type: 'manual' | 'automatic' = 'automatic', action: string = 'update') => {\n    setCurrentProfit(prev => {\n      const newProfit = prev + amount;\n      \n      // Add to history\n      setProfitHistory(prevHistory => [\n        ...prevHistory,\n        {\n          timestamp: new Date(),\n          amount,\n          type,\n          action\n        }\n      ]);\n      \n      // Update active target\n      setTargets(prevTargets => \n        prevTargets.map(target => \n          target.isActive \n            ? { ...target, currentProfit: newProfit }\n            : target\n        )\n      );\n      \n      // Check if target achieved\n      if (newProfit >= dailyTarget && !isTargetAchieved) {\n        const activeTarget = targets.find(t => t.isActive);\n        if (activeTarget) {\n          onTargetAchieved?.(activeTarget);\n        }\n      }\n      \n      return newProfit;\n    });\n  };\n\n  // Update current loss\n  const updateLoss = (amount: number) => {\n    setCurrentLoss(prev => prev + amount);\n  };\n\n  // Manual profit entry\n  const handleManualProfitEntry = () => {\n    const amount = parseFloat(manualProfitInput);\n    if (!isNaN(amount) && amount !== 0) {\n      updateProfit(amount, 'manual', 'manual_entry');\n      setManualProfitInput('');\n    }\n  };\n\n  // Quick profit adjustments\n  const adjustProfit = (amount: number) => {\n    updateProfit(amount, 'manual', amount > 0 ? 'quick_add' : 'quick_subtract');\n  };\n\n  // Set profit to specific amount\n  const setProfitAmount = (amount: number) => {\n    const difference = amount - currentProfit;\n    updateProfit(difference, 'manual', 'set_amount');\n  };\n\n  // Reset daily tracking\n  const resetDaily = () => {\n    setCurrentProfit(0);\n    setCurrentLoss(0);\n    setProfitHistory([]);\n    createDailyTarget();\n  };\n\n  // Get status color\n  const getStatusColor = () => {\n    if (isMaxLossReached) return 'text-red-600';\n    if (isTargetAchieved) return 'text-green-600';\n    if (currentProfit > 0) return 'text-blue-600';\n    return 'text-gray-600';\n  };\n\n  // Get progress bar color\n  const getProgressColor = () => {\n    if (progressPercentage >= 100) return 'bg-green-500';\n    if (progressPercentage >= 75) return 'bg-blue-500';\n    if (progressPercentage >= 50) return 'bg-yellow-500';\n    return 'bg-gray-400';\n  };\n\n  // Initialize with today's target\n  useEffect(() => {\n    createDailyTarget();\n  }, []);\n\n  // Auto-calculate profit from trading performance\n  const calculateAutomaticProfit = () => {\n    if (!autoCalculationEnabled || isManualMode) return;\n    \n    try {\n      // Get current user's trading metrics (using 'user1' as example)\n      const metrics = profitTracker.getProfitFactorMetrics('user1');\n      \n      if (metrics && metrics.lastUpdated > (lastAutoUpdate || new Date(0))) {\n        // Calculate daily profit based on net profit and recent performance\n        const dailyProfitEstimate = metrics.grossProfit - metrics.grossLoss;\n        const profitChange = dailyProfitEstimate - currentProfit;\n        \n        if (Math.abs(profitChange) > 0.01) { // Only update if change is significant\n          updateProfit(profitChange, 'automatic', 'performance_sync');\n          setLastAutoUpdate(new Date());\n          setRealTimeMetrics(metrics);\n        }\n      }\n    } catch (error) {\n      console.warn('Auto profit calculation failed:', error);\n    }\n  };\n\n  // Simulate real-time profit updates (for demo) - only in automatic mode\n  useEffect(() => {\n    if (!isManualMode) {\n      const interval = setInterval(() => {\n        if (autoCalculationEnabled) {\n          // Try to get real trading data first\n          calculateAutomaticProfit();\n        } else {\n          // Fallback to simulation\n          const change = (Math.random() - 0.5) * 20; // Random change between -10 and +10\n          if (change > 0) {\n            updateProfit(change, 'automatic', 'auto_update');\n          } else {\n            updateLoss(change);\n          }\n        }\n      }, 5000); // Update every 5 seconds\n\n      return () => clearInterval(interval);\n    }\n  }, [dailyTarget, targets, isManualMode, autoCalculationEnabled, lastAutoUpdate, currentProfit]);\n\n  return (\n    <div className=\"bg-white dark:bg-gray-900 rounded-lg shadow-lg p-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-6\">\n        <div className=\"flex items-center space-x-3\">\n          <Target className=\"h-6 w-6 text-blue-600\" />\n          <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">\n            Daily Profit Target\n          </h2>\n        </div>\n        <button\n          onClick={() => setShowSettings(!showSettings)}\n          className=\"p-2 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n        >\n          <Settings className=\"h-5 w-5\" />\n        </button>\n      </div>\n\n      {/* Mode Toggle and Manual Controls */}\n      <div className=\"bg-gray-50 dark:bg-gray-800 rounded-lg p-4 mb-6\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n            Profit Tracking Mode\n          </h3>\n          <div className=\"flex items-center space-x-3\">\n            <span className={`text-sm ${!isManualMode ? 'text-blue-600 font-medium' : 'text-gray-500'}`}>\n              Automatic\n            </span>\n            <button\n              onClick={() => setIsManualMode(!isManualMode)}\n              className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\n                isManualMode ? 'bg-blue-600' : 'bg-gray-300'\n              }`}\n            >\n              <span\n                className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\n                  isManualMode ? 'translate-x-6' : 'translate-x-1'\n                }`}\n              />\n            </button>\n            <span className={`text-sm ${isManualMode ? 'text-blue-600 font-medium' : 'text-gray-500'}`}>\n              Manual\n            </span>\n          </div>\n        </div>\n\n        {/* Manual Controls */}\n        {isManualMode && (\n          <div className=\"space-y-4\">\n            {/* Manual Profit Entry */}\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"flex-1\">\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                  Add/Subtract Profit Amount ($)\n                </label>\n                <div className=\"flex space-x-2\">\n                  <input\n                    type=\"number\"\n                    value={manualProfitInput}\n                    onChange={(e) => setManualProfitInput(e.target.value)}\n                    placeholder=\"Enter amount (+ or -)...\"\n                    className=\"flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-800 text-gray-900 dark:text-white\"\n                  />\n                  <button\n                    onClick={handleManualProfitEntry}\n                    disabled={!manualProfitInput || isNaN(parseFloat(manualProfitInput))}\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed flex items-center space-x-1\"\n                  >\n                    <Edit3 className=\"h-4 w-4\" />\n                    <span>Apply</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            {/* Quick Adjustment Controls */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                Quick Adjustments\n              </label>\n              <div className=\"flex items-center space-x-2\">\n                <input\n                  type=\"number\"\n                  value={adjustmentAmount}\n                  onChange={(e) => setAdjustmentAmount(Number(e.target.value))}\n                  className=\"w-20 px-2 py-1 border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-800 text-gray-900 dark:text-white text-sm\"\n                />\n                <button\n                  onClick={() => adjustProfit(-adjustmentAmount)}\n                  className=\"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 flex items-center space-x-1 text-sm\"\n                >\n                  <Minus className=\"h-3 w-3\" />\n                  <span>-${adjustmentAmount}</span>\n                </button>\n                <button\n                  onClick={() => adjustProfit(adjustmentAmount)}\n                  className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 flex items-center space-x-1 text-sm\"\n                >\n                  <Plus className=\"h-3 w-3\" />\n                  <span>+${adjustmentAmount}</span>\n                </button>\n                <button\n                  onClick={() => setProfitAmount(0)}\n                  className=\"px-3 py-1 bg-gray-600 text-white rounded hover:bg-gray-700 flex items-center space-x-1 text-sm\"\n                >\n                  <RotateCcw className=\"h-3 w-3\" />\n                  <span>Reset to $0</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Real-time Metrics Display */}\n        {!isManualMode && autoCalculationEnabled && realTimeMetrics && (\n          <div className=\"mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg border border-blue-200 dark:border-blue-800\">\n            <div className=\"flex items-center space-x-2 mb-2\">\n              <Activity className=\"h-4 w-4 text-blue-600\" />\n              <span className=\"text-sm font-medium text-blue-800 dark:text-blue-200\">\n                Live Trading Performance\n              </span>\n            </div>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3 text-xs\">\n              <div>\n                <span className=\"text-gray-600 dark:text-gray-400\">Profit Factor:</span>\n                <div className=\"font-medium text-gray-900 dark:text-white\">\n                  {realTimeMetrics.profitFactor.toFixed(2)}\n                </div>\n              </div>\n              <div>\n                <span className=\"text-gray-600 dark:text-gray-400\">Win Rate:</span>\n                <div className=\"font-medium text-gray-900 dark:text-white\">\n                  {realTimeMetrics.winRate.toFixed(1)}%\n                </div>\n              </div>\n              <div>\n                <span className=\"text-gray-600 dark:text-gray-400\">Total Trades:</span>\n                <div className=\"font-medium text-gray-900 dark:text-white\">\n                  {realTimeMetrics.totalTrades}\n                </div>\n              </div>\n              <div>\n                <span className=\"text-gray-600 dark:text-gray-400\">Last Update:</span>\n                <div className=\"font-medium text-gray-900 dark:text-white\">\n                  {lastAutoUpdate?.toLocaleTimeString() || 'Never'}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Mode Description */}\n        <div className=\"mt-3 text-xs text-gray-500 dark:text-gray-400\">\n          {isManualMode \n            ? \"Manual mode: You control profit updates manually. Automatic updates are disabled.\"\n            : autoCalculationEnabled\n              ? \"Automatic mode: Profit updates from real trading performance data when available, with simulation fallback.\"\n              : \"Automatic mode: Profit updates using simulated trading data for demonstration.\"\n          }\n        </div>\n      </div>\n\n      {/* Current Status */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n        {/* Profit Progress */}\n        <div className=\"bg-gray-50 dark:bg-gray-800 rounded-lg p-4\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <span className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n              Daily Target\n            </span>\n            <DollarSign className=\"h-4 w-4 text-green-600\" />\n          </div>\n          <div className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">\n            ${currentProfit.toFixed(2)}\n          </div>\n          <div className=\"text-sm text-gray-500 dark:text-gray-400 mb-3\">\n            Target: ${dailyTarget.toFixed(2)}\n          </div>\n          \n          {/* Progress Bar */}\n          <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n            <div \n              className={`h-2 rounded-full transition-all duration-300 ${getProgressColor()}`}\n              style={{ width: `${Math.min(progressPercentage, 100)}%` }}\n            ></div>\n          </div>\n          <div className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n            {progressPercentage.toFixed(1)}% achieved\n          </div>\n        </div>\n\n        {/* Loss Tracking */}\n        <div className=\"bg-gray-50 dark:bg-gray-800 rounded-lg p-4\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <span className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n              Daily Loss\n            </span>\n            <TrendingDown className=\"h-4 w-4 text-red-600\" />\n          </div>\n          <div className=\"text-2xl font-bold text-red-600 mb-2\">\n            ${Math.abs(currentLoss).toFixed(2)}\n          </div>\n          <div className=\"text-sm text-gray-500 dark:text-gray-400 mb-3\">\n            Max Loss: ${maxDailyLoss.toFixed(2)}\n          </div>\n          \n          {/* Loss Progress Bar */}\n          <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\n            <div \n              className=\"h-2 rounded-full bg-red-500 transition-all duration-300\"\n              style={{ width: `${Math.min(lossPercentage, 100)}%` }}\n            ></div>\n          </div>\n          <div className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n            {lossPercentage.toFixed(1)}% of max loss\n          </div>\n        </div>\n\n        {/* Status */}\n        <div className=\"bg-gray-50 dark:bg-gray-800 rounded-lg p-4\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <span className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n              Status\n            </span>\n            {isTargetAchieved ? (\n              <CheckCircle className=\"h-4 w-4 text-green-600\" />\n            ) : isMaxLossReached ? (\n              <AlertTriangle className=\"h-4 w-4 text-red-600\" />\n            ) : (\n              <TrendingUp className=\"h-4 w-4 text-blue-600\" />\n            )}\n          </div>\n          <div className={`text-lg font-bold ${getStatusColor()}`}>\n            {isMaxLossReached ? 'Max Loss Reached' :\n             isTargetAchieved ? 'Target Achieved!' :\n             currentProfit > 0 ? 'In Profit' :\n             currentProfit < 0 ? 'In Loss' : 'Neutral'}\n          </div>\n          <div className=\"text-sm text-gray-500 dark:text-gray-400 mt-2\">\n            Net P&L: ${(currentProfit + currentLoss).toFixed(2)}\n          </div>\n        </div>\n      </div>\n\n      {/* Settings Panel */}\n      {showSettings && (\n        <div className=\"border-t border-gray-200 dark:border-gray-700 pt-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n            Target Settings\n          </h3>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {/* Target Amount */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                Daily Target Amount ($)\n              </label>\n              <input\n                type=\"number\"\n                value={dailyTarget}\n                onChange={(e) => setDailyTarget(Number(e.target.value))}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-800 text-gray-900 dark:text-white\"\n              />\n            </div>\n\n            {/* Max Daily Loss */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                Max Daily Loss ($)\n              </label>\n              <input\n                type=\"number\"\n                value={maxDailyLoss}\n                onChange={(e) => setMaxDailyLoss(Number(e.target.value))}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-800 text-gray-900 dark:text-white\"\n              />\n            </div>\n\n            {/* Risk Level */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                Risk Level\n              </label>\n              <select\n                value={riskLevel}\n                onChange={(e) => setRiskLevel(e.target.value as 'LOW' | 'MEDIUM' | 'HIGH')}\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-800 text-gray-900 dark:text-white\"\n              >\n                <option value=\"LOW\">Low Risk</option>\n                <option value=\"MEDIUM\">Medium Risk</option>\n                <option value=\"HIGH\">High Risk</option>\n              </select>\n            </div>\n\n            {/* Auto Stop */}\n            <div className=\"flex items-center space-x-3\">\n              <input\n                type=\"checkbox\"\n                id=\"autoStop\"\n                checked={autoStopEnabled}\n                onChange={(e) => setAutoStopEnabled(e.target.checked)}\n                className=\"h-4 w-4 text-blue-600 border-gray-300 rounded\"\n              />\n              <label htmlFor=\"autoStop\" className=\"text-sm text-gray-700 dark:text-gray-300\">\n                Auto-stop trading when target/loss reached\n              </label>\n            </div>\n\n            {/* Auto Calculation */}\n            <div className=\"flex items-center space-x-3\">\n              <input\n                type=\"checkbox\"\n                id=\"autoCalculation\"\n                checked={autoCalculationEnabled}\n                onChange={(e) => setAutoCalculationEnabled(e.target.checked)}\n                className=\"h-4 w-4 text-blue-600 border-gray-300 rounded\"\n              />\n              <label htmlFor=\"autoCalculation\" className=\"text-sm text-gray-700 dark:text-gray-300\">\n                Auto-calculate from trading performance\n              </label>\n            </div>\n\n            {/* Notifications */}\n            <div className=\"flex items-center space-x-3\">\n              <input\n                type=\"checkbox\"\n                id=\"notifications\"\n                checked={notifications}\n                onChange={(e) => setNotifications(e.target.checked)}\n                className=\"h-4 w-4 text-blue-600 border-gray-300 rounded\"\n              />\n              <label htmlFor=\"notifications\" className=\"text-sm text-gray-700 dark:text-gray-300\">\n                Enable notifications\n              </label>\n            </div>\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"flex space-x-3 mt-6\">\n            <button\n              onClick={resetDaily}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 flex items-center space-x-2\"\n            >\n              <RotateCcw className=\"h-4 w-4\" />\n              <span>Reset Daily Target</span>\n            </button>\n            {!isManualMode && (\n              <>\n                <button\n                  onClick={() => updateProfit(100, 'automatic', 'demo_gain')}\n                  className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 flex items-center space-x-2\"\n                >\n                  <Plus className=\"h-4 w-4\" />\n                  <span>Demo +$100</span>\n                </button>\n                <button\n                  onClick={() => updateLoss(-50)}\n                  className=\"px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 flex items-center space-x-2\"\n                >\n                  <Minus className=\"h-4 w-4\" />\n                  <span>Demo -$50</span>\n                </button>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Profit History */}\n      {profitHistory.length > 0 && (\n        <div className=\"border-t border-gray-200 dark:border-gray-700 pt-6 mt-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n            Profit Update History\n          </h3>\n          <div className=\"max-h-48 overflow-y-auto space-y-2\">\n            {profitHistory.slice(-10).reverse().map((entry, index) => (\n              <div key={index} className=\"flex items-center justify-between p-2 bg-gray-50 dark:bg-gray-800 rounded text-sm\">\n                <div className=\"flex items-center space-x-2\">\n                  {entry.type === 'manual' ? (\n                    <Edit3 className=\"h-3 w-3 text-blue-600\" />\n                  ) : (\n                    <TrendingUp className=\"h-3 w-3 text-green-600\" />\n                  )}\n                  <span className=\"text-gray-600 dark:text-gray-400\">\n                    {entry.timestamp.toLocaleTimeString()}\n                  </span>\n                  <span className={`px-2 py-1 rounded text-xs ${\n                    entry.type === 'manual' \n                      ? 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200'\n                      : 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200'\n                  }`}>\n                    {entry.type}\n                  </span>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <span className={`font-medium ${\n                    entry.amount > 0 ? 'text-green-600' : 'text-red-600'\n                  }`}>\n                    {entry.amount > 0 ? '+' : ''}${entry.amount.toFixed(2)}\n                  </span>\n                  <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                    ({entry.action.replace('_', ' ')})\n                  </span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Recent Targets History */}\n      <div className=\"border-t border-gray-200 dark:border-gray-700 pt-6 mt-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n          Recent Targets\n        </h3>\n        <div className=\"space-y-3\">\n          {targets.slice(-5).reverse().map((target) => (\n            <div key={target.id} className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n              <div className=\"flex items-center space-x-3\">\n                <Calendar className=\"h-4 w-4 text-gray-500\" />\n                <div>\n                  <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                    {target.date}\n                  </div>\n                  <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                    Target: ${target.targetAmount}\n                  </div>\n                </div>\n              </div>\n              <div className=\"text-right\">\n                <div className={`text-sm font-medium ${\n                  target.currentProfit >= target.targetAmount ? 'text-green-600' :\n                  target.currentProfit > 0 ? 'text-blue-600' : 'text-red-600'\n                }`}>\n                  ${target.currentProfit.toFixed(2)}\n                </div>\n                <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  {target.isActive ? 'Active' : 'Completed'}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfitTargetSettings;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1422, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function formatCurrency(amount: number): string {\n  if (typeof amount !== 'number' || isNaN(amount)) return '$0.00'\n  try {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(amount)\n  } catch (error) {\n    return '$0.00'\n  }\n}\n\nexport function formatPercent(value: number): string {\n  if (typeof value !== 'number' || isNaN(value)) return '0.00%'\n  try {\n    return `${value >= 0 ? '+' : ''}${value.toFixed(2)}%`\n  } catch (error) {\n    return '0.00%'\n  }\n}\n\nexport function formatNumber(value: number): string {\n  if (typeof value !== 'number' || isNaN(value)) return '0'\n  try {\n    return new Intl.NumberFormat('en-US').format(value)\n  } catch (error) {\n    return '0'\n  }\n}"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB;AAEO,SAAS,eAAe,MAAc;IAC3C,IAAI,OAAO,WAAW,YAAY,MAAM,SAAS,OAAO;IACxD,IAAI;QACF,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;YACpC,OAAO;YACP,UAAU;QACZ,GAAG,MAAM,CAAC;IACZ,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,SAAS,cAAc,KAAa;IACzC,IAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,OAAO;IACtD,IAAI;QACF,OAAO,GAAG,SAAS,IAAI,MAAM,KAAK,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC;IACvD,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,SAAS,aAAa,KAAa;IACxC,IAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,OAAO;IACtD,IAAI;QACF,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS,MAAM,CAAC;IAC/C,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 1470, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }"],"names":[],"mappings":";;;;;;;AACA;AACA;;;;AAEA,MAAM,gBAAgB,IAAA,uKAAG,EACvB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,IAAA,yHAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 1512, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/DemoModeIndicator.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\nimport { Badge } from '@/components/ui/badge'\nimport { AlertTriangle, Play } from 'lucide-react'\nimport { useTradingMode } from '@/contexts/TradingModeContext'\nimport { cn } from '@/lib/utils'\n\ninterface DemoModeIndicatorProps {\n  className?: string\n  variant?: 'badge' | 'banner'\n}\n\nexport function DemoModeIndicator({ className, variant = 'badge' }: DemoModeIndicatorProps) {\n  const { isPaperTrading, tradingMode } = useTradingMode()\n\n  if (!isPaperTrading) {\n    return null\n  }\n\n  if (variant === 'banner') {\n    return (\n      <div className={cn(\n        'bg-orange-100 dark:bg-orange-900/20 border border-orange-200 dark:border-orange-800 rounded-lg p-3 mb-4',\n        className\n      )}>\n        <div className=\"flex items-center gap-2\">\n          <Play className=\"h-4 w-4 text-orange-600 dark:text-orange-400\" />\n          <span className=\"text-sm font-medium text-orange-800 dark:text-orange-200\">\n            Demo Mode Active\n          </span>\n          <span className=\"text-xs text-orange-600 dark:text-orange-400\">\n            • All trades are simulated • No real money involved\n          </span>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <Badge \n      variant=\"outline\" \n      className={cn(\n        'bg-orange-50 dark:bg-orange-900/20 border-orange-200 dark:border-orange-800 text-orange-700 dark:text-orange-300 font-medium',\n        className\n      )}\n    >\n      <Play className=\"h-3 w-3 mr-1\" />\n      Demo Mode\n    </Badge>\n  )\n}\n\nexport default DemoModeIndicator"],"names":[],"mappings":";;;;;;;AAGA;AACA;AACA;AACA;AANA;;;;;;AAaO,SAAS,kBAAkB,EAAE,SAAS,EAAE,UAAU,OAAO,EAA0B;IACxF,MAAM,EAAE,cAAc,EAAE,WAAW,EAAE,GAAG,IAAA,wJAAc;IAEtD,IAAI,CAAC,gBAAgB;QACnB,OAAO;IACT;IAEA,IAAI,YAAY,UAAU;QACxB,qBACE,8OAAC;YAAI,WAAW,IAAA,yHAAE,EAChB,2GACA;sBAEA,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,0MAAI;wBAAC,WAAU;;;;;;kCAChB,8OAAC;wBAAK,WAAU;kCAA2D;;;;;;kCAG3E,8OAAC;wBAAK,WAAU;kCAA+C;;;;;;;;;;;;;;;;;IAMvE;IAEA,qBACE,8OAAC,0IAAK;QACJ,SAAQ;QACR,WAAW,IAAA,yHAAE,EACX,gIACA;;0BAGF,8OAAC,0MAAI;gBAAC,WAAU;;;;;;YAAiB;;;;;;;AAIvC;uCAEe","debugId":null}},
    {"offset": {"line": 1599, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/Navigation.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter, usePathname } from 'next/navigation';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { useTheme } from '@/contexts/ThemeContext';\nimport { useTradingMode } from '@/contexts/TradingModeContext';\nimport DemoModeIndicator from '@/components/ui/DemoModeIndicator';\nimport { toast } from 'react-hot-toast';\nimport {\n  Menu,\n  X,\n  Home,\n  TrendingUp,\n  BarChart3,\n  Users,\n  Copy,\n  Bell,\n  Settings,\n  LogOut,\n  Sun,\n  Moon,\n  User,\n  ChevronDown,\n  Search,\n  Wallet,\n  Activity,\n  Shield,\n  HelpCircle,\n  Zap,\n  Radio,\n  CreditCard,\n  Crown,\n  Award,\n  Bot,\n  Link\n} from 'lucide-react';\n\ninterface NavigationItem {\n  name: string;\n  href: string;\n  icon: any;\n  badge?: number;\n  description?: string;\n}\n\nconst navigationItems: NavigationItem[] = [\n  {\n    name: 'Dashboard',\n    href: '/dashboard',\n    icon: Home,\n    description: 'Overview and portfolio summary'\n  },\n  {\n    name: 'User Dashboard',\n    href: '/user-dashboard',\n    icon: User,\n    description: 'Personal account and subscription management'\n  },\n  {\n    name: 'Trading',\n    href: '/trading',\n    icon: TrendingUp,\n    description: 'Execute trades and view market data'\n  },\n  {\n    name: 'Live Trading',\n    href: '/trading/live',\n    icon: Radio,\n    description: 'Real-time trading dashboard'\n  },\n  {\n    name: 'Futures Trading',\n    href: '/trading/futures',\n    icon: TrendingUp,\n    description: 'Futures contracts trading'\n  },\n  {\n    name: 'Options Trading',\n    href: '/trading/options',\n    icon: BarChart3,\n    description: 'Options contracts trading'\n  },\n  {\n    name: 'Market Updates',\n    href: '/trading/market-updates',\n    icon: Bell,\n    description: 'Real-time market news and updates'\n  },\n  {\n    name: 'Pine Editor',\n    href: '/trading/pine-editor',\n    icon: Settings,\n    description: 'Pine Script editor for custom indicators'\n  },\n  {\n    name: 'Profit Targets',\n    href: '/trading/profit-targets',\n    icon: Award,\n    description: 'Set and manage profit targets'\n  },\n  {\n    name: 'Portfolio',\n    href: '/portfolio',\n    icon: BarChart3,\n    description: 'Manage your investments'\n  },\n  {\n    name: 'Copy Trade',\n    href: '/copy-trade',\n    icon: Copy,\n    description: 'Follow and copy successful traders'\n  },\n  {\n    name: 'Creators',\n    href: '/creators',\n    icon: Award,\n    description: 'Discover top trading creators and investors'\n  },\n  {\n    name: 'Social',\n    href: '/social',\n    icon: Users,\n    badge: 3,\n    description: 'Connect with the trading community'\n  },\n  {\n    name: 'Pricing',\n    href: '/pricing',\n    icon: Crown,\n    description: 'View subscription plans and pricing'\n  },\n  {\n    name: 'Payment',\n    href: '/payment',\n    icon: CreditCard,\n    description: 'Manage payment methods and billing'\n  },\n  {\n    name: 'Security',\n    href: '/security',\n    icon: Shield,\n    description: 'Security settings and compliance'\n  },\n  {\n    name: 'Automation',\n    href: '/automation',\n    icon: Bot,\n    description: 'Automated trading and system management'\n  },\n  {\n    name: 'Trading Bot',\n    href: '/automation/trading-bot',\n    icon: Bot,\n    description: 'Configure and manage trading bots'\n  },\n  {\n    name: 'Copy Trading Auto',\n    href: '/automation/copy-trading',\n    icon: Copy,\n    description: 'Automated copy trading settings'\n  },\n  {\n    name: 'Risk Management',\n    href: '/automation/risk-management',\n    icon: Shield,\n    description: 'Automated risk management rules'\n  },\n  {\n    name: 'Data Pipeline',\n    href: '/automation/data-pipeline',\n    icon: Activity,\n    description: 'Automated data processing and analysis'\n  },\n  {\n    name: 'Auto Notifications',\n    href: '/automation/notifications',\n    icon: Bell,\n    description: 'Automated notification settings'\n  },\n  {\n    name: 'Auto Payments',\n    href: '/automation/payments',\n    icon: CreditCard,\n    description: 'Automated payment processing'\n  },\n  {\n    name: 'Auto Reporting',\n    href: '/automation/reporting',\n    icon: BarChart3,\n    description: 'Automated report generation'\n  },\n  {\n    name: 'Auto Onboarding',\n    href: '/automation/onboarding',\n    icon: User,\n    description: 'Automated user onboarding process'\n  },\n  {\n    name: 'Brokers',\n    href: '/brokers',\n    icon: Link,\n    description: 'Connect and manage broker accounts'\n  },\n  {\n    name: 'Demo',\n    href: '/demo',\n    icon: Activity,\n    description: 'Practice trading with demo account'\n  },\n  {\n    name: 'Settings',\n    href: '/settings',\n    icon: Settings,\n    description: 'Application settings and preferences'\n  },\n  {\n    name: 'Profile',\n    href: '/profile',\n    icon: User,\n    description: 'Manage your profile and account details'\n  },\n  {\n    name: 'Help',\n    href: '/help',\n    icon: HelpCircle,\n    description: 'Get help and support'\n  }\n];\n\nexport default function Navigation() {\n  const { user, logout } = useAuth();\n  const { theme, setTheme } = useTheme();\n  const { isPaperTrading } = useTradingMode();\n  const router = useRouter();\n  const pathname = usePathname();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [isProfileMenuOpen, setIsProfileMenuOpen] = useState(false);\n  const [mounted, setMounted] = useState(false);\n  const [focusedItemIndex, setFocusedItemIndex] = useState(-1);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  const handleLogout = async () => {\n    try {\n      await logout();\n      router.push('/login');\n      toast.success('Logged out successfully');\n    } catch (error) {\n      toast.error('Failed to logout. Please try again.');\n    }\n  };\n\n  const toggleTheme = () => {\n    setTheme(theme === 'dark' ? 'light' : 'dark');\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent, action: () => void) => {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      action();\n    }\n  };\n\n  const handleNavigationKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === 'ArrowDown') {\n      event.preventDefault();\n      setFocusedItemIndex(prev => (prev + 1) % navigationItems.length);\n    } else if (event.key === 'ArrowUp') {\n      event.preventDefault();\n      setFocusedItemIndex(prev => prev <= 0 ? navigationItems.length - 1 : prev - 1);\n    } else if (event.key === 'Enter' && focusedItemIndex >= 0) {\n      event.preventDefault();\n      router.push(navigationItems[focusedItemIndex].href);\n    } else if (event.key === 'Escape') {\n      setIsProfileMenuOpen(false);\n      setIsMobileMenuOpen(false);\n    }\n  };\n\n  const isActive = (href: string) => {\n    return pathname === href;\n  };\n\n  if (!mounted) {\n    return null;\n  }\n\n  return (\n    <>\n      {/* Desktop Navigation */}\n      <nav className=\"hidden lg:flex lg:flex-col lg:w-64 lg:fixed lg:inset-y-0 lg:border-r lg:border-gray-200 lg:dark:border-gray-700 lg:bg-white lg:dark:bg-gray-800 lg:shadow-sm\">\n        {/* Logo */}\n        <div className=\"flex items-center justify-center h-16 px-6 border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex flex-col items-center space-y-1\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"h-8 w-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center\">\n                <Zap className=\"h-5 w-5 text-white\" />\n              </div>\n              <span className=\"text-xl font-bold text-gray-900 dark:text-white\">KAIRO</span>\n            </div>\n            {isPaperTrading && <DemoModeIndicator className=\"text-xs\" />}\n          </div>\n        </div>\n\n        {/* Simplified Navigation - Only Logo Area */}\n        <div className=\"flex-1 flex items-center justify-center px-4 py-6\">\n          <div className=\"text-center text-gray-500 dark:text-gray-400\">\n            <p className=\"text-sm\">Navigation Menu</p>\n            <p className=\"text-xs mt-1\">Available in Profile</p>\n          </div>\n        </div>\n\n        {/* User Profile Section */}\n        <div className=\"border-t border-gray-200 dark:border-gray-700 p-4\">\n          <div className=\"relative\">\n            <button\n              onClick={() => setIsProfileMenuOpen(!isProfileMenuOpen)}\n              className=\"w-full flex items-center space-x-3 p-3 rounded-xl hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\"\n              aria-expanded={isProfileMenuOpen}\n              aria-haspopup=\"menu\"\n              aria-label=\"User profile menu\"\n            >\n              <div className=\"h-10 w-10 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full flex items-center justify-center\">\n                <span className=\"text-white font-semibold text-sm\">\n                  {user ? `${user.firstName?.[0] || ''}${user.lastName?.[0] || ''}` || 'U' : 'U'}\n                </span>\n              </div>\n              <div className=\"flex-1 text-left\">\n                <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                  {user ? `${user.firstName || ''} ${user.lastName || ''}`.trim() || 'User' : 'User'}\n                </p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  {user?.email || 'user@example.com'}\n                </p>\n              </div>\n              <ChevronDown className={`h-4 w-4 text-gray-400 transition-transform ${\n                isProfileMenuOpen ? 'rotate-180' : ''\n              }`} />\n            </button>\n\n            {/* Profile Dropdown with Navigation Menu */}\n            {isProfileMenuOpen && (\n              <div \n                className=\"absolute bottom-full left-0 right-0 mb-2 bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 py-2 max-h-96 overflow-y-auto\"\n                role=\"menu\"\n                aria-label=\"User profile and navigation menu\"\n              >\n                {/* Navigation Items */}\n                <div className=\"px-2 py-2\">\n                  <p className=\"px-2 py-1 text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Navigation</p>\n                  <div onKeyDown={handleNavigationKeyDown}>\n                    {navigationItems.map((item, index) => {\n                      const active = isActive(item.href);\n                      const isFocused = focusedItemIndex === index;\n                      return (\n                        <button\n                          key={item.href}\n                          onClick={() => {\n                            router.push(item.href);\n                            setIsProfileMenuOpen(false);\n                          }}\n                          onKeyDown={(e) => handleKeyDown(e, () => {\n                            router.push(item.href);\n                            setIsProfileMenuOpen(false);\n                          })}\n                          className={`w-full flex items-center space-x-3 px-3 py-2 mb-1 rounded-lg transition-all duration-200 group text-sm ${\n                            active\n                              ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-sm'\n                              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 hover:text-gray-900 dark:hover:text-white'\n                          } ${\n                            isFocused ? 'ring-2 ring-blue-500 ring-offset-2 dark:ring-offset-gray-800' : ''\n                          }`}\n                          aria-current={active ? 'page' : undefined}\n                          title={item.description}\n                        >\n                          <item.icon className={`h-4 w-4 transition-colors ${\n                            active ? 'text-white' : 'text-gray-500 dark:text-gray-400 group-hover:text-gray-700 dark:group-hover:text-gray-300'\n                          }`} aria-hidden=\"true\" />\n                          <span className=\"flex-1 text-left\">{item.name}</span>\n                          {item.badge && (\n                            <span className={`ml-2 inline-flex items-center justify-center px-1.5 py-0.5 text-xs font-bold rounded-full ${\n                              active \n                                ? 'bg-white/20 text-white' \n                                : 'bg-blue-100 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400'\n                            }`} aria-label={`${item.badge} notifications`}>\n                              {item.badge}\n                            </span>\n                          )}\n                        </button>\n                      );\n                    })}\n                  </div>\n                </div>\n                \n                {/* Profile Actions */}\n                <div className=\"border-t border-gray-200 dark:border-gray-700 mt-2 pt-2\">\n                  <p className=\"px-4 py-1 text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Account</p>\n                  <button\n                    onClick={() => {\n                      router.push('/profile');\n                      setIsProfileMenuOpen(false);\n                    }}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                    role=\"menuitem\"\n                    aria-label=\"Go to profile page\"\n                  >\n                    <User className=\"h-4 w-4\" aria-hidden=\"true\" />\n                    <span>Profile</span>\n                  </button>\n                  <button\n                    onClick={() => {\n                      router.push('/settings');\n                      setIsProfileMenuOpen(false);\n                    }}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                  >\n                    <Settings className=\"h-4 w-4\" />\n                    <span>Settings</span>\n                  </button>\n                  <button\n                    onClick={toggleTheme}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                  >\n                    {theme === 'dark' ? <Sun className=\"h-4 w-4\" /> : <Moon className=\"h-4 w-4\" />}\n                    <span>{theme === 'dark' ? 'Light Mode' : 'Dark Mode'}</span>\n                  </button>\n                  <div className=\"border-t border-gray-200 dark:border-gray-700 my-2\"></div>\n                  <button\n                    onClick={handleLogout}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20\"\n                  >\n                    <LogOut className=\"h-4 w-4\" />\n                    <span>Sign Out</span>\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </nav>\n\n      {/* Mobile Navigation */}\n      <div className=\"lg:hidden\">\n        {/* Mobile Header */}\n        <div className=\"flex items-center justify-between h-16 px-4 bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 shadow-sm\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"h-8 w-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center\" role=\"img\" aria-label=\"KAIRO logo\">\n                <Zap className=\"h-5 w-5 text-white\" aria-hidden=\"true\" />\n              </div>\n              <span className=\"text-xl font-bold text-gray-900 dark:text-white\">KAIRO</span>\n            </div>\n            {isPaperTrading && <DemoModeIndicator className=\"text-xs\" />}\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={toggleTheme}\n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n              aria-label={`Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`}\n              title={`Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`}\n            >\n              {theme === 'dark' ? <Sun className=\"h-5 w-5\" aria-hidden=\"true\" /> : <Moon className=\"h-5 w-5\" aria-hidden=\"true\" />}\n            </button>\n            <button \n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors relative\"\n              aria-label=\"Notifications\"\n              title=\"View notifications\"\n            >\n              <Bell className=\"h-5 w-5\" />\n              <span className=\"absolute -top-1 -right-1 h-3 w-3 bg-red-500 rounded-full\"></span>\n            </button>\n          </div>\n        </div>\n\n        {/* Mobile Menu Overlay */}\n        {isMobileMenuOpen && (\n          <div className=\"fixed inset-0 z-50 lg:hidden\">\n            <div className=\"fixed inset-0 bg-black bg-opacity-25\" onClick={() => setIsMobileMenuOpen(false)}></div>\n            <div className=\"fixed top-0 right-0 bottom-0 w-full max-w-sm bg-white dark:bg-gray-800 shadow-xl\">\n              {/* Mobile Menu Header */}\n              <div className=\"flex items-center justify-between h-16 px-4 border-b border-gray-200 dark:border-gray-700\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"h-10 w-10 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full flex items-center justify-center\">\n                    <span className=\"text-white font-semibold text-sm\">\n                      {user ? `${user.firstName?.[0] || ''}${user.lastName?.[0] || ''}` || 'U' : 'U'}\n                    </span>\n                  </div>\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      {user ? `${user.firstName || ''} ${user.lastName || ''}`.trim() || 'User' : 'User'}\n                    </p>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      {user?.email || 'user@example.com'}\n                    </p>\n                  </div>\n                </div>\n                <button\n                  onClick={() => setIsMobileMenuOpen(false)}\n                  className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n                >\n                  <X className=\"h-6 w-6\" />\n                </button>\n              </div>\n\n              {/* Mobile Navigation Items */}\n              <div className=\"px-4 py-6 space-y-2\" onKeyDown={handleNavigationKeyDown} role=\"navigation\" aria-label=\"Mobile navigation menu\">\n                {navigationItems.map((item, index) => {\n                  const Icon = item.icon;\n                  const active = isActive(item.href);\n                  const isFocused = focusedItemIndex === index;\n                  \n                  return (\n                    <button\n                      key={item.name}\n                      onClick={() => {\n                        router.push(item.href);\n                        setIsMobileMenuOpen(false);\n                      }}\n                      onKeyDown={(e) => handleKeyDown(e, () => {\n                        router.push(item.href);\n                        setIsMobileMenuOpen(false);\n                      })}\n                      className={`w-full group flex items-center px-4 py-3 text-sm font-medium rounded-xl transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 ${\n                        active\n                          ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-lg'\n                          : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n                      } ${\n                        isFocused ? 'ring-2 ring-blue-500 ring-offset-2 dark:ring-offset-gray-800' : ''\n                      }`}\n                      aria-current={active ? 'page' : undefined}\n                      aria-describedby={item.description ? `${item.href}-mobile-desc` : undefined}\n                      title={item.description}\n                    >\n                      <Icon className={`mr-3 h-5 w-5 ${\n                        active ? 'text-white' : 'text-gray-400'\n                      }`} aria-hidden=\"true\" />\n                      <div className=\"flex-1 text-left\">\n                        <div className=\"font-medium\">{item.name}</div>\n                        {item.description && (\n                          <div className={`text-xs mt-1 ${\n                            active ? 'text-white/80' : 'text-gray-500 dark:text-gray-400'\n                          }`} id={`${item.href}-mobile-desc`}>\n                            {item.description}\n                          </div>\n                        )}\n                      </div>\n                      {item.badge && (\n                        <span className={`ml-2 inline-flex items-center justify-center px-2 py-1 text-xs font-bold rounded-full ${\n                          active \n                            ? 'bg-white/20 text-white' \n                            : 'bg-blue-100 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400'\n                        }`} aria-label={`${item.badge} notifications`}>\n                          {item.badge}\n                        </span>\n                      )}\n                    </button>\n                  );\n                })}\n              </div>\n\n              {/* Mobile Menu Footer */}\n              <div className=\"border-t border-gray-200 dark:border-gray-700 px-4 py-4 space-y-2\">\n                <button\n                  onClick={() => {\n                    router.push('/profile');\n                    setIsMobileMenuOpen(false);\n                  }}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-xl transition-colors\"\n                >\n                  <User className=\"h-5 w-5 text-gray-400\" />\n                  <span>Profile</span>\n                </button>\n                <button\n                  onClick={() => {\n                    router.push('/settings');\n                    setIsMobileMenuOpen(false);\n                  }}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-xl transition-colors\"\n                >\n                  <Settings className=\"h-5 w-5 text-gray-400\" />\n                  <span>Settings</span>\n                </button>\n                <button\n                  onClick={() => {\n                    router.push('/help');\n                    setIsMobileMenuOpen(false);\n                  }}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-xl transition-colors\"\n                >\n                  <HelpCircle className=\"h-5 w-5 text-gray-400\" />\n                  <span>Help & Support</span>\n                </button>\n                <button\n                  onClick={handleLogout}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20 rounded-xl transition-colors\"\n                >\n                  <LogOut className=\"h-5 w-5\" />\n                  <span>Sign Out</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Mobile Bottom Navigation */}\n      <div className=\"lg:hidden fixed bottom-0 left-0 right-0 bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700 shadow-lg\">\n        <div className=\"grid grid-cols-5 h-16\">\n          {/* Show only the 5 most important navigation items in bottom bar */}\n          {navigationItems.slice(0, 5).map((item) => {\n            const Icon = item.icon;\n            const active = isActive(item.href);\n            \n            return (\n              <button\n                key={item.name}\n                onClick={() => router.push(item.href)}\n                className={`flex flex-col items-center justify-center space-y-1 transition-colors ${\n                  active\n                    ? 'text-blue-600 dark:text-blue-400'\n                    : 'text-gray-400 hover:text-gray-600 dark:hover:text-gray-300'\n                }`}\n              >\n                <div className=\"relative\">\n                  <Icon className=\"h-5 w-5\" />\n                  {item.badge && (\n                    <span className=\"absolute -top-2 -right-2 h-4 w-4 bg-red-500 text-white text-xs rounded-full flex items-center justify-center\">\n                      {item.badge}\n                    </span>\n                  )}\n                </div>\n                <span className=\"text-xs font-medium truncate\">{item.name}</span>\n              </button>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;;;;;;;;;;AA8CA,MAAM,kBAAoC;IACxC;QACE,MAAM;QACN,MAAM;QACN,MAAM,0MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,0MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gOAAU;QAChB,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gOAAU;QAChB,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,iOAAS;QACf,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,0MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,sNAAQ;QACd,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,iOAAS;QACf,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,0MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAK;QACX,OAAO;QACP,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gOAAU;QAChB,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gNAAM;QACZ,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,uMAAG;QACT,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,uMAAG;QACT,a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","debugId":null}},
    {"offset": {"line": 2754, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/layouts/AppLayout.tsx"],"sourcesContent":["'use client';\n\nimport { ReactNode } from 'react';\nimport Navigation from '@/components/Navigation';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { useRouter, usePathname } from 'next/navigation';\nimport { useEffect } from 'react';\n\ninterface AppLayoutProps {\n  children: ReactNode;\n  requireAuth?: boolean;\n}\n\nexport default function AppLayout({ children, requireAuth = true }: AppLayoutProps) {\n  const { user, loading } = useAuth();\n  const router = useRouter();\n  const pathname = usePathname();\n\n  // Public routes that don't require authentication\n  const publicRoutes = ['/login', '/register', '/demo', '/'];\n  const isPublicRoute = publicRoutes.includes(pathname);\n\n  useEffect(() => {\n    if (!loading && requireAuth && !user && !isPublicRoute) {\n      router.push('/login');\n    }\n  }, [user, loading, requireAuth, isPublicRoute, router]);\n\n  // Show loading spinner while checking authentication\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  // For public routes or when auth is not required, show content without navigation\n  if (!requireAuth || isPublicRoute) {\n    return <>{children}</>;\n  }\n\n  // For authenticated routes, show navigation + content\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      <Navigation />\n      \n      {/* Main content area with proper spacing for navigation */}\n      <div className=\"lg:pl-64\">\n        {/* Content wrapper with padding */}\n        <main className=\"min-h-screen\">\n          {children}\n        </main>\n      </div>\n      \n      {/* Bottom spacing for mobile navigation */}\n      <div className=\"h-16 lg:hidden\"></div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AACA;AANA;;;;;;AAae,SAAS,UAAU,EAAE,QAAQ,EAAE,cAAc,IAAI,EAAkB;IAChF,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,IAAA,0IAAO;IACjC,MAAM,SAAS,IAAA,+IAAS;IACxB,MAAM,WAAW,IAAA,iJAAW;IAE5B,kDAAkD;IAClD,MAAM,eAAe;QAAC;QAAU;QAAa;QAAS;KAAI;IAC1D,MAAM,gBAAgB,aAAa,QAAQ,CAAC;IAE5C,IAAA,kNAAS,EAAC;QACR,IAAI,CAAC,WAAW,eAAe,CAAC,QAAQ,CAAC,eAAe;YACtD,OAAO,IAAI,CAAC;QACd;IACF,GAAG;QAAC;QAAM;QAAS;QAAa;QAAe;KAAO;IAEtD,qDAAqD;IACrD,IAAI,SAAS;QACX,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,kFAAkF;IAClF,IAAI,CAAC,eAAe,eAAe;QACjC,qBAAO;sBAAG;;IACZ;IAEA,sDAAsD;IACtD,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,2IAAU;;;;;0BAGX,8OAAC;gBAAI,WAAU;0BAEb,cAAA,8OAAC;oBAAK,WAAU;8BACb;;;;;;;;;;;0BAKL,8OAAC;gBAAI,WAAU;;;;;;;;;;;;AAGrB","debugId":null}},
    {"offset": {"line": 2857, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/app/trading/profit-targets/page.tsx"],"sourcesContent":["'use client';\n\nimport ProfitTargetSettings from '../../../../components/trading/ProfitTargetSettings';\nimport AppLayout from '@/components/layouts/AppLayout';\nimport { Target, ArrowLeft } from 'lucide-react';\nimport Link from 'next/link';\n\nexport default function ProfitTargetsPage() {\n  return (\n    <AppLayout>\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 p-6\">\n      {/* Header */}\n      <div className=\"bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center space-x-4\">\n              <Link\n                href=\"/trading\"\n                className=\"flex items-center space-x-2 text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white transition-colors\"\n              >\n                <ArrowLeft className=\"h-5 w-5\" />\n                <span>Back to Trading</span>\n              </Link>\n              <div className=\"h-6 w-px bg-gray-300 dark:bg-gray-600\" />\n              <div className=\"flex items-center space-x-2\">\n                <Target className=\"h-6 w-6 text-green-600\" />\n                <h1 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                  Daily Profit Targets\n                </h1>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center space-x-3\">\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                <span>Risk Management</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <ProfitTargetSettings />\n      </div>\n      </div>\n    </AppLayout>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAAA;AACA;AALA;;;;;;AAOe,SAAS;IACtB,qBACE,8OAAC,qJAAS;kBACR,cAAA,8OAAC;YAAI,WAAU;;8BAEf,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,uKAAI;4CACH,MAAK;4CACL,WAAU;;8DAEV,8OAAC,6NAAS;oDAAC,WAAU;;;;;;8DACrB,8OAAC;8DAAK;;;;;;;;;;;;sDAER,8OAAC;4CAAI,WAAU;;;;;;sDACf,8OAAC;4CAAI,WAAU;;8DACb,8OAAC,gNAAM;oDAAC,WAAU;;;;;;8DAClB,8OAAC;oDAAG,WAAU;8DAAsD;;;;;;;;;;;;;;;;;;8CAMxE,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC;sDAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAQhB,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,yJAAoB;;;;;;;;;;;;;;;;;;;;;AAK7B","debugId":null}}]
}