{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/app/settings/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { useTheme } from '@/contexts/ThemeContext';\nimport { useTradingMode } from '@/contexts/TradingModeContext';\nimport AppLayout from '@/components/layouts/AppLayout';\nimport {\n  Settings,\n  User,\n  Shield,\n  Bell,\n  CreditCard,\n  Key,\n  Globe,\n  Moon,\n  Sun,\n  Monitor,\n  Smartphone,\n  Mail,\n  Lock,\n  Eye,\n  EyeOff,\n  Save,\n  AlertTriangle,\n  CheckCircle,\n  Trash2,\n  Download,\n  Upload,\n  RefreshCw,\n  LogOut,\n  HelpCircle\n} from 'lucide-react';\nimport { toast } from 'react-hot-toast';\n\ninterface NotificationSettings {\n  email: {\n    trades: boolean;\n    portfolio: boolean;\n    news: boolean;\n    social: boolean;\n    security: boolean;\n  };\n  push: {\n    trades: boolean;\n    portfolio: boolean;\n    news: boolean;\n    social: boolean;\n    security: boolean;\n  };\n  sms: {\n    trades: boolean;\n    security: boolean;\n  };\n}\n\ninterface SecuritySettings {\n  twoFactorEnabled: boolean;\n  loginAlerts: boolean;\n  sessionTimeout: number;\n  trustedDevices: string[];\n}\n\ninterface TradingSettings {\n  defaultOrderType: 'market' | 'limit' | 'stop';\n  confirmationRequired: boolean;\n  riskWarnings: boolean;\n  autoLogout: number;\n  paperTradingMode: boolean;\n}\n\nexport default function SettingsPage() {\n  const { user, logout } = useAuth();\n  const { theme, setTheme } = useTheme();\n  const { isPaperTrading, toggleTradingMode } = useTradingMode();\n  const [activeTab, setActiveTab] = useState('general');\n  const [loading, setLoading] = useState(false);\n  const [notifications, setNotifications] = useState<NotificationSettings>({\n    email: {\n      trades: true,\n      portfolio: true,\n      news: false,\n      social: true,\n      security: true\n    },\n    push: {\n      trades: true,\n      portfolio: true,\n      news: false,\n      social: false,\n      security: true\n    },\n    sms: {\n      trades: false,\n      security: true\n    }\n  });\n  const [security, setSecurity] = useState<SecuritySettings>({\n    twoFactorEnabled: false,\n    loginAlerts: true,\n    sessionTimeout: 30,\n    trustedDevices: []\n  });\n  const [trading, setTrading] = useState<TradingSettings>({\n    defaultOrderType: 'market',\n    confirmationRequired: true,\n    riskWarnings: true,\n    autoLogout: 15,\n    paperTradingMode: isPaperTrading\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [passwordForm, setPasswordForm] = useState({\n    currentPassword: '',\n    newPassword: '',\n    confirmPassword: ''\n  });\n\n  // Sync local trading state with global trading mode context\n  useEffect(() => {\n    setTrading(prev => ({ ...prev, paperTradingMode: isPaperTrading }));\n  }, [isPaperTrading]);\n\n  const tabs = [\n    { id: 'general', label: 'General', icon: Settings },\n    { id: 'notifications', label: 'Notifications', icon: Bell },\n    { id: 'security', label: 'Security', icon: Shield },\n    { id: 'trading', label: 'Trading', icon: CreditCard },\n    { id: 'privacy', label: 'Privacy', icon: Eye },\n    { id: 'data', label: 'Data & Export', icon: Download }\n  ];\n\n  const handleSaveSettings = async () => {\n    try {\n      setLoading(true);\n      // In a real app, this would be API calls\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      toast.success('Settings saved successfully');\n    } catch (error) {\n      toast.error('Failed to save settings');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePasswordChange = async () => {\n    if (passwordForm.newPassword !== passwordForm.confirmPassword) {\n      toast.error('Passwords do not match');\n      return;\n    }\n    if (passwordForm.newPassword.length < 8) {\n      toast.error('Password must be at least 8 characters');\n      return;\n    }\n    try {\n      setLoading(true);\n      // In a real app, this would be an API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      toast.success('Password changed successfully');\n      setPasswordForm({ currentPassword: '', newPassword: '', confirmPassword: '' });\n    } catch (error) {\n      toast.error('Failed to change password');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleExportData = async () => {\n    try {\n      setLoading(true);\n      // In a real app, this would generate and download user data\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      toast.success('Data export initiated. You will receive an email when ready.');\n    } catch (error) {\n      toast.error('Failed to export data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDeleteAccount = async () => {\n    if (window.confirm('Are you sure you want to delete your account? This action cannot be undone.')) {\n      try {\n        setLoading(true);\n        // In a real app, this would be an API call\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        toast.success('Account deletion initiated');\n        logout();\n      } catch (error) {\n        toast.error('Failed to delete account');\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      {/* Header */}\n      <div className=\"bg-white dark:bg-gray-800 shadow-sm border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"py-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">Settings</h1>\n                <p className=\"text-gray-600 dark:text-gray-400\">Manage your account preferences and security settings</p>\n              </div>\n              <button\n                onClick={handleSaveSettings}\n                disabled={loading}\n                className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-lg text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                <Save className=\"h-4 w-4 mr-2\" />\n                {loading ? 'Saving...' : 'Save Changes'}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"flex flex-col lg:flex-row gap-8\">\n          {/* Sidebar */}\n          <div className=\"lg:w-64\">\n            <nav className=\"space-y-1\">\n              {tabs.map((tab) => {\n                const Icon = tab.icon;\n                return (\n                  <button\n                    key={tab.id}\n                    onClick={() => setActiveTab(tab.id)}\n                    className={`w-full flex items-center px-3 py-2 text-sm font-medium rounded-lg transition-colors ${\n                      activeTab === tab.id\n                        ? 'bg-blue-100 dark:bg-blue-900/20 text-blue-700 dark:text-blue-300'\n                        : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n                    }`}\n                  >\n                    <Icon className=\"h-5 w-5 mr-3\" />\n                    {tab.label}\n                  </button>\n                );\n              })}\n            </nav>\n          </div>\n\n          {/* Content */}\n          <div className=\"flex-1\">\n            {activeTab === 'general' && (\n              <div className=\"space-y-6\">\n                <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-6\">Appearance</h3>\n                  <div className=\"space-y-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\n                        Theme\n                      </label>\n                      <div className=\"flex space-x-3\">\n                        {[\n                          { value: 'light', label: 'Light', icon: Sun },\n                          { value: 'dark', label: 'Dark', icon: Moon },\n                          { value: 'system', label: 'System', icon: Monitor }\n                        ].map((option) => {\n                          const Icon = option.icon;\n                          return (\n                            <button\n                              key={option.value}\n                              onClick={() => setTheme(option.value as any)}\n                              className={`flex items-center px-4 py-2 rounded-lg border transition-colors ${\n                                theme === option.value\n                                  ? 'border-blue-500 bg-blue-50 dark:bg-blue-900/20 text-blue-700 dark:text-blue-300'\n                                  : 'border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-700'\n                              }`}\n                            >\n                              <Icon className=\"h-4 w-4 mr-2\" />\n                              {option.label}\n                            </button>\n                          );\n                        })}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-6\">Language & Region</h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                        Language\n                      </label>\n                      <select className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500\">\n                        <option>English (US)</option>\n                        <option>English (UK)</option>\n                        <option>Spanish</option>\n                        <option>French</option>\n                        <option>German</option>\n                      </select>\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                        Timezone\n                      </label>\n                      <select className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500\">\n                        <option>UTC-8 (Pacific Time)</option>\n                        <option>UTC-5 (Eastern Time)</option>\n                        <option>UTC+0 (GMT)</option>\n                        <option>UTC+1 (Central European Time)</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {activeTab === 'notifications' && (\n              <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-6\">Notification Preferences</h3>\n                <div className=\"space-y-6\">\n                  {Object.entries(notifications).map(([type, settings]) => (\n                    <div key={type}>\n                      <h4 className=\"text-md font-medium text-gray-900 dark:text-white mb-4 capitalize flex items-center\">\n                        {type === 'email' && <Mail className=\"h-4 w-4 mr-2\" />}\n                        {type === 'push' && <Smartphone className=\"h-4 w-4 mr-2\" />}\n                        {type === 'sms' && <Bell className=\"h-4 w-4 mr-2\" />}\n                        {type} Notifications\n                      </h4>\n                      <div className=\"space-y-3 ml-6\">\n                        {Object.entries(settings).map(([setting, enabled]) => (\n                          <div key={setting} className=\"flex items-center justify-between\">\n                            <span className=\"text-sm text-gray-700 dark:text-gray-300 capitalize\">\n                              {setting.replace(/([A-Z])/g, ' $1').toLowerCase()}\n                            </span>\n                            <label className=\"relative inline-flex items-center cursor-pointer\">\n                              <input\n                                type=\"checkbox\"\n                                checked={enabled as boolean}\n                                onChange={(e) => {\n                                  setNotifications(prev => ({\n                                    ...prev,\n                                    [type]: {\n                                      ...prev[type as keyof NotificationSettings],\n                                      [setting]: e.target.checked\n                                    }\n                                  }));\n                                }}\n                                className=\"sr-only peer\"\n                              />\n                              <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\n                            </label>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {activeTab === 'security' && (\n              <div className=\"space-y-6\">\n                <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-6\">Password & Authentication</h3>\n                  <div className=\"space-y-4\">\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                          Current Password\n                        </label>\n                        <div className=\"relative\">\n                          <input\n                            type={showPassword ? 'text' : 'password'}\n                            value={passwordForm.currentPassword}\n                            onChange={(e) => setPasswordForm({ ...passwordForm, currentPassword: e.target.value })}\n                            className=\"w-full px-3 py-2 pr-10 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                          />\n                          <button\n                            type=\"button\"\n                            onClick={() => setShowPassword(!showPassword)}\n                            className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                          >\n                            {showPassword ? <EyeOff className=\"h-4 w-4 text-gray-400\" /> : <Eye className=\"h-4 w-4 text-gray-400\" />}\n                          </button>\n                        </div>\n                      </div>\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                          New Password\n                        </label>\n                        <input\n                          type=\"password\"\n                          value={passwordForm.newPassword}\n                          onChange={(e) => setPasswordForm({ ...passwordForm, newPassword: e.target.value })}\n                          className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        />\n                      </div>\n                      <div className=\"md:col-span-2\">\n                        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                          Confirm New Password\n                        </label>\n                        <input\n                          type=\"password\"\n                          value={passwordForm.confirmPassword}\n                          onChange={(e) => setPasswordForm({ ...passwordForm, confirmPassword: e.target.value })}\n                          className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        />\n                      </div>\n                    </div>\n                    <button\n                      onClick={handlePasswordChange}\n                      disabled={loading}\n                      className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-lg text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors disabled:opacity-50\"\n                    >\n                      <Lock className=\"h-4 w-4 mr-2\" />\n                      Change Password\n                    </button>\n                  </div>\n                </div>\n\n                <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-6\">Security Settings</h3>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">Two-Factor Authentication</h4>\n                        <p className=\"text-sm text-gray-500 dark:text-gray-400\">Add an extra layer of security to your account</p>\n                      </div>\n                      <label className=\"relative inline-flex items-center cursor-pointer\">\n                        <input\n                          type=\"checkbox\"\n                          checked={security.twoFactorEnabled}\n                          onChange={(e) => setSecurity({ ...security, twoFactorEnabled: e.target.checked })}\n                          className=\"sr-only peer\"\n                        />\n                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\n                      </label>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">Login Alerts</h4>\n                        <p className=\"text-sm text-gray-500 dark:text-gray-400\">Get notified of new login attempts</p>\n                      </div>\n                      <label className=\"relative inline-flex items-center cursor-pointer\">\n                        <input\n                          type=\"checkbox\"\n                          checked={security.loginAlerts}\n                          onChange={(e) => setSecurity({ ...security, loginAlerts: e.target.checked })}\n                          className=\"sr-only peer\"\n                        />\n                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\n                      </label>\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                        Session Timeout (minutes)\n                      </label>\n                      <select\n                        value={security.sessionTimeout}\n                        onChange={(e) => setSecurity({ ...security, sessionTimeout: parseInt(e.target.value) })}\n                        className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      >\n                        <option value={15}>15 minutes</option>\n                        <option value={30}>30 minutes</option>\n                        <option value={60}>1 hour</option>\n                        <option value={120}>2 hours</option>\n                        <option value={0}>Never</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {activeTab === 'trading' && (\n              <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-6\">Trading Preferences</h3>\n                <div className=\"space-y-6\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                        Default Order Type\n                      </label>\n                      <select\n                        value={trading.defaultOrderType}\n                        onChange={(e) => setTrading({ ...trading, defaultOrderType: e.target.value as any })}\n                        className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      >\n                        <option value=\"market\">Market Order</option>\n                        <option value=\"limit\">Limit Order</option>\n                        <option value=\"stop\">Stop Order</option>\n                      </select>\n                    </div>\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                        Auto Logout (minutes)\n                      </label>\n                      <select\n                        value={trading.autoLogout}\n                        onChange={(e) => setTrading({ ...trading, autoLogout: parseInt(e.target.value) })}\n                        className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      >\n                        <option value={5}>5 minutes</option>\n                        <option value={15}>15 minutes</option>\n                        <option value={30}>30 minutes</option>\n                        <option value={60}>1 hour</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">Order Confirmation</h4>\n                        <p className=\"text-sm text-gray-500 dark:text-gray-400\">Require confirmation before executing trades</p>\n                      </div>\n                      <label className=\"relative inline-flex items-center cursor-pointer\">\n                        <input\n                          type=\"checkbox\"\n                          checked={trading.confirmationRequired}\n                          onChange={(e) => setTrading({ ...trading, confirmationRequired: e.target.checked })}\n                          className=\"sr-only peer\"\n                        />\n                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\n                      </label>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">Risk Warnings</h4>\n                        <p className=\"text-sm text-gray-500 dark:text-gray-400\">Show risk warnings for high-risk trades</p>\n                      </div>\n                      <label className=\"relative inline-flex items-center cursor-pointer\">\n                        <input\n                          type=\"checkbox\"\n                          checked={trading.riskWarnings}\n                          onChange={(e) => setTrading({ ...trading, riskWarnings: e.target.checked })}\n                          className=\"sr-only peer\"\n                        />\n                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\n                      </label>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">Paper Trading Mode</h4>\n                        <p className=\"text-sm text-gray-500 dark:text-gray-400\">Practice trading with virtual money</p>\n                      </div>\n                      <label className=\"relative inline-flex items-center cursor-pointer\">\n                        <input\n                          type=\"checkbox\"\n                          checked={isPaperTrading}\n                          onChange={(e) => {\n                            toggleTradingMode();\n                            setTrading({ ...trading, paperTradingMode: !isPaperTrading });\n                          }}\n                          className=\"sr-only peer\"\n                        />\n                        <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\n                      </label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {activeTab === 'privacy' && (\n              <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-6\">Privacy Settings</h3>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">Profile Visibility</h4>\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">Make your profile visible to other users</p>\n                    </div>\n                    <label className=\"relative inline-flex items-center cursor-pointer\">\n                      <input type=\"checkbox\" defaultChecked className=\"sr-only peer\" />\n                      <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\n                    </label>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">Trading Activity</h4>\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">Show your trading activity to followers</p>\n                    </div>\n                    <label className=\"relative inline-flex items-center cursor-pointer\">\n                      <input type=\"checkbox\" className=\"sr-only peer\" />\n                      <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\n                    </label>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">Portfolio Performance</h4>\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">Share your portfolio performance publicly</p>\n                    </div>\n                    <label className=\"relative inline-flex items-center cursor-pointer\">\n                      <input type=\"checkbox\" className=\"sr-only peer\" />\n                      <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\n                    </label>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {activeTab === 'data' && (\n              <div className=\"space-y-6\">\n                <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-6\">Data Export</h3>\n                  <div className=\"space-y-4\">\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      Download a copy of your data including profile information, trading history, and account settings.\n                    </p>\n                    <button\n                      onClick={handleExportData}\n                      disabled={loading}\n                      className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-lg text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors disabled:opacity-50\"\n                    >\n                      <Download className=\"h-4 w-4 mr-2\" />\n                      {loading ? 'Preparing Export...' : 'Export My Data'}\n                    </button>\n                  </div>\n                </div>\n\n                <div className=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-xl p-6\">\n                  <h3 className=\"text-lg font-semibold text-red-900 dark:text-red-300 mb-4 flex items-center\">\n                    <AlertTriangle className=\"h-5 w-5 mr-2\" />\n                    Danger Zone\n                  </h3>\n                  <div className=\"space-y-4\">\n                    <div>\n                      <h4 className=\"text-sm font-medium text-red-900 dark:text-red-300 mb-2\">Delete Account</h4>\n                      <p className=\"text-sm text-red-700 dark:text-red-400 mb-4\">\n                        Permanently delete your account and all associated data. This action cannot be undone.\n                      </p>\n                      <button\n                        onClick={handleDeleteAccount}\n                        disabled={loading}\n                        className=\"inline-flex items-center px-4 py-2 border border-red-300 dark:border-red-600 text-sm font-medium rounded-lg text-red-700 dark:text-red-300 bg-white dark:bg-red-900/20 hover:bg-red-50 dark:hover:bg-red-900/40 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors disabled:opacity-50\"\n                      >\n                        <Trash2 className=\"h-4 w-4 mr-2\" />\n                        Delete Account\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}