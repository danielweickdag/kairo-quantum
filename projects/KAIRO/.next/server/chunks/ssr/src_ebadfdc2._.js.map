{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function formatCurrency(amount: number): string {\n  if (typeof amount !== 'number' || isNaN(amount)) return '$0.00'\n  try {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(amount)\n  } catch (error) {\n    return '$0.00'\n  }\n}\n\nexport function formatPercent(value: number): string {\n  if (typeof value !== 'number' || isNaN(value)) return '0.00%'\n  try {\n    return `${value >= 0 ? '+' : ''}${value.toFixed(2)}%`\n  } catch (error) {\n    return '0.00%'\n  }\n}\n\nexport function formatNumber(value: number): string {\n  if (typeof value !== 'number' || isNaN(value)) return '0'\n  try {\n    return new Intl.NumberFormat('en-US').format(value)\n  } catch (error) {\n    return '0'\n  }\n}"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB;AAEO,SAAS,eAAe,MAAc;IAC3C,IAAI,OAAO,WAAW,YAAY,MAAM,SAAS,OAAO;IACxD,IAAI;QACF,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;YACpC,OAAO;YACP,UAAU;QACZ,GAAG,MAAM,CAAC;IACZ,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,SAAS,cAAc,KAAa;IACzC,IAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,OAAO;IACtD,IAAI;QACF,OAAO,GAAG,SAAS,IAAI,MAAM,KAAK,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC;IACvD,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,SAAS,aAAa,KAAa;IACxC,IAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,OAAO;IACtD,IAAI;QACF,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS,MAAM,CAAC;IAC/C,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }"],"names":[],"mappings":";;;;;;;AACA;AACA;;;;AAEA,MAAM,gBAAgB,IAAA,uKAAG,EACvB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,IAAA,yHAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/DemoModeIndicator.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\nimport { Badge } from '@/components/ui/badge'\nimport { AlertTriangle, Play } from 'lucide-react'\nimport { useTradingMode } from '@/contexts/TradingModeContext'\nimport { cn } from '@/lib/utils'\n\ninterface DemoModeIndicatorProps {\n  className?: string\n  variant?: 'badge' | 'banner'\n}\n\nexport function DemoModeIndicator({ className, variant = 'badge' }: DemoModeIndicatorProps) {\n  const { isPaperTrading, tradingMode } = useTradingMode()\n\n  if (!isPaperTrading) {\n    return null\n  }\n\n  if (variant === 'banner') {\n    return (\n      <div className={cn(\n        'bg-orange-100 dark:bg-orange-900/20 border border-orange-200 dark:border-orange-800 rounded-lg p-3 mb-4',\n        className\n      )}>\n        <div className=\"flex items-center gap-2\">\n          <Play className=\"h-4 w-4 text-orange-600 dark:text-orange-400\" />\n          <span className=\"text-sm font-medium text-orange-800 dark:text-orange-200\">\n            Demo Mode Active\n          </span>\n          <span className=\"text-xs text-orange-600 dark:text-orange-400\">\n            • All trades are simulated • No real money involved\n          </span>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <Badge \n      variant=\"outline\" \n      className={cn(\n        'bg-orange-50 dark:bg-orange-900/20 border-orange-200 dark:border-orange-800 text-orange-700 dark:text-orange-300 font-medium',\n        className\n      )}\n    >\n      <Play className=\"h-3 w-3 mr-1\" />\n      Demo Mode\n    </Badge>\n  )\n}\n\nexport default DemoModeIndicator"],"names":[],"mappings":";;;;;;;AAGA;AACA;AACA;AACA;AANA;;;;;;AAaO,SAAS,kBAAkB,EAAE,SAAS,EAAE,UAAU,OAAO,EAA0B;IACxF,MAAM,EAAE,cAAc,EAAE,WAAW,EAAE,GAAG,IAAA,wJAAc;IAEtD,IAAI,CAAC,gBAAgB;QACnB,OAAO;IACT;IAEA,IAAI,YAAY,UAAU;QACxB,qBACE,8OAAC;YAAI,WAAW,IAAA,yHAAE,EAChB,2GACA;sBAEA,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,0MAAI;wBAAC,WAAU;;;;;;kCAChB,8OAAC;wBAAK,WAAU;kCAA2D;;;;;;kCAG3E,8OAAC;wBAAK,WAAU;kCAA+C;;;;;;;;;;;;;;;;;IAMvE;IAEA,qBACE,8OAAC,0IAAK;QACJ,SAAQ;QACR,WAAW,IAAA,yHAAE,EACX,gIACA;;0BAGF,8OAAC,0MAAI;gBAAC,WAAU;;;;;;YAAiB;;;;;;;AAIvC;uCAEe","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/Navigation.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter, usePathname } from 'next/navigation';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { useTheme } from '@/contexts/ThemeContext';\nimport { useTradingMode } from '@/contexts/TradingModeContext';\nimport DemoModeIndicator from '@/components/ui/DemoModeIndicator';\nimport { toast } from 'react-hot-toast';\nimport {\n  Menu,\n  X,\n  Home,\n  TrendingUp,\n  BarChart3,\n  Users,\n  Copy,\n  Bell,\n  Settings,\n  LogOut,\n  Sun,\n  Moon,\n  User,\n  ChevronDown,\n  Search,\n  Wallet,\n  Activity,\n  Shield,\n  HelpCircle,\n  Zap,\n  Radio,\n  CreditCard,\n  Crown,\n  Award,\n  Bot,\n  Link\n} from 'lucide-react';\n\ninterface NavigationItem {\n  name: string;\n  href: string;\n  icon: any;\n  badge?: number;\n  description?: string;\n}\n\nconst navigationItems: NavigationItem[] = [\n  {\n    name: 'Dashboard',\n    href: '/dashboard',\n    icon: Home,\n    description: 'Overview and portfolio summary'\n  },\n  {\n    name: 'User Dashboard',\n    href: '/user-dashboard',\n    icon: User,\n    description: 'Personal account and subscription management'\n  },\n  {\n    name: 'Trading',\n    href: '/trading',\n    icon: TrendingUp,\n    description: 'Execute trades and view market data'\n  },\n  {\n    name: 'Live Trading',\n    href: '/trading/live',\n    icon: Radio,\n    description: 'Real-time trading dashboard'\n  },\n  {\n    name: 'Futures Trading',\n    href: '/trading/futures',\n    icon: TrendingUp,\n    description: 'Futures contracts trading'\n  },\n  {\n    name: 'Options Trading',\n    href: '/trading/options',\n    icon: BarChart3,\n    description: 'Options contracts trading'\n  },\n  {\n    name: 'Market Updates',\n    href: '/trading/market-updates',\n    icon: Bell,\n    description: 'Real-time market news and updates'\n  },\n  {\n    name: 'Pine Editor',\n    href: '/trading/pine-editor',\n    icon: Settings,\n    description: 'Pine Script editor for custom indicators'\n  },\n  {\n    name: 'Profit Targets',\n    href: '/trading/profit-targets',\n    icon: Award,\n    description: 'Set and manage profit targets'\n  },\n  {\n    name: 'Portfolio',\n    href: '/portfolio',\n    icon: BarChart3,\n    description: 'Manage your investments'\n  },\n  {\n    name: 'Copy Trade',\n    href: '/copy-trade',\n    icon: Copy,\n    description: 'Follow and copy successful traders'\n  },\n  {\n    name: 'Creators',\n    href: '/creators',\n    icon: Award,\n    description: 'Discover top trading creators and investors'\n  },\n  {\n    name: 'Social',\n    href: '/social',\n    icon: Users,\n    badge: 3,\n    description: 'Connect with the trading community'\n  },\n  {\n    name: 'Pricing',\n    href: '/pricing',\n    icon: Crown,\n    description: 'View subscription plans and pricing'\n  },\n  {\n    name: 'Payment',\n    href: '/payment',\n    icon: CreditCard,\n    description: 'Manage payment methods and billing'\n  },\n  {\n    name: 'Security',\n    href: '/security',\n    icon: Shield,\n    description: 'Security settings and compliance'\n  },\n  {\n    name: 'Automation',\n    href: '/automation',\n    icon: Bot,\n    description: 'Automated trading and system management'\n  },\n  {\n    name: 'Trading Bot',\n    href: '/automation/trading-bot',\n    icon: Bot,\n    description: 'Configure and manage trading bots'\n  },\n  {\n    name: 'Copy Trading Auto',\n    href: '/automation/copy-trading',\n    icon: Copy,\n    description: 'Automated copy trading settings'\n  },\n  {\n    name: 'Risk Management',\n    href: '/automation/risk-management',\n    icon: Shield,\n    description: 'Automated risk management rules'\n  },\n  {\n    name: 'Data Pipeline',\n    href: '/automation/data-pipeline',\n    icon: Activity,\n    description: 'Automated data processing and analysis'\n  },\n  {\n    name: 'Auto Notifications',\n    href: '/automation/notifications',\n    icon: Bell,\n    description: 'Automated notification settings'\n  },\n  {\n    name: 'Auto Payments',\n    href: '/automation/payments',\n    icon: CreditCard,\n    description: 'Automated payment processing'\n  },\n  {\n    name: 'Auto Reporting',\n    href: '/automation/reporting',\n    icon: BarChart3,\n    description: 'Automated report generation'\n  },\n  {\n    name: 'Auto Onboarding',\n    href: '/automation/onboarding',\n    icon: User,\n    description: 'Automated user onboarding process'\n  },\n  {\n    name: 'Brokers',\n    href: '/brokers',\n    icon: Link,\n    description: 'Connect and manage broker accounts'\n  },\n  {\n    name: 'Demo',\n    href: '/demo',\n    icon: Activity,\n    description: 'Practice trading with demo account'\n  },\n  {\n    name: 'Settings',\n    href: '/settings',\n    icon: Settings,\n    description: 'Application settings and preferences'\n  },\n  {\n    name: 'Profile',\n    href: '/profile',\n    icon: User,\n    description: 'Manage your profile and account details'\n  },\n  {\n    name: 'Help',\n    href: '/help',\n    icon: HelpCircle,\n    description: 'Get help and support'\n  }\n];\n\nexport default function Navigation() {\n  const { user, logout } = useAuth();\n  const { theme, setTheme } = useTheme();\n  const { isPaperTrading } = useTradingMode();\n  const router = useRouter();\n  const pathname = usePathname();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [isProfileMenuOpen, setIsProfileMenuOpen] = useState(false);\n  const [mounted, setMounted] = useState(false);\n  const [focusedItemIndex, setFocusedItemIndex] = useState(-1);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  const handleLogout = async () => {\n    try {\n      await logout();\n      router.push('/login');\n      toast.success('Logged out successfully');\n    } catch (error) {\n      toast.error('Failed to logout. Please try again.');\n    }\n  };\n\n  const toggleTheme = () => {\n    setTheme(theme === 'dark' ? 'light' : 'dark');\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent, action: () => void) => {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      action();\n    }\n  };\n\n  const handleNavigationKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === 'ArrowDown') {\n      event.preventDefault();\n      setFocusedItemIndex(prev => (prev + 1) % navigationItems.length);\n    } else if (event.key === 'ArrowUp') {\n      event.preventDefault();\n      setFocusedItemIndex(prev => prev <= 0 ? navigationItems.length - 1 : prev - 1);\n    } else if (event.key === 'Enter' && focusedItemIndex >= 0) {\n      event.preventDefault();\n      router.push(navigationItems[focusedItemIndex].href);\n    } else if (event.key === 'Escape') {\n      setIsProfileMenuOpen(false);\n      setIsMobileMenuOpen(false);\n    }\n  };\n\n  const isActive = (href: string) => {\n    return pathname === href;\n  };\n\n  if (!mounted) {\n    return null;\n  }\n\n  return (\n    <>\n      {/* Desktop Navigation */}\n      <nav className=\"hidden lg:flex lg:flex-col lg:w-64 lg:fixed lg:inset-y-0 lg:border-r lg:border-gray-200 lg:dark:border-gray-700 lg:bg-white lg:dark:bg-gray-800 lg:shadow-sm\">\n        {/* Logo */}\n        <div className=\"flex items-center justify-center h-16 px-6 border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex flex-col items-center space-y-1\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"h-8 w-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center\">\n                <Zap className=\"h-5 w-5 text-white\" />\n              </div>\n              <span className=\"text-xl font-bold text-gray-900 dark:text-white\">KAIRO</span>\n            </div>\n            {isPaperTrading && <DemoModeIndicator className=\"text-xs\" />}\n          </div>\n        </div>\n\n        {/* Simplified Navigation - Only Logo Area */}\n        <div className=\"flex-1 flex items-center justify-center px-4 py-6\">\n          <div className=\"text-center text-gray-500 dark:text-gray-400\">\n            <p className=\"text-sm\">Navigation Menu</p>\n            <p className=\"text-xs mt-1\">Available in Profile</p>\n          </div>\n        </div>\n\n        {/* User Profile Section */}\n        <div className=\"border-t border-gray-200 dark:border-gray-700 p-4\">\n          <div className=\"relative\">\n            <button\n              onClick={() => setIsProfileMenuOpen(!isProfileMenuOpen)}\n              className=\"w-full flex items-center space-x-3 p-3 rounded-xl hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\"\n              aria-expanded={isProfileMenuOpen}\n              aria-haspopup=\"menu\"\n              aria-label=\"User profile menu\"\n            >\n              <div className=\"h-10 w-10 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full flex items-center justify-center\">\n                <span className=\"text-white font-semibold text-sm\">\n                  {user ? `${user.firstName?.[0] || ''}${user.lastName?.[0] || ''}` || 'U' : 'U'}\n                </span>\n              </div>\n              <div className=\"flex-1 text-left\">\n                <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                  {user ? `${user.firstName || ''} ${user.lastName || ''}`.trim() || 'User' : 'User'}\n                </p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  {user?.email || 'user@example.com'}\n                </p>\n              </div>\n              <ChevronDown className={`h-4 w-4 text-gray-400 transition-transform ${\n                isProfileMenuOpen ? 'rotate-180' : ''\n              }`} />\n            </button>\n\n            {/* Profile Dropdown with Navigation Menu */}\n            {isProfileMenuOpen && (\n              <div \n                className=\"absolute bottom-full left-0 right-0 mb-2 bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 py-2 max-h-96 overflow-y-auto\"\n                role=\"menu\"\n                aria-label=\"User profile and navigation menu\"\n              >\n                {/* Navigation Items */}\n                <div className=\"px-2 py-2\">\n                  <p className=\"px-2 py-1 text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Navigation</p>\n                  <div onKeyDown={handleNavigationKeyDown}>\n                    {navigationItems.map((item, index) => {\n                      const active = isActive(item.href);\n                      const isFocused = focusedItemIndex === index;\n                      return (\n                        <button\n                          key={item.href}\n                          onClick={() => {\n                            router.push(item.href);\n                            setIsProfileMenuOpen(false);\n                          }}\n                          onKeyDown={(e) => handleKeyDown(e, () => {\n                            router.push(item.href);\n                            setIsProfileMenuOpen(false);\n                          })}\n                          className={`w-full flex items-center space-x-3 px-3 py-2 mb-1 rounded-lg transition-all duration-200 group text-sm ${\n                            active\n                              ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-sm'\n                              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 hover:text-gray-900 dark:hover:text-white'\n                          } ${\n                            isFocused ? 'ring-2 ring-blue-500 ring-offset-2 dark:ring-offset-gray-800' : ''\n                          }`}\n                          aria-current={active ? 'page' : undefined}\n                          title={item.description}\n                        >\n                          <item.icon className={`h-4 w-4 transition-colors ${\n                            active ? 'text-white' : 'text-gray-500 dark:text-gray-400 group-hover:text-gray-700 dark:group-hover:text-gray-300'\n                          }`} aria-hidden=\"true\" />\n                          <span className=\"flex-1 text-left\">{item.name}</span>\n                          {item.badge && (\n                            <span className={`ml-2 inline-flex items-center justify-center px-1.5 py-0.5 text-xs font-bold rounded-full ${\n                              active \n                                ? 'bg-white/20 text-white' \n                                : 'bg-blue-100 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400'\n                            }`} aria-label={`${item.badge} notifications`}>\n                              {item.badge}\n                            </span>\n                          )}\n                        </button>\n                      );\n                    })}\n                  </div>\n                </div>\n                \n                {/* Profile Actions */}\n                <div className=\"border-t border-gray-200 dark:border-gray-700 mt-2 pt-2\">\n                  <p className=\"px-4 py-1 text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Account</p>\n                  <button\n                    onClick={() => {\n                      router.push('/profile');\n                      setIsProfileMenuOpen(false);\n                    }}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                    role=\"menuitem\"\n                    aria-label=\"Go to profile page\"\n                  >\n                    <User className=\"h-4 w-4\" aria-hidden=\"true\" />\n                    <span>Profile</span>\n                  </button>\n                  <button\n                    onClick={() => {\n                      router.push('/settings');\n                      setIsProfileMenuOpen(false);\n                    }}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                  >\n                    <Settings className=\"h-4 w-4\" />\n                    <span>Settings</span>\n                  </button>\n                  <button\n                    onClick={toggleTheme}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                  >\n                    {theme === 'dark' ? <Sun className=\"h-4 w-4\" /> : <Moon className=\"h-4 w-4\" />}\n                    <span>{theme === 'dark' ? 'Light Mode' : 'Dark Mode'}</span>\n                  </button>\n                  <div className=\"border-t border-gray-200 dark:border-gray-700 my-2\"></div>\n                  <button\n                    onClick={handleLogout}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20\"\n                  >\n                    <LogOut className=\"h-4 w-4\" />\n                    <span>Sign Out</span>\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </nav>\n\n      {/* Mobile Navigation */}\n      <div className=\"lg:hidden\">\n        {/* Mobile Header */}\n        <div className=\"flex items-center justify-between h-16 px-4 bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 shadow-sm\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"h-8 w-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center\" role=\"img\" aria-label=\"KAIRO logo\">\n                <Zap className=\"h-5 w-5 text-white\" aria-hidden=\"true\" />\n              </div>\n              <span className=\"text-xl font-bold text-gray-900 dark:text-white\">KAIRO</span>\n            </div>\n            {isPaperTrading && <DemoModeIndicator className=\"text-xs\" />}\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={toggleTheme}\n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n              aria-label={`Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`}\n              title={`Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`}\n            >\n              {theme === 'dark' ? <Sun className=\"h-5 w-5\" aria-hidden=\"true\" /> : <Moon className=\"h-5 w-5\" aria-hidden=\"true\" />}\n            </button>\n            <button \n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors relative\"\n              aria-label=\"Notifications\"\n              title=\"View notifications\"\n            >\n              <Bell className=\"h-5 w-5\" />\n              <span className=\"absolute -top-1 -right-1 h-3 w-3 bg-red-500 rounded-full\"></span>\n            </button>\n          </div>\n        </div>\n\n        {/* Mobile Menu Overlay */}\n        {isMobileMenuOpen && (\n          <div className=\"fixed inset-0 z-50 lg:hidden\">\n            <div className=\"fixed inset-0 bg-black bg-opacity-25\" onClick={() => setIsMobileMenuOpen(false)}></div>\n            <div className=\"fixed top-0 right-0 bottom-0 w-full max-w-sm bg-white dark:bg-gray-800 shadow-xl\">\n              {/* Mobile Menu Header */}\n              <div className=\"flex items-center justify-between h-16 px-4 border-b border-gray-200 dark:border-gray-700\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"h-10 w-10 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full flex items-center justify-center\">\n                    <span className=\"text-white font-semibold text-sm\">\n                      {user ? `${user.firstName?.[0] || ''}${user.lastName?.[0] || ''}` || 'U' : 'U'}\n                    </span>\n                  </div>\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      {user ? `${user.firstName || ''} ${user.lastName || ''}`.trim() || 'User' : 'User'}\n                    </p>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      {user?.email || 'user@example.com'}\n                    </p>\n                  </div>\n                </div>\n                <button\n                  onClick={() => setIsMobileMenuOpen(false)}\n                  className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n                >\n                  <X className=\"h-6 w-6\" />\n                </button>\n              </div>\n\n              {/* Mobile Navigation Items */}\n              <div className=\"px-4 py-6 space-y-2\" onKeyDown={handleNavigationKeyDown} role=\"navigation\" aria-label=\"Mobile navigation menu\">\n                {navigationItems.map((item, index) => {\n                  const Icon = item.icon;\n                  const active = isActive(item.href);\n                  const isFocused = focusedItemIndex === index;\n                  \n                  return (\n                    <button\n                      key={item.name}\n                      onClick={() => {\n                        router.push(item.href);\n                        setIsMobileMenuOpen(false);\n                      }}\n                      onKeyDown={(e) => handleKeyDown(e, () => {\n                        router.push(item.href);\n                        setIsMobileMenuOpen(false);\n                      })}\n                      className={`w-full group flex items-center px-4 py-3 text-sm font-medium rounded-xl transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 ${\n                        active\n                          ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-lg'\n                          : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n                      } ${\n                        isFocused ? 'ring-2 ring-blue-500 ring-offset-2 dark:ring-offset-gray-800' : ''\n                      }`}\n                      aria-current={active ? 'page' : undefined}\n                      aria-describedby={item.description ? `${item.href}-mobile-desc` : undefined}\n                      title={item.description}\n                    >\n                      <Icon className={`mr-3 h-5 w-5 ${\n                        active ? 'text-white' : 'text-gray-400'\n                      }`} aria-hidden=\"true\" />\n                      <div className=\"flex-1 text-left\">\n                        <div className=\"font-medium\">{item.name}</div>\n                        {item.description && (\n                          <div className={`text-xs mt-1 ${\n                            active ? 'text-white/80' : 'text-gray-500 dark:text-gray-400'\n                          }`} id={`${item.href}-mobile-desc`}>\n                            {item.description}\n                          </div>\n                        )}\n                      </div>\n                      {item.badge && (\n                        <span className={`ml-2 inline-flex items-center justify-center px-2 py-1 text-xs font-bold rounded-full ${\n                          active \n                            ? 'bg-white/20 text-white' \n                            : 'bg-blue-100 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400'\n                        }`} aria-label={`${item.badge} notifications`}>\n                          {item.badge}\n                        </span>\n                      )}\n                    </button>\n                  );\n                })}\n              </div>\n\n              {/* Mobile Menu Footer */}\n              <div className=\"border-t border-gray-200 dark:border-gray-700 px-4 py-4 space-y-2\">\n                <button\n                  onClick={() => {\n                    router.push('/profile');\n                    setIsMobileMenuOpen(false);\n                  }}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-xl transition-colors\"\n                >\n                  <User className=\"h-5 w-5 text-gray-400\" />\n                  <span>Profile</span>\n                </button>\n                <button\n                  onClick={() => {\n                    router.push('/settings');\n                    setIsMobileMenuOpen(false);\n                  }}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-xl transition-colors\"\n                >\n                  <Settings className=\"h-5 w-5 text-gray-400\" />\n                  <span>Settings</span>\n                </button>\n                <button\n                  onClick={() => {\n                    router.push('/help');\n                    setIsMobileMenuOpen(false);\n                  }}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-xl transition-colors\"\n                >\n                  <HelpCircle className=\"h-5 w-5 text-gray-400\" />\n                  <span>Help & Support</span>\n                </button>\n                <button\n                  onClick={handleLogout}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20 rounded-xl transition-colors\"\n                >\n                  <LogOut className=\"h-5 w-5\" />\n                  <span>Sign Out</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Mobile Bottom Navigation */}\n      <div className=\"lg:hidden fixed bottom-0 left-0 right-0 bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700 shadow-lg\">\n        <div className=\"grid grid-cols-5 h-16\">\n          {/* Show only the 5 most important navigation items in bottom bar */}\n          {navigationItems.slice(0, 5).map((item) => {\n            const Icon = item.icon;\n            const active = isActive(item.href);\n            \n            return (\n              <button\n                key={item.name}\n                onClick={() => router.push(item.href)}\n                className={`flex flex-col items-center justify-center space-y-1 transition-colors ${\n                  active\n                    ? 'text-blue-600 dark:text-blue-400'\n                    : 'text-gray-400 hover:text-gray-600 dark:hover:text-gray-300'\n                }`}\n              >\n                <div className=\"relative\">\n                  <Icon className=\"h-5 w-5\" />\n                  {item.badge && (\n                    <span className=\"absolute -top-2 -right-2 h-4 w-4 bg-red-500 text-white text-xs rounded-full flex items-center justify-center\">\n                      {item.badge}\n                    </span>\n                  )}\n                </div>\n                <span className=\"text-xs font-medium truncate\">{item.name}</span>\n              </button>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;;;;;;;;;;AA8CA,MAAM,kBAAoC;IACxC;QACE,MAAM;QACN,MAAM;QACN,MAAM,0MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,0MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gOAAU;QAChB,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gOAAU;QAChB,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,iOAAS;QACf,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,0MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,sNAAQ;QACd,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,iOAAS;QACf,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,0MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAK;QACX,OAAO;QACP,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gOAAU;QAChB,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gNAAM;QACZ,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,uMAAG;QACT,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,uMAAG;QACT,a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","debugId":null}},
    {"offset": {"line": 1336, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/layouts/AppLayout.tsx"],"sourcesContent":["'use client';\n\nimport { ReactNode } from 'react';\nimport Navigation from '@/components/Navigation';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { useRouter, usePathname } from 'next/navigation';\nimport { useEffect } from 'react';\n\ninterface AppLayoutProps {\n  children: ReactNode;\n  requireAuth?: boolean;\n}\n\nexport default function AppLayout({ children, requireAuth = true }: AppLayoutProps) {\n  const { user, loading } = useAuth();\n  const router = useRouter();\n  const pathname = usePathname();\n\n  // Public routes that don't require authentication\n  const publicRoutes = ['/login', '/register', '/demo', '/'];\n  const isPublicRoute = publicRoutes.includes(pathname);\n\n  useEffect(() => {\n    if (!loading && requireAuth && !user && !isPublicRoute) {\n      router.push('/login');\n    }\n  }, [user, loading, requireAuth, isPublicRoute, router]);\n\n  // Show loading spinner while checking authentication\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  // For public routes or when auth is not required, show content without navigation\n  if (!requireAuth || isPublicRoute) {\n    return <>{children}</>;\n  }\n\n  // For authenticated routes, show navigation + content\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      <Navigation />\n      \n      {/* Main content area with proper spacing for navigation */}\n      <div className=\"lg:pl-64\">\n        {/* Content wrapper with padding */}\n        <main className=\"min-h-screen\">\n          {children}\n        </main>\n      </div>\n      \n      {/* Bottom spacing for mobile navigation */}\n      <div className=\"h-16 lg:hidden\"></div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AACA;AANA;;;;;;AAae,SAAS,UAAU,EAAE,QAAQ,EAAE,cAAc,IAAI,EAAkB;IAChF,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,IAAA,0IAAO;IACjC,MAAM,SAAS,IAAA,+IAAS;IACxB,MAAM,WAAW,IAAA,iJAAW;IAE5B,kDAAkD;IAClD,MAAM,eAAe;QAAC;QAAU;QAAa;QAAS;KAAI;IAC1D,MAAM,gBAAgB,aAAa,QAAQ,CAAC;IAE5C,IAAA,kNAAS,EAAC;QACR,IAAI,CAAC,WAAW,eAAe,CAAC,QAAQ,CAAC,eAAe;YACtD,OAAO,IAAI,CAAC;QACd;IACF,GAAG;QAAC;QAAM;QAAS;QAAa;QAAe;KAAO;IAEtD,qDAAqD;IACrD,IAAI,SAAS;QACX,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,kFAAkF;IAClF,IAAI,CAAC,eAAe,eAAe;QACjC,qBAAO;sBAAG;;IACZ;IAEA,sDAAsD;IACtD,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,2IAAU;;;;;0BAGX,8OAAC;gBAAI,WAAU;0BAEb,cAAA,8OAAC;oBAAK,WAAU;8BACb;;;;;;;;;;;0BAKL,8OAAC;gBAAI,WAAU;;;;;;;;;;;;AAGrB","debugId":null}},
    {"offset": {"line": 1439, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/services/tradingService.ts"],"sourcesContent":["import axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { errorHandler, handleNetworkError, handleTradingError, handleValidationError } from '@/lib/errorHandler';\n\n// Market types supported by GainzAlgo integration\nexport type MarketType = 'STOCKS' | 'CRYPTO' | 'FOREX';\nexport type TimeFrame = '1m' | '5m' | '15m' | '30m' | '1h' | '4h' | '1d' | '1w';\nexport type SignalType = 'BUY' | 'SELL' | 'HOLD';\n\n// GainzAlgo Signal Interface\nexport interface TradingSignal {\n  id: string;\n  symbol: string;\n  marketType: MarketType;\n  signalType: SignalType;\n  confidence: number; // 0-100%\n  entryPrice: number;\n  stopLoss: number;\n  takeProfit: number;\n  timeFrame: TimeFrame;\n  timestamp: string;\n  riskRewardRatio: number;\n  profitFactor?: number;\n}\n\n// Enhanced Trade Request with GainzAlgo features\nexport interface CreateTradeRequest {\n  portfolioId: string;\n  symbol: string;\n  marketType: MarketType;\n  side: 'BUY' | 'SELL';\n  quantity: number;\n  price: number;\n  stopLoss?: number;\n  takeProfit?: number;\n  orderType?: 'MARKET' | 'LIMIT' | 'STOP';\n  signalId?: string; // Reference to GainzAlgo signal\n  timeFrame?: TimeFrame;\n  brokerAccountId?: string; // Selected broker account for execution\n  brokerConnectionId?: string; // Broker connection ID\n}\n\n// Enhanced Trade interface with GainzAlgo features\nexport interface Trade {\n  id: string;\n  symbol: string;\n  userId: string;\n  portfolioId: string;\n  marketType: MarketType;\n  side: 'BUY' | 'SELL';\n  quantity: number;\n  price: number;\n  stopLoss?: number;\n  takeProfit?: number;\n  totalValue: number;\n  status: 'PENDING' | 'EXECUTED' | 'CANCELLED' | 'FAILED';\n  executedAt?: string;\n  createdAt: string;\n  signalId?: string;\n  timeFrame?: TimeFrame;\n  actualPnL?: number;\n  winRate?: number;\n  profitFactor?: number;\n  portfolio?: {\n    id: string;\n    name: string;\n  };\n}\n\n// Performance Tracking Interfaces\nexport interface PerformanceMetrics {\n  totalTrades: number;\n  winningTrades: number;\n  losingTrades: number;\n  winRate: number; // percentage\n  profitFactor: number;\n  totalPnL: number;\n  maxDrawdown: number;\n  currentDrawdown: number;\n  averageWin: number;\n  averageLoss: number;\n  riskRewardRatio: number;\n}\n\nexport interface MarketPerformance {\n  marketType: MarketType;\n  metrics: PerformanceMetrics;\n  signals: TradingSignal[];\n  lastUpdated: string;\n}\n\nexport interface TradesResponse {\n  success: boolean;\n  data: {\n    trades: Trade[];\n    pagination: {\n      page: number;\n      limit: number;\n      total: number;\n      pages: number;\n    };\n  };\n}\n\nexport interface CreateTradeResponse {\n  success: boolean;\n  data: {\n    trade: Trade;\n  };\n}\n\nclass TradingService {\n  /**\n   * Create a new trade\n   */\n  async createTrade(tradeData: CreateTradeRequest): Promise<Trade> {\n    try {\n      const response = await axios.post<CreateTradeResponse>('/trades', tradeData);\n      \n      if (response.data.success) {\n        toast.success(`${tradeData.side} order for ${tradeData.symbol} placed successfully!`);\n        return response.data.data.trade;\n      } else {\n        throw new Error('Failed to create trade');\n      }\n    } catch (error: any) {\n      const handledError = handleNetworkError(error, 'Trading Service - Create Trade');\n      throw handledError;\n    }\n  }\n\n  /**\n   * Get user's trades with optional filters\n   */\n  async getTrades(params?: {\n    page?: number;\n    limit?: number;\n    portfolioId?: string;\n    symbol?: string;\n    side?: 'BUY' | 'SELL';\n    status?: 'PENDING' | 'EXECUTED' | 'CANCELLED' | 'FAILED';\n  }): Promise<TradesResponse['data']> {\n    try {\n      const response = await axios.get<TradesResponse>('/trades', { params });\n      \n      if (response.data.success) {\n        return response.data.data;\n      } else {\n        throw new Error('Failed to fetch trades');\n      }\n    } catch (error: any) {\n      const handledError = handleNetworkError(error, 'Trading Service - Get Trades');\n      throw handledError;\n    }\n  }\n\n  /**\n   * Get a specific trade by ID\n   */\n  async getTradeById(tradeId: string): Promise<Trade> {\n    try {\n      const response = await axios.get<CreateTradeResponse>(`/trades/${tradeId}`);\n      \n      if (response.data.success) {\n        return response.data.data.trade;\n      } else {\n        throw new Error('Failed to fetch trade');\n      }\n    } catch (error: any) {\n      const handledError = handleNetworkError(error, 'Trading Service - Get Trade By ID');\n      throw handledError;\n    }\n  }\n\n  /**\n   * Cancel a pending trade\n   */\n  async cancelTrade(tradeId: string): Promise<Trade> {\n    try {\n      const response = await axios.put<CreateTradeResponse>(`/trades/${tradeId}/cancel`);\n      \n      if (response.data.success) {\n        toast.success('Trade cancelled successfully!');\n        return response.data.data.trade;\n      } else {\n        throw new Error('Failed to cancel trade');\n      }\n    } catch (error: any) {\n      const handledError = handleNetworkError(error, 'Trading Service - Cancel Trade');\n      throw handledError;\n    }\n  }\n\n  /**\n   * Validate trade data before submission\n   */\n  validateTradeData(tradeData: CreateTradeRequest): { isValid: boolean; errors: string[] } {\n    const errors: string[] = [];\n\n    if (!tradeData.portfolioId) {\n      const error = handleValidationError('Portfolio is required', 'Trade Validation');\n      errors.push(error.message);\n    }\n\n    if (!tradeData.symbol) {\n      const error = handleValidationError('Symbol is required', 'Trade Validation');\n      errors.push(error.message);\n    }\n\n    if (!tradeData.side) {\n      const error = handleValidationError('Order side (BUY/SELL) is required', 'Trade Validation');\n      errors.push(error.message);\n    }\n\n    if (!tradeData.quantity || tradeData.quantity <= 0) {\n      const error = handleValidationError('Quantity must be greater than 0', 'Trade Validation');\n      errors.push(error.message);\n    }\n\n    if (!tradeData.price || tradeData.price <= 0) {\n      const error = handleValidationError('Price must be greater than 0', 'Trade Validation');\n      errors.push(error.message);\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors\n    };\n  }\n\n  // GainzAlgo Integration Methods\n\n  /**\n   * Generate trading signals using GainzAlgo algorithm\n   */\n  async generateSignals(marketType: MarketType, timeFrame: TimeFrame, symbols?: string[]): Promise<TradingSignal[]> {\n    try {\n      const response = await axios.post('/trading/signals/generate', {\n        marketType,\n        timeFrame,\n        symbols\n      });\n      \n      if (response.data.success) {\n        return response.data.data.signals;\n      } else {\n        throw new Error('Failed to generate signals');\n      }\n    } catch (error: any) {\n      const handledError = handleNetworkError(error, 'Trading Service - Generate Signals');\n      throw handledError;\n    }\n  }\n\n  /**\n   * Get active trading signals\n   */\n  async getActiveSignals(marketType?: MarketType): Promise<TradingSignal[]> {\n    try {\n      const params = marketType ? { marketType } : {};\n      const response = await axios.get('/trading/signals/active', { params });\n      \n      if (response.data.success) {\n        return response.data.data.signals;\n      } else {\n        throw new Error('Failed to fetch active signals');\n      }\n    } catch (error: any) {\n      const handledError = handleNetworkError(error, 'Trading Service - Get Active Signals');\n      throw handledError;\n    }\n  }\n\n  /**\n   * Calculate Stop Loss and Take Profit levels\n   */\n  calculateSLTP(entryPrice: number, signalType: SignalType, riskPercent: number = 2, rewardRatio: number = 2): { stopLoss: number; takeProfit: number } {\n    const riskAmount = entryPrice * (riskPercent / 100);\n    \n    if (signalType === 'BUY') {\n      const stopLoss = entryPrice - riskAmount;\n      const takeProfit = entryPrice + (riskAmount * rewardRatio);\n      return { stopLoss, takeProfit };\n    } else {\n      const stopLoss = entryPrice + riskAmount;\n      const takeProfit = entryPrice - (riskAmount * rewardRatio);\n      return { stopLoss, takeProfit };\n    }\n  }\n\n  /**\n   * Get performance metrics for a specific market or overall\n   */\n  async getPerformanceMetrics(marketType?: MarketType, timeRange?: string): Promise<PerformanceMetrics> {\n    try {\n      const params = { marketType, timeRange };\n      const response = await axios.get('/trading/performance/metrics', { params });\n      \n      if (response.data.success) {\n        return response.data.data.metrics;\n      } else {\n        throw new Error('Failed to fetch performance metrics');\n      }\n    } catch (error: any) {\n      const handledError = handleNetworkError(error, 'Trading Service - Get Performance Metrics');\n      throw handledError;\n    }\n  }\n\n  /**\n   * Get market-specific performance data\n   */\n  async getMarketPerformance(): Promise<MarketPerformance[]> {\n    try {\n      const response = await axios.get('/trading/performance/markets');\n      \n      if (response.data.success) {\n        return response.data.data.markets;\n      } else {\n        throw new Error('Failed to fetch market performance');\n      }\n    } catch (error: any) {\n      const handledError = handleNetworkError(error, 'Trading Service - Get Market Performance');\n      throw handledError;\n    }\n  }\n\n  /**\n   * Calculate win rate from trades\n   */\n  calculateWinRate(trades: Trade[]): number {\n    if (trades.length === 0) return 0;\n    \n    const executedTrades = trades.filter(trade => trade.status === 'EXECUTED' && trade.actualPnL !== undefined);\n    if (executedTrades.length === 0) return 0;\n    \n    const winningTrades = executedTrades.filter(trade => (trade.actualPnL || 0) > 0);\n    return (winningTrades.length / executedTrades.length) * 100;\n  }\n\n  /**\n   * Calculate profit factor from trades\n   */\n  calculateProfitFactor(trades: Trade[]): number {\n    const executedTrades = trades.filter(trade => trade.status === 'EXECUTED' && trade.actualPnL !== undefined);\n    if (executedTrades.length === 0) return 0;\n    \n    const grossProfit = executedTrades\n      .filter(trade => (trade.actualPnL || 0) > 0)\n      .reduce((sum, trade) => sum + (trade.actualPnL || 0), 0);\n    \n    const grossLoss = Math.abs(executedTrades\n      .filter(trade => (trade.actualPnL || 0) < 0)\n      .reduce((sum, trade) => sum + (trade.actualPnL || 0), 0));\n    \n    return grossLoss === 0 ? (grossProfit > 0 ? Infinity : 0) : grossProfit / grossLoss;\n  }\n\n  /**\n   * Calculate maximum drawdown\n   */\n  calculateMaxDrawdown(trades: Trade[]): number {\n    const executedTrades = trades\n      .filter(trade => trade.status === 'EXECUTED' && trade.actualPnL !== undefined)\n      .sort((a, b) => new Date(a.executedAt || a.createdAt).getTime() - new Date(b.executedAt || b.createdAt).getTime());\n    \n    if (executedTrades.length === 0) return 0;\n    \n    let peak = 0;\n    let maxDrawdown = 0;\n    let runningPnL = 0;\n    \n    for (const trade of executedTrades) {\n      runningPnL += trade.actualPnL || 0;\n      \n      if (runningPnL > peak) {\n        peak = runningPnL;\n      }\n      \n      const drawdown = peak - runningPnL;\n      if (drawdown > maxDrawdown) {\n        maxDrawdown = drawdown;\n      }\n    }\n    \n    return maxDrawdown;\n  }\n\n  /**\n   * Execute trade based on signal with automatic SL/TP\n   */\n  async executeSignalTrade(signal: TradingSignal, portfolioId: string, quantity: number, riskPercent: number = 2): Promise<Trade> {\n    const { stopLoss, takeProfit } = this.calculateSLTP(signal.entryPrice, signal.signalType, riskPercent);\n    \n    const tradeData: CreateTradeRequest = {\n      portfolioId,\n      symbol: signal.symbol,\n      marketType: signal.marketType,\n      side: signal.signalType === 'BUY' ? 'BUY' : 'SELL',\n      quantity,\n      price: signal.entryPrice,\n      stopLoss,\n      takeProfit,\n      signalId: signal.id,\n      timeFrame: signal.timeFrame,\n      orderType: 'MARKET'\n    };\n    \n    return this.createTrade(tradeData);\n  }\n}\n\nexport const tradingService = new TradingService();\nexport default tradingService;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1705, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/BrokerAccountSelector.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { ChevronDownIcon, CheckIcon, PlusIcon } from '@heroicons/react/24/outline';\nimport Link from 'next/link';\n\ninterface BrokerAccount {\n  id: string;\n  accountNumber: string;\n  accountType: string;\n  status: string;\n  buyingPower: number;\n  cashBalance: number;\n  portfolioValue: number;\n  currency: string;\n  brokerConnection: {\n    id: string;\n    accountName: string;\n    brokerType: string;\n    environment: string;\n  };\n}\n\ninterface BrokerAccountSelectorProps {\n  selectedAccount?: BrokerAccount | null;\n  onAccountSelect: (account: BrokerAccount | null) => void;\n  className?: string;\n  placeholder?: string;\n}\n\nexport default function BrokerAccountSelector({\n  selectedAccount,\n  onAccountSelect,\n  className = '',\n  placeholder = 'Select a broker account'\n}: BrokerAccountSelectorProps) {\n  const [accounts, setAccounts] = useState<BrokerAccount[]>([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    fetchBrokerAccounts();\n  }, []);\n\n  const fetchBrokerAccounts = async () => {\n    try {\n      setLoading(true);\n      const token = localStorage.getItem('token');\n      if (!token) {\n        // User is not authenticated, set empty accounts and return\n        setIsAuthenticated(false);\n        setAccounts([]);\n        setLoading(false);\n        return;\n      }\n      \n      setIsAuthenticated(true);\n\n      const response = await fetch('/api/brokers/accounts', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch broker accounts');\n      }\n\n      const data = await response.json();\n      if (data.success) {\n        setAccounts(data.data || []);\n      } else {\n        throw new Error(data.message || 'Failed to fetch accounts');\n      }\n    } catch (err) {\n      console.error('Error fetching broker accounts:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load accounts');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatCurrency = (amount: number, currency: string = 'USD') => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: currency\n    }).format(amount);\n  };\n\n  const getBrokerDisplayName = (brokerType: string) => {\n    const brokerNames: { [key: string]: string } = {\n      'ALPACA': 'Alpaca',\n      'INTERACTIVE_BROKERS': 'Interactive Brokers',\n      'TD_AMERITRADE': 'TD Ameritrade',\n      'SCHWAB': 'Charles Schwab',\n      'FIDELITY': 'Fidelity',\n      'E_TRADE': 'E*TRADE'\n    };\n    return brokerNames[brokerType] || brokerType;\n  };\n\n  const getAccountTypeDisplay = (accountType: string) => {\n    const typeNames: { [key: string]: string } = {\n      'CASH': 'Cash Account',\n      'MARGIN': 'Margin Account',\n      'RETIREMENT': 'Retirement Account',\n      'CRYPTO': 'Crypto Account'\n    };\n    return typeNames[accountType] || accountType;\n  };\n\n  const handleAccountSelect = (account: BrokerAccount) => {\n    onAccountSelect(account);\n    setIsOpen(false);\n  };\n\n  if (loading) {\n    return (\n      <div className={`relative ${className}`}>\n        <div className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50 text-gray-500\">\n          Loading accounts...\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className={`relative ${className}`}>\n        <div className=\"w-full px-3 py-2 border border-red-300 rounded-md bg-red-50 text-red-600\">\n          {error}\n        </div>\n      </div>\n    );\n  }\n\n  if (accounts.length === 0) {\n    return (\n      <div className={`relative ${className}`}>\n        {isAuthenticated ? (\n          <div className=\"space-y-3\">\n            <div className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50 text-gray-500 text-center\">\n              No broker accounts found. Please connect a broker first.\n            </div>\n            <Link href=\"/brokers\">\n              <button className=\"w-full flex items-center justify-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-md transition-colors duration-200\">\n                <PlusIcon className=\"h-4 w-4 mr-2\" />\n                Connect Broker\n              </button>\n            </Link>\n          </div>\n        ) : (\n          <div className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50 text-gray-500 text-center\">\n            Please log in to view broker accounts.\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={`relative ${className}`}>\n      <button\n        type=\"button\"\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"relative w-full cursor-pointer rounded-md border border-gray-300 bg-white py-2 pl-3 pr-10 text-left shadow-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500 sm:text-sm\"\n      >\n        <span className=\"block truncate\">\n          {selectedAccount ? (\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <span className=\"font-medium\">\n                  {getBrokerDisplayName(selectedAccount.brokerConnection.brokerType)}\n                </span>\n                <span className=\"ml-2 text-gray-500\">\n                  {selectedAccount.brokerConnection.accountName}\n                </span>\n              </div>\n              <div className=\"text-sm text-gray-600\">\n                {formatCurrency(selectedAccount.portfolioValue, selectedAccount.currency)}\n              </div>\n            </div>\n          ) : (\n            <span className=\"text-gray-500\">{placeholder}</span>\n          )}\n        </span>\n        <span className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2\">\n          <ChevronDownIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n        </span>\n      </button>\n\n      {isOpen && (\n        <div className=\"absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\n          <div\n            className=\"relative cursor-pointer select-none py-2 pl-3 pr-9 text-gray-900 hover:bg-blue-50\"\n            onClick={() => handleAccountSelect(null as any)}\n          >\n            <span className=\"block truncate text-gray-500\">Clear selection</span>\n          </div>\n          {accounts.map((account) => (\n            <div\n              key={account.id}\n              className=\"relative cursor-pointer select-none py-2 pl-3 pr-9 text-gray-900 hover:bg-blue-50\"\n              onClick={() => handleAccountSelect(account)}\n            >\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center\">\n                    <span className=\"font-medium\">\n                      {getBrokerDisplayName(account.brokerConnection.brokerType)}\n                    </span>\n                    <span className=\"ml-2 text-gray-500\">\n                      {account.brokerConnection.accountName}\n                    </span>\n                    <span className=\"ml-2 text-xs bg-gray-100 text-gray-600 px-2 py-1 rounded\">\n                      {account.brokerConnection.environment}\n                    </span>\n                  </div>\n                  <div className=\"text-sm text-gray-600 mt-1\">\n                    <span>{getAccountTypeDisplay(account.accountType)}</span>\n                    <span className=\"mx-2\">•</span>\n                    <span>Account: {account.accountNumber}</span>\n                  </div>\n                  <div className=\"text-sm text-gray-600\">\n                    <span>Portfolio: {formatCurrency(account.portfolioValue, account.currency)}</span>\n                    <span className=\"mx-2\">•</span>\n                    <span>Cash: {formatCurrency(account.cashBalance, account.currency)}</span>\n                    <span className=\"mx-2\">•</span>\n                    <span>Buying Power: {formatCurrency(account.buyingPower, account.currency)}</span>\n                  </div>\n                </div>\n              </div>\n\n              {selectedAccount?.id === account.id && (\n                <span className=\"absolute inset-y-0 right-0 flex items-center pr-4 text-blue-600\">\n                  <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                </span>\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AAAA;AACA;AAJA;;;;;AA8Be,SAAS,sBAAsB,EAC5C,eAAe,EACf,eAAe,EACf,YAAY,EAAE,EACd,cAAc,yBAAyB,EACZ;IAC3B,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAkB,EAAE;IAC5D,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,iNAAQ,EAAC;IACrC,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAgB;IAClD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,iNAAQ,EAAC;IAEvD,IAAA,kNAAS,EAAC;QACR;IACF,GAAG,EAAE;IAEL,MAAM,sBAAsB;QAC1B,IAAI;YACF,WAAW;YACX,MAAM,QAAQ,aAAa,OAAO,CAAC;YACnC,IAAI,CAAC,OAAO;gBACV,2DAA2D;gBAC3D,mBAAmB;gBACnB,YAAY,EAAE;gBACd,WAAW;gBACX;YACF;YAEA,mBAAmB;YAEnB,MAAM,WAAW,MAAM,MAAM,yBAAyB;gBACpD,SAAS;oBACP,iBAAiB,CAAC,OAAO,EAAE,OAAO;oBAClC,gBAAgB;gBAClB;YACF;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,IAAI,KAAK,OAAO,EAAE;gBAChB,YAAY,KAAK,IAAI,IAAI,EAAE;YAC7B,OAAO;gBACL,MAAM,IAAI,MAAM,KAAK,OAAO,IAAI;YAClC;QACF,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,mCAAmC;YACjD,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;QAChD,SAAU;YACR,WAAW;QACb;IACF;IAEA,MAAM,iBAAiB,CAAC,QAAgB,WAAmB,KAAK;QAC9D,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;YACpC,OAAO;YACP,UAAU;QACZ,GAAG,MAAM,CAAC;IACZ;IAEA,MAAM,uBAAuB,CAAC;QAC5B,MAAM,cAAyC;YAC7C,UAAU;YACV,uBAAuB;YACvB,iBAAiB;YACjB,UAAU;YACV,YAAY;YACZ,WAAW;QACb;QACA,OAAO,WAAW,CAAC,WAAW,IAAI;IACpC;IAEA,MAAM,wBAAwB,CAAC;QAC7B,MAAM,YAAuC;YAC3C,QAAQ;YACR,UAAU;YACV,cAAc;YACd,UAAU;QACZ;QACA,OAAO,SAAS,CAAC,YAAY,IAAI;IACnC;IAEA,MAAM,sBAAsB,CAAC;QAC3B,gBAAgB;QAChB,UAAU;IACZ;IAEA,IAAI,SAAS;QACX,qBACE,8OAAC;YAAI,WAAW,CAAC,SAAS,EAAE,WAAW;sBACrC,cAAA,8OAAC;gBAAI,WAAU;0BAA8E;;;;;;;;;;;IAKnG;IAEA,IAAI,OAAO;QACT,qBACE,8OAAC;YAAI,WAAW,CAAC,SAAS,EAAE,WAAW;sBACrC,cAAA,8OAAC;gBAAI,WAAU;0BACZ;;;;;;;;;;;IAIT;IAEA,IAAI,SAAS,MAAM,KAAK,GAAG;QACzB,qBACE,8OAAC;YAAI,WAAW,CAAC,SAAS,EAAE,WAAW;sBACpC,gCACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCAA0F;;;;;;kCAGzG,8OAAC,uKAAI;wBAAC,MAAK;kCACT,cAAA,8OAAC;4BAAO,WAAU;;8CAChB,8OAAC,2NAAQ;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;;;;;;;;;;;qCAM3C,8OAAC;gBAAI,WAAU;0BAA0F;;;;;;;;;;;IAMjH;IAEA,qBACE,8OAAC;QAAI,WAAW,CAAC,SAAS,EAAE,WAAW;;0BACrC,8OAAC;gBACC,MAAK;gBACL,SAAS,IAAM,UAAU,CAAC;gBAC1B,WAAU;;kCAEV,8OAAC;wBAAK,WAAU;kCACb,gCACC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;;sDACC,8OAAC;4CAAK,WAAU;sDACb,qBAAqB,gBAAgB,gBAAgB,CAAC,UAAU;;;;;;sDAEnE,8OAAC;4CAAK,WAAU;sDACb,gBAAgB,gBAAgB,CAAC,WAAW;;;;;;;;;;;;8CAGjD,8OAAC;oCAAI,WAAU;8CACZ,eAAe,gBAAgB,cAAc,EAAE,gBAAgB,QAAQ;;;;;;;;;;;iDAI5E,8OAAC;4BAAK,WAAU;sCAAiB;;;;;;;;;;;kCAGrC,8OAAC;wBAAK,WAAU;kCACd,cAAA,8OAAC,gPAAe;4BAAC,WAAU;4BAAwB,eAAY;;;;;;;;;;;;;;;;;YAIlE,wBACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,WAAU;wBACV,SAAS,IAAM,oBAAoB;kCAEnC,cAAA,8OAAC;4BAAK,WAAU;sCAA+B;;;;;;;;;;;oBAEhD,SAAS,GAAG,CAAC,CAAC,wBACb,8OAAC;4BAEC,WAAU;4BACV,SAAS,IAAM,oBAAoB;;8CAEnC,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;wDAAK,WAAU;kEACb,qBAAqB,QAAQ,gBAAgB,CAAC,UAAU;;;;;;kEAE3D,8OAAC;wDAAK,WAAU;kEACb,QAAQ,gBAAgB,CAAC,WAAW;;;;;;kEAEvC,8OAAC;wDAAK,WAAU;kEACb,QAAQ,gBAAgB,CAAC,WAAW;;;;;;;;;;;;0DAGzC,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;kEAAM,sBAAsB,QAAQ,WAAW;;;;;;kEAChD,8OAAC;wDAAK,WAAU;kEAAO;;;;;;kEACvB,8OAAC;;4DAAK;4DAAU,QAAQ,aAAa;;;;;;;;;;;;;0DAEvC,8OAAC;gDAAI,WAAU;;kEACb,8OAAC;;4DAAK;4DAAY,eAAe,QAAQ,cAAc,EAAE,QAAQ,QAAQ;;;;;;;kEACzE,8OAAC;wDAAK,WAAU;kEAAO;;;;;;kEACvB,8OAAC;;4DAAK;4DAAO,eAAe,QAAQ,WAAW,EAAE,QAAQ,QAAQ;;;;;;;kEACjE,8OAAC;wDAAK,WAAU;kEAAO;;;;;;kEACvB,8OAAC;;4DAAK;4DAAe,eAAe,QAAQ,WAAW,EAAE,QAAQ,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;gCAK9E,iBAAiB,OAAO,QAAQ,EAAE,kBACjC,8OAAC;oCAAK,WAAU;8CACd,cAAA,8OAAC,8NAAS;wCAAC,WAAU;wCAAU,eAAY;;;;;;;;;;;;2BAlC1C,QAAQ,EAAE;;;;;;;;;;;;;;;;;AA2C7B","debugId":null}},
    {"offset": {"line": 2167, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/lib/logger.ts"],"sourcesContent":["'use client';\n\nimport { errorHandler, ErrorType, ErrorSeverity } from './errorHandler';\n\n// Logger utility to replace console usage with proper error handling\nexport class Logger {\n  private static isDevelopment = process.env.NODE_ENV === 'development';\n  private static isProduction = process.env.NODE_ENV === 'production';\n\n  // Error logging\n  static error(message: string, error?: Error | any, context?: string): void {\n    if (error instanceof Error) {\n      errorHandler.handle(error, context || 'Logger');\n    } else {\n      errorHandler.handle(new Error(message), context || 'Logger');\n    }\n\n    // Still log to console in development for debugging\n    if (this.isDevelopment) {\n      console.error(`[${context || 'Logger'}] ${message}`, error);\n    }\n  }\n\n  // Warning logging\n  static warn(message: string, context?: string, details?: any): void {\n    const warningError = new Error(message);\n    errorHandler.handle(warningError, context || 'Logger');\n\n    if (this.isDevelopment) {\n      console.warn(`[${context || 'Logger'}] ${message}`, details);\n    }\n  }\n\n  // Info logging (for important events)\n  static info(message: string, context?: string, details?: any): void {\n    // Only log to console in development, or to external service in production\n    if (this.isDevelopment) {\n      console.log(`[${context || 'Logger'}] ${message}`, details);\n    } else if (this.isProduction) {\n      // In production, you might want to log to an external service\n      // For now, we'll just store it internally\n      this.logToService('info', message, context, details);\n    }\n  }\n\n  // Debug logging (only in development)\n  static debug(message: string, context?: string, details?: any): void {\n    if (this.isDevelopment) {\n      console.log(`[DEBUG][${context || 'Logger'}] ${message}`, details);\n    }\n  }\n\n  // Trading-specific logging\n  static trading(message: string, details?: any, context?: string): void {\n    const tradingError = new Error(message);\n    errorHandler.handle(tradingError, context || 'Trading');\n\n    if (this.isDevelopment) {\n      console.log(`[TRADING][${context || 'Trading'}] ${message}`, details);\n    }\n  }\n\n  // Performance logging\n  static performance(operation: string, duration: number, context?: string): void {\n    const message = `${operation} completed in ${duration}ms`;\n    \n    if (duration > 1000) {\n      // Log slow operations as warnings\n      this.warn(`Slow operation: ${message}`, context || 'Performance');\n    } else {\n      this.info(message, context || 'Performance');\n    }\n  }\n\n  // User action logging\n  static userAction(action: string, userId?: string, details?: any): void {\n    const context = userId ? `User-${userId}` : 'User';\n    this.info(`User action: ${action}`, context, details);\n  }\n\n  // API call logging\n  static apiCall(method: string, url: string, status: number, duration: number): void {\n    const message = `${method} ${url} - ${status} (${duration}ms)`;\n    \n    if (status >= 400) {\n      this.error(`API Error: ${message}`, undefined, 'API');\n    } else if (duration > 2000) {\n      this.warn(`Slow API call: ${message}`, 'API');\n    } else {\n      this.debug(message, 'API');\n    }\n  }\n\n  // Private method to log to external service (placeholder)\n  private static logToService(level: string, message: string, context?: string, details?: any): void {\n    // In a real application, you would send this to your logging service\n    // For now, we'll just store it in memory or localStorage\n    try {\n      const logEntry = {\n        level,\n        message,\n        context,\n        details,\n        timestamp: new Date().toISOString(),\n        userAgent: typeof window !== 'undefined' ? window.navigator.userAgent : 'server',\n        url: typeof window !== 'undefined' ? window.location.href : 'server'\n      };\n\n      // Store in localStorage for now (in production, send to logging service)\n      if (typeof window !== 'undefined' && window.localStorage) {\n        const logs = JSON.parse(localStorage.getItem('app_logs') || '[]');\n        logs.push(logEntry);\n        \n        // Keep only last 100 logs to prevent storage overflow\n        if (logs.length > 100) {\n          logs.splice(0, logs.length - 100);\n        }\n        \n        localStorage.setItem('app_logs', JSON.stringify(logs));\n      }\n    } catch (error) {\n      // Fallback to console if logging service fails\n      if (this.isDevelopment) {\n        console.error('Failed to log to service:', error);\n      }\n    }\n  }\n\n  // Method to retrieve logs (useful for debugging)\n  static getLogs(): any[] {\n    try {\n      if (typeof window !== 'undefined' && window.localStorage) {\n        return JSON.parse(localStorage.getItem('app_logs') || '[]');\n      }\n    } catch (error) {\n      this.error('Failed to retrieve logs', error as Error, 'Logger');\n    }\n    return [];\n  }\n\n  // Method to clear logs\n  static clearLogs(): void {\n    try {\n      if (typeof window !== 'undefined' && window.localStorage) {\n        localStorage.removeItem('app_logs');\n      }\n    } catch (error) {\n      this.error('Failed to clear logs', error as Error, 'Logger');\n    }\n  }\n}\n\n// Convenience exports\nexport const logger = Logger;\nexport default Logger;\n\n// Hook for React components\nexport function useLogger() {\n  return {\n    error: Logger.error,\n    warn: Logger.warn,\n    info: Logger.info,\n    debug: Logger.debug,\n    trading: Logger.trading,\n    performance: Logger.performance,\n    userAction: Logger.userAction,\n    apiCall: Logger.apiCall,\n    getLogs: Logger.getLogs,\n    clearLogs: Logger.clearLogs\n  };\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2318, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/services/liveMarketService.ts"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { logger } from '@/lib/logger';\n\n// Live Market Data Service for TradingView-style functionality\n\nexport interface MarketTicker {\n  symbol: string;\n  price: number;\n  change: number;\n  changePercent: number;\n  volume: number;\n  high24h: number;\n  low24h: number;\n  marketCap?: number;\n  lastUpdate: number;\n}\n\nexport interface CandlestickData {\n  time: number;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n}\n\nexport interface OrderBookEntry {\n  price: number;\n  size: number;\n  total: number;\n}\n\nexport interface OrderBook {\n  symbol: string;\n  bids: OrderBookEntry[];\n  asks: OrderBookEntry[];\n  lastUpdate: number;\n}\n\nexport interface Trade {\n  id: string;\n  symbol: string;\n  price: number;\n  size: number;\n  side: 'buy' | 'sell';\n  timestamp: number;\n}\n\nexport interface MarketStats {\n  symbol: string;\n  volume24h: number;\n  volumeChange24h: number;\n  trades24h: number;\n  high24h: number;\n  low24h: number;\n  openPrice: number;\n  closePrice: number;\n  lastUpdate: number;\n}\n\nclass LiveMarketService {\n  private subscribers: Map<string, Set<(data: any) => void>> = new Map();\n  private marketData: Map<string, MarketTicker> = new Map();\n  private candlestickData: Map<string, CandlestickData[]> = new Map();\n  private orderBooks: Map<string, OrderBook> = new Map();\n  private recentTrades: Map<string, Trade[]> = new Map();\n  private updateIntervals: Map<string, NodeJS.Timeout> = new Map();\n  private isConnected = false;\n\n  // Supported trading pairs\n  private readonly SUPPORTED_SYMBOLS = [\n    // Cryptocurrencies\n    'BTCUSDT', 'ETHUSDT', 'ADAUSDT', 'SOLUSDT', 'DOTUSDT', 'LINKUSDT',\n    'MATICUSDT', 'AVAXUSDT', 'ATOMUSDT', 'NEARUSDT', 'FTMUSDT', 'SANDUSDT',\n    'MANAUSDT', 'CHZUSDT', 'ENJUSDT', 'GALAUSDT',\n    // Major Indices\n    'SPY', 'QQQ', 'DJI', 'IXIC', 'RUT', 'VTI', 'IWM'\n  ];\n\n  constructor() {\n    this.initializeMarketData();\n    this.startDataSimulation();\n  }\n\n  // Initialize mock market data\n  private initializeMarketData(): void {\n    const baseData = {\n      // Cryptocurrencies\n      BTCUSDT: { basePrice: 45000, volatility: 0.02 },\n      ETHUSDT: { basePrice: 2800, volatility: 0.025 },\n      ADAUSDT: { basePrice: 0.45, volatility: 0.03 },\n      SOLUSDT: { basePrice: 98, volatility: 0.035 },\n      DOTUSDT: { basePrice: 6.5, volatility: 0.03 },\n      LINKUSDT: { basePrice: 14.2, volatility: 0.028 },\n      MATICUSDT: { basePrice: 0.85, volatility: 0.032 },\n      AVAXUSDT: { basePrice: 35, volatility: 0.03 },\n      ATOMUSDT: { basePrice: 9.8, volatility: 0.029 },\n      NEARUSDT: { basePrice: 2.1, volatility: 0.034 },\n      FTMUSDT: { basePrice: 0.32, volatility: 0.036 },\n      SANDUSDT: { basePrice: 0.48, volatility: 0.038 },\n      MANAUSDT: { basePrice: 0.42, volatility: 0.037 },\n      CHZUSDT: { basePrice: 0.089, volatility: 0.04 },\n      ENJUSDT: { basePrice: 0.28, volatility: 0.035 },\n      GALAUSDT: { basePrice: 0.035, volatility: 0.042 },\n      // Major Indices\n      SPY: { basePrice: 428.50, volatility: 0.015 },\n      QQQ: { basePrice: 365.20, volatility: 0.018 },\n      DJI: { basePrice: 37689.54, volatility: 0.012 },\n      IXIC: { basePrice: 14845.73, volatility: 0.020 },\n      RUT: { basePrice: 2045.32, volatility: 0.025 },\n      VTI: { basePrice: 245.30, volatility: 0.014 },\n      IWM: { basePrice: 198.75, volatility: 0.022 }\n    };\n\n    this.SUPPORTED_SYMBOLS.forEach(symbol => {\n      const config = baseData[symbol as keyof typeof baseData];\n      if (config) {\n        const currentPrice = config.basePrice * (1 + (Math.random() - 0.5) * 0.1);\n        const change = (Math.random() - 0.5) * config.basePrice * 0.05;\n        const changePercent = (change / (currentPrice - change)) * 100;\n        \n        this.marketData.set(symbol, {\n          symbol,\n          price: currentPrice,\n          change,\n          changePercent,\n          volume: Math.random() * 10000000 + 1000000,\n          high24h: currentPrice * (1 + Math.random() * 0.05),\n          low24h: currentPrice * (1 - Math.random() * 0.05),\n          marketCap: currentPrice * (Math.random() * 1000000000 + 100000000),\n          lastUpdate: Date.now()\n        });\n\n        // Initialize candlestick data\n        this.initializeCandlestickData(symbol, currentPrice, config.volatility);\n        \n        // Initialize order book\n        this.initializeOrderBook(symbol, currentPrice);\n        \n        // Initialize recent trades\n        this.initializeRecentTrades(symbol, currentPrice);\n      }\n    });\n  }\n\n  private initializeCandlestickData(symbol: string, basePrice: number, volatility: number): void {\n    const candles: CandlestickData[] = [];\n    let currentPrice = basePrice;\n    const now = Date.now();\n    \n    // Generate 100 historical candles (1 minute each)\n    for (let i = 99; i >= 0; i--) {\n      const time = now - (i * 60 * 1000);\n      const open = currentPrice;\n      const priceChange = (Math.random() - 0.5) * basePrice * volatility;\n      const close = Math.max(0.01, open + priceChange);\n      const high = Math.max(open, close) * (1 + Math.random() * 0.01);\n      const low = Math.min(open, close) * (1 - Math.random() * 0.01);\n      const volume = Math.random() * 1000000 + 10000;\n      \n      candles.push({\n        time,\n        open,\n        high,\n        low,\n        close,\n        volume\n      });\n      \n      currentPrice = close;\n    }\n    \n    this.candlestickData.set(symbol, candles);\n  }\n\n  private initializeOrderBook(symbol: string, currentPrice: number): void {\n    const bids: OrderBookEntry[] = [];\n    const asks: OrderBookEntry[] = [];\n    \n    // Generate 20 bid levels\n    for (let i = 1; i <= 20; i++) {\n      const price = currentPrice - (i * currentPrice * 0.001);\n      const size = Math.random() * 10 + 0.1;\n      bids.push({\n        price,\n        size,\n        total: size * price\n      });\n    }\n    \n    // Generate 20 ask levels\n    for (let i = 1; i <= 20; i++) {\n      const price = currentPrice + (i * currentPrice * 0.001);\n      const size = Math.random() * 10 + 0.1;\n      asks.push({\n        price,\n        size,\n        total: size * price\n      });\n    }\n    \n    this.orderBooks.set(symbol, {\n      symbol,\n      bids,\n      asks,\n      lastUpdate: Date.now()\n    });\n  }\n\n  private initializeRecentTrades(symbol: string, currentPrice: number): void {\n    const trades: Trade[] = [];\n    const now = Date.now();\n    \n    // Generate 50 recent trades\n    for (let i = 0; i < 50; i++) {\n      trades.push({\n        id: `trade_${symbol}_${i}`,\n        symbol,\n        price: currentPrice * (1 + (Math.random() - 0.5) * 0.01),\n        size: Math.random() * 5 + 0.01,\n        side: Math.random() > 0.5 ? 'buy' : 'sell',\n        timestamp: now - (i * 1000)\n      });\n    }\n    \n    this.recentTrades.set(symbol, trades.reverse());\n  }\n\n  // Start real-time data simulation\n  private startDataSimulation(): void {\n    this.isConnected = true;\n    \n    // Update market data every 1 second\n    const marketUpdateInterval = setInterval(() => {\n      this.updateMarketData();\n    }, 1000);\n    \n    // Update candlestick data every 5 seconds\n    const candleUpdateInterval = setInterval(() => {\n      this.updateCandlestickData();\n    }, 5000);\n    \n    // Update order books every 500ms\n    const orderBookUpdateInterval = setInterval(() => {\n      this.updateOrderBooks();\n    }, 500);\n    \n    // Add new trades every 2 seconds\n    const tradesUpdateInterval = setInterval(() => {\n      this.updateRecentTrades();\n    }, 2000);\n    \n    this.updateIntervals.set('market', marketUpdateInterval);\n    this.updateIntervals.set('candles', candleUpdateInterval);\n    this.updateIntervals.set('orderbook', orderBookUpdateInterval);\n    this.updateIntervals.set('trades', tradesUpdateInterval);\n  }\n\n  private updateMarketData(): void {\n    this.marketData.forEach((ticker, symbol) => {\n      const volatility = this.getVolatilityForSymbol(symbol);\n      const priceChange = (Math.random() - 0.5) * ticker.price * volatility * 0.1;\n      const newPrice = Math.max(0.01, ticker.price + priceChange);\n      const change = newPrice - ticker.price;\n      const changePercent = (change / ticker.price) * 100;\n      \n      const updatedTicker: MarketTicker = {\n        ...ticker,\n        price: newPrice,\n        change: ticker.change + change,\n        changePercent: ticker.changePercent + changePercent,\n        volume: ticker.volume + Math.random() * 10000,\n        high24h: Math.max(ticker.high24h, newPrice),\n        low24h: Math.min(ticker.low24h, newPrice),\n        lastUpdate: Date.now()\n      };\n      \n      this.marketData.set(symbol, updatedTicker);\n      this.notifySubscribers(`ticker:${symbol}`, updatedTicker);\n    });\n  }\n\n  private updateCandlestickData(): void {\n    this.candlestickData.forEach((candles, symbol) => {\n      const ticker = this.marketData.get(symbol);\n      if (!ticker) return;\n      \n      const lastCandle = candles[candles.length - 1];\n      const now = Date.now();\n      \n      // If last candle is older than 1 minute, create a new one\n      if (now - lastCandle.time > 60000) {\n        const newCandle: CandlestickData = {\n          time: now,\n          open: lastCandle.close,\n          high: ticker.price,\n          low: ticker.price,\n          close: ticker.price,\n          volume: Math.random() * 100000 + 1000\n        };\n        \n        candles.push(newCandle);\n        \n        // Keep only last 200 candles\n        if (candles.length > 200) {\n          candles.shift();\n        }\n      } else {\n        // Update current candle\n        lastCandle.close = ticker.price;\n        lastCandle.high = Math.max(lastCandle.high, ticker.price);\n        lastCandle.low = Math.min(lastCandle.low, ticker.price);\n        lastCandle.volume += Math.random() * 1000;\n      }\n      \n      this.notifySubscribers(`candles:${symbol}`, candles.slice(-100));\n    });\n  }\n\n  private updateOrderBooks(): void {\n    this.orderBooks.forEach((orderBook, symbol) => {\n      const ticker = this.marketData.get(symbol);\n      if (!ticker) return;\n      \n      // Simulate order book changes\n      const updatedBids = orderBook.bids.map(bid => ({\n        ...bid,\n        size: Math.max(0.01, bid.size + (Math.random() - 0.5) * 0.5),\n        price: ticker.price * (1 - Math.random() * 0.01)\n      }));\n      \n      const updatedAsks = orderBook.asks.map(ask => ({\n        ...ask,\n        size: Math.max(0.01, ask.size + (Math.random() - 0.5) * 0.5),\n        price: ticker.price * (1 + Math.random() * 0.01)\n      }));\n      \n      const updatedOrderBook: OrderBook = {\n        symbol,\n        bids: updatedBids.sort((a, b) => b.price - a.price),\n        asks: updatedAsks.sort((a, b) => a.price - b.price),\n        lastUpdate: Date.now()\n      };\n      \n      this.orderBooks.set(symbol, updatedOrderBook);\n      this.notifySubscribers(`orderbook:${symbol}`, updatedOrderBook);\n    });\n  }\n\n  private updateRecentTrades(): void {\n    this.recentTrades.forEach((trades, symbol) => {\n      const ticker = this.marketData.get(symbol);\n      if (!ticker) return;\n      \n      // Add new trade\n      const newTrade: Trade = {\n        id: `trade_${symbol}_${Date.now()}`,\n        symbol,\n        price: ticker.price * (1 + (Math.random() - 0.5) * 0.005),\n        size: Math.random() * 2 + 0.01,\n        side: Math.random() > 0.5 ? 'buy' : 'sell',\n        timestamp: Date.now()\n      };\n      \n      trades.push(newTrade);\n      \n      // Keep only last 100 trades\n      if (trades.length > 100) {\n        trades.shift();\n      }\n      \n      this.notifySubscribers(`trades:${symbol}`, trades.slice(-20));\n    });\n  }\n\n  private getVolatilityForSymbol(symbol: string): number {\n    const volatilityMap: { [key: string]: number } = {\n      'BTCUSDT': 0.02,\n      'ETHUSDT': 0.025,\n      'ADAUSDT': 0.03,\n      'SOLUSDT': 0.035,\n      'DOTUSDT': 0.03,\n      'LINKUSDT': 0.028,\n      'MATICUSDT': 0.032,\n      'AVAXUSDT': 0.03,\n      'ATOMUSDT': 0.029,\n      'NEARUSDT': 0.034,\n      'FTMUSDT': 0.036,\n      'SANDUSDT': 0.038,\n      'MANAUSDT': 0.037,\n      'CHZUSDT': 0.04,\n      'ENJUSDT': 0.035,\n      'GALAUSDT': 0.042\n    };\n    \n    return volatilityMap[symbol] || 0.03;\n  }\n\n  private notifySubscribers(channel: string, data: any): void {\n    const subscribers = this.subscribers.get(channel);\n    if (subscribers) {\n      subscribers.forEach(callback => {\n        try {\n          callback(data);\n        } catch (error) {\n          logger.error('Failed to notify market data subscriber', error, 'LiveMarketService');\n        }\n      });\n    }\n  }\n\n  // Public API methods\n  public subscribe(channel: string, callback: (data: any) => void): () => void {\n    if (!this.subscribers.has(channel)) {\n      this.subscribers.set(channel, new Set());\n    }\n    \n    this.subscribers.get(channel)!.add(callback);\n    \n    // Return unsubscribe function\n    return () => {\n      const subscribers = this.subscribers.get(channel);\n      if (subscribers) {\n        subscribers.delete(callback);\n        if (subscribers.size === 0) {\n          this.subscribers.delete(channel);\n        }\n      }\n    };\n  }\n\n  public getMarketData(symbol?: string): MarketTicker | MarketTicker[] | null {\n    if (symbol) {\n      return this.marketData.get(symbol) || null;\n    }\n    return Array.from(this.marketData.values());\n  }\n\n  public getCandlestickData(symbol: string, limit = 100): CandlestickData[] {\n    const candles = this.candlestickData.get(symbol) || [];\n    return candles.slice(-limit);\n  }\n\n  public getOrderBook(symbol: string): OrderBook | null {\n    return this.orderBooks.get(symbol) || null;\n  }\n\n  public getRecentTrades(symbol: string, limit = 20): Trade[] {\n    const trades = this.recentTrades.get(symbol) || [];\n    return trades.slice(-limit);\n  }\n\n  public getSupportedSymbols(): string[] {\n    return [...this.SUPPORTED_SYMBOLS];\n  }\n\n  public isConnectedToMarket(): boolean {\n    return this.isConnected;\n  }\n\n  public disconnect(): void {\n    this.isConnected = false;\n    this.updateIntervals.forEach(interval => clearInterval(interval));\n    this.updateIntervals.clear();\n    this.subscribers.clear();\n  }\n\n  // Market analysis helpers\n  public getMarketStats(symbol: string): MarketStats | null {\n    const ticker = this.marketData.get(symbol);\n    const candles = this.candlestickData.get(symbol);\n    \n    if (!ticker || !candles || candles.length === 0) {\n      return null;\n    }\n    \n    const last24hCandles = candles.filter(c => Date.now() - c.time <= 24 * 60 * 60 * 1000);\n    const volume24h = last24hCandles.reduce((sum, c) => sum + c.volume, 0);\n    const trades24h = last24hCandles.length;\n    \n    return {\n      symbol,\n      volume24h,\n      volumeChange24h: Math.random() * 20 - 10, // Mock data\n      trades24h,\n      high24h: ticker.high24h,\n      low24h: ticker.low24h,\n      openPrice: last24hCandles[0]?.open || ticker.price,\n      closePrice: ticker.price,\n      lastUpdate: Date.now()\n    };\n  }\n\n  public calculateTechnicalIndicators(symbol: string): any {\n    const candles = this.getCandlestickData(symbol, 50);\n    if (candles.length < 20) return null;\n    \n    // Simple Moving Average (20 periods)\n    const sma20 = candles.slice(-20).reduce((sum, c) => sum + c.close, 0) / 20;\n    \n    // Exponential Moving Average (12 periods)\n    let ema12 = candles[0].close;\n    const multiplier = 2 / (12 + 1);\n    for (let i = 1; i < candles.length; i++) {\n      ema12 = (candles[i].close * multiplier) + (ema12 * (1 - multiplier));\n    }\n    \n    // RSI (14 periods)\n    const rsiPeriod = 14;\n    if (candles.length >= rsiPeriod + 1) {\n      let gains = 0;\n      let losses = 0;\n      \n      for (let i = candles.length - rsiPeriod; i < candles.length; i++) {\n        const change = candles[i].close - candles[i - 1].close;\n        if (change > 0) {\n          gains += change;\n        } else {\n          losses += Math.abs(change);\n        }\n      }\n      \n      const avgGain = gains / rsiPeriod;\n      const avgLoss = losses / rsiPeriod;\n      const rs = avgGain / avgLoss;\n      const rsi = 100 - (100 / (1 + rs));\n      \n      return {\n        sma20,\n        ema12,\n        rsi,\n        lastUpdate: Date.now()\n      };\n    }\n    \n    return {\n      sma20,\n      ema12,\n      rsi: null,\n      lastUpdate: Date.now()\n    };\n  }\n}\n\n// Export singleton instance\nexport const liveMarketService = new LiveMarketService();\nexport default liveMarketService;\n\n// React hook for easy integration\nexport function useMarketData(symbol?: string) {\n  const [data, setData] = React.useState<MarketTicker | MarketTicker[] | null>(null);\n  \n  React.useEffect(() => {\n    const updateData = () => {\n      setData(liveMarketService.getMarketData(symbol));\n    };\n    \n    updateData();\n    \n    const channel = symbol ? `ticker:${symbol}` : 'ticker:all';\n    const unsubscribe = liveMarketService.subscribe(channel, updateData);\n    \n    return unsubscribe;\n  }, [symbol]);\n  \n  return data;\n}\n\nexport function useCandlestickData(symbol: string, limit = 100) {\n  const [data, setData] = React.useState<CandlestickData[]>([]);\n  \n  React.useEffect(() => {\n    const updateData = (newData: CandlestickData[]) => {\n      setData(newData);\n    };\n    \n    setData(liveMarketService.getCandlestickData(symbol, limit));\n    \n    const unsubscribe = liveMarketService.subscribe(`candles:${symbol}`, updateData);\n    \n    return unsubscribe;\n  }, [symbol, limit]);\n  \n  return data;\n}\n\nexport function useOrderBook(symbol: string) {\n  const [data, setData] = React.useState<OrderBook | null>(null);\n  \n  React.useEffect(() => {\n    const updateData = (newData: OrderBook) => {\n      setData(newData);\n    };\n    \n    setData(liveMarketService.getOrderBook(symbol));\n    \n    const unsubscribe = liveMarketService.subscribe(`orderbook:${symbol}`, updateData);\n    \n    return unsubscribe;\n  }, [symbol]);\n  \n  return data;\n}\n\nexport function useRecentTrades(symbol: string, limit = 20) {\n  const [data, setData] = React.useState<Trade[]>([]);\n  \n  React.useEffect(() => {\n    const updateData = (newData: Trade[]) => {\n      setData(newData);\n    };\n    \n    setData(liveMarketService.getRecentTrades(symbol, limit));\n    \n    const unsubscribe = liveMarketService.subscribe(`trades:${symbol}`, updateData);\n    \n    return unsubscribe;\n  }, [symbol, limit]);\n  \n  return data;\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2905, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/trading/LiveChart.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useRef } from 'react';\nimport { Activity, TrendingUp, TrendingDown } from 'lucide-react';\nimport { liveMarketService } from '@/services/liveMarketService';\n\ninterface LiveChartProps {\n  symbol: string;\n  timeframe: string;\n  data: {\n    symbol: string;\n    name: string;\n    price: number;\n    change: number;\n    changePercent: number;\n    volume: number;\n    marketCap: number;\n    high24h: number;\n    low24h: number;\n    sector: string;\n    type: 'stock' | 'crypto' | 'forex' | 'commodity';\n  };\n  isLive: boolean;\n}\n\ninterface CandlestickData {\n  timestamp: number;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n}\n\nexport default function LiveChart({ symbol, timeframe, data, isLive }: LiveChartProps) {\n  const [chartData, setChartData] = useState<CandlestickData[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [livePrice, setLivePrice] = useState(data.price);\n  const [priceChange, setPriceChange] = useState(0);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const lastPriceRef = useRef(data.price);\n\n  const formatCurrency = (value: number, decimals: number = 2) => {\n    if (data.type === 'crypto') {\n      return `$${value.toLocaleString('en-US', { minimumFractionDigits: decimals, maximumFractionDigits: decimals })}`;\n    } else if (data.type === 'forex') {\n      return value.toFixed(4);\n    } else {\n      return `$${value.toLocaleString('en-US', { minimumFractionDigits: decimals, maximumFractionDigits: decimals })}`;\n    }\n  };\n\n  // Subscribe to live price updates\n  useEffect(() => {\n    if (!isLive) return;\n\n    const unsubscribe = liveMarketService.subscribe(symbol, (ticker) => {\n      const newPrice = ticker.price;\n      const change = newPrice - lastPriceRef.current;\n      \n      setLivePrice(newPrice);\n      setPriceChange(change);\n      lastPriceRef.current = newPrice;\n      \n      // Update the latest candlestick with new price\n      setChartData(prevData => {\n        if (prevData.length === 0) return prevData;\n        \n        const updatedData = [...prevData];\n        const lastCandle = updatedData[updatedData.length - 1];\n        \n        updatedData[updatedData.length - 1] = {\n          ...lastCandle,\n          close: newPrice,\n          high: Math.max(lastCandle.high, newPrice),\n          low: Math.min(lastCandle.low, newPrice)\n        };\n        \n        return updatedData;\n      });\n    });\n\n    return () => {\n      if (unsubscribe) unsubscribe();\n    };\n  }, [symbol, isLive]);\n\n  // Generate mock candlestick data\n  useEffect(() => {\n    const generateMockData = () => {\n      const now = Date.now();\n      const intervals = {\n        '1D': 24 * 60 * 60 * 1000, // 1 day\n        '1W': 7 * 24 * 60 * 60 * 1000, // 1 week\n        '1M': 30 * 24 * 60 * 60 * 1000, // 1 month\n        '3M': 90 * 24 * 60 * 60 * 1000, // 3 months\n        '1Y': 365 * 24 * 60 * 60 * 1000, // 1 year\n      };\n      \n      const interval = intervals[timeframe as keyof typeof intervals] || intervals['1D'];\n      const points = timeframe === '1D' ? 24 : timeframe === '1W' ? 7 : timeframe === '1M' ? 30 : timeframe === '3M' ? 90 : 365;\n      const stepSize = interval / points;\n      \n      const mockData: CandlestickData[] = [];\n      let currentPrice = data.price;\n      \n      for (let i = points; i >= 0; i--) {\n        const timestamp = now - (i * stepSize);\n        const volatility = 0.02; // 2% volatility\n        const change = (Math.random() - 0.5) * volatility * currentPrice;\n        \n        const open = currentPrice;\n        const close = currentPrice + change;\n        const high = Math.max(open, close) + Math.random() * 0.01 * currentPrice;\n        const low = Math.min(open, close) - Math.random() * 0.01 * currentPrice;\n        const volume = Math.random() * 1000000;\n        \n        mockData.push({\n          timestamp,\n          open,\n          high,\n          low,\n          close,\n          volume\n        });\n        \n        currentPrice = close;\n      }\n      \n      return mockData;\n    };\n\n    setIsLoading(true);\n    const timer = setTimeout(() => {\n      setChartData(generateMockData());\n      setIsLoading(false);\n    }, 500);\n\n    return () => clearTimeout(timer);\n  }, [symbol, timeframe, data.price]);\n\n  // Draw simple candlestick chart\n  useEffect(() => {\n    if (!canvasRef.current || chartData.length === 0) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Set canvas size\n    const rect = canvas.getBoundingClientRect();\n    canvas.width = rect.width * window.devicePixelRatio;\n    canvas.height = rect.height * window.devicePixelRatio;\n    ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n\n    // Clear canvas\n    ctx.clearRect(0, 0, rect.width, rect.height);\n\n    // Calculate price range\n    const prices = chartData.flatMap(d => [d.high, d.low]);\n    const minPrice = Math.min(...prices);\n    const maxPrice = Math.max(...prices);\n    const priceRange = maxPrice - minPrice;\n\n    // Chart dimensions\n    const padding = 40;\n    const chartWidth = rect.width - padding * 2;\n    const chartHeight = rect.height - padding * 2;\n    const candleWidth = chartWidth / chartData.length * 0.8;\n\n    // Draw grid lines\n    ctx.strokeStyle = '#e5e7eb';\n    ctx.lineWidth = 1;\n    for (let i = 0; i <= 5; i++) {\n      const y = padding + (chartHeight / 5) * i;\n      ctx.beginPath();\n      ctx.moveTo(padding, y);\n      ctx.lineTo(rect.width - padding, y);\n      ctx.stroke();\n    }\n\n    // Draw candlesticks\n    chartData.forEach((candle, index) => {\n      const x = padding + (chartWidth / chartData.length) * index + candleWidth / 4;\n      const openY = padding + chartHeight - ((candle.open - minPrice) / priceRange) * chartHeight;\n      const closeY = padding + chartHeight - ((candle.close - minPrice) / priceRange) * chartHeight;\n      const highY = padding + chartHeight - ((candle.high - minPrice) / priceRange) * chartHeight;\n      const lowY = padding + chartHeight - ((candle.low - minPrice) / priceRange) * chartHeight;\n\n      const isGreen = candle.close > candle.open;\n      ctx.fillStyle = isGreen ? '#10b981' : '#ef4444';\n      ctx.strokeStyle = isGreen ? '#10b981' : '#ef4444';\n      ctx.lineWidth = 1;\n\n      // Draw wick\n      ctx.beginPath();\n      ctx.moveTo(x + candleWidth / 2, highY);\n      ctx.lineTo(x + candleWidth / 2, lowY);\n      ctx.stroke();\n\n      // Draw body\n      const bodyTop = Math.min(openY, closeY);\n      const bodyHeight = Math.abs(closeY - openY);\n      ctx.fillRect(x, bodyTop, candleWidth, bodyHeight || 1);\n    });\n\n    // Draw price labels\n    ctx.fillStyle = '#6b7280';\n    ctx.font = '12px sans-serif';\n    ctx.textAlign = 'right';\n    for (let i = 0; i <= 5; i++) {\n      const price = minPrice + (priceRange / 5) * (5 - i);\n      const y = padding + (chartHeight / 5) * i;\n      ctx.fillText(formatCurrency(price), padding - 10, y + 4);\n    }\n  }, [chartData, data.type]);\n\n  if (isLoading) {\n    return (\n      <div className=\"h-full flex items-center justify-center\">\n        <div className=\"text-center\">\n          <Activity className=\"h-8 w-8 text-blue-500 mx-auto mb-2 animate-spin\" />\n          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Loading chart data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      {/* Chart Header */}\n      <div className=\"flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-600\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"flex items-center space-x-2\">\n            {isLive && <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\" />}\n            <h3 className=\"font-semibold text-gray-900 dark:text-white\">{symbol}</h3>\n          </div>\n          <span className=\"text-sm text-gray-500 dark:text-gray-400\">{data.name}</span>\n        </div>\n        <div className=\"text-right\">\n          <div className={`text-lg font-bold transition-colors duration-200 ${\n            isLive && priceChange !== 0 \n              ? priceChange > 0 \n                ? 'text-green-600' \n                : 'text-red-600'\n              : 'text-gray-900 dark:text-white'\n          }`}>\n            {formatCurrency(isLive ? livePrice : data.price, data.type === 'forex' ? 4 : 2)}\n            {isLive && priceChange !== 0 && (\n              <span className={`ml-2 text-sm ${\n                priceChange > 0 ? 'text-green-600' : 'text-red-600'\n              }`}>\n                ({priceChange > 0 ? '+' : ''}{priceChange.toFixed(2)})\n              </span>\n            )}\n          </div>\n          <div className={`flex items-center text-sm ${\n            data.change >= 0 ? 'text-green-600' : 'text-red-600'\n          }`}>\n            {data.change >= 0 ? <TrendingUp className=\"w-4 h-4 mr-1\" /> : <TrendingDown className=\"w-4 h-4 mr-1\" />}\n            {data.change >= 0 ? '+' : ''}{data.change.toFixed(2)} ({data.changePercent.toFixed(2)}%)\n          </div>\n        </div>\n      </div>\n\n      {/* Chart Canvas */}\n      <div className=\"flex-1 relative\">\n        <canvas\n          ref={canvasRef}\n          className=\"w-full h-full\"\n          style={{ width: '100%', height: '100%' }}\n        />\n      </div>\n\n      {/* Chart Footer */}\n      <div className=\"p-4 border-t border-gray-200 dark:border-gray-600\">\n        <div className=\"grid grid-cols-4 gap-4 text-sm\">\n          <div>\n            <span className=\"text-gray-500 dark:text-gray-400\">Volume:</span>\n            <div className=\"font-medium text-gray-900 dark:text-white\">\n              {data.volume.toLocaleString()}\n            </div>\n          </div>\n          <div>\n            <span className=\"text-gray-500 dark:text-gray-400\">24h High:</span>\n            <div className=\"font-medium text-gray-900 dark:text-white\">\n              {formatCurrency(data.high24h, data.type === 'forex' ? 4 : 2)}\n            </div>\n          </div>\n          <div>\n            <span className=\"text-gray-500 dark:text-gray-400\">24h Low:</span>\n            <div className=\"font-medium text-gray-900 dark:text-white\">\n              {formatCurrency(data.low24h, data.type === 'forex' ? 4 : 2)}\n            </div>\n          </div>\n          <div>\n            <span className=\"text-gray-500 dark:text-gray-400\">Market Cap:</span>\n            <div className=\"font-medium text-gray-900 dark:text-white\">\n              {data.marketCap > 0 ? `$${(data.marketCap / 1e9).toFixed(1)}B` : 'N/A'}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3379, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/app/trading/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useAuth } from '@/contexts/AuthContext';\nimport AppLayout from '@/components/layouts/AppLayout';\nimport {\n  TrendingUp,\n  TrendingDown,\n  DollarSign,\n  BarChart3,\n  LineChart,\n  Activity,\n  Search,\n  Filter,\n  Star,\n  Clock,\n  Volume2,\n  ArrowUpRight,\n  ArrowDownRight,\n  Plus,\n  Minus,\n  RefreshCw,\n  Eye,\n  Settings,\n  Zap,\n  Code,\n  Target,\n  ArrowRight\n} from 'lucide-react';\nimport Link from 'next/link';\nimport { tradingService, CreateTradeRequest } from '@/services/tradingService';\nimport { toast } from 'react-hot-toast';\nimport BrokerAccountSelector from '@/components/BrokerAccountSelector';\nimport { useBrokerAccount } from '@/contexts/BrokerAccountContext';\nimport { liveMarketService, useMarketData } from '@/services/liveMarketService';\nimport LiveChart from '@/components/trading/LiveChart';\n\ninterface MarketData {\n  symbol: string;\n  name: string;\n  price: number;\n  change: number;\n  changePercent: number;\n  volume: number;\n  marketCap: number;\n  high24h: number;\n  low24h: number;\n  sector: string;\n  type: 'stock' | 'crypto' | 'forex' | 'commodity';\n}\n\ninterface OrderBookEntry {\n  price: number;\n  quantity: number;\n  total: number;\n}\n\ninterface Trade {\n  id: string;\n  symbol: string;\n  type: 'buy' | 'sell';\n  quantity: number;\n  price: number;\n  timestamp: string;\n  status: 'pending' | 'filled' | 'cancelled';\n}\n\nexport default function TradingPage() {\n  const { user } = useAuth();\n  const { selectedAccount: selectedBrokerAccount, setSelectedAccount: setSelectedBrokerAccount } = useBrokerAccount();\n  const [activeTab, setActiveTab] = useState<'market' | 'watchlist' | 'orders' | 'chart'>('market');\n  const [selectedAsset, setSelectedAsset] = useState<string>('AAPL');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [orderType, setOrderType] = useState<'market' | 'limit' | 'stop'>('market');\n  const [orderSide, setOrderSide] = useState<'buy' | 'sell'>('buy');\n  const [orderQuantity, setOrderQuantity] = useState('');\n  const [orderPrice, setOrderPrice] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [portfolioId, setPortfolioId] = useState('');\n  const [isPlacingOrder, setIsPlacingOrder] = useState(false);\n  const [selectedTimeframe, setSelectedTimeframe] = useState('1D');\n  const [isLiveDataEnabled, setIsLiveDataEnabled] = useState(false);\n  \n  // Get live market data\n  const liveMarketData = useMarketData();\n\n  // Initialize market data (will be updated with live data)\n  const [marketData, setMarketData] = useState<MarketData[]>([\n    {\n      symbol: 'AAPL',\n      name: 'Apple Inc.',\n      price: 175.80,\n      change: 2.45,\n      changePercent: 1.41,\n      volume: 45678900,\n      marketCap: 2800000000000,\n      high24h: 177.20,\n      low24h: 173.50,\n      sector: 'Technology',\n      type: 'stock'\n    },\n    {\n      symbol: 'TSLA',\n      name: 'Tesla Inc.',\n      price: 245.30,\n      change: -3.20,\n      changePercent: -1.29,\n      volume: 32456780,\n      marketCap: 780000000000,\n      high24h: 250.80,\n      low24h: 243.10,\n      sector: 'Automotive',\n      type: 'stock'\n    },\n    {\n      symbol: 'BTC',\n      name: 'Bitcoin',\n      price: 52000.00,\n      change: 1200.00,\n      changePercent: 2.36,\n      volume: 28000000000,\n      marketCap: 1020000000000,\n      high24h: 53500.00,\n      low24h: 50800.00,\n      sector: 'Cryptocurrency',\n      type: 'crypto'\n    },\n    {\n      symbol: 'ETH',\n      name: 'Ethereum',\n      price: 3200.50,\n      change: 85.30,\n      changePercent: 2.74,\n      volume: 15000000000,\n      marketCap: 385000000000,\n      high24h: 3250.00,\n      low24h: 3100.00,\n      sector: 'Cryptocurrency',\n      type: 'crypto'\n    },\n    {\n      symbol: 'EURUSD',\n      name: 'Euro/US Dollar',\n      price: 1.0875,\n      change: 0.0025,\n      changePercent: 0.23,\n      volume: 125000000,\n      marketCap: 0,\n      high24h: 1.0890,\n      low24h: 1.0850,\n      sector: 'Forex',\n      type: 'forex'\n    }\n  ]);\n\n  // Mock order book data\n  const [orderBook, setOrderBook] = useState({\n    bids: [\n      { price: 175.75, quantity: 1500, total: 263625 },\n      { price: 175.70, quantity: 2300, total: 404110 },\n      { price: 175.65, quantity: 1800, total: 316170 },\n      { price: 175.60, quantity: 2100, total: 368760 },\n      { price: 175.55, quantity: 1200, total: 210660 }\n    ],\n    asks: [\n      { price: 175.85, quantity: 1200, total: 211020 },\n      { price: 175.90, quantity: 1800, total: 316620 },\n      { price: 175.95, quantity: 2200, total: 387090 },\n      { price: 176.00, quantity: 1500, total: 264000 },\n      { price: 176.05, quantity: 1900, total: 334495 }\n    ]\n  });\n\n  // Mock recent trades\n  const [recentTrades, setRecentTrades] = useState<Trade[]>([\n    {\n      id: '1',\n      symbol: 'AAPL',\n      type: 'buy',\n      quantity: 100,\n      price: 175.80,\n      timestamp: '2024-03-15T10:30:00Z',\n      status: 'filled'\n    },\n    {\n      id: '2',\n      symbol: 'TSLA',\n      type: 'sell',\n      quantity: 50,\n      price: 245.30,\n      timestamp: '2024-03-15T10:25:00Z',\n      status: 'filled'\n    },\n    {\n      id: '3',\n      symbol: 'BTC',\n      type: 'buy',\n      quantity: 0.1,\n      price: 52000.00,\n      timestamp: '2024-03-15T10:20:00Z',\n      status: 'pending'\n    }\n  ]);\n\n  const [watchlist, setWatchlist] = useState<string[]>(['AAPL', 'TSLA', 'BTC']);\n\n  useEffect(() => {\n    if (user) {\n      setLoading(false);\n      // In a real app, you'd fetch the user's portfolio ID\n      setPortfolioId('default-portfolio');\n      \n      // Enable live market data\n      setIsLiveDataEnabled(true);\n    }\n    \n    return () => {\n      // Cleanup handled by liveMarketService internally\n      if (isLiveDataEnabled) {\n        liveMarketService.disconnect();\n      }\n    };\n  }, [user]);\n  \n  // Update market data with live data\n  useEffect(() => {\n    if (liveMarketData && Array.isArray(liveMarketData)) {\n      const getAssetName = (symbol: string) => {\n        const assetNames: { [key: string]: string } = {\n          'AAPL': 'Apple Inc.',\n          'TSLA': 'Tesla Inc.',\n          'BTC': 'Bitcoin',\n          'ETH': 'Ethereum',\n          'EURUSD': 'Euro/US Dollar'\n        };\n        return assetNames[symbol] || symbol;\n      };\n      \n      const getAssetSector = (symbol: string) => {\n        const sectors: { [key: string]: string } = {\n          'AAPL': 'Technology',\n          'TSLA': 'Automotive',\n          'BTC': 'Cryptocurrency',\n          'ETH': 'Cryptocurrency',\n          'EURUSD': 'Forex'\n        };\n        return sectors[symbol] || 'Unknown';\n      };\n      \n      const getAssetType = (symbol: string): 'stock' | 'crypto' | 'forex' | 'commodity' => {\n        if (['BTC', 'ETH'].includes(symbol)) return 'crypto';\n        if (['EURUSD'].includes(symbol)) return 'forex';\n        return 'stock';\n      };\n      \n      const updatedMarketData = liveMarketData.map(ticker => ({\n        symbol: ticker.symbol,\n        name: getAssetName(ticker.symbol),\n        price: ticker.price,\n        change: ticker.change,\n        changePercent: ticker.changePercent,\n        volume: ticker.volume,\n        marketCap: ticker.marketCap || 0,\n        high24h: ticker.high24h,\n        low24h: ticker.low24h,\n        sector: getAssetSector(ticker.symbol),\n        type: getAssetType(ticker.symbol)\n      }));\n      setMarketData(updatedMarketData);\n    }\n  }, [liveMarketData]);\n\n  const selectedAssetData = marketData.find(asset => asset.symbol === selectedAsset);\n\n  const filteredMarketData = marketData.filter(asset => \n    asset.symbol.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    asset.name.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const formatCurrency = (amount: number, decimals = 2) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: decimals,\n      maximumFractionDigits: decimals\n    }).format(amount);\n  };\n\n  const formatNumber = (num: number) => {\n    if (num >= 1e12) return (num / 1e12).toFixed(2) + 'T';\n    if (num >= 1e9) return (num / 1e9).toFixed(2) + 'B';\n    if (num >= 1e6) return (num / 1e6).toFixed(2) + 'M';\n    if (num >= 1e3) return (num / 1e3).toFixed(2) + 'K';\n    return num.toLocaleString();\n  };\n\n  const handleAddToWatchlist = (symbol: string) => {\n    if (!watchlist.includes(symbol)) {\n      setWatchlist([...watchlist, symbol]);\n    }\n  };\n\n  const handleRemoveFromWatchlist = (symbol: string) => {\n    setWatchlist(watchlist.filter(s => s !== symbol));\n  };\n\n  const handlePlaceOrder = async () => {\n    if (!selectedAsset || !orderQuantity || !portfolioId || !selectedBrokerAccount) {\n      toast.error('Please fill in all required fields including broker account');\n      return;\n    }\n\n    const tradeData: CreateTradeRequest = {\n      portfolioId,\n      symbol: selectedAsset,\n      marketType: 'STOCKS', // Default to stocks, can be enhanced to detect market type\n      side: orderSide.toUpperCase() as 'BUY' | 'SELL',\n      quantity: parseFloat(orderQuantity),\n      price: orderType === 'market' ? 0 : parseFloat(orderPrice || '0'),\n      orderType: orderType.toUpperCase() as 'MARKET' | 'LIMIT',\n      brokerAccountId: selectedBrokerAccount?.id,\n      brokerConnectionId: selectedBrokerAccount?.brokerConnection?.id\n    };\n\n    // Validate trade data\n    const validation = tradingService.validateTradeData(tradeData);\n    if (!validation.isValid) {\n      validation.errors.forEach(error => toast.error(error));\n      return;\n    }\n\n    setIsPlacingOrder(true);\n    try {\n      await tradingService.createTrade(tradeData);\n      \n      // Reset form on success\n      setOrderQuantity('');\n      setOrderPrice('');\n      setPortfolioId('');\n    } catch (error) {\n      // Error handling is done in the service\n    } finally {\n      setIsPlacingOrder(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <AppLayout>\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 p-6\">\n        {/* Header */}\n      <div className=\"bg-white dark:bg-gray-800 shadow-sm border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"py-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">\n                  Trading\n                </h1>\n                <p className=\"text-gray-600 dark:text-gray-400\">\n                  Trade stocks, crypto, forex, and commodities\n                </p>\n              </div>\n              <div className=\"flex items-center space-x-3\">\n                <button className=\"p-2 text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white transition-colors\">\n                  <RefreshCw className=\"h-5 w-5\" />\n                </button>\n                <button className=\"p-2 text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white transition-colors\">\n                  <Settings className=\"h-5 w-5\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Trading Features Navigation */}\n      <div className=\"bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"py-4\">\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <Link\n                href=\"/trading/pine-editor\"\n                className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors group\"\n              >\n                <div className=\"flex items-center space-x-3\">\n                  <Code className=\"h-5 w-5 text-blue-600\" />\n                  <div>\n                    <div className=\"text-sm font-medium text-gray-900 dark:text-white\">Pine Editor</div>\n                    <div className=\"text-xs text-gray-500 dark:text-gray-400\">Script strategies</div>\n                  </div>\n                </div>\n                <ArrowRight className=\"h-4 w-4 text-gray-400 group-hover:text-gray-600 dark:group-hover:text-gray-300\" />\n              </Link>\n              \n              <Link\n                href=\"/trading/profit-targets\"\n                className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors group\"\n              >\n                <div className=\"flex items-center space-x-3\">\n                  <Target className=\"h-5 w-5 text-green-600\" />\n                  <div>\n                    <div className=\"text-sm font-medium text-gray-900 dark:text-white\">Profit Targets</div>\n                    <div className=\"text-xs text-gray-500 dark:text-gray-400\">Daily goals</div>\n                  </div>\n                </div>\n                <ArrowRight className=\"h-4 w-4 text-gray-400 group-hover:text-gray-600 dark:group-hover:text-gray-300\" />\n              </Link>\n              \n              <Link\n                href=\"/trading/market-updates\"\n                className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors group\"\n              >\n                <div className=\"flex items-center space-x-3\">\n                  <Activity className=\"h-5 w-5 text-green-600\" />\n                  <div>\n                    <div className=\"text-sm font-medium text-gray-900 dark:text-white\">Market Updates</div>\n                    <div className=\"text-xs text-gray-500 dark:text-gray-400\">Live data</div>\n                  </div>\n                </div>\n                <ArrowRight className=\"h-4 w-4 text-gray-400 group-hover:text-gray-600 dark:group-hover:text-gray-300\" />\n              </Link>\n              \n              <Link\n                href=\"/trading/futures\"\n                className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors group\"\n              >\n                <div className=\"flex items-center space-x-3\">\n                  <BarChart3 className=\"h-5 w-5 text-blue-600\" />\n                  <div>\n                    <div className=\"text-sm font-medium text-gray-900 dark:text-white\">Futures</div>\n                    <div className=\"text-xs text-gray-500 dark:text-gray-400\">Contracts</div>\n                  </div>\n                </div>\n                <ArrowRight className=\"h-4 w-4 text-gray-400 group-hover:text-gray-600 dark:group-hover:text-gray-300\" />\n              </Link>\n            </div>\n            \n            <div className=\"mt-4\">\n              <Link\n                href=\"/trading/options\"\n                className=\"flex items-center justify-between p-4 bg-gradient-to-r from-purple-50 to-blue-50 dark:from-purple-900/20 dark:to-blue-900/20 rounded-lg hover:from-purple-100 hover:to-blue-100 dark:hover:from-purple-900/30 dark:hover:to-blue-900/30 transition-colors group border border-purple-200 dark:border-purple-700\"\n              >\n                <div className=\"flex items-center space-x-3\">\n                  <Target className=\"h-5 w-5 text-purple-600\" />\n                  <div>\n                    <div className=\"text-sm font-medium text-gray-900 dark:text-white\">Options Trading</div>\n                    <div className=\"text-xs text-gray-500 dark:text-gray-400\">Advanced strategies with Greeks calculation</div>\n                  </div>\n                </div>\n                <ArrowRight className=\"h-4 w-4 text-gray-400 group-hover:text-gray-600 dark:group-hover:text-gray-300\" />\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n          {/* Market Data / Watchlist */}\n          <div className=\"lg:col-span-1\">\n            <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n              {/* Tabs */}\n              <div className=\"flex border-b border-gray-200 dark:border-gray-700\">\n                <button\n                  onClick={() => setActiveTab('market')}\n                  className={`flex-1 px-4 py-3 text-sm font-medium ${\n                    activeTab === 'market'\n                      ? 'text-blue-600 dark:text-blue-400 border-b-2 border-blue-600 dark:border-blue-400'\n                      : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white'\n                  }`}\n                >\n                  Market\n                </button>\n                <button\n                  onClick={() => setActiveTab('watchlist')}\n                  className={`flex-1 px-4 py-3 text-sm font-medium ${\n                    activeTab === 'watchlist'\n                      ? 'text-blue-600 dark:text-blue-400 border-b-2 border-blue-600 dark:border-blue-400'\n                      : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white'\n                  }`}\n                >\n                  Watchlist\n                </button>\n              </div>\n\n              {/* Search */}\n              <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\n                <div className=\"relative\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search assets...\"\n                    value={searchQuery}\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                    className=\"w-full pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                  />\n                </div>\n              </div>\n\n              {/* Asset List */}\n              <div className=\"max-h-96 overflow-y-auto\">\n                {(activeTab === 'market' ? filteredMarketData : marketData.filter(asset => watchlist.includes(asset.symbol))).map((asset) => (\n                  <div\n                    key={asset.symbol}\n                    onClick={() => setSelectedAsset(asset.symbol)}\n                    className={`p-4 border-b border-gray-200 dark:border-gray-700 cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700 ${\n                      selectedAsset === asset.symbol ? 'bg-blue-50 dark:bg-blue-900/20' : ''\n                    }`}\n                  >\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"font-semibold text-gray-900 dark:text-white\">{asset.symbol}</span>\n                        <button\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            if (watchlist.includes(asset.symbol)) {\n                              handleRemoveFromWatchlist(asset.symbol);\n                            } else {\n                              handleAddToWatchlist(asset.symbol);\n                            }\n                          }}\n                          className={`p-1 rounded ${\n                            watchlist.includes(asset.symbol)\n                              ? 'text-yellow-500 hover:text-yellow-600'\n                              : 'text-gray-400 hover:text-yellow-500'\n                          }`}\n                        >\n                          <Star className={`h-3 w-3 ${watchlist.includes(asset.symbol) ? 'fill-current' : ''}`} />\n                        </button>\n                      </div>\n                      <span className={`text-sm font-medium ${\n                        asset.change >= 0 ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'\n                      }`}>\n                        {asset.change >= 0 ? '+' : ''}{asset.changePercent.toFixed(2)}%\n                      </span>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm text-gray-600 dark:text-gray-400\">{asset.name}</span>\n                      <span className=\"font-medium text-gray-900 dark:text-white\">\n                        {formatCurrency(asset.price, asset.type === 'forex' ? 4 : 2)}\n                      </span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Chart and Trading Interface */}\n          <div className=\"lg:col-span-3\">\n            <div className=\"grid grid-cols-1 xl:grid-cols-3 gap-6\">\n              {/* Chart */}\n              <div className=\"xl:col-span-2\">\n                <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n                  <div className=\"flex items-center justify-between mb-6\">\n                    <div>\n                      <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">\n                        {selectedAssetData?.symbol} - {selectedAssetData?.name}\n                      </h2>\n                      <div className=\"flex items-center space-x-4 mt-2\">\n                        <span className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                          {selectedAssetData && formatCurrency(selectedAssetData.price, selectedAssetData.type === 'forex' ? 4 : 2)}\n                        </span>\n                        <span className={`flex items-center text-sm font-medium ${\n                          selectedAssetData && selectedAssetData.change >= 0 ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'\n                        }`}>\n                          {selectedAssetData && selectedAssetData.change >= 0 ? <ArrowUpRight className=\"h-4 w-4 mr-1\" /> : <ArrowDownRight className=\"h-4 w-4 mr-1\" />}\n                          {selectedAssetData && formatCurrency(Math.abs(selectedAssetData.change), 2)} ({selectedAssetData && selectedAssetData.changePercent.toFixed(2)}%)\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"flex space-x-1\">\n                      {['1D', '1W', '1M', '3M', '1Y'].map((period) => (\n                        <button\n                          key={period}\n                          onClick={() => setSelectedTimeframe(period)}\n                          className={`px-3 py-1 text-xs font-medium rounded ${\n                            selectedTimeframe === period\n                              ? 'bg-blue-600 text-white'\n                              : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-gray-700'\n                          }`}\n                        >\n                          {period}\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n                  \n                  {/* Live Chart */}\n                   <div className=\"h-80 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 overflow-hidden\">\n                     {isLiveDataEnabled && selectedAssetData ? (\n                       <LiveChart \n                         symbol={selectedAsset}\n                         timeframe={selectedTimeframe}\n                         data={selectedAssetData}\n                         isLive={isLiveDataEnabled}\n                       />\n                     ) : (\n                       <div className=\"h-full flex items-center justify-center\">\n                         <div className=\"text-center\">\n                           <LineChart className=\"h-16 w-16 text-gray-400 mx-auto mb-4\" />\n                           <p className=\"text-gray-500 dark:text-gray-400\">Connecting to live market data...</p>\n                           <p className=\"text-sm text-gray-400 dark:text-gray-500 mt-2\">\n                             Real-time price data and technical indicators\n                           </p>\n                         </div>\n                       </div>\n                     )}\n                   </div>\n\n                  {/* Asset Stats */}\n                  {selectedAssetData && (\n                    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mt-6 pt-6 border-t border-gray-200 dark:border-gray-700\">\n                      <div>\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400\">24h High</p>\n                        <p className=\"font-semibold text-gray-900 dark:text-white\">\n                          {formatCurrency(selectedAssetData.high24h, selectedAssetData.type === 'forex' ? 4 : 2)}\n                        </p>\n                      </div>\n                      <div>\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400\">24h Low</p>\n                        <p className=\"font-semibold text-gray-900 dark:text-white\">\n                          {formatCurrency(selectedAssetData.low24h, selectedAssetData.type === 'forex' ? 4 : 2)}\n                        </p>\n                      </div>\n                      <div>\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400\">Volume</p>\n                        <p className=\"font-semibold text-gray-900 dark:text-white\">\n                          {formatNumber(selectedAssetData.volume)}\n                        </p>\n                      </div>\n                      {selectedAssetData.marketCap > 0 && (\n                        <div>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Market Cap</p>\n                          <p className=\"font-semibold text-gray-900 dark:text-white\">\n                            {formatNumber(selectedAssetData.marketCap)}\n                          </p>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              {/* Trading Interface */}\n              <div className=\"xl:col-span-1\">\n                <div className=\"space-y-6\">\n                  {/* New Trade Button */}\n                  <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n                    <button\n                      onClick={() => {\n                        setOrderQuantity('');\n                        setOrderPrice('');\n                        setOrderType('market');\n                        setOrderSide('buy');\n                        toast.success('Ready to place a new trade!');\n                      }}\n                      className=\"w-full inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2 bg-gradient-to-r from-purple-500 to-blue-500 hover:from-purple-600 hover:to-blue-600\"\n                    >\n                      <Plus className=\"w-4 h-4 mr-2\" />\n                      New Trade\n                    </button>\n                  </div>\n                  \n                  {/* Order Form */}\n                  <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Place Order</h3>\n                    \n                    {/* Order Type */}\n                    <div className=\"mb-4\">\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                        Order Type\n                      </label>\n                      <div className=\"grid grid-cols-3 gap-2 mb-2\">\n                        {[\n                          { value: 'market', label: 'Market', icon: '⚡' },\n                          { value: 'limit', label: 'Limit', icon: '🎯' },\n                          { value: 'stop', label: 'Stop', icon: '🛑' }\n                        ].map((type) => (\n                          <button\n                            key={type.value}\n                            onClick={() => setOrderType(type.value as any)}\n                            className={`py-2 px-3 text-xs font-medium rounded-lg transition-colors flex items-center justify-center ${\n                              orderType === type.value\n                                ? 'bg-blue-600 text-white shadow-lg'\n                                : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\n                            }`}\n                          >\n                            <span className=\"mr-1\">{type.icon}</span>\n                            {type.label}\n                          </button>\n                        ))}\n                      </div>\n                      {orderType === 'market' && selectedAssetData && (\n                        <div className=\"text-xs text-gray-500 dark:text-gray-400 bg-gray-50 dark:bg-gray-700 p-2 rounded\">\n                          Market Price: {formatCurrency(selectedAssetData.price, selectedAssetData.type === 'forex' ? 4 : 2)}\n                        </div>\n                      )}\n                    </div>\n\n                    {/* Buy/Sell Toggle */}\n                    <div className=\"flex space-x-1 mb-4\">\n                      <button\n                        onClick={() => setOrderSide('buy')}\n                        className={`flex-1 py-3 px-3 font-medium rounded transition-colors flex items-center justify-center ${\n                          orderSide === 'buy'\n                            ? 'bg-green-600 text-white shadow-lg'\n                            : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\n                        }`}\n                      >\n                        <TrendingUp className=\"w-4 h-4 mr-2\" />\n                        Buy\n                      </button>\n                      <button\n                        onClick={() => setOrderSide('sell')}\n                        className={`flex-1 py-3 px-3 font-medium rounded transition-colors flex items-center justify-center ${\n                          orderSide === 'sell'\n                            ? 'bg-red-600 text-white shadow-lg'\n                            : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\n                        }`}\n                      >\n                        <TrendingDown className=\"w-4 h-4 mr-2\" />\n                        Sell\n                      </button>\n                    </div>\n\n                    {/* Broker Account */}\n                    <div className=\"mb-4\">\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                        Broker Account\n                      </label>\n                      <BrokerAccountSelector\n                        selectedAccount={selectedBrokerAccount}\n                        onAccountSelect={setSelectedBrokerAccount}\n                        placeholder=\"Select a broker account for trading\"\n                      />\n                    </div>\n\n                    {/* Portfolio */}\n                    <div className=\"mb-4\">\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                        Portfolio\n                      </label>\n                      <select\n                        value={portfolioId}\n                        onChange={(e) => setPortfolioId(e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                      >\n                        <option value=\"\">Select portfolio</option>\n                        <option value=\"portfolio-1\">Main Portfolio</option>\n                        <option value=\"portfolio-2\">Growth Portfolio</option>\n                        <option value=\"portfolio-3\">Conservative Portfolio</option>\n                      </select>\n                    </div>\n\n                    {/* Quantity */}\n                    <div className=\"mb-4\">\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                        Quantity\n                      </label>\n                      <input\n                        type=\"number\"\n                        value={orderQuantity}\n                        onChange={(e) => setOrderQuantity(e.target.value)}\n                        placeholder=\"0.00\"\n                        className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent mb-2\"\n                      />\n                      {/* Quick Quantity Buttons */}\n                      <div className=\"grid grid-cols-4 gap-2\">\n                        {[1, 10, 50, 100].map((qty) => (\n                          <button\n                            key={qty}\n                            onClick={() => setOrderQuantity(qty.toString())}\n                            className=\"py-1 px-2 text-xs font-medium bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\"\n                          >\n                            {qty}\n                          </button>\n                        ))}\n                      </div>\n                    </div>\n\n                    {/* Price (for limit orders) */}\n                    {orderType !== 'market' && (\n                      <div className=\"mb-4\">\n                        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                          Price\n                        </label>\n                        <input\n                          type=\"number\"\n                          value={orderPrice}\n                          onChange={(e) => setOrderPrice(e.target.value)}\n                          placeholder=\"0.00\"\n                          className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                        />\n                      </div>\n                    )}\n\n                    {/* Order Total */}\n                    <div className=\"mb-4 p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                      <div className=\"flex justify-between text-sm\">\n                        <span className=\"text-gray-600 dark:text-gray-400\">Estimated Total:</span>\n                        <span className=\"font-medium text-gray-900 dark:text-white\">\n                          {orderQuantity && selectedAssetData ? \n                            formatCurrency(parseFloat(orderQuantity) * (orderType === 'market' ? selectedAssetData.price : parseFloat(orderPrice || '0')))\n                            : '$0.00'\n                          }\n                        </span>\n                      </div>\n                    </div>\n\n                    {/* Place Order Button */}\n                    <button\n                      onClick={handlePlaceOrder}\n                      disabled={!orderQuantity || !portfolioId || !selectedBrokerAccount || (orderType !== 'market' && !orderPrice) || isPlacingOrder}\n                      className={`w-full py-4 px-4 rounded-lg font-bold text-lg transition-all transform hover:scale-105 disabled:transform-none disabled:hover:scale-100 flex items-center justify-center ${\n                        orderSide === 'buy'\n                          ? 'bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 disabled:bg-gray-400 text-white shadow-lg'\n                          : 'bg-gradient-to-r from-red-500 to-red-600 hover:from-red-600 hover:to-red-700 disabled:bg-gray-400 text-white shadow-lg'\n                      }`}\n                    >\n                      {isPlacingOrder ? (\n                        <>\n                          <RefreshCw className=\"w-5 h-5 mr-2 animate-spin\" />\n                          Placing Order...\n                        </>\n                      ) : (\n                        <>\n                          {orderSide === 'buy' ? <TrendingUp className=\"w-5 h-5 mr-2\" /> : <TrendingDown className=\"w-5 h-5 mr-2\" />}\n                          {orderSide === 'buy' ? 'Buy' : 'Sell'} {selectedAsset}\n                        </>\n                      )}\n                    </button>\n                    \n                    {/* Quick Actions */}\n                    <div className=\"grid grid-cols-2 gap-2 mt-3\">\n                      <button\n                        onClick={() => {\n                          setOrderQuantity('');\n                           setOrderPrice('');\n                           toast.success('Order form cleared');\n                        }}\n                        className=\"py-2 px-3 text-sm font-medium bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors flex items-center justify-center\"\n                      >\n                        <Minus className=\"w-4 h-4 mr-1\" />\n                        Clear\n                      </button>\n                      <button\n                        onClick={() => {\n                          if (selectedAssetData) {\n                             setOrderPrice(selectedAssetData.price.toString());\n                             toast.success('Price set to market price');\n                           }\n                        }}\n                        className=\"py-2 px-3 text-sm font-medium bg-blue-100 dark:bg-blue-900/20 text-blue-700 dark:text-blue-400 rounded-lg hover:bg-blue-200 dark:hover:bg-blue-900/30 transition-colors flex items-center justify-center\"\n                      >\n                        <Target className=\"w-4 h-4 mr-1\" />\n                        Market\n                      </button>\n                    </div>\n                  </div>\n\n                  {/* Order Book */}\n                  <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Order Book</h3>\n                    \n                    {/* Asks */}\n                    <div className=\"mb-4\">\n                      <h4 className=\"text-sm font-medium text-red-600 dark:text-red-400 mb-2\">Asks</h4>\n                      <div className=\"space-y-1\">\n                        {orderBook.asks.slice().reverse().map((ask, index) => (\n                          <div key={index} className=\"flex justify-between text-xs\">\n                            <span className=\"text-red-600 dark:text-red-400\">{formatCurrency(ask.price, 2)}</span>\n                            <span className=\"text-gray-600 dark:text-gray-400\">{ask.quantity}</span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n\n                    {/* Spread */}\n                    <div className=\"py-2 border-y border-gray-200 dark:border-gray-700 mb-4\">\n                      <div className=\"text-center text-sm font-medium text-gray-900 dark:text-white\">\n                        Spread: {formatCurrency(orderBook.asks[0].price - orderBook.bids[0].price, 2)}\n                      </div>\n                    </div>\n\n                    {/* Bids */}\n                    <div>\n                      <h4 className=\"text-sm font-medium text-green-600 dark:text-green-400 mb-2\">Bids</h4>\n                      <div className=\"space-y-1\">\n                        {orderBook.bids.map((bid, index) => (\n                          <div key={index} className=\"flex justify-between text-xs\">\n                            <span className=\"text-green-600 dark:text-green-400\">{formatCurrency(bid.price, 2)}</span>\n                            <span className=\"text-gray-600 dark:text-gray-400\">{bid.quantity}</span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Recent Trades */}\n                  <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Recent Trades</h3>\n                    <div className=\"space-y-3\">\n                      {recentTrades.map((trade) => (\n                        <div key={trade.id} className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center space-x-2\">\n                            <div className={`h-2 w-2 rounded-full ${\n                              trade.type === 'buy' ? 'bg-green-500' : 'bg-red-500'\n                            }`}></div>\n                            <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                              {trade.symbol}\n                            </span>\n                            <span className={`text-xs px-2 py-1 rounded-full ${\n                              trade.status === 'filled' ? 'bg-green-100 dark:bg-green-900/20 text-green-700 dark:text-green-400' :\n                              trade.status === 'pending' ? 'bg-yellow-100 dark:bg-yellow-900/20 text-yellow-700 dark:text-yellow-400' :\n                              'bg-red-100 dark:bg-red-900/20 text-red-700 dark:text-red-400'\n                            }`}>\n                              {trade.status}\n                            </span>\n                          </div>\n                          <div className=\"text-right\">\n                            <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                              {formatCurrency(trade.price, 2)}\n                            </p>\n                            <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                              {trade.quantity} shares\n                            </p>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>\n    </AppLayout>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}