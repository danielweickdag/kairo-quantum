{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/components/trading/OptionsTrading.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { TrendingUp, TrendingDown, Calculator, Calendar, Target, Shield, BarChart3, Settings, Plus, Minus, AlertCircle, Info } from 'lucide-react';\n\ninterface OptionContract {\n  id: string;\n  symbol: string;\n  underlying: string;\n  strike: number;\n  expiry: string;\n  type: 'CALL' | 'PUT';\n  bid: number;\n  ask: number;\n  lastPrice: number;\n  volume: number;\n  openInterest: number;\n  impliedVolatility: number;\n  delta: number;\n  gamma: number;\n  theta: number;\n  vega: number;\n  rho: number;\n  intrinsicValue: number;\n  timeValue: number;\n}\n\ninterface OptionPosition {\n  id: string;\n  contractId: string;\n  symbol: string;\n  underlying: string;\n  strike: number;\n  expiry: string;\n  type: 'CALL' | 'PUT';\n  side: 'BUY' | 'SELL';\n  quantity: number;\n  entryPrice: number;\n  currentPrice: number;\n  unrealizedPnL: number;\n  delta: number;\n  gamma: number;\n  theta: number;\n  vega: number;\n  openTime: string;\n}\n\ninterface StrategyTemplate {\n  id: string;\n  name: string;\n  description: string;\n  legs: {\n    type: 'CALL' | 'PUT';\n    side: 'BUY' | 'SELL';\n    strike: number;\n    quantity: number;\n  }[];\n  maxProfit: number | null;\n  maxLoss: number | null;\n  breakeven: number[];\n}\n\nconst OptionsTrading: React.FC = () => {\n  const [optionChain, setOptionChain] = useState<OptionContract[]>([]);\n  const [positions, setPositions] = useState<OptionPosition[]>([]);\n  const [selectedUnderlying, setSelectedUnderlying] = useState('AAPL');\n  const [selectedExpiry, setSelectedExpiry] = useState('2024-02-16');\n  const [selectedTab, setSelectedTab] = useState<'chain' | 'positions' | 'strategies'>('chain');\n  const [underlyingPrice, setUnderlyingPrice] = useState(192.85);\n  const [accountBalance, setAccountBalance] = useState(50000);\n  const [selectedStrategy, setSelectedStrategy] = useState<string>('');\n  const [showGreeks, setShowGreeks] = useState(true);\n  const [executingStrategy, setExecutingStrategy] = useState<string | null>(null);\n  const [showOrderModal, setShowOrderModal] = useState(false);\n  const [selectedOption, setSelectedOption] = useState<OptionContract | null>(null);\n  const [orderForm, setOrderForm] = useState({\n    side: 'BUY' as 'BUY' | 'SELL',\n    quantity: 1,\n    orderType: 'MARKET' as 'MARKET' | 'LIMIT',\n    price: 0\n  });\n\n  // Custom strategy builder state\n  const [showStrategyBuilder, setShowStrategyBuilder] = useState(false);\n  const [customStrategy, setCustomStrategy] = useState({\n    name: '',\n    description: '',\n    legs: [] as { type: 'CALL' | 'PUT'; side: 'BUY' | 'SELL'; strike: number; quantity: number }[]\n  });\n\n  // Strategy templates\n  const strategyTemplates: StrategyTemplate[] = [\n    {\n      id: 'long-call',\n      name: 'Long Call',\n      description: 'Bullish strategy with unlimited upside potential',\n      legs: [{ type: 'CALL', side: 'BUY', strike: 195, quantity: 1 }],\n      maxProfit: null,\n      maxLoss: 500,\n      breakeven: [195.5]\n    },\n    {\n      id: 'long-put',\n      name: 'Long Put',\n      description: 'Bearish strategy with high profit potential',\n      legs: [{ type: 'PUT', side: 'BUY', strike: 190, quantity: 1 }],\n      maxProfit: 18500,\n      maxLoss: 450,\n      breakeven: [185.5]\n    },\n    {\n      id: 'covered-call',\n      name: 'Covered Call',\n      description: 'Generate income from stock holdings',\n      legs: [{ type: 'CALL', side: 'SELL', strike: 200, quantity: 1 }],\n      maxProfit: 1200,\n      maxLoss: null,\n      breakeven: [191.8]\n    },\n    {\n      id: 'bull-call-spread',\n      name: 'Bull Call Spread',\n      description: 'Limited risk, limited reward bullish strategy',\n      legs: [\n        { type: 'CALL', side: 'BUY', strike: 190, quantity: 1 },\n        { type: 'CALL', side: 'SELL', strike: 200, quantity: 1 }\n      ],\n      maxProfit: 800,\n      maxLoss: 200,\n      breakeven: [192]\n    },\n    {\n      id: 'iron-condor',\n      name: 'Iron Condor',\n      description: 'Neutral strategy for range-bound markets',\n      legs: [\n        { type: 'PUT', side: 'SELL', strike: 185, quantity: 1 },\n        { type: 'PUT', side: 'BUY', strike: 180, quantity: 1 },\n        { type: 'CALL', side: 'SELL', strike: 200, quantity: 1 },\n        { type: 'CALL', side: 'BUY', strike: 205, quantity: 1 }\n      ],\n      maxProfit: 300,\n      maxLoss: 200,\n      breakeven: [187, 198]\n    },\n    {\n      id: 'straddle',\n      name: 'Long Straddle',\n      description: 'Profit from high volatility in either direction',\n      legs: [\n        { type: 'CALL', side: 'BUY', strike: 195, quantity: 1 },\n        { type: 'PUT', side: 'BUY', strike: 195, quantity: 1 }\n      ],\n      maxProfit: null,\n      maxLoss: 950,\n      breakeven: [185.5, 204.5]\n    }\n  ];\n\n  // Mock option chain data\n  const generateOptionChain = (underlying: string, underlyingPrice: number, expiry: string): OptionContract[] => {\n    const strikes = [];\n    const baseStrike = Math.round(underlyingPrice / 5) * 5;\n    \n    for (let i = -10; i <= 10; i++) {\n      strikes.push(baseStrike + (i * 5));\n    }\n    \n    const options: OptionContract[] = [];\n    const daysToExpiry = Math.max(1, Math.ceil((new Date(expiry).getTime() - Date.now()) / (1000 * 60 * 60 * 24)));\n    const timeToExpiry = daysToExpiry / 365;\n    \n    strikes.forEach((strike, index) => {\n      // Calculate basic Greeks and pricing (simplified Black-Scholes approximation)\n      const moneyness = underlyingPrice / strike;\n      const isITM = (type: 'CALL' | 'PUT') => \n        type === 'CALL' ? underlyingPrice > strike : underlyingPrice < strike;\n      \n      // Call option\n      const callIntrinsic = Math.max(0, underlyingPrice - strike);\n      const callTimeValue = Math.max(0.05, Math.sqrt(timeToExpiry) * Math.abs(underlyingPrice - strike) * 0.2);\n      const callPrice = callIntrinsic + callTimeValue;\n      const callDelta = moneyness > 1 ? 0.7 - (moneyness - 1) * 0.3 : 0.3 + (moneyness - 0.8) * 0.4;\n      \n      options.push({\n        id: `${underlying}-${strike}-${expiry}-CALL`,\n        symbol: `${underlying}${expiry.replace(/-/g, '')}C${strike}`,\n        underlying,\n        strike,\n        expiry,\n        type: 'CALL',\n        bid: callPrice - 0.05,\n        ask: callPrice + 0.05,\n        lastPrice: callPrice,\n        volume: Math.floor(Math.random() * 1000) + 100,\n        openInterest: Math.floor(Math.random() * 5000) + 500,\n        impliedVolatility: 0.15 + Math.random() * 0.3,\n        delta: Math.max(0.01, Math.min(0.99, callDelta)),\n        gamma: 0.01 + Math.random() * 0.05,\n        theta: -(0.01 + Math.random() * 0.05),\n        vega: 0.05 + Math.random() * 0.15,\n        rho: 0.01 + Math.random() * 0.03,\n        intrinsicValue: callIntrinsic,\n        timeValue: callTimeValue\n      });\n      \n      // Put option\n      const putIntrinsic = Math.max(0, strike - underlyingPrice);\n      const putTimeValue = Math.max(0.05, Math.sqrt(timeToExpiry) * Math.abs(strike - underlyingPrice) * 0.2);\n      const putPrice = putIntrinsic + putTimeValue;\n      const putDelta = -(1 - Math.max(0.01, Math.min(0.99, callDelta)));\n      \n      options.push({\n        id: `${underlying}-${strike}-${expiry}-PUT`,\n        symbol: `${underlying}${expiry.replace(/-/g, '')}P${strike}`,\n        underlying,\n        strike,\n        expiry,\n        type: 'PUT',\n        bid: putPrice - 0.05,\n        ask: putPrice + 0.05,\n        lastPrice: putPrice,\n        volume: Math.floor(Math.random() * 1000) + 100,\n        openInterest: Math.floor(Math.random() * 5000) + 500,\n        impliedVolatility: 0.15 + Math.random() * 0.3,\n        delta: putDelta,\n        gamma: 0.01 + Math.random() * 0.05,\n        theta: -(0.01 + Math.random() * 0.05),\n        vega: 0.05 + Math.random() * 0.15,\n        rho: -(0.01 + Math.random() * 0.03),\n        intrinsicValue: putIntrinsic,\n        timeValue: putTimeValue\n      });\n    });\n    \n    return options;\n  };\n\n  // Mock positions\n  const mockPositions: OptionPosition[] = [\n    {\n      id: '1',\n      contractId: 'AAPL-195-2024-02-16-CALL',\n      symbol: 'AAPL240216C195',\n      underlying: 'AAPL',\n      strike: 195,\n      expiry: '2024-02-16',\n      type: 'CALL',\n      side: 'BUY',\n      quantity: 2,\n      entryPrice: 4.50,\n      currentPrice: 5.20,\n      unrealizedPnL: 140,\n      delta: 0.65,\n      gamma: 0.03,\n      theta: -0.02,\n      vega: 0.08,\n      openTime: '2024-01-15T10:30:00Z'\n    },\n    {\n      id: '2',\n      contractId: 'AAPL-190-2024-02-16-PUT',\n      symbol: 'AAPL240216P190',\n      underlying: 'AAPL',\n      strike: 190,\n      expiry: '2024-02-16',\n      type: 'PUT',\n      side: 'SELL',\n      quantity: 1,\n      entryPrice: 3.20,\n      currentPrice: 2.80,\n      unrealizedPnL: 40,\n      delta: -0.35,\n      gamma: 0.02,\n      theta: 0.015,\n      vega: -0.06,\n      openTime: '2024-01-15T14:20:00Z'\n    }\n  ];\n\n  // Initialize data\n  useEffect(() => {\n    const chain = generateOptionChain(selectedUnderlying, underlyingPrice, selectedExpiry);\n    setOptionChain(chain);\n    setPositions(mockPositions);\n  }, [selectedUnderlying, selectedExpiry, underlyingPrice]);\n\n  // Calculate portfolio Greeks\n  const calculatePortfolioGreeks = () => {\n    return positions.reduce(\n      (acc, pos) => {\n        const multiplier = pos.side === 'BUY' ? pos.quantity : -pos.quantity;\n        return {\n          delta: acc.delta + pos.delta * multiplier * 100,\n          gamma: acc.gamma + pos.gamma * multiplier * 100,\n          theta: acc.theta + pos.theta * multiplier * 100,\n          vega: acc.vega + pos.vega * multiplier * 100\n        };\n      },\n      { delta: 0, gamma: 0, theta: 0, vega: 0 }\n    );\n  };\n\n  // Calculate portfolio risk metrics\n  const calculatePortfolioRisk = () => {\n    const portfolioValue = positions.reduce((sum, pos) => sum + Math.abs(pos.unrealizedPnL), 0);\n    const totalPnL = positions.reduce((sum, pos) => sum + pos.unrealizedPnL, 0);\n    const portfolioGreeks = calculatePortfolioGreeks();\n    \n    return {\n      totalValue: portfolioValue,\n      totalPnL: totalPnL,\n      pnlPercentage: portfolioValue > 0 ? (totalPnL / portfolioValue) * 100 : 0,\n      maxRisk: Math.abs(portfolioGreeks.delta * 10) + Math.abs(portfolioGreeks.gamma * 100),\n      riskPercentage: accountBalance > 0 ? (Math.abs(portfolioGreeks.delta * 10) + Math.abs(portfolioGreeks.gamma * 100)) / accountBalance * 100 : 0\n    };\n  };\n\n  // Format number with appropriate decimals\n  const formatNumber = (num: number, decimals: number = 2) => {\n    return new Intl.NumberFormat('en-US', {\n      minimumFractionDigits: decimals,\n      maximumFractionDigits: decimals\n    }).format(num);\n  };\n\n  // Handle individual option order\n  const handleOptionOrder = (option: OptionContract, side: 'BUY' | 'SELL') => {\n    setSelectedOption(option);\n    setOrderForm({\n      side,\n      quantity: 1,\n      orderType: 'MARKET',\n      limitPrice: side === 'BUY' ? option.ask : option.bid\n    });\n    setShowOrderModal(true);\n  };\n\n  // Execute individual option order\n  const executeOptionOrder = () => {\n    if (!selectedOption) return;\n\n    const orderPrice = orderForm.orderType === 'MARKET' \n      ? (orderForm.side === 'BUY' ? selectedOption.ask : selectedOption.bid)\n      : orderForm.limitPrice;\n\n    const orderCost = orderPrice * orderForm.quantity * 100;\n    \n    // Risk management checks\n    const portfolioRisk = calculatePortfolioRisk();\n    const positionRisk = Math.abs(selectedOption.delta * orderForm.quantity * 100 * 10);\n    const newTotalRisk = portfolioRisk.maxRisk + positionRisk;\n    const riskLimit = accountBalance * 0.2; // 20% risk limit\n\n    if (orderForm.side === 'BUY' && orderCost > accountBalance) {\n      alert('Insufficient funds for this order');\n      return;\n    }\n\n    if (newTotalRisk > riskLimit) {\n      alert(`Order exceeds risk limit. Current risk: $${portfolioRisk.maxRisk.toFixed(2)}, New risk: $${newTotalRisk.toFixed(2)}, Limit: $${riskLimit.toFixed(2)}`);\n      return;\n    }\n\n    // Position sizing recommendation\n    const maxQuantity = Math.floor(riskLimit / positionRisk);\n    if (orderForm.quantity > maxQuantity && maxQuantity > 0) {\n      if (!confirm(`Recommended max quantity: ${maxQuantity}. Continue with ${orderForm.quantity}?`)) {\n        return;\n      }\n    }\n\n    // Create new position\n    const newPosition: OptionPosition = {\n      id: `pos-${Date.now()}`,\n      contractId: selectedOption.id,\n      symbol: selectedOption.symbol,\n      underlying: selectedOption.underlying,\n      strike: selectedOption.strike,\n      expiry: selectedOption.expiry,\n      type: selectedOption.type,\n      side: orderForm.side,\n      quantity: orderForm.quantity,\n      entryPrice: orderPrice,\n      currentPrice: selectedOption.lastPrice,\n      unrealizedPnL: orderForm.side === 'BUY' \n        ? (selectedOption.lastPrice - orderPrice) * orderForm.quantity * 100\n        : (orderPrice - selectedOption.lastPrice) * orderForm.quantity * 100,\n      delta: selectedOption.delta,\n      gamma: selectedOption.gamma,\n      theta: selectedOption.theta,\n      vega: selectedOption.vega,\n      openTime: new Date().toISOString()\n    };\n\n    setPositions(prev => [...prev, newPosition]);\n    \n    // Update account balance\n    if (orderForm.side === 'BUY') {\n      setAccountBalance(prev => prev - orderCost);\n    } else {\n      setAccountBalance(prev => prev + orderCost);\n    }\n\n    // Close modal and reset form\n    setShowOrderModal(false);\n    setSelectedOption(null);\n    setOrderForm({\n      side: 'BUY',\n      quantity: 1,\n      orderType: 'MARKET',\n      limitPrice: 0\n    });\n\n    alert(`Order executed: ${orderForm.side} ${orderForm.quantity} ${selectedOption.symbol} @ $${orderPrice.toFixed(2)}`);\n  };\n\n  // Close position function\n  const closePosition = (position: OptionPosition) => {\n    // Calculate closing cost (opposite side of original position)\n    const closingSide = position.side === 'BUY' ? 'SELL' : 'BUY';\n    const closingPrice = position.currentPrice;\n    const closingCost = closingPrice * position.quantity * 100;\n    \n    // Calculate realized P&L\n    const realizedPnL = position.side === 'BUY' \n      ? (closingPrice - position.entryPrice) * position.quantity * 100\n      : (position.entryPrice - closingPrice) * position.quantity * 100;\n    \n    // Update account balance with realized P&L\n    setAccountBalance(prev => prev + realizedPnL + (position.side === 'BUY' ? closingCost : -closingCost));\n    \n    // Remove position from positions array\n    setPositions(prev => prev.filter(pos => pos.id !== position.id));\n    \n    alert(`Position closed: ${realizedPnL >= 0 ? 'Profit' : 'Loss'} of $${Math.abs(realizedPnL).toFixed(2)}`);\n   };\n\n  // Custom strategy builder functions\n  const addStrategyLeg = () => {\n    setCustomStrategy(prev => ({\n      ...prev,\n      legs: [...prev.legs, { type: 'CALL', side: 'BUY', strike: underlyingPrice, quantity: 1 }]\n    }));\n  };\n\n  const removeStrategyLeg = (index: number) => {\n    setCustomStrategy(prev => ({\n      ...prev,\n      legs: prev.legs.filter((_, i) => i !== index)\n    }));\n  };\n\n  const updateStrategyLeg = (index: number, field: string, value: any) => {\n    setCustomStrategy(prev => ({\n      ...prev,\n      legs: prev.legs.map((leg, i) => i === index ? { ...leg, [field]: value } : leg)\n    }));\n  };\n\n  const saveCustomStrategy = () => {\n    if (!customStrategy.name || customStrategy.legs.length === 0) {\n      alert('Please provide a strategy name and at least one leg');\n      return;\n    }\n\n    const newStrategy: StrategyTemplate = {\n      id: `custom_${Date.now()}`,\n      name: customStrategy.name,\n      description: customStrategy.description,\n      legs: customStrategy.legs,\n      maxProfit: null, // Could be calculated based on strategy type\n      maxLoss: null,   // Could be calculated based on strategy type\n      breakeven: []    // Could be calculated based on strategy type\n    };\n\n    setStrategyTemplates(prev => [...prev, newStrategy]);\n    setShowStrategyBuilder(false);\n    setCustomStrategy({ name: '', description: '', legs: [] });\n    alert('Custom strategy saved successfully!');\n  };\n\n  const executeStrategy = async (strategy: StrategyTemplate) => {\n    setExecutingStrategy(strategy.id);\n    \n    try {\n      // Simulate strategy execution\n      const newPositions: OptionPosition[] = strategy.legs.map((leg, index) => {\n        const contractId = `${selectedUnderlying}-${leg.strike}-${leg.type}-${selectedExpiry}`;\n        const currentPrice = leg.type === 'CALL' \n          ? Math.max(0, underlyingPrice - leg.strike) + (Math.random() * 2 + 1)\n          : Math.max(0, leg.strike - underlyingPrice) + (Math.random() * 2 + 1);\n        \n        const entryPrice = currentPrice + (leg.side === 'BUY' ? 0.05 : -0.05);\n        const unrealizedPnL = leg.side === 'BUY' \n          ? (currentPrice - entryPrice) * leg.quantity * 100\n          : (entryPrice - currentPrice) * leg.quantity * 100;\n\n        return {\n          id: `pos-${Date.now()}-${index}`,\n          contractId,\n          symbol: `${selectedUnderlying} ${new Date(selectedExpiry).toLocaleDateString()} ${leg.strike} ${leg.type}`,\n          underlying: selectedUnderlying,\n          strike: leg.strike,\n          expiry: selectedExpiry,\n          type: leg.type,\n          side: leg.side,\n          quantity: leg.quantity,\n          entryPrice,\n          currentPrice,\n          unrealizedPnL,\n          delta: leg.type === 'CALL' ? 0.5 + Math.random() * 0.3 : -0.5 - Math.random() * 0.3,\n          gamma: Math.random() * 0.1,\n          theta: -Math.random() * 0.05,\n          vega: Math.random() * 0.2,\n          openTime: new Date().toISOString()\n        };\n      });\n\n      // Add positions to the portfolio\n      setPositions(prev => [...prev, ...newPositions]);\n      \n      // Update account balance (simulate cost)\n      const totalCost = newPositions.reduce((sum, pos) => {\n        return sum + (pos.side === 'BUY' ? pos.entryPrice * pos.quantity * 100 : 0);\n      }, 0);\n      \n      setAccountBalance(prev => prev - totalCost);\n      \n      // Switch to positions tab to show the executed strategy\n      setSelectedTab('positions');\n      \n      // Show success message (you could add a toast notification here)\n      console.log(`Successfully executed ${strategy.name} strategy`);\n      \n    } catch (error) {\n      console.error('Error executing strategy:', error);\n    } finally {\n      setExecutingStrategy(null);\n    }\n  };\n\n  // Get moneyness color\n  const getMoneynessColor = (option: OptionContract) => {\n    const isITM = option.type === 'CALL' \n      ? underlyingPrice > option.strike \n      : underlyingPrice < option.strike;\n    \n    if (isITM) return 'bg-green-50 dark:bg-green-900/20';\n    if (Math.abs(underlyingPrice - option.strike) <= 5) return 'bg-yellow-50 dark:bg-yellow-900/20';\n    return 'bg-gray-50 dark:bg-gray-900/20';\n  };\n\n  // Group options by strike\n  const groupedOptions = optionChain.reduce((acc, option) => {\n    if (!acc[option.strike]) {\n      acc[option.strike] = { calls: [], puts: [] };\n    }\n    if (option.type === 'CALL') {\n      acc[option.strike].calls.push(option);\n    } else {\n      acc[option.strike].puts.push(option);\n    }\n    return acc;\n  }, {} as Record<number, { calls: OptionContract[], puts: OptionContract[] }>);\n\n  const strikes = Object.keys(groupedOptions).map(Number).sort((a, b) => a - b);\n  const portfolioGreeks = calculatePortfolioGreeks();\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <Calculator className=\"h-6 w-6 text-blue-600\" />\n          <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n            Options Trading\n          </h1>\n        </div>\n        \n        <div className=\"flex items-center space-x-4\">\n          <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n            <div>Account Balance: <span className=\"font-semibold text-gray-900 dark:text-white\">${formatNumber(accountBalance)}</span></div>\n            <div>{selectedUnderlying}: <span className=\"font-semibold text-gray-900 dark:text-white\">${formatNumber(underlyingPrice)}</span></div>\n          </div>\n        </div>\n      </div>\n\n      {/* Controls */}\n      <div className=\"flex items-center justify-between bg-white dark:bg-gray-800 rounded-lg shadow p-4\">\n        <div className=\"flex items-center space-x-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Underlying\n            </label>\n            <select\n              value={selectedUnderlying}\n              onChange={(e) => setSelectedUnderlying(e.target.value)}\n              className=\"border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            >\n              <option value=\"AAPL\">AAPL</option>\n              <option value=\"TSLA\">TSLA</option>\n              <option value=\"MSFT\">MSFT</option>\n              <option value=\"GOOGL\">GOOGL</option>\n              <option value=\"AMZN\">AMZN</option>\n            </select>\n          </div>\n          \n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Expiration\n            </label>\n            <select\n              value={selectedExpiry}\n              onChange={(e) => setSelectedExpiry(e.target.value)}\n              className=\"border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n            >\n              <option value=\"2024-02-16\">Feb 16, 2024</option>\n              <option value=\"2024-03-15\">Mar 15, 2024</option>\n              <option value=\"2024-04-19\">Apr 19, 2024</option>\n              <option value=\"2024-06-21\">Jun 21, 2024</option>\n            </select>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-3\">\n          <label className=\"flex items-center space-x-2\">\n            <input\n              type=\"checkbox\"\n              checked={showGreeks}\n              onChange={(e) => setShowGreeks(e.target.checked)}\n              className=\"h-4 w-4 text-blue-600 border-gray-300 rounded\"\n            />\n            <span className=\"text-sm text-gray-700 dark:text-gray-300\">Show Greeks</span>\n          </label>\n        </div>\n      </div>\n\n      {/* Portfolio Greeks Summary */}\n      {positions.length > 0 && (\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-4\">\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-3\">\n            Portfolio Greeks\n          </h3>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-blue-600\">{formatNumber(portfolioGreeks.delta)}</div>\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">Delta</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">{formatNumber(portfolioGreeks.gamma)}</div>\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">Gamma</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-red-600\">{formatNumber(portfolioGreeks.theta)}</div>\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">Theta</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-purple-600\">{formatNumber(portfolioGreeks.vega)}</div>\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">Vega</div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Navigation Tabs */}\n      <div className=\"border-b border-gray-200 dark:border-gray-700\">\n        <nav className=\"flex space-x-8\">\n          {[\n            { id: 'chain', label: 'Option Chain', icon: BarChart3 },\n            { id: 'positions', label: 'Positions', icon: Shield },\n            { id: 'strategies', label: 'Strategies', icon: Target }\n          ].map(({ id, label, icon: Icon }) => (\n            <button\n              key={id}\n              onClick={() => setSelectedTab(id as any)}\n              className={`flex items-center space-x-2 py-2 px-1 border-b-2 font-medium text-sm ${\n                selectedTab === id\n                  ? 'border-blue-500 text-blue-600'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 dark:text-gray-400 dark:hover:text-gray-300'\n              }`}\n            >\n              <Icon className=\"h-4 w-4\" />\n              <span>{label}</span>\n            </button>\n          ))}\n        </nav>\n      </div>\n\n      {/* Option Chain */}\n      {selectedTab === 'chain' && (\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow overflow-hidden\">\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead className=\"bg-gray-50 dark:bg-gray-700\">\n                <tr>\n                  <th colSpan={showGreeks ? 9 : 5} className=\"px-4 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider border-r border-gray-200 dark:border-gray-600\">\n                    Calls\n                  </th>\n                  <th className=\"px-4 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Strike\n                  </th>\n                  <th colSpan={showGreeks ? 9 : 5} className=\"px-4 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider border-l border-gray-200 dark:border-gray-600\">\n                    Puts\n                  </th>\n                </tr>\n                <tr>\n                  <th className=\"px-2 py-2 text-xs font-medium text-gray-500 dark:text-gray-400\">Bid</th>\n                  <th className=\"px-2 py-2 text-xs font-medium text-gray-500 dark:text-gray-400\">Ask</th>\n                  <th className=\"px-2 py-2 text-xs font-medium text-gray-500 dark:text-gray-400\">Last</th>\n                  <th className=\"px-2 py-2 text-xs font-medium text-gray-500 dark:text-gray-400\">Vol</th>\n                  {showGreeks && (\n                    <>\n                      <th className=\"px-2 py-2 text-xs font-medium text-gray-500 dark:text-gray-400\">Δ</th>\n                      <th className=\"px-2 py-2 text-xs font-medium text-gray-500 dark:text-gray-400\">Γ</th>\n                      <th className=\"px-2 py-2 text-xs font-medium text-gray-500 dark:text-gray-400\">Θ</th>\n                      <th className=\"px-2 py-2 text-xs font-medium text-gray-500 dark:text-gray-400\">ν</th>\n                      <th className=\"px-2 py-2 text-xs font-medium text-gray-500 dark:text-gray-400 border-r border-gray-200 dark:border-gray-600\">Action</th>\n                    </>\n                  )}\n                  <th className=\"px-4 py-2 text-xs font-medium text-gray-500 dark:text-gray-400\">Strike</th>\n                  <th className=\"px-2 py-2 text-xs font-medium text-gray-500 dark:text-gray-400 border-l border-gray-200 dark:border-gray-600\">Bid</th>\n                  <th className=\"px-2 py-2 text-xs font-medium text-gray-500 dark:text-gray-400\">Ask</th>\n                  <th className=\"px-2 py-2 text-xs font-medium text-gray-500 dark:text-gray-400\">Last</th>\n                  <th className=\"px-2 py-2 text-xs font-medium text-gray-500 dark:text-gray-400\">Vol</th>\n                  {showGreeks && (\n                    <>\n                      <th className=\"px-2 py-2 text-xs font-medium text-gray-500 dark:text-gray-400\">Δ</th>\n                      <th className=\"px-2 py-2 text-xs font-medium text-gray-500 dark:text-gray-400\">Γ</th>\n                      <th className=\"px-2 py-2 text-xs font-medium text-gray-500 dark:text-gray-400\">Θ</th>\n                      <th className=\"px-2 py-2 text-xs font-medium text-gray-500 dark:text-gray-400\">ν</th>\n                    </>\n                  )}\n                  <th className=\"px-2 py-2 text-xs font-medium text-gray-500 dark:text-gray-400\">Action</th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                {strikes.map((strike) => {\n                  const callOption = groupedOptions[strike]?.calls[0];\n                  const putOption = groupedOptions[strike]?.puts[0];\n                  const isATM = Math.abs(underlyingPrice - strike) <= 2.5;\n                  \n                  return (\n                    <tr key={strike} className={`hover:bg-gray-50 dark:hover:bg-gray-700 ${\n                      isATM ? 'bg-blue-50 dark:bg-blue-900/20' : getMoneynessColor(callOption || putOption!)\n                    }`}>\n                      {/* Call Option */}\n                      {callOption ? (\n                        <>\n                          <td className=\"px-2 py-2 text-sm text-gray-900 dark:text-white\">{formatNumber(callOption.bid)}</td>\n                          <td className=\"px-2 py-2 text-sm text-gray-900 dark:text-white\">{formatNumber(callOption.ask)}</td>\n                          <td className=\"px-2 py-2 text-sm font-medium text-gray-900 dark:text-white\">{formatNumber(callOption.lastPrice)}</td>\n                          <td className=\"px-2 py-2 text-sm text-gray-500 dark:text-gray-400\">{callOption.volume}</td>\n                          {showGreeks && (\n                            <>\n                              <td className=\"px-2 py-2 text-sm text-gray-900 dark:text-white\">{formatNumber(callOption.delta, 3)}</td>\n                              <td className=\"px-2 py-2 text-sm text-gray-900 dark:text-white\">{formatNumber(callOption.gamma, 3)}</td>\n                              <td className=\"px-2 py-2 text-sm text-red-600\">{formatNumber(callOption.theta, 3)}</td>\n                              <td className=\"px-2 py-2 text-sm text-gray-900 dark:text-white\">{formatNumber(callOption.vega, 3)}</td>\n                            </>\n                          )}\n                          <td className=\"px-2 py-2 border-r border-gray-200 dark:border-gray-600\">\n                            <div className=\"flex space-x-1\">\n                              <button\n                                onClick={() => handleOptionOrder(callOption, 'BUY')}\n                                className=\"px-2 py-1 bg-green-600 text-white text-xs rounded hover:bg-green-700\"\n                              >\n                                Buy\n                              </button>\n                              <button\n                                onClick={() => handleOptionOrder(callOption, 'SELL')}\n                                className=\"px-2 py-1 bg-red-600 text-white text-xs rounded hover:bg-red-700\"\n                              >\n                                Sell\n                              </button>\n                            </div>\n                          </td>\n                        </>\n                      ) : (\n                        <>\n                          <td colSpan={showGreeks ? 9 : 5} className=\"px-2 py-2 border-r border-gray-200 dark:border-gray-600\"></td>\n                        </>\n                      )}\n                      \n                      {/* Strike Price */}\n                      <td className={`px-4 py-2 text-sm font-bold text-center ${\n                        isATM ? 'text-blue-600' : 'text-gray-900 dark:text-white'\n                      }`}>\n                        {strike}\n                      </td>\n                      \n                      {/* Put Option */}\n                      {putOption ? (\n                        <>\n                          <td className=\"px-2 py-2 text-sm text-gray-900 dark:text-white border-l border-gray-200 dark:border-gray-600\">{formatNumber(putOption.bid)}</td>\n                          <td className=\"px-2 py-2 text-sm text-gray-900 dark:text-white\">{formatNumber(putOption.ask)}</td>\n                          <td className=\"px-2 py-2 text-sm font-medium text-gray-900 dark:text-white\">{formatNumber(putOption.lastPrice)}</td>\n                          <td className=\"px-2 py-2 text-sm text-gray-500 dark:text-gray-400\">{putOption.volume}</td>\n                          {showGreeks && (\n                            <>\n                              <td className=\"px-2 py-2 text-sm text-gray-900 dark:text-white\">{formatNumber(putOption.delta, 3)}</td>\n                              <td className=\"px-2 py-2 text-sm text-gray-900 dark:text-white\">{formatNumber(putOption.gamma, 3)}</td>\n                              <td className=\"px-2 py-2 text-sm text-red-600\">{formatNumber(putOption.theta, 3)}</td>\n                              <td className=\"px-2 py-2 text-sm text-gray-900 dark:text-white\">{formatNumber(putOption.vega, 3)}</td>\n                            </>\n                          )}\n                          <td className=\"px-2 py-2\">\n                            <div className=\"flex space-x-1\">\n                              <button\n                                onClick={() => handleOptionOrder(putOption, 'BUY')}\n                                className=\"px-2 py-1 bg-green-600 text-white text-xs rounded hover:bg-green-700\"\n                              >\n                                Buy\n                              </button>\n                              <button\n                                onClick={() => handleOptionOrder(putOption, 'SELL')}\n                                className=\"px-2 py-1 bg-red-600 text-white text-xs rounded hover:bg-red-700\"\n                              >\n                                Sell\n                              </button>\n                            </div>\n                          </td>\n                        </>\n                      ) : (\n                        <>\n                          <td colSpan={showGreeks ? 9 : 5} className=\"px-2 py-2 border-l border-gray-200 dark:border-gray-600\"></td>\n                        </>\n                      )}\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n\n      {/* Portfolio Risk Metrics */}\n      {selectedTab === 'positions' && (\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6 mb-6\">\n          <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4 flex items-center\">\n            <BarChart3 className=\"mr-2\" size={20} />\n            Portfolio Summary\n          </h2>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n            <div className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg\">\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">Account Balance</div>\n              <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                ${formatNumber(accountBalance)}\n              </div>\n            </div>\n            \n            <div className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg\">\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">Total P&L</div>\n              <div className={`text-2xl font-bold ${\n                positions.reduce((sum, pos) => sum + pos.unrealizedPnL, 0) >= 0 \n                  ? 'text-green-600' \n                  : 'text-red-600'\n              }`}>\n                ${formatNumber(positions.reduce((sum, pos) => sum + pos.unrealizedPnL, 0))}\n              </div>\n            </div>\n            \n            <div className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg\">\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">Open Positions</div>\n              <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                {positions.length}\n              </div>\n            </div>\n            \n            <div className=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg\">\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">Portfolio Delta</div>\n              <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                {formatNumber(calculatePortfolioGreeks().delta, 2)}\n              </div>\n            </div>\n          </div>\n\n          {/* Risk Metrics */}\n          <div className=\"bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg p-4\">\n            <h3 className=\"text-lg font-semibold text-yellow-800 dark:text-yellow-200 mb-3 flex items-center\">\n              <Shield className=\"mr-2\" size={18} />\n              Risk Management\n            </h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div>\n                <div className=\"text-sm text-yellow-700 dark:text-yellow-300\">Portfolio Risk</div>\n                <div className=\"text-xl font-bold text-yellow-800 dark:text-yellow-200\">\n                  ${formatNumber(calculatePortfolioRisk().maxRisk)}\n                </div>\n                <div className=\"text-xs text-yellow-600 dark:text-yellow-400\">\n                  {formatNumber(calculatePortfolioRisk().riskPercentage, 1)}% of account\n                </div>\n              </div>\n              <div>\n                <div className=\"text-sm text-yellow-700 dark:text-yellow-300\">Risk Limit</div>\n                <div className=\"text-xl font-bold text-yellow-800 dark:text-yellow-200\">\n                  ${formatNumber(accountBalance * 0.2)}\n                </div>\n                <div className=\"text-xs text-yellow-600 dark:text-yellow-400\">\n                  20% of account balance\n                </div>\n              </div>\n              <div>\n                <div className=\"text-sm text-yellow-700 dark:text-yellow-300\">Available Risk</div>\n                <div className=\"text-xl font-bold text-yellow-800 dark:text-yellow-200\">\n                  ${formatNumber(Math.max(0, (accountBalance * 0.2) - calculatePortfolioRisk().maxRisk))}\n                </div>\n                <div className=\"text-xs text-yellow-600 dark:text-yellow-400\">\n                  Remaining capacity\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Positions */}\n      {selectedTab === 'positions' && (\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow\">\n          <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\n            <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n              Option Positions\n            </h2>\n          </div>\n          \n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead className=\"bg-gray-50 dark:bg-gray-700\">\n                <tr>\n                  <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Symbol\n                  </th>\n                  <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Type\n                  </th>\n                  <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Side\n                  </th>\n                  <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Qty\n                  </th>\n                  <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Entry\n                  </th>\n                  <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Current\n                  </th>\n                  <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    P&L\n                  </th>\n                  <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Greeks\n                  </th>\n                  <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                    Action\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n                {positions.map((position) => (\n                  <tr key={position.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\n                    <td className=\"px-4 py-4\">\n                      <div>\n                        <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                          {position.symbol}\n                        </div>\n                        <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                          ${position.strike} {new Date(position.expiry).toLocaleDateString()}\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-4 py-4\">\n                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                        position.type === 'CALL' \n                          ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400'\n                          : 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400'\n                      }`}>\n                        {position.type}\n                      </span>\n                    </td>\n                    <td className=\"px-4 py-4\">\n                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                        position.side === 'BUY' \n                          ? 'bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-400'\n                          : 'bg-orange-100 text-orange-800 dark:bg-orange-900/20 dark:text-orange-400'\n                      }`}>\n                        {position.side}\n                      </span>\n                    </td>\n                    <td className=\"px-4 py-4 text-sm text-gray-900 dark:text-white\">\n                      {position.quantity}\n                    </td>\n                    <td className=\"px-4 py-4 text-sm text-gray-900 dark:text-white\">\n                      ${formatNumber(position.entryPrice)}\n                    </td>\n                    <td className=\"px-4 py-4 text-sm text-gray-900 dark:text-white\">\n                      ${formatNumber(position.currentPrice)}\n                    </td>\n                    <td className=\"px-4 py-4\">\n                      <span className={`text-sm font-medium ${\n                        position.unrealizedPnL >= 0 ? 'text-green-600' : 'text-red-600'\n                      }`}>\n                        ${formatNumber(position.unrealizedPnL)}\n                      </span>\n                    </td>\n                    <td className=\"px-4 py-4 text-xs text-gray-500 dark:text-gray-400\">\n                      <div>Δ: {formatNumber(position.delta, 3)}</div>\n                      <div>Θ: {formatNumber(position.theta, 3)}</div>\n                    </td>\n                    <td className=\"px-4 py-4\">\n                      <button \n                        onClick={() => closePosition(position)}\n                        className=\"text-red-600 hover:text-red-800 text-sm font-medium\"\n                      >\n                        Close\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n\n      {/* Strategies */}\n      {selectedTab === 'strategies' && (\n        <div>\n          <div className=\"flex justify-between items-center mb-6\">\n            <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">Strategy Templates</h2>\n            <button\n              onClick={() => setShowStrategyBuilder(true)}\n              className=\"flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n            >\n              <Plus className=\"h-4 w-4 mr-2\" />\n              Create Custom Strategy\n            </button>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {strategyTemplates.map((strategy) => (\n            <div key={strategy.id} className=\"bg-white dark:bg-gray-800 rounded-lg shadow p-6\">\n              <div className=\"flex items-center justify-between mb-3\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                  {strategy.name}\n                </h3>\n                <Target className=\"h-5 w-5 text-blue-600\" />\n              </div>\n              \n              <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">\n                {strategy.description}\n              </p>\n              \n              <div className=\"space-y-2 mb-4\">\n                <div className=\"text-xs text-gray-500 dark:text-gray-400 font-medium\">Strategy Legs:</div>\n                {strategy.legs.map((leg, index) => (\n                  <div key={index} className=\"text-xs bg-gray-50 dark:bg-gray-700 rounded p-2\">\n                    {leg.side} {leg.quantity} {leg.type} @ ${leg.strike}\n                  </div>\n                ))}\n              </div>\n              \n              <div className=\"grid grid-cols-2 gap-3 text-xs mb-4\">\n                <div>\n                  <span className=\"text-gray-500 dark:text-gray-400\">Max Profit:</span>\n                  <div className=\"font-medium text-green-600\">\n                    {strategy.maxProfit ? `$${formatNumber(strategy.maxProfit)}` : 'Unlimited'}\n                  </div>\n                </div>\n                <div>\n                  <span className=\"text-gray-500 dark:text-gray-400\">Max Loss:</span>\n                  <div className=\"font-medium text-red-600\">\n                    {strategy.maxLoss ? `$${formatNumber(strategy.maxLoss)}` : 'Unlimited'}\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"text-xs mb-4\">\n                <span className=\"text-gray-500 dark:text-gray-400\">Breakeven:</span>\n                <div className=\"font-medium text-gray-900 dark:text-white\">\n                  {strategy.breakeven.map(be => `$${formatNumber(be)}`).join(', ')}\n                </div>\n              </div>\n              \n              <button \n                onClick={() => executeStrategy(strategy)}\n                disabled={executingStrategy === strategy.id}\n                className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed text-sm\"\n              >\n                {executingStrategy === strategy.id ? 'Executing...' : 'Execute Strategy'}\n              </button>\n            </div>\n          ))}\n          </div>\n        </div>\n      )}\n\n      {/* Order Modal */}\n      {showOrderModal && selectedOption && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 w-96 max-w-md mx-4\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                {orderForm.side} {selectedOption.symbol}\n              </h3>\n              <button\n                onClick={() => setShowOrderModal(false)}\n                className=\"text-gray-400 hover:text-gray-600\"\n              >\n                ×\n              </button>\n            </div>\n            \n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                <div>\n                  <span className=\"text-gray-500 dark:text-gray-400\">Strike:</span>\n                  <div className=\"font-medium\">${selectedOption.strike}</div>\n                </div>\n                <div>\n                  <span className=\"text-gray-500 dark:text-gray-400\">Expiry:</span>\n                  <div className=\"font-medium\">{new Date(selectedOption.expiry).toLocaleDateString()}</div>\n                </div>\n                <div>\n                  <span className=\"text-gray-500 dark:text-gray-400\">Bid:</span>\n                  <div className=\"font-medium\">${formatNumber(selectedOption.bid)}</div>\n                </div>\n                <div>\n                  <span className=\"text-gray-500 dark:text-gray-400\">Ask:</span>\n                  <div className=\"font-medium\">${formatNumber(selectedOption.ask)}</div>\n                </div>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                  Side\n                </label>\n                <select\n                  value={orderForm.side}\n                  onChange={(e) => setOrderForm(prev => ({ ...prev, side: e.target.value as 'BUY' | 'SELL' }))}\n                  className=\"w-full border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                >\n                  <option value=\"BUY\">Buy</option>\n                  <option value=\"SELL\">Sell</option>\n                </select>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                  Quantity\n                </label>\n                <input\n                  type=\"number\"\n                  min=\"1\"\n                  value={orderForm.quantity}\n                  onChange={(e) => setOrderForm(prev => ({ ...prev, quantity: parseInt(e.target.value) || 1 }))}\n                  className=\"w-full border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                  Order Type\n                </label>\n                <select\n                  value={orderForm.orderType}\n                  onChange={(e) => setOrderForm(prev => ({ ...prev, orderType: e.target.value as 'MARKET' | 'LIMIT' }))}\n                  className=\"w-full border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                >\n                  <option value=\"MARKET\">Market</option>\n                  <option value=\"LIMIT\">Limit</option>\n                </select>\n              </div>\n              \n              {orderForm.orderType === 'LIMIT' && (\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                    Limit Price\n                  </label>\n                  <input\n                    type=\"number\"\n                    step=\"0.01\"\n                    value={orderForm.price}\n                    onChange={(e) => setOrderForm(prev => ({ ...prev, price: parseFloat(e.target.value) || 0 }))}\n                    className=\"w-full border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                  />\n                </div>\n              )}\n              \n              <div className=\"bg-gray-50 dark:bg-gray-700 rounded-md p-3\">\n                <div className=\"text-sm text-gray-600 dark:text-gray-400 mb-1\">Order Summary</div>\n                <div className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                  {orderForm.side} {orderForm.quantity} contracts\n                </div>\n                <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                  Est. Cost: ${formatNumber(\n                    (orderForm.orderType === 'MARKET' \n                      ? (orderForm.side === 'BUY' ? selectedOption.ask : selectedOption.bid)\n                      : orderForm.limitPrice\n                    ) * orderForm.quantity * 100\n                  )}\n                </div>\n              </div>\n              \n              <div className=\"flex space-x-3\">\n                <button\n                  onClick={() => setShowOrderModal(false)}\n                  className=\"flex-1 bg-gray-300 dark:bg-gray-600 text-gray-700 dark:text-gray-300 py-2 px-4 rounded-md hover:bg-gray-400 dark:hover:bg-gray-500\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={executeOptionOrder}\n                  className=\"flex-1 bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700\"\n                >\n                  Place Order\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Custom Strategy Builder Modal */}\n      {showStrategyBuilder && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 w-full max-w-4xl max-h-[90vh] overflow-y-auto\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Custom Strategy Builder</h3>\n              <button\n                onClick={() => setShowStrategyBuilder(false)}\n                className=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n              >\n                ✕\n              </button>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                  Strategy Name\n                </label>\n                <input\n                  type=\"text\"\n                  value={customStrategy.name}\n                  onChange={(e) => setCustomStrategy(prev => ({ ...prev, name: e.target.value }))}\n                  className=\"w-full border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                  placeholder=\"Enter strategy name\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                  Description\n                </label>\n                <textarea\n                  value={customStrategy.description}\n                  onChange={(e) => setCustomStrategy(prev => ({ ...prev, description: e.target.value }))}\n                  className=\"w-full border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                  rows={3}\n                  placeholder=\"Describe your strategy\"\n                />\n              </div>\n\n              <div>\n                <div className=\"flex justify-between items-center mb-2\">\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n                    Strategy Legs\n                  </label>\n                  <button\n                    onClick={addStrategyLeg}\n                    className=\"bg-blue-500 hover:bg-blue-600 text-white px-3 py-1 rounded text-sm\"\n                  >\n                    Add Leg\n                  </button>\n                </div>\n\n                <div className=\"space-y-3\">\n                  {customStrategy.legs.map((leg, index) => (\n                    <div key={index} className=\"border border-gray-300 dark:border-gray-600 rounded-md p-3\">\n                      <div className=\"grid grid-cols-5 gap-3\">\n                        <div>\n                          <label className=\"block text-xs font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                            Type\n                          </label>\n                          <select\n                             value={leg.type}\n                             onChange={(e) => updateStrategyLeg(index, 'type', e.target.value)}\n                             className=\"w-full border border-gray-300 dark:border-gray-600 rounded-md px-2 py-1 bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-sm\"\n                           >\n                             <option value=\"call\">Call</option>\n                             <option value=\"put\">Put</option>\n                           </select>\n                        </div>\n\n                        <div>\n                          <label className=\"block text-xs font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                            Side\n                          </label>\n                          <select\n                             value={leg.side}\n                             onChange={(e) => updateStrategyLeg(index, 'side', e.target.value)}\n                             className=\"w-full border border-gray-300 dark:border-gray-600 rounded-md px-2 py-1 bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-sm\"\n                           >\n                             <option value=\"buy\">Buy</option>\n                             <option value=\"sell\">Sell</option>\n                           </select>\n                        </div>\n\n                        <div>\n                          <label className=\"block text-xs font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                            Strike\n                          </label>\n                          <input\n                            type=\"number\"\n                            value={leg.strike}\n                            onChange={(e) => updateStrategyLeg(index, 'strike', parseFloat(e.target.value) || 0)}\n                            className=\"w-full border border-gray-300 dark:border-gray-600 rounded-md px-2 py-1 bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-sm\"\n                            placeholder=\"Strike\"\n                          />\n                        </div>\n\n                        <div>\n                          <label className=\"block text-xs font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                            Quantity\n                          </label>\n                          <input\n                            type=\"number\"\n                            value={leg.quantity}\n                            onChange={(e) => updateStrategyLeg(index, 'quantity', parseInt(e.target.value) || 1)}\n                            className=\"w-full border border-gray-300 dark:border-gray-600 rounded-md px-2 py-1 bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-sm\"\n                            placeholder=\"Qty\"\n                            min=\"1\"\n                          />\n                        </div>\n\n                        <div className=\"flex items-end\">\n                          <button\n                            onClick={() => removeStrategyLeg(index)}\n                            className=\"bg-red-500 hover:bg-red-600 text-white px-2 py-1 rounded text-sm w-full\"\n                          >\n                            Remove\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"flex justify-end space-x-3 pt-4\">\n                <button\n                  onClick={() => setShowStrategyBuilder(false)}\n                  className=\"px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={saveCustomStrategy}\n                  disabled={!customStrategy.name || customStrategy.legs.length === 0}\n                  className=\"px-4 py-2 bg-blue-500 hover:bg-blue-600 disabled:bg-gray-400 text-white rounded-md\"\n                >\n                  Save Strategy\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OptionsTrading;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3067, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function formatCurrency(amount: number): string {\n  if (typeof amount !== 'number' || isNaN(amount)) return '$0.00'\n  try {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(amount)\n  } catch (error) {\n    return '$0.00'\n  }\n}\n\nexport function formatPercent(value: number): string {\n  if (typeof value !== 'number' || isNaN(value)) return '0.00%'\n  try {\n    return `${value >= 0 ? '+' : ''}${value.toFixed(2)}%`\n  } catch (error) {\n    return '0.00%'\n  }\n}\n\nexport function formatNumber(value: number): string {\n  if (typeof value !== 'number' || isNaN(value)) return '0'\n  try {\n    return new Intl.NumberFormat('en-US').format(value)\n  } catch (error) {\n    return '0'\n  }\n}"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB;AAEO,SAAS,eAAe,MAAc;IAC3C,IAAI,OAAO,WAAW,YAAY,MAAM,SAAS,OAAO;IACxD,IAAI;QACF,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;YACpC,OAAO;YACP,UAAU;QACZ,GAAG,MAAM,CAAC;IACZ,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,SAAS,cAAc,KAAa;IACzC,IAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,OAAO;IACtD,IAAI;QACF,OAAO,GAAG,SAAS,IAAI,MAAM,KAAK,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC;IACvD,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,SAAS,aAAa,KAAa;IACxC,IAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,OAAO;IACtD,IAAI;QACF,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS,MAAM,CAAC;IAC/C,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 3115, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }"],"names":[],"mappings":";;;;;;;AACA;AACA;;;;AAEA,MAAM,gBAAgB,IAAA,uKAAG,EACvB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,IAAA,yHAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 3157, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/DemoModeIndicator.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\nimport { Badge } from '@/components/ui/badge'\nimport { AlertTriangle, Play } from 'lucide-react'\nimport { useTradingMode } from '@/contexts/TradingModeContext'\nimport { cn } from '@/lib/utils'\n\ninterface DemoModeIndicatorProps {\n  className?: string\n  variant?: 'badge' | 'banner'\n}\n\nexport function DemoModeIndicator({ className, variant = 'badge' }: DemoModeIndicatorProps) {\n  const { isPaperTrading, tradingMode } = useTradingMode()\n\n  if (!isPaperTrading) {\n    return null\n  }\n\n  if (variant === 'banner') {\n    return (\n      <div className={cn(\n        'bg-orange-100 dark:bg-orange-900/20 border border-orange-200 dark:border-orange-800 rounded-lg p-3 mb-4',\n        className\n      )}>\n        <div className=\"flex items-center gap-2\">\n          <Play className=\"h-4 w-4 text-orange-600 dark:text-orange-400\" />\n          <span className=\"text-sm font-medium text-orange-800 dark:text-orange-200\">\n            Demo Mode Active\n          </span>\n          <span className=\"text-xs text-orange-600 dark:text-orange-400\">\n            • All trades are simulated • No real money involved\n          </span>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <Badge \n      variant=\"outline\" \n      className={cn(\n        'bg-orange-50 dark:bg-orange-900/20 border-orange-200 dark:border-orange-800 text-orange-700 dark:text-orange-300 font-medium',\n        className\n      )}\n    >\n      <Play className=\"h-3 w-3 mr-1\" />\n      Demo Mode\n    </Badge>\n  )\n}\n\nexport default DemoModeIndicator"],"names":[],"mappings":";;;;;;;AAGA;AACA;AACA;AACA;AANA;;;;;;AAaO,SAAS,kBAAkB,EAAE,SAAS,EAAE,UAAU,OAAO,EAA0B;IACxF,MAAM,EAAE,cAAc,EAAE,WAAW,EAAE,GAAG,IAAA,wJAAc;IAEtD,IAAI,CAAC,gBAAgB;QACnB,OAAO;IACT;IAEA,IAAI,YAAY,UAAU;QACxB,qBACE,8OAAC;YAAI,WAAW,IAAA,yHAAE,EAChB,2GACA;sBAEA,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,0MAAI;wBAAC,WAAU;;;;;;kCAChB,8OAAC;wBAAK,WAAU;kCAA2D;;;;;;kCAG3E,8OAAC;wBAAK,WAAU;kCAA+C;;;;;;;;;;;;;;;;;IAMvE;IAEA,qBACE,8OAAC,0IAAK;QACJ,SAAQ;QACR,WAAW,IAAA,yHAAE,EACX,gIACA;;0BAGF,8OAAC,0MAAI;gBAAC,WAAU;;;;;;YAAiB;;;;;;;AAIvC;uCAEe","debugId":null}},
    {"offset": {"line": 3244, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/Navigation.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter, usePathname } from 'next/navigation';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { useTheme } from '@/contexts/ThemeContext';\nimport { useTradingMode } from '@/contexts/TradingModeContext';\nimport DemoModeIndicator from '@/components/ui/DemoModeIndicator';\nimport { toast } from 'react-hot-toast';\nimport {\n  Menu,\n  X,\n  Home,\n  TrendingUp,\n  BarChart3,\n  Users,\n  Copy,\n  Bell,\n  Settings,\n  LogOut,\n  Sun,\n  Moon,\n  User,\n  ChevronDown,\n  Search,\n  Wallet,\n  Activity,\n  Shield,\n  HelpCircle,\n  Zap,\n  Radio,\n  CreditCard,\n  Crown,\n  Award,\n  Bot,\n  Link\n} from 'lucide-react';\n\ninterface NavigationItem {\n  name: string;\n  href: string;\n  icon: any;\n  badge?: number;\n  description?: string;\n}\n\nconst navigationItems: NavigationItem[] = [\n  {\n    name: 'Dashboard',\n    href: '/dashboard',\n    icon: Home,\n    description: 'Overview and portfolio summary'\n  },\n  {\n    name: 'User Dashboard',\n    href: '/user-dashboard',\n    icon: User,\n    description: 'Personal account and subscription management'\n  },\n  {\n    name: 'Trading',\n    href: '/trading',\n    icon: TrendingUp,\n    description: 'Execute trades and view market data'\n  },\n  {\n    name: 'Live Trading',\n    href: '/trading/live',\n    icon: Radio,\n    description: 'Real-time trading dashboard'\n  },\n  {\n    name: 'Futures Trading',\n    href: '/trading/futures',\n    icon: TrendingUp,\n    description: 'Futures contracts trading'\n  },\n  {\n    name: 'Options Trading',\n    href: '/trading/options',\n    icon: BarChart3,\n    description: 'Options contracts trading'\n  },\n  {\n    name: 'Market Updates',\n    href: '/trading/market-updates',\n    icon: Bell,\n    description: 'Real-time market news and updates'\n  },\n  {\n    name: 'Pine Editor',\n    href: '/trading/pine-editor',\n    icon: Settings,\n    description: 'Pine Script editor for custom indicators'\n  },\n  {\n    name: 'Profit Targets',\n    href: '/trading/profit-targets',\n    icon: Award,\n    description: 'Set and manage profit targets'\n  },\n  {\n    name: 'Portfolio',\n    href: '/portfolio',\n    icon: BarChart3,\n    description: 'Manage your investments'\n  },\n  {\n    name: 'Copy Trade',\n    href: '/copy-trade',\n    icon: Copy,\n    description: 'Follow and copy successful traders'\n  },\n  {\n    name: 'Creators',\n    href: '/creators',\n    icon: Award,\n    description: 'Discover top trading creators and investors'\n  },\n  {\n    name: 'Social',\n    href: '/social',\n    icon: Users,\n    badge: 3,\n    description: 'Connect with the trading community'\n  },\n  {\n    name: 'Pricing',\n    href: '/pricing',\n    icon: Crown,\n    description: 'View subscription plans and pricing'\n  },\n  {\n    name: 'Payment',\n    href: '/payment',\n    icon: CreditCard,\n    description: 'Manage payment methods and billing'\n  },\n  {\n    name: 'Security',\n    href: '/security',\n    icon: Shield,\n    description: 'Security settings and compliance'\n  },\n  {\n    name: 'Automation',\n    href: '/automation',\n    icon: Bot,\n    description: 'Automated trading and system management'\n  },\n  {\n    name: 'Trading Bot',\n    href: '/automation/trading-bot',\n    icon: Bot,\n    description: 'Configure and manage trading bots'\n  },\n  {\n    name: 'Copy Trading Auto',\n    href: '/automation/copy-trading',\n    icon: Copy,\n    description: 'Automated copy trading settings'\n  },\n  {\n    name: 'Risk Management',\n    href: '/automation/risk-management',\n    icon: Shield,\n    description: 'Automated risk management rules'\n  },\n  {\n    name: 'Data Pipeline',\n    href: '/automation/data-pipeline',\n    icon: Activity,\n    description: 'Automated data processing and analysis'\n  },\n  {\n    name: 'Auto Notifications',\n    href: '/automation/notifications',\n    icon: Bell,\n    description: 'Automated notification settings'\n  },\n  {\n    name: 'Auto Payments',\n    href: '/automation/payments',\n    icon: CreditCard,\n    description: 'Automated payment processing'\n  },\n  {\n    name: 'Auto Reporting',\n    href: '/automation/reporting',\n    icon: BarChart3,\n    description: 'Automated report generation'\n  },\n  {\n    name: 'Auto Onboarding',\n    href: '/automation/onboarding',\n    icon: User,\n    description: 'Automated user onboarding process'\n  },\n  {\n    name: 'Brokers',\n    href: '/brokers',\n    icon: Link,\n    description: 'Connect and manage broker accounts'\n  },\n  {\n    name: 'Demo',\n    href: '/demo',\n    icon: Activity,\n    description: 'Practice trading with demo account'\n  },\n  {\n    name: 'Settings',\n    href: '/settings',\n    icon: Settings,\n    description: 'Application settings and preferences'\n  },\n  {\n    name: 'Profile',\n    href: '/profile',\n    icon: User,\n    description: 'Manage your profile and account details'\n  },\n  {\n    name: 'Help',\n    href: '/help',\n    icon: HelpCircle,\n    description: 'Get help and support'\n  }\n];\n\nexport default function Navigation() {\n  const { user, logout } = useAuth();\n  const { theme, setTheme } = useTheme();\n  const { isPaperTrading } = useTradingMode();\n  const router = useRouter();\n  const pathname = usePathname();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [isProfileMenuOpen, setIsProfileMenuOpen] = useState(false);\n  const [mounted, setMounted] = useState(false);\n  const [focusedItemIndex, setFocusedItemIndex] = useState(-1);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  const handleLogout = async () => {\n    try {\n      await logout();\n      router.push('/login');\n      toast.success('Logged out successfully');\n    } catch (error) {\n      toast.error('Failed to logout. Please try again.');\n    }\n  };\n\n  const toggleTheme = () => {\n    setTheme(theme === 'dark' ? 'light' : 'dark');\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent, action: () => void) => {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      action();\n    }\n  };\n\n  const handleNavigationKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === 'ArrowDown') {\n      event.preventDefault();\n      setFocusedItemIndex(prev => (prev + 1) % navigationItems.length);\n    } else if (event.key === 'ArrowUp') {\n      event.preventDefault();\n      setFocusedItemIndex(prev => prev <= 0 ? navigationItems.length - 1 : prev - 1);\n    } else if (event.key === 'Enter' && focusedItemIndex >= 0) {\n      event.preventDefault();\n      router.push(navigationItems[focusedItemIndex].href);\n    } else if (event.key === 'Escape') {\n      setIsProfileMenuOpen(false);\n      setIsMobileMenuOpen(false);\n    }\n  };\n\n  const isActive = (href: string) => {\n    return pathname === href;\n  };\n\n  if (!mounted) {\n    return null;\n  }\n\n  return (\n    <>\n      {/* Desktop Navigation */}\n      <nav className=\"hidden lg:flex lg:flex-col lg:w-64 lg:fixed lg:inset-y-0 lg:border-r lg:border-gray-200 lg:dark:border-gray-700 lg:bg-white lg:dark:bg-gray-800 lg:shadow-sm\">\n        {/* Logo */}\n        <div className=\"flex items-center justify-center h-16 px-6 border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex flex-col items-center space-y-1\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"h-8 w-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center\">\n                <Zap className=\"h-5 w-5 text-white\" />\n              </div>\n              <span className=\"text-xl font-bold text-gray-900 dark:text-white\">KAIRO</span>\n            </div>\n            {isPaperTrading && <DemoModeIndicator className=\"text-xs\" />}\n          </div>\n        </div>\n\n        {/* Simplified Navigation - Only Logo Area */}\n        <div className=\"flex-1 flex items-center justify-center px-4 py-6\">\n          <div className=\"text-center text-gray-500 dark:text-gray-400\">\n            <p className=\"text-sm\">Navigation Menu</p>\n            <p className=\"text-xs mt-1\">Available in Profile</p>\n          </div>\n        </div>\n\n        {/* User Profile Section */}\n        <div className=\"border-t border-gray-200 dark:border-gray-700 p-4\">\n          <div className=\"relative\">\n            <button\n              onClick={() => setIsProfileMenuOpen(!isProfileMenuOpen)}\n              className=\"w-full flex items-center space-x-3 p-3 rounded-xl hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\"\n              aria-expanded={isProfileMenuOpen}\n              aria-haspopup=\"menu\"\n              aria-label=\"User profile menu\"\n            >\n              <div className=\"h-10 w-10 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full flex items-center justify-center\">\n                <span className=\"text-white font-semibold text-sm\">\n                  {user ? `${user.firstName?.[0] || ''}${user.lastName?.[0] || ''}` || 'U' : 'U'}\n                </span>\n              </div>\n              <div className=\"flex-1 text-left\">\n                <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                  {user ? `${user.firstName || ''} ${user.lastName || ''}`.trim() || 'User' : 'User'}\n                </p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  {user?.email || 'user@example.com'}\n                </p>\n              </div>\n              <ChevronDown className={`h-4 w-4 text-gray-400 transition-transform ${\n                isProfileMenuOpen ? 'rotate-180' : ''\n              }`} />\n            </button>\n\n            {/* Profile Dropdown with Navigation Menu */}\n            {isProfileMenuOpen && (\n              <div \n                className=\"absolute bottom-full left-0 right-0 mb-2 bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 py-2 max-h-96 overflow-y-auto\"\n                role=\"menu\"\n                aria-label=\"User profile and navigation menu\"\n              >\n                {/* Navigation Items */}\n                <div className=\"px-2 py-2\">\n                  <p className=\"px-2 py-1 text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Navigation</p>\n                  <div onKeyDown={handleNavigationKeyDown}>\n                    {navigationItems.map((item, index) => {\n                      const active = isActive(item.href);\n                      const isFocused = focusedItemIndex === index;\n                      return (\n                        <button\n                          key={item.href}\n                          onClick={() => {\n                            router.push(item.href);\n                            setIsProfileMenuOpen(false);\n                          }}\n                          onKeyDown={(e) => handleKeyDown(e, () => {\n                            router.push(item.href);\n                            setIsProfileMenuOpen(false);\n                          })}\n                          className={`w-full flex items-center space-x-3 px-3 py-2 mb-1 rounded-lg transition-all duration-200 group text-sm ${\n                            active\n                              ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-sm'\n                              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 hover:text-gray-900 dark:hover:text-white'\n                          } ${\n                            isFocused ? 'ring-2 ring-blue-500 ring-offset-2 dark:ring-offset-gray-800' : ''\n                          }`}\n                          aria-current={active ? 'page' : undefined}\n                          title={item.description}\n                        >\n                          <item.icon className={`h-4 w-4 transition-colors ${\n                            active ? 'text-white' : 'text-gray-500 dark:text-gray-400 group-hover:text-gray-700 dark:group-hover:text-gray-300'\n                          }`} aria-hidden=\"true\" />\n                          <span className=\"flex-1 text-left\">{item.name}</span>\n                          {item.badge && (\n                            <span className={`ml-2 inline-flex items-center justify-center px-1.5 py-0.5 text-xs font-bold rounded-full ${\n                              active \n                                ? 'bg-white/20 text-white' \n                                : 'bg-blue-100 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400'\n                            }`} aria-label={`${item.badge} notifications`}>\n                              {item.badge}\n                            </span>\n                          )}\n                        </button>\n                      );\n                    })}\n                  </div>\n                </div>\n                \n                {/* Profile Actions */}\n                <div className=\"border-t border-gray-200 dark:border-gray-700 mt-2 pt-2\">\n                  <p className=\"px-4 py-1 text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Account</p>\n                  <button\n                    onClick={() => {\n                      router.push('/profile');\n                      setIsProfileMenuOpen(false);\n                    }}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                    role=\"menuitem\"\n                    aria-label=\"Go to profile page\"\n                  >\n                    <User className=\"h-4 w-4\" aria-hidden=\"true\" />\n                    <span>Profile</span>\n                  </button>\n                  <button\n                    onClick={() => {\n                      router.push('/settings');\n                      setIsProfileMenuOpen(false);\n                    }}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                  >\n                    <Settings className=\"h-4 w-4\" />\n                    <span>Settings</span>\n                  </button>\n                  <button\n                    onClick={toggleTheme}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                  >\n                    {theme === 'dark' ? <Sun className=\"h-4 w-4\" /> : <Moon className=\"h-4 w-4\" />}\n                    <span>{theme === 'dark' ? 'Light Mode' : 'Dark Mode'}</span>\n                  </button>\n                  <div className=\"border-t border-gray-200 dark:border-gray-700 my-2\"></div>\n                  <button\n                    onClick={handleLogout}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20\"\n                  >\n                    <LogOut className=\"h-4 w-4\" />\n                    <span>Sign Out</span>\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </nav>\n\n      {/* Mobile Navigation */}\n      <div className=\"lg:hidden\">\n        {/* Mobile Header */}\n        <div className=\"flex items-center justify-between h-16 px-4 bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 shadow-sm\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"h-8 w-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center\" role=\"img\" aria-label=\"KAIRO logo\">\n                <Zap className=\"h-5 w-5 text-white\" aria-hidden=\"true\" />\n              </div>\n              <span className=\"text-xl font-bold text-gray-900 dark:text-white\">KAIRO</span>\n            </div>\n            {isPaperTrading && <DemoModeIndicator className=\"text-xs\" />}\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={toggleTheme}\n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n              aria-label={`Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`}\n              title={`Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`}\n            >\n              {theme === 'dark' ? <Sun className=\"h-5 w-5\" aria-hidden=\"true\" /> : <Moon className=\"h-5 w-5\" aria-hidden=\"true\" />}\n            </button>\n            <button \n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors relative\"\n              aria-label=\"Notifications\"\n              title=\"View notifications\"\n            >\n              <Bell className=\"h-5 w-5\" />\n              <span className=\"absolute -top-1 -right-1 h-3 w-3 bg-red-500 rounded-full\"></span>\n            </button>\n          </div>\n        </div>\n\n        {/* Mobile Menu Overlay */}\n        {isMobileMenuOpen && (\n          <div className=\"fixed inset-0 z-50 lg:hidden\">\n            <div className=\"fixed inset-0 bg-black bg-opacity-25\" onClick={() => setIsMobileMenuOpen(false)}></div>\n            <div className=\"fixed top-0 right-0 bottom-0 w-full max-w-sm bg-white dark:bg-gray-800 shadow-xl\">\n              {/* Mobile Menu Header */}\n              <div className=\"flex items-center justify-between h-16 px-4 border-b border-gray-200 dark:border-gray-700\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"h-10 w-10 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full flex items-center justify-center\">\n                    <span className=\"text-white font-semibold text-sm\">\n                      {user ? `${user.firstName?.[0] || ''}${user.lastName?.[0] || ''}` || 'U' : 'U'}\n                    </span>\n                  </div>\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      {user ? `${user.firstName || ''} ${user.lastName || ''}`.trim() || 'User' : 'User'}\n                    </p>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      {user?.email || 'user@example.com'}\n                    </p>\n                  </div>\n                </div>\n                <button\n                  onClick={() => setIsMobileMenuOpen(false)}\n                  className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n                >\n                  <X className=\"h-6 w-6\" />\n                </button>\n              </div>\n\n              {/* Mobile Navigation Items */}\n              <div className=\"px-4 py-6 space-y-2\" onKeyDown={handleNavigationKeyDown} role=\"navigation\" aria-label=\"Mobile navigation menu\">\n                {navigationItems.map((item, index) => {\n                  const Icon = item.icon;\n                  const active = isActive(item.href);\n                  const isFocused = focusedItemIndex === index;\n                  \n                  return (\n                    <button\n                      key={item.name}\n                      onClick={() => {\n                        router.push(item.href);\n                        setIsMobileMenuOpen(false);\n                      }}\n                      onKeyDown={(e) => handleKeyDown(e, () => {\n                        router.push(item.href);\n                        setIsMobileMenuOpen(false);\n                      })}\n                      className={`w-full group flex items-center px-4 py-3 text-sm font-medium rounded-xl transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 ${\n                        active\n                          ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-lg'\n                          : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n                      } ${\n                        isFocused ? 'ring-2 ring-blue-500 ring-offset-2 dark:ring-offset-gray-800' : ''\n                      }`}\n                      aria-current={active ? 'page' : undefined}\n                      aria-describedby={item.description ? `${item.href}-mobile-desc` : undefined}\n                      title={item.description}\n                    >\n                      <Icon className={`mr-3 h-5 w-5 ${\n                        active ? 'text-white' : 'text-gray-400'\n                      }`} aria-hidden=\"true\" />\n                      <div className=\"flex-1 text-left\">\n                        <div className=\"font-medium\">{item.name}</div>\n                        {item.description && (\n                          <div className={`text-xs mt-1 ${\n                            active ? 'text-white/80' : 'text-gray-500 dark:text-gray-400'\n                          }`} id={`${item.href}-mobile-desc`}>\n                            {item.description}\n                          </div>\n                        )}\n                      </div>\n                      {item.badge && (\n                        <span className={`ml-2 inline-flex items-center justify-center px-2 py-1 text-xs font-bold rounded-full ${\n                          active \n                            ? 'bg-white/20 text-white' \n                            : 'bg-blue-100 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400'\n                        }`} aria-label={`${item.badge} notifications`}>\n                          {item.badge}\n                        </span>\n                      )}\n                    </button>\n                  );\n                })}\n              </div>\n\n              {/* Mobile Menu Footer */}\n              <div className=\"border-t border-gray-200 dark:border-gray-700 px-4 py-4 space-y-2\">\n                <button\n                  onClick={() => {\n                    router.push('/profile');\n                    setIsMobileMenuOpen(false);\n                  }}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-xl transition-colors\"\n                >\n                  <User className=\"h-5 w-5 text-gray-400\" />\n                  <span>Profile</span>\n                </button>\n                <button\n                  onClick={() => {\n                    router.push('/settings');\n                    setIsMobileMenuOpen(false);\n                  }}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-xl transition-colors\"\n                >\n                  <Settings className=\"h-5 w-5 text-gray-400\" />\n                  <span>Settings</span>\n                </button>\n                <button\n                  onClick={() => {\n                    router.push('/help');\n                    setIsMobileMenuOpen(false);\n                  }}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-xl transition-colors\"\n                >\n                  <HelpCircle className=\"h-5 w-5 text-gray-400\" />\n                  <span>Help & Support</span>\n                </button>\n                <button\n                  onClick={handleLogout}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20 rounded-xl transition-colors\"\n                >\n                  <LogOut className=\"h-5 w-5\" />\n                  <span>Sign Out</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Mobile Bottom Navigation */}\n      <div className=\"lg:hidden fixed bottom-0 left-0 right-0 bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700 shadow-lg\">\n        <div className=\"grid grid-cols-5 h-16\">\n          {/* Show only the 5 most important navigation items in bottom bar */}\n          {navigationItems.slice(0, 5).map((item) => {\n            const Icon = item.icon;\n            const active = isActive(item.href);\n            \n            return (\n              <button\n                key={item.name}\n                onClick={() => router.push(item.href)}\n                className={`flex flex-col items-center justify-center space-y-1 transition-colors ${\n                  active\n                    ? 'text-blue-600 dark:text-blue-400'\n                    : 'text-gray-400 hover:text-gray-600 dark:hover:text-gray-300'\n                }`}\n              >\n                <div className=\"relative\">\n                  <Icon className=\"h-5 w-5\" />\n                  {item.badge && (\n                    <span className=\"absolute -top-2 -right-2 h-4 w-4 bg-red-500 text-white text-xs rounded-full flex items-center justify-center\">\n                      {item.badge}\n                    </span>\n                  )}\n                </div>\n                <span className=\"text-xs font-medium truncate\">{item.name}</span>\n              </button>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;;;;;;;;;;AA8CA,MAAM,kBAAoC;IACxC;QACE,MAAM;QACN,MAAM;QACN,MAAM,0MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,0MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gOAAU;QAChB,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gOAAU;QAChB,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,iOAAS;QACf,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,0MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,sNAAQ;QACd,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,iOAAS;QACf,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,0MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAK;QACX,OAAO;QACP,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gOAAU;QAChB,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gNAAM;QACZ,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,uMAAG;QACT,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,uMAAG;QACT,a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","debugId":null}},
    {"offset": {"line": 4399, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/layouts/AppLayout.tsx"],"sourcesContent":["'use client';\n\nimport { ReactNode } from 'react';\nimport Navigation from '@/components/Navigation';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { useRouter, usePathname } from 'next/navigation';\nimport { useEffect } from 'react';\n\ninterface AppLayoutProps {\n  children: ReactNode;\n  requireAuth?: boolean;\n}\n\nexport default function AppLayout({ children, requireAuth = true }: AppLayoutProps) {\n  const { user, loading } = useAuth();\n  const router = useRouter();\n  const pathname = usePathname();\n\n  // Public routes that don't require authentication\n  const publicRoutes = ['/login', '/register', '/demo', '/'];\n  const isPublicRoute = publicRoutes.includes(pathname);\n\n  useEffect(() => {\n    if (!loading && requireAuth && !user && !isPublicRoute) {\n      router.push('/login');\n    }\n  }, [user, loading, requireAuth, isPublicRoute, router]);\n\n  // Show loading spinner while checking authentication\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  // For public routes or when auth is not required, show content without navigation\n  if (!requireAuth || isPublicRoute) {\n    return <>{children}</>;\n  }\n\n  // For authenticated routes, show navigation + content\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      <Navigation />\n      \n      {/* Main content area with proper spacing for navigation */}\n      <div className=\"lg:pl-64\">\n        {/* Content wrapper with padding */}\n        <main className=\"min-h-screen\">\n          {children}\n        </main>\n      </div>\n      \n      {/* Bottom spacing for mobile navigation */}\n      <div className=\"h-16 lg:hidden\"></div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AACA;AANA;;;;;;AAae,SAAS,UAAU,EAAE,QAAQ,EAAE,cAAc,IAAI,EAAkB;IAChF,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,IAAA,0IAAO;IACjC,MAAM,SAAS,IAAA,+IAAS;IACxB,MAAM,WAAW,IAAA,iJAAW;IAE5B,kDAAkD;IAClD,MAAM,eAAe;QAAC;QAAU;QAAa;QAAS;KAAI;IAC1D,MAAM,gBAAgB,aAAa,QAAQ,CAAC;IAE5C,IAAA,kNAAS,EAAC;QACR,IAAI,CAAC,WAAW,eAAe,CAAC,QAAQ,CAAC,eAAe;YACtD,OAAO,IAAI,CAAC;QACd;IACF,GAAG;QAAC;QAAM;QAAS;QAAa;QAAe;KAAO;IAEtD,qDAAqD;IACrD,IAAI,SAAS;QACX,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,kFAAkF;IAClF,IAAI,CAAC,eAAe,eAAe;QACjC,qBAAO;sBAAG;;IACZ;IAEA,sDAAsD;IACtD,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,2IAAU;;;;;0BAGX,8OAAC;gBAAI,WAAU;0BAEb,cAAA,8OAAC;oBAAK,WAAU;8BACb;;;;;;;;;;;0BAKL,8OAAC;gBAAI,WAAU;;;;;;;;;;;;AAGrB","debugId":null}},
    {"offset": {"line": 4502, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/app/trading/options/page.tsx"],"sourcesContent":["'use client';\n\nimport OptionsTrading from '../../../../components/trading/OptionsTrading';\nimport AppLayout from '@/components/layouts/AppLayout';\nimport { Target, ArrowLeft } from 'lucide-react';\nimport Link from 'next/link';\n\nexport default function OptionsTradingPage() {\n  return (\n    <AppLayout>\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 p-6\">\n      {/* Header */}\n      <div className=\"bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center space-x-4\">\n              <Link\n                href=\"/trading\"\n                className=\"flex items-center space-x-2 text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white transition-colors\"\n              >\n                <ArrowLeft className=\"h-5 w-5\" />\n                <span>Back to Trading</span>\n              </Link>\n              <div className=\"h-6 w-px bg-gray-300 dark:bg-gray-600\" />\n              <div className=\"flex items-center space-x-2\">\n                <Target className=\"h-6 w-6 text-purple-600\" />\n                <h1 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                  Options Trading\n                </h1>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center space-x-3\">\n              <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n                <span>Greeks & Strategies</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <OptionsTrading />\n      </div>\n      </div>\n    </AppLayout>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAAA;AACA;AALA;;;;;;AAOe,SAAS;IACtB,qBACE,8OAAC,qJAAS;kBACR,cAAA,8OAAC;YAAI,WAAU;;8BAEf,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC,uKAAI;4CACH,MAAK;4CACL,WAAU;;8DAEV,8OAAC,6NAAS;oDAAC,WAAU;;;;;;8DACrB,8OAAC;8DAAK;;;;;;;;;;;;sDAER,8OAAC;4CAAI,WAAU;;;;;;sDACf,8OAAC;4CAAI,WAAU;;8DACb,8OAAC,gNAAM;oDAAC,WAAU;;;;;;8DAClB,8OAAC;oDAAG,WAAU;8DAAsD;;;;;;;;;;;;;;;;;;8CAMxE,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC;sDAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAQhB,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,mJAAc;;;;;;;;;;;;;;;;;;;;;AAKvB","debugId":null}}]
}