{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }"],"names":[],"mappings":";;;;;;;AACA;AACA;;;;AAEA,MAAM,gBAAgB,IAAA,uKAAG,EACvB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,IAAA,yHAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/DemoModeIndicator.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\nimport { Badge } from '@/components/ui/badge'\nimport { AlertTriangle, Play } from 'lucide-react'\nimport { useTradingMode } from '@/contexts/TradingModeContext'\nimport { cn } from '@/lib/utils'\n\ninterface DemoModeIndicatorProps {\n  className?: string\n  variant?: 'badge' | 'banner'\n}\n\nexport function DemoModeIndicator({ className, variant = 'badge' }: DemoModeIndicatorProps) {\n  const { isPaperTrading, tradingMode } = useTradingMode()\n\n  if (!isPaperTrading) {\n    return null\n  }\n\n  if (variant === 'banner') {\n    return (\n      <div className={cn(\n        'bg-orange-100 dark:bg-orange-900/20 border border-orange-200 dark:border-orange-800 rounded-lg p-3 mb-4',\n        className\n      )}>\n        <div className=\"flex items-center gap-2\">\n          <Play className=\"h-4 w-4 text-orange-600 dark:text-orange-400\" />\n          <span className=\"text-sm font-medium text-orange-800 dark:text-orange-200\">\n            Demo Mode Active\n          </span>\n          <span className=\"text-xs text-orange-600 dark:text-orange-400\">\n            • All trades are simulated • No real money involved\n          </span>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <Badge \n      variant=\"outline\" \n      className={cn(\n        'bg-orange-50 dark:bg-orange-900/20 border-orange-200 dark:border-orange-800 text-orange-700 dark:text-orange-300 font-medium',\n        className\n      )}\n    >\n      <Play className=\"h-3 w-3 mr-1\" />\n      Demo Mode\n    </Badge>\n  )\n}\n\nexport default DemoModeIndicator"],"names":[],"mappings":";;;;;;;AAGA;AACA;AACA;AACA;AANA;;;;;;AAaO,SAAS,kBAAkB,EAAE,SAAS,EAAE,UAAU,OAAO,EAA0B;IACxF,MAAM,EAAE,cAAc,EAAE,WAAW,EAAE,GAAG,IAAA,wJAAc;IAEtD,IAAI,CAAC,gBAAgB;QACnB,OAAO;IACT;IAEA,IAAI,YAAY,UAAU;QACxB,qBACE,8OAAC;YAAI,WAAW,IAAA,yHAAE,EAChB,2GACA;sBAEA,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,0MAAI;wBAAC,WAAU;;;;;;kCAChB,8OAAC;wBAAK,WAAU;kCAA2D;;;;;;kCAG3E,8OAAC;wBAAK,WAAU;kCAA+C;;;;;;;;;;;;;;;;;IAMvE;IAEA,qBACE,8OAAC,0IAAK;QACJ,SAAQ;QACR,WAAW,IAAA,yHAAE,EACX,gIACA;;0BAGF,8OAAC,0MAAI;gBAAC,WAAU;;;;;;YAAiB;;;;;;;AAIvC;uCAEe","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/modals/DepositWithdrawModal.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { X, CreditCard, Banknote, Smartphone, ArrowUpRight, ArrowDownLeft, DollarSign, Clock, Shield, CheckCircle } from 'lucide-react';\nimport automatedWorkflowService from '@/services/AutomatedWorkflowService';\n\ninterface DepositWithdrawModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  mode: 'deposit' | 'withdraw';\n  currentBalance?: number;\n  onSuccess?: (amount: number, method: string) => void;\n}\n\ninterface PaymentMethod {\n  id: string;\n  name: string;\n  icon: React.ReactNode;\n  description: string;\n  processingTime: string;\n  fees: string;\n  minAmount: number;\n  maxAmount: number;\n}\n\nconst DepositWithdrawModal: React.FC<DepositWithdrawModalProps> = ({\n  isOpen,\n  onClose,\n  mode,\n  currentBalance = 0,\n  onSuccess\n}) => {\n  const [selectedMethod, setSelectedMethod] = useState<string>('');\n  const [amount, setAmount] = useState<string>('');\n  const [step, setStep] = useState<'method' | 'amount' | 'confirmation' | 'processing' | 'success'>('method');\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const depositMethods: PaymentMethod[] = [\n    {\n      id: 'bank-transfer',\n      name: 'Bank Transfer',\n      icon: <Banknote className=\"h-6 w-6\" />,\n      description: 'Direct transfer from your bank account',\n      processingTime: '1-3 business days',\n      fees: 'Free',\n      minAmount: 10,\n      maxAmount: 50000\n    },\n    {\n      id: 'debit-card',\n      name: 'Debit Card',\n      icon: <CreditCard className=\"h-6 w-6\" />,\n      description: 'Instant deposit with your debit card',\n      processingTime: 'Instant',\n      fees: '2.9% + $0.30',\n      minAmount: 1,\n      maxAmount: 10000\n    },\n    {\n      id: 'mobile-payment',\n      name: 'Mobile Payment',\n      icon: <Smartphone className=\"h-6 w-6\" />,\n      description: 'Apple Pay, Google Pay, Samsung Pay',\n      processingTime: 'Instant',\n      fees: '2.9% + $0.30',\n      minAmount: 1,\n      maxAmount: 5000\n    }\n  ];\n\n  const withdrawMethods: PaymentMethod[] = [\n    {\n      id: 'bank-transfer',\n      name: 'Bank Transfer',\n      icon: <Banknote className=\"h-6 w-6\" />,\n      description: 'Transfer to your linked bank account',\n      processingTime: '1-3 business days',\n      fees: 'Free',\n      minAmount: 10,\n      maxAmount: currentBalance\n    },\n    {\n      id: 'instant-withdrawal',\n      name: 'Instant Withdrawal',\n      icon: <CreditCard className=\"h-6 w-6\" />,\n      description: 'Instant transfer to your debit card',\n      processingTime: 'Instant',\n      fees: '1.5%',\n      minAmount: 1,\n      maxAmount: Math.min(currentBalance, 25000)\n    }\n  ];\n\n  const methods = mode === 'deposit' ? depositMethods : withdrawMethods;\n  const selectedMethodData = methods.find(m => m.id === selectedMethod);\n\n  const handleMethodSelect = (methodId: string) => {\n    setSelectedMethod(methodId);\n    setStep('amount');\n  };\n\n  const handleAmountSubmit = () => {\n    if (!amount || parseFloat(amount) < (selectedMethodData?.minAmount || 0)) return;\n    setStep('confirmation');\n  };\n\n  const handleConfirm = async () => {\n    setStep('processing');\n    setIsProcessing(true);\n    \n    try {\n      const amountValue = parseFloat(amount);\n      const methodName = selectedMethodData?.name || '';\n      \n      if (mode === 'deposit') {\n        await automatedWorkflowService.manualDeposit(amountValue, methodName);\n      } else {\n        await automatedWorkflowService.manualWithdraw(amountValue, methodName);\n      }\n      \n      setIsProcessing(false);\n      setStep('success');\n      onSuccess?.(amountValue, methodName);\n    } catch (error) {\n      setIsProcessing(false);\n      // Handle error - could add error step or show error message\n      console.error('Transaction failed:', error);\n    }\n  };\n\n  const resetModal = () => {\n    setSelectedMethod('');\n    setAmount('');\n    setStep('method');\n    setIsProcessing(false);\n  };\n\n  const handleClose = () => {\n    resetModal();\n    onClose();\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-2xl w-full max-w-md max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex items-center gap-3\">\n            {mode === 'deposit' ? (\n              <ArrowUpRight className=\"h-6 w-6 text-green-600\" />\n            ) : (\n              <ArrowDownLeft className=\"h-6 w-6 text-blue-600\" />\n            )}\n            <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n              {mode === 'deposit' ? 'Deposit Funds' : 'Withdraw Funds'}\n            </h2>\n          </div>\n          <button\n            onClick={handleClose}\n            className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\n          >\n            <X className=\"h-5 w-5 text-gray-500\" />\n          </button>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6\">\n          {step === 'method' && (\n            <div className=\"space-y-4\">\n              <div className=\"text-center mb-6\">\n                <p className=\"text-gray-600 dark:text-gray-400\">\n                  {mode === 'deposit' \n                    ? 'Choose how you\\'d like to add funds to your account'\n                    : `Available balance: $${currentBalance.toFixed(2)}`\n                  }\n                </p>\n              </div>\n              \n              <div className=\"space-y-3\">\n                {methods.map((method) => (\n                  <button\n                    key={method.id}\n                    onClick={() => handleMethodSelect(method.id)}\n                    className=\"w-full p-4 border border-gray-200 dark:border-gray-700 rounded-lg hover:border-blue-500 dark:hover:border-blue-400 transition-colors text-left\"\n                  >\n                    <div className=\"flex items-start gap-3\">\n                      <div className=\"text-blue-600 dark:text-blue-400 mt-1\">\n                        {method.icon}\n                      </div>\n                      <div className=\"flex-1\">\n                        <h3 className=\"font-medium text-gray-900 dark:text-white\">\n                          {method.name}\n                        </h3>\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n                          {method.description}\n                        </p>\n                        <div className=\"flex items-center gap-4 mt-2 text-xs text-gray-500 dark:text-gray-400\">\n                          <span className=\"flex items-center gap-1\">\n                            <Clock className=\"h-3 w-3\" />\n                            {method.processingTime}\n                          </span>\n                          <span>Fee: {method.fees}</span>\n                        </div>\n                      </div>\n                    </div>\n                  </button>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {step === 'amount' && selectedMethodData && (\n            <div className=\"space-y-6\">\n              <button\n                onClick={() => setStep('method')}\n                className=\"text-blue-600 dark:text-blue-400 text-sm hover:underline\"\n              >\n                ← Back to payment methods\n              </button>\n              \n              <div className=\"text-center\">\n                <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n                  {selectedMethodData.name}\n                </h3>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                  {selectedMethodData.description}\n                </p>\n              </div>\n\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Amount\n                  </label>\n                  <div className=\"relative\">\n                    <DollarSign className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                    <input\n                      type=\"number\"\n                      value={amount}\n                      onChange={(e) => setAmount(e.target.value)}\n                      placeholder=\"0.00\"\n                      min={selectedMethodData.minAmount}\n                      max={selectedMethodData.maxAmount}\n                      className=\"w-full pl-10 pr-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                    />\n                  </div>\n                  <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                    Min: ${selectedMethodData.minAmount} • Max: ${selectedMethodData.maxAmount.toLocaleString()}\n                  </p>\n                </div>\n\n                <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\n                  <div className=\"flex justify-between text-sm\">\n                    <span className=\"text-gray-600 dark:text-gray-400\">Processing time:</span>\n                    <span className=\"text-gray-900 dark:text-white\">{selectedMethodData.processingTime}</span>\n                  </div>\n                  <div className=\"flex justify-between text-sm mt-1\">\n                    <span className=\"text-gray-600 dark:text-gray-400\">Fee:</span>\n                    <span className=\"text-gray-900 dark:text-white\">{selectedMethodData.fees}</span>\n                  </div>\n                </div>\n\n                <button\n                  onClick={handleAmountSubmit}\n                  disabled={!amount || parseFloat(amount) < selectedMethodData.minAmount || parseFloat(amount) > selectedMethodData.maxAmount}\n                  className=\"w-full py-3 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed text-white font-medium rounded-lg transition-colors\"\n                >\n                  Continue\n                </button>\n              </div>\n            </div>\n          )}\n\n          {step === 'confirmation' && selectedMethodData && (\n            <div className=\"space-y-6\">\n              <button\n                onClick={() => setStep('amount')}\n                className=\"text-blue-600 dark:text-blue-400 text-sm hover:underline\"\n              >\n                ← Back to amount\n              </button>\n              \n              <div className=\"text-center\">\n                <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n                  Confirm {mode === 'deposit' ? 'Deposit' : 'Withdrawal'}\n                </h3>\n              </div>\n\n              <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-6 space-y-4\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600 dark:text-gray-400\">Amount:</span>\n                  <span className=\"font-semibold text-gray-900 dark:text-white\">${parseFloat(amount).toFixed(2)}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600 dark:text-gray-400\">Method:</span>\n                  <span className=\"text-gray-900 dark:text-white\">{selectedMethodData.name}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600 dark:text-gray-400\">Processing time:</span>\n                  <span className=\"text-gray-900 dark:text-white\">{selectedMethodData.processingTime}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600 dark:text-gray-400\">Fee:</span>\n                  <span className=\"text-gray-900 dark:text-white\">{selectedMethodData.fees}</span>\n                </div>\n              </div>\n\n              <div className=\"flex items-start gap-3 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n                <Shield className=\"h-5 w-5 text-blue-600 dark:text-blue-400 mt-0.5\" />\n                <div className=\"text-sm\">\n                  <p className=\"text-blue-800 dark:text-blue-200 font-medium\">\n                    Secure Transaction\n                  </p>\n                  <p className=\"text-blue-700 dark:text-blue-300 mt-1\">\n                    Your transaction is protected by bank-level encryption and security measures.\n                  </p>\n                </div>\n              </div>\n\n              <button\n                onClick={handleConfirm}\n                className=\"w-full py-3 bg-green-600 hover:bg-green-700 text-white font-medium rounded-lg transition-colors\"\n              >\n                Confirm {mode === 'deposit' ? 'Deposit' : 'Withdrawal'}\n              </button>\n            </div>\n          )}\n\n          {step === 'processing' && (\n            <div className=\"text-center py-8\">\n              <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n              <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n                Processing {mode === 'deposit' ? 'Deposit' : 'Withdrawal'}\n              </h3>\n              <p className=\"text-gray-600 dark:text-gray-400\">\n                Please wait while we process your transaction...\n              </p>\n            </div>\n          )}\n\n          {step === 'success' && (\n            <div className=\"text-center py-8\">\n              <CheckCircle className=\"h-16 w-16 text-green-600 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n                {mode === 'deposit' ? 'Deposit' : 'Withdrawal'} Successful!\n              </h3>\n              <p className=\"text-gray-600 dark:text-gray-400 mb-6\">\n                ${parseFloat(amount).toFixed(2)} has been {mode === 'deposit' ? 'added to' : 'withdrawn from'} your account.\n              </p>\n              <button\n                onClick={handleClose}\n                className=\"px-6 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors\"\n              >\n                Done\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DepositWithdrawModal;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 952, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/Navigation.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter, usePathname } from 'next/navigation';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { useTheme } from '@/contexts/ThemeContext';\nimport { useTradingMode } from '@/contexts/TradingModeContext';\nimport DemoModeIndicator from '@/components/ui/DemoModeIndicator';\nimport { toast } from 'react-hot-toast';\nimport {\n  Menu,\n  X,\n  Home,\n  TrendingUp,\n  BarChart3,\n  Users,\n  Copy,\n  Bell,\n  Settings,\n  LogOut,\n  Sun,\n  Moon,\n  User,\n  ChevronDown,\n  Search,\n  Wallet,\n  Activity,\n  Shield,\n  HelpCircle,\n  Zap,\n  Radio,\n  CreditCard,\n  Crown,\n  Award,\n  Bot,\n  Link,\n  ArrowUpRight,\n  ArrowDownLeft,\n  Plus\n} from 'lucide-react';\nimport DepositWithdrawModal from '@/components/modals/DepositWithdrawModal';\n\ninterface NavigationItem {\n  name: string;\n  href: string;\n  icon: any;\n  badge?: number;\n  description?: string;\n}\n\n// All navigation items (available in user profile)\nconst allNavigationItems: NavigationItem[] = [\n  {\n    name: 'Dashboard',\n    href: '/dashboard',\n    icon: Home,\n    description: 'Overview and portfolio summary'\n  },\n  {\n    name: 'User Dashboard',\n    href: '/user-dashboard',\n    icon: User,\n    description: 'Personal account and subscription management'\n  },\n  {\n    name: 'Trading',\n    href: '/trading',\n    icon: TrendingUp,\n    description: 'Execute trades and view market data'\n  },\n  {\n    name: 'Live Trading',\n    href: '/trading/live',\n    icon: Radio,\n    description: 'Real-time trading dashboard'\n  },\n  {\n    name: 'Trading Panel',\n    href: '/trading/panel',\n    icon: TrendingUp,\n    description: 'Advanced trading interface with live market data'\n  },\n  {\n    name: 'Futures Trading',\n    href: '/trading/futures',\n    icon: TrendingUp,\n    description: 'Futures contracts trading'\n  },\n  {\n    name: 'Options Trading',\n    href: '/trading/options',\n    icon: BarChart3,\n    description: 'Options contracts trading'\n  },\n  {\n    name: 'Market Updates',\n    href: '/trading/market-updates',\n    icon: Bell,\n    description: 'Real-time market news and updates'\n  },\n  {\n    name: 'Pine Editor',\n    href: '/trading/pine-editor',\n    icon: Settings,\n    description: 'Pine Script editor for custom indicators'\n  },\n  {\n    name: 'Profit Targets',\n    href: '/trading/profit-targets',\n    icon: Award,\n    description: 'Set and manage profit targets'\n  },\n  {\n    name: 'Portfolio',\n    href: '/portfolio',\n    icon: BarChart3,\n    description: 'Manage your investments'\n  },\n  {\n    name: 'Copy Trade',\n    href: '/copy-trade',\n    icon: Copy,\n    description: 'Follow and copy successful traders'\n  },\n  {\n    name: 'Creators',\n    href: '/creators',\n    icon: Award,\n    description: 'Discover top trading creators and investors'\n  },\n  {\n    name: 'Social',\n    href: '/social',\n    icon: Users,\n    badge: 3,\n    description: 'Connect with the trading community'\n  },\n  {\n    name: 'Pricing',\n    href: '/pricing',\n    icon: Crown,\n    description: 'View subscription plans and pricing'\n  },\n  {\n    name: 'Payment',\n    href: '/payment',\n    icon: CreditCard,\n    description: 'Manage payment methods and billing'\n  },\n  {\n    name: 'Security',\n    href: '/security',\n    icon: Shield,\n    description: 'Security settings and compliance'\n  },\n  {\n    name: 'Automation',\n    href: '/automation',\n    icon: Bot,\n    description: 'Automated trading and system management'\n  },\n  {\n    name: 'Trading Bot',\n    href: '/automation/trading-bot',\n    icon: Bot,\n    description: 'Configure and manage trading bots'\n  },\n  {\n    name: 'Copy Trading Auto',\n    href: '/automation/copy-trading',\n    icon: Copy,\n    description: 'Automated copy trading settings'\n  },\n  {\n    name: 'Risk Management',\n    href: '/automation/risk-management',\n    icon: Shield,\n    description: 'Automated risk management rules'\n  },\n  {\n    name: 'Data Pipeline',\n    href: '/automation/data-pipeline',\n    icon: Activity,\n    description: 'Automated data processing and analysis'\n  },\n  {\n    name: 'Auto Notifications',\n    href: '/automation/notifications',\n    icon: Bell,\n    description: 'Automated notification settings'\n  },\n  {\n    name: 'Auto Payments',\n    href: '/automation/payments',\n    icon: CreditCard,\n    description: 'Automated payment processing'\n  },\n  {\n    name: 'Auto Reporting',\n    href: '/automation/reporting',\n    icon: BarChart3,\n    description: 'Automated report generation'\n  },\n  {\n    name: 'Auto Onboarding',\n    href: '/automation/onboarding',\n    icon: User,\n    description: 'Automated user onboarding process'\n  },\n  {\n    name: 'Brokers',\n    href: '/brokers',\n    icon: Link,\n    description: 'Connect and manage broker accounts'\n  },\n  {\n    name: 'Demo',\n    href: '/demo',\n    icon: Activity,\n    description: 'Practice trading with demo account'\n  },\n  {\n    name: 'Settings',\n    href: '/settings',\n    icon: Settings,\n    description: 'Application settings and preferences'\n  },\n  {\n    name: 'Profile',\n    href: '/profile',\n    icon: User,\n    description: 'Manage your profile and account details'\n  },\n  {\n    name: 'Help',\n    href: '/help',\n    icon: HelpCircle,\n    description: 'Get help and support'\n  }\n];\n\n// Items to hide from main navigation but keep in profile\nconst hiddenFromMainNav = ['Dashboard', 'User Dashboard', 'Trading', 'Live Trading', 'Futures Trading'];\n\n// Filtered navigation items for main navigation (excludes specified items)\nconst navigationItems = allNavigationItems.filter(item => !hiddenFromMainNav.includes(item.name));\n\nexport default function Navigation() {\n  const { user, logout } = useAuth();\n  const { theme, setTheme } = useTheme();\n  const { isPaperTrading } = useTradingMode();\n  const router = useRouter();\n  const pathname = usePathname();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [isProfileMenuOpen, setIsProfileMenuOpen] = useState(false);\n  const [mounted, setMounted] = useState(false);\n  const [focusedItemIndex, setFocusedItemIndex] = useState(-1);\n  const [isDepositWithdrawModalOpen, setIsDepositWithdrawModalOpen] = useState(false);\n  const [depositWithdrawMode, setDepositWithdrawMode] = useState<'deposit' | 'withdraw'>('deposit');\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  const handleLogout = async () => {\n    try {\n      await logout();\n      router.push('/login');\n      toast.success('Logged out successfully');\n    } catch (error) {\n      toast.error('Failed to logout. Please try again.');\n    }\n  };\n\n  const toggleTheme = () => {\n    setTheme(theme === 'dark' ? 'light' : 'dark');\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent, action: () => void) => {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      action();\n    }\n  };\n\n  const handleNavigationKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === 'ArrowDown') {\n      event.preventDefault();\n      setFocusedItemIndex(prev => (prev + 1) % allNavigationItems.length);\n    } else if (event.key === 'ArrowUp') {\n      event.preventDefault();\n      setFocusedItemIndex(prev => prev <= 0 ? allNavigationItems.length - 1 : prev - 1);\n    } else if (event.key === 'Enter' && focusedItemIndex >= 0) {\n      event.preventDefault();\n      router.push(allNavigationItems[focusedItemIndex].href);\n    } else if (event.key === 'Escape') {\n      setIsProfileMenuOpen(false);\n      setIsMobileMenuOpen(false);\n    }\n  };\n\n  const isActive = (href: string) => {\n    return pathname === href;\n  };\n\n  if (!mounted) {\n    return null;\n  }\n\n  return (\n    <>\n      {/* Desktop Top Navigation Bar */}\n      <div className=\"hidden lg:block lg:fixed lg:top-0 lg:left-64 lg:right-0 lg:h-16 lg:bg-white lg:dark:bg-gray-800 lg:border-b lg:border-gray-200 lg:dark:border-gray-700 lg:shadow-sm lg:z-40\">\n        <div className=\"flex items-center justify-between h-full px-6\">\n          <div className=\"flex items-center space-x-6\">\n            <div className=\"relative\">\n              <button\n                onClick={() => setIsProfileMenuOpen(!isProfileMenuOpen)}\n                className=\"flex items-center space-x-2 px-3 py-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\"\n                aria-expanded={isProfileMenuOpen}\n                aria-haspopup=\"menu\"\n                aria-label=\"Quick navigation menu\"\n              >\n                <Menu className=\"h-4 w-4 text-gray-500 dark:text-gray-400\" />\n                <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Quick Menu</span>\n                <ChevronDown className={`h-4 w-4 text-gray-400 transition-transform ${\n                  isProfileMenuOpen ? 'rotate-180' : ''\n                }`} />\n              </button>\n              \n              {/* Quick Access Dropdown */}\n              {isProfileMenuOpen && (\n                <div className=\"absolute top-full left-0 mt-2 w-64 bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 py-2 max-h-96 overflow-y-auto z-50\">\n                  <div className=\"px-2 py-2\">\n                    <p className=\"px-2 py-1 text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Quick Access</p>\n                    {navigationItems.slice(0, 8).map((item) => {\n                      const active = isActive(item.href);\n                      return (\n                        <button\n                          key={item.href}\n                          onClick={() => {\n                            router.push(item.href);\n                            setIsProfileMenuOpen(false);\n                          }}\n                          className={`w-full flex items-center space-x-3 px-3 py-2 mb-1 rounded-lg transition-all duration-200 group text-sm ${\n                            active\n                              ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-sm'\n                              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 hover:text-gray-900 dark:hover:text-white'\n                          }`}\n                          title={item.description}\n                        >\n                          <item.icon className={`h-4 w-4 transition-colors ${\n                            active ? 'text-white' : 'text-gray-500 dark:text-gray-400 group-hover:text-gray-700 dark:group-hover:text-gray-300'\n                          }`} aria-hidden=\"true\" />\n                          <span className=\"flex-1 text-left\">{item.name}</span>\n                        </button>\n                      );\n                    })}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n          \n          <div className=\"flex items-center space-x-4\">\n            <button\n              onClick={toggleTheme}\n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n              aria-label={`Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`}\n            >\n              {theme === 'dark' ? <Sun className=\"h-4 w-4\" /> : <Moon className=\"h-4 w-4\" />}\n            </button>\n            <button className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors relative\">\n              <Bell className=\"h-4 w-4\" />\n              <span className=\"absolute -top-1 -right-1 h-2 w-2 bg-red-500 rounded-full\"></span>\n            </button>\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"h-8 w-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full flex items-center justify-center\">\n                <span className=\"text-white font-semibold text-xs\">\n                  {user ? `${user.firstName?.[0] || ''}${user.lastName?.[0] || ''}` || 'U' : 'U'}\n                </span>\n              </div>\n              <div className=\"text-left\">\n                <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                  {user ? `${user.firstName || ''} ${user.lastName || ''}`.trim() || 'User' : 'User'}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Desktop Navigation */}\n      <nav className=\"hidden lg:flex lg:flex-col lg:w-64 lg:fixed lg:inset-y-0 lg:border-r lg:border-gray-200 lg:dark:border-gray-700 lg:bg-white lg:dark:bg-gray-800 lg:shadow-sm\">\n        {/* Logo */}\n        <div className=\"flex items-center justify-center h-16 px-6 border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex flex-col items-center space-y-1\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"h-8 w-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center\">\n                <Zap className=\"h-5 w-5 text-white\" />\n              </div>\n              <span className=\"text-xl font-bold text-gray-900 dark:text-white\">KAIRO</span>\n            </div>\n            {isPaperTrading && <DemoModeIndicator className=\"text-xs\" />}\n          </div>\n        </div>\n\n        {/* Simplified Navigation - Only Logo Area */}\n        <div className=\"flex-1 flex items-center justify-center px-4 py-6\">\n          <div className=\"text-center text-gray-500 dark:text-gray-400\">\n            <p className=\"text-sm\">Navigation Menu</p>\n            <p className=\"text-xs mt-1\">Available in Profile</p>\n          </div>\n        </div>\n\n        {/* User Profile Section */}\n        <div className=\"border-t border-gray-200 dark:border-gray-700 p-4\">\n          <div className=\"relative\">\n            <button\n              onClick={() => setIsProfileMenuOpen(!isProfileMenuOpen)}\n              className=\"w-full flex items-center space-x-3 p-3 rounded-xl hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\"\n              aria-expanded={isProfileMenuOpen}\n              aria-haspopup=\"menu\"\n              aria-label=\"User profile menu\"\n            >\n              <div className=\"h-10 w-10 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full flex items-center justify-center\">\n                <span className=\"text-white font-semibold text-sm\">\n                  {user ? `${user.firstName?.[0] || ''}${user.lastName?.[0] || ''}` || 'U' : 'U'}\n                </span>\n              </div>\n              <div className=\"flex-1 text-left\">\n                <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                  {user ? `${user.firstName || ''} ${user.lastName || ''}`.trim() || 'User' : 'User'}\n                </p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  {user?.email || 'user@example.com'}\n                </p>\n              </div>\n              <ChevronDown className={`h-4 w-4 text-gray-400 transition-transform ${\n                isProfileMenuOpen ? 'rotate-180' : ''\n              }`} />\n            </button>\n\n            {/* Profile Dropdown with Navigation Menu */}\n            {isProfileMenuOpen && (\n              <div \n                className=\"absolute bottom-full left-0 right-0 mb-2 bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 py-2 max-h-96 overflow-y-auto\"\n                role=\"menu\"\n                aria-label=\"User profile and navigation menu\"\n              >\n                {/* Navigation Items */}\n                <div className=\"px-2 py-2\">\n                    <p className=\"px-2 py-1 text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Navigation</p>\n                    <div onKeyDown={handleNavigationKeyDown}>\n                      {allNavigationItems.map((item, index) => {\n                      const active = isActive(item.href);\n                      const isFocused = focusedItemIndex === index;\n                      const isPortfolio = item.name === 'Portfolio';\n                      \n                      return (\n                        <div key={item.href} className=\"mb-1\">\n                          <button\n                            onClick={() => {\n                              router.push(item.href);\n                              setIsProfileMenuOpen(false);\n                            }}\n                            onKeyDown={(e) => handleKeyDown(e, () => {\n                              router.push(item.href);\n                              setIsProfileMenuOpen(false);\n                            })}\n                            className={`w-full flex items-center space-x-3 px-3 py-2 rounded-lg transition-all duration-200 group text-sm ${\n                              active\n                                ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-sm'\n                                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 hover:text-gray-900 dark:hover:text-white'\n                            } ${\n                              isFocused ? 'ring-2 ring-blue-500 ring-offset-2 dark:ring-offset-gray-800' : ''\n                            }`}\n                            aria-current={active ? 'page' : undefined}\n                            title={item.description}\n                          >\n                            <item.icon className={`h-4 w-4 transition-colors ${\n                              active ? 'text-white' : 'text-gray-500 dark:text-gray-400 group-hover:text-gray-700 dark:group-hover:text-gray-300'\n                            }`} aria-hidden=\"true\" />\n                            <span className=\"flex-1 text-left\">{item.name}</span>\n                            {item.badge && (\n                              <span className={`ml-2 inline-flex items-center justify-center px-1.5 py-0.5 text-xs font-bold rounded-full ${\n                                active \n                                  ? 'bg-white/20 text-white' \n                                  : 'bg-blue-100 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400'\n                              }`} aria-label={`${item.badge} notifications`}>\n                                {item.badge}\n                              </span>\n                            )}\n                          </button>\n                          \n                          {/* Quick Action Buttons for Portfolio */}\n                          {isPortfolio && (\n                            <div className=\"flex space-x-1 mt-1 px-3\">\n                              <button\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  setDepositWithdrawMode('deposit');\n                                  setIsDepositWithdrawModalOpen(true);\n                                  setIsProfileMenuOpen(false);\n                                }}\n                                className=\"flex-1 flex items-center justify-center space-x-1 px-2 py-1 text-xs bg-green-100 dark:bg-green-900/20 text-green-700 dark:text-green-400 rounded-md hover:bg-green-200 dark:hover:bg-green-900/30 transition-colors\"\n                                title=\"Quick Deposit\"\n                              >\n                                <ArrowUpRight className=\"h-3 w-3\" />\n                                <span>Deposit</span>\n                              </button>\n                              <button\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  setDepositWithdrawMode('withdraw');\n                                  setIsDepositWithdrawModalOpen(true);\n                                  setIsProfileMenuOpen(false);\n                                }}\n                                className=\"flex-1 flex items-center justify-center space-x-1 px-2 py-1 text-xs bg-blue-100 dark:bg-blue-900/20 text-blue-700 dark:text-blue-400 rounded-md hover:bg-blue-200 dark:hover:bg-blue-900/30 transition-colors\"\n                                title=\"Quick Withdraw\"\n                              >\n                                <ArrowDownLeft className=\"h-3 w-3\" />\n                                <span>Withdraw</span>\n                              </button>\n                            </div>\n                          )}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n                \n                {/* Profile Actions */}\n                <div className=\"border-t border-gray-200 dark:border-gray-700 mt-2 pt-2\">\n                  <p className=\"px-4 py-1 text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Account</p>\n                  <button\n                    onClick={() => {\n                      router.push('/profile');\n                      setIsProfileMenuOpen(false);\n                    }}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                    role=\"menuitem\"\n                    aria-label=\"Go to profile page\"\n                  >\n                    <User className=\"h-4 w-4\" aria-hidden=\"true\" />\n                    <span>Profile</span>\n                  </button>\n                  <button\n                    onClick={() => {\n                      router.push('/settings');\n                      setIsProfileMenuOpen(false);\n                    }}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                  >\n                    <Settings className=\"h-4 w-4\" />\n                    <span>Settings</span>\n                  </button>\n                  <button\n                    onClick={toggleTheme}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                  >\n                    {theme === 'dark' ? <Sun className=\"h-4 w-4\" /> : <Moon className=\"h-4 w-4\" />}\n                    <span>{theme === 'dark' ? 'Light Mode' : 'Dark Mode'}</span>\n                  </button>\n                  <div className=\"border-t border-gray-200 dark:border-gray-700 my-2\"></div>\n                  <button\n                    onClick={handleLogout}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20\"\n                  >\n                    <LogOut className=\"h-4 w-4\" />\n                    <span>Sign Out</span>\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </nav>\n\n      {/* Mobile Navigation */}\n      <div className=\"lg:hidden\">\n        {/* Mobile Header */}\n        <div className=\"flex items-center justify-between h-16 px-4 bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 shadow-sm\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"h-8 w-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center\" role=\"img\" aria-label=\"KAIRO logo\">\n                <Zap className=\"h-5 w-5 text-white\" aria-hidden=\"true\" />\n              </div>\n              <span className=\"text-xl font-bold text-gray-900 dark:text-white\">KAIRO</span>\n            </div>\n            {isPaperTrading && <DemoModeIndicator className=\"text-xs\" />}\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={toggleTheme}\n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n              aria-label={`Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`}\n              title={`Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`}\n            >\n              {theme === 'dark' ? <Sun className=\"h-5 w-5\" aria-hidden=\"true\" /> : <Moon className=\"h-5 w-5\" aria-hidden=\"true\" />}\n            </button>\n            <button \n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors relative\"\n              aria-label=\"Notifications\"\n              title=\"View notifications\"\n            >\n              <Bell className=\"h-5 w-5\" />\n              <span className=\"absolute -top-1 -right-1 h-3 w-3 bg-red-500 rounded-full\"></span>\n            </button>\n            <button\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n              aria-label=\"Open navigation menu\"\n              title=\"Open navigation menu\"\n            >\n              <Menu className=\"h-5 w-5\" aria-hidden=\"true\" />\n            </button>\n          </div>\n        </div>\n\n        {/* Mobile Menu Overlay */}\n        {isMobileMenuOpen && (\n          <div className=\"fixed inset-0 z-50 lg:hidden\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"mobile-menu-title\">\n            <div className=\"fixed inset-0 bg-black bg-opacity-25\" onClick={() => setIsMobileMenuOpen(false)} aria-hidden=\"true\"></div>\n            <div className=\"fixed top-0 right-0 bottom-0 w-full max-w-sm bg-white dark:bg-gray-800 shadow-xl\">\n              {/* Mobile Menu Header */}\n              <div className=\"flex items-center justify-between h-16 px-4 border-b border-gray-200 dark:border-gray-700\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"h-10 w-10 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full flex items-center justify-center\">\n                    <span className=\"text-white font-semibold text-sm\">\n                      {user ? `${user.firstName?.[0] || ''}${user.lastName?.[0] || ''}` || 'U' : 'U'}\n                    </span>\n                  </div>\n                  <div>\n                    <h2 id=\"mobile-menu-title\" className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      {user ? `${user.firstName || ''} ${user.lastName || ''}`.trim() || 'User' : 'User'}\n                    </h2>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      {user?.email || 'user@example.com'}\n                    </p>\n                  </div>\n                </div>\n                <button\n                  onClick={() => setIsMobileMenuOpen(false)}\n                  className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 rounded-lg\"\n                  aria-label=\"Close navigation menu\"\n                  title=\"Close navigation menu\"\n                >\n                  <X className=\"h-6 w-6\" aria-hidden=\"true\" />\n                </button>\n              </div>\n\n              {/* Mobile Navigation Items */}\n              <div className=\"px-4 py-6 space-y-2\" onKeyDown={handleNavigationKeyDown} role=\"navigation\" aria-label=\"Mobile navigation menu\">\n                {allNavigationItems.map((item, index) => {\n                  const Icon = item.icon;\n                  const active = isActive(item.href);\n                  const isFocused = focusedItemIndex === index;\n                  \n                  return (\n                    <button\n                      key={item.name}\n                      onClick={() => {\n                        router.push(item.href);\n                        setIsMobileMenuOpen(false);\n                      }}\n                      onKeyDown={(e) => handleKeyDown(e, () => {\n                        router.push(item.href);\n                        setIsMobileMenuOpen(false);\n                      })}\n                      className={`w-full group flex items-center px-4 py-3 text-sm font-medium rounded-xl transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 ${\n                        active\n                          ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-lg'\n                          : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n                      } ${\n                        isFocused ? 'ring-2 ring-blue-500 ring-offset-2 dark:ring-offset-gray-800' : ''\n                      }`}\n                      aria-current={active ? 'page' : undefined}\n                      aria-describedby={item.description ? `${item.href}-mobile-desc` : undefined}\n                      title={item.description}\n                    >\n                      <Icon className={`mr-3 h-5 w-5 ${\n                        active ? 'text-white' : 'text-gray-400'\n                      }`} aria-hidden=\"true\" />\n                      <div className=\"flex-1 text-left\">\n                        <div className=\"font-medium\">{item.name}</div>\n                        {item.description && (\n                          <div className={`text-xs mt-1 ${\n                            active ? 'text-white/80' : 'text-gray-500 dark:text-gray-400'\n                          }`} id={`${item.href}-mobile-desc`}>\n                            {item.description}\n                          </div>\n                        )}\n                      </div>\n                      {item.badge && (\n                        <span className={`ml-2 inline-flex items-center justify-center px-2 py-1 text-xs font-bold rounded-full ${\n                          active \n                            ? 'bg-white/20 text-white' \n                            : 'bg-blue-100 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400'\n                        }`} aria-label={`${item.badge} notifications`}>\n                          {item.badge}\n                        </span>\n                      )}\n                    </button>\n                  );\n                })}\n              </div>\n\n              {/* Mobile Menu Footer */}\n              <div className=\"border-t border-gray-200 dark:border-gray-700 px-4 py-4 space-y-2\">\n                <button\n                  onClick={() => {\n                    router.push('/profile');\n                    setIsMobileMenuOpen(false);\n                  }}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-xl transition-colors\"\n                >\n                  <User className=\"h-5 w-5 text-gray-400\" />\n                  <span>Profile</span>\n                </button>\n                <button\n                  onClick={() => {\n                    router.push('/settings');\n                    setIsMobileMenuOpen(false);\n                  }}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-xl transition-colors\"\n                >\n                  <Settings className=\"h-5 w-5 text-gray-400\" />\n                  <span>Settings</span>\n                </button>\n                <button\n                  onClick={() => {\n                    router.push('/help');\n                    setIsMobileMenuOpen(false);\n                  }}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-xl transition-colors\"\n                >\n                  <HelpCircle className=\"h-5 w-5 text-gray-400\" />\n                  <span>Help & Support</span>\n                </button>\n                <button\n                  onClick={handleLogout}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20 rounded-xl transition-colors\"\n                >\n                  <LogOut className=\"h-5 w-5\" />\n                  <span>Sign Out</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Mobile Bottom Navigation */}\n      <div className=\"lg:hidden fixed bottom-0 left-0 right-0 bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700 shadow-lg\">\n        <div className=\"grid grid-cols-5 h-16\">\n          {/* Show only the 5 most important navigation items in bottom bar (filtered) */}\n          {navigationItems.slice(0, 5).map((item) => {\n            const Icon = item.icon;\n            const active = isActive(item.href);\n            \n            return (\n              <button\n                key={item.name}\n                onClick={() => router.push(item.href)}\n                className={`flex flex-col items-center justify-center space-y-1 transition-colors ${\n                  active\n                    ? 'text-blue-600 dark:text-blue-400'\n                    : 'text-gray-400 hover:text-gray-600 dark:hover:text-gray-300'\n                }`}\n              >\n                <div className=\"relative\">\n                  <Icon className=\"h-5 w-5\" />\n                  {item.badge && (\n                    <span className=\"absolute -top-2 -right-2 h-4 w-4 bg-red-500 text-white text-xs rounded-full flex items-center justify-center\">\n                      {item.badge}\n                    </span>\n                  )}\n                </div>\n                <span className=\"text-xs font-medium truncate\">{item.name}</span>\n              </button>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Deposit/Withdraw Modal */}\n      <DepositWithdrawModal\n        isOpen={isDepositWithdrawModalOpen}\n        onClose={() => setIsDepositWithdrawModalOpen(false)}\n        mode={depositWithdrawMode}\n      />\n    </>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+BA;AAxCA;;;;;;;;;;;AAkDA,mDAAmD;AACnD,MAAM,qBAAuC;IAC3C;QACE,MAAM;QACN,MAAM;QACN,MAAM,0MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,0MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gOAAU;QAChB,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gOAAU;QAChB,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gOAAU;QAChB,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,iOAAS;QACf,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,0MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,sNAAQ;QACd,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,iOAAS;QACf,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,0MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAK;QACX,OAAO;QACP,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gOAAU;QAChB,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gNAAM;QACZ,aAAa;IACf;IACA;QACE,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","debugId":null}},
    {"offset": {"line": 2462, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/layouts/AppLayout.tsx"],"sourcesContent":["'use client';\n\nimport { ReactNode } from 'react';\nimport Navigation from '@/components/Navigation';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { useRouter, usePathname } from 'next/navigation';\nimport { useEffect } from 'react';\n\ninterface AppLayoutProps {\n  children: ReactNode;\n  requireAuth?: boolean;\n}\n\nexport default function AppLayout({ children, requireAuth = true }: AppLayoutProps) {\n  const { user, loading } = useAuth();\n  const router = useRouter();\n  const pathname = usePathname();\n\n  // Public routes that don't require authentication\n  const publicRoutes = ['/login', '/register', '/demo', '/'];\n  const isPublicRoute = publicRoutes.includes(pathname);\n\n  useEffect(() => {\n    if (!loading && requireAuth && !user && !isPublicRoute) {\n      router.push('/login');\n    }\n  }, [user, loading, requireAuth, isPublicRoute, router]);\n\n  // Show loading spinner while checking authentication\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  // For public routes or when auth is not required, show content without navigation\n  if (!requireAuth || isPublicRoute) {\n    return <>{children}</>;\n  }\n\n  // For authenticated routes, show navigation + content\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      <Navigation />\n      \n      {/* Main content area with proper spacing for navigation */}\n      <div className=\"lg:pl-64 lg:pt-16\">\n        {/* Content wrapper with padding */}\n        <main className=\"min-h-screen\">\n          {children}\n        </main>\n      </div>\n      \n      {/* Bottom spacing for mobile navigation */}\n      <div className=\"h-16 lg:hidden\"></div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AACA;AANA;;;;;;AAae,SAAS,UAAU,EAAE,QAAQ,EAAE,cAAc,IAAI,EAAkB;IAChF,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,IAAA,0IAAO;IACjC,MAAM,SAAS,IAAA,+IAAS;IACxB,MAAM,WAAW,IAAA,iJAAW;IAE5B,kDAAkD;IAClD,MAAM,eAAe;QAAC;QAAU;QAAa;QAAS;KAAI;IAC1D,MAAM,gBAAgB,aAAa,QAAQ,CAAC;IAE5C,IAAA,kNAAS,EAAC;QACR,IAAI,CAAC,WAAW,eAAe,CAAC,QAAQ,CAAC,eAAe;YACtD,OAAO,IAAI,CAAC;QACd;IACF,GAAG;QAAC;QAAM;QAAS;QAAa;QAAe;KAAO;IAEtD,qDAAqD;IACrD,IAAI,SAAS;QACX,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,kFAAkF;IAClF,IAAI,CAAC,eAAe,eAAe;QACjC,qBAAO;sBAAG;;IACZ;IAEA,sDAAsD;IACtD,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,2IAAU;;;;;0BAGX,8OAAC;gBAAI,WAAU;0BAEb,cAAA,8OAAC;oBAAK,WAAU;8BACb;;;;;;;;;;;0BAKL,8OAAC;gBAAI,WAAU;;;;;;;;;;;;AAGrB","debugId":null}},
    {"offset": {"line": 2565, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/BrokerAccountSelector.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { ChevronDownIcon, CheckIcon, PlusIcon } from '@heroicons/react/24/outline';\nimport Link from 'next/link';\n\ninterface BrokerAccount {\n  id: string;\n  accountNumber: string;\n  accountType: string;\n  status: string;\n  buyingPower: number;\n  cashBalance: number;\n  portfolioValue: number;\n  currency: string;\n  brokerConnection: {\n    id: string;\n    accountName: string;\n    brokerType: string;\n    environment: string;\n  };\n}\n\ninterface BrokerAccountSelectorProps {\n  selectedAccount?: BrokerAccount | null;\n  onAccountSelect: (account: BrokerAccount | null) => void;\n  className?: string;\n  placeholder?: string;\n}\n\nexport default function BrokerAccountSelector({\n  selectedAccount,\n  onAccountSelect,\n  className = '',\n  placeholder = 'Select a broker account'\n}: BrokerAccountSelectorProps) {\n  const [accounts, setAccounts] = useState<BrokerAccount[]>([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    fetchBrokerAccounts();\n  }, []);\n\n  const fetchBrokerAccounts = async () => {\n    try {\n      setLoading(true);\n      const token = localStorage.getItem('token');\n      if (!token) {\n        // User is not authenticated, set empty accounts and return\n        setIsAuthenticated(false);\n        setAccounts([]);\n        setLoading(false);\n        return;\n      }\n      \n      setIsAuthenticated(true);\n\n      const response = await fetch('/api/brokers/accounts', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch broker accounts');\n      }\n\n      const data = await response.json();\n      if (data.success) {\n        setAccounts(data.data || []);\n      } else {\n        throw new Error(data.message || 'Failed to fetch accounts');\n      }\n    } catch (err) {\n      console.error('Error fetching broker accounts:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load accounts');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatCurrency = (amount: number, currency: string = 'USD') => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: currency\n    }).format(amount);\n  };\n\n  const getBrokerDisplayName = (brokerType: string) => {\n    const brokerNames: { [key: string]: string } = {\n      'ALPACA': 'Alpaca',\n      'INTERACTIVE_BROKERS': 'Interactive Brokers',\n      'TD_AMERITRADE': 'TD Ameritrade',\n      'SCHWAB': 'Charles Schwab',\n      'FIDELITY': 'Fidelity',\n      'E_TRADE': 'E*TRADE'\n    };\n    return brokerNames[brokerType] || brokerType;\n  };\n\n  const getAccountTypeDisplay = (accountType: string) => {\n    const typeNames: { [key: string]: string } = {\n      'CASH': 'Cash Account',\n      'MARGIN': 'Margin Account',\n      'RETIREMENT': 'Retirement Account',\n      'CRYPTO': 'Crypto Account'\n    };\n    return typeNames[accountType] || accountType;\n  };\n\n  const handleAccountSelect = (account: BrokerAccount) => {\n    onAccountSelect(account);\n    setIsOpen(false);\n  };\n\n  if (loading) {\n    return (\n      <div className={`relative ${className}`}>\n        <div className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50 text-gray-500\">\n          Loading accounts...\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className={`relative ${className}`}>\n        <div className=\"w-full px-3 py-2 border border-red-300 rounded-md bg-red-50 text-red-600\">\n          {error}\n        </div>\n      </div>\n    );\n  }\n\n  if (accounts.length === 0) {\n    return (\n      <div className={`relative ${className}`}>\n        {isAuthenticated ? (\n          <div className=\"space-y-3\">\n            <div className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50 text-gray-500 text-center\">\n              No broker accounts found. Please connect a broker first.\n            </div>\n            <Link href=\"/brokers\">\n              <button className=\"w-full flex items-center justify-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-md transition-colors duration-200\">\n                <PlusIcon className=\"h-4 w-4 mr-2\" />\n                Connect Broker\n              </button>\n            </Link>\n          </div>\n        ) : (\n          <div className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50 text-gray-500 text-center\">\n            Please log in to view broker accounts.\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={`relative ${className}`}>\n      <button\n        type=\"button\"\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"relative w-full cursor-pointer rounded-md border border-gray-300 bg-white py-2 pl-3 pr-10 text-left shadow-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500 sm:text-sm\"\n      >\n        <span className=\"block truncate\">\n          {selectedAccount ? (\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <span className=\"font-medium\">\n                  {getBrokerDisplayName(selectedAccount.brokerConnection.brokerType)}\n                </span>\n                <span className=\"ml-2 text-gray-500\">\n                  {selectedAccount.brokerConnection.accountName}\n                </span>\n              </div>\n              <div className=\"text-sm text-gray-600\">\n                {formatCurrency(selectedAccount.portfolioValue, selectedAccount.currency)}\n              </div>\n            </div>\n          ) : (\n            <span className=\"text-gray-500\">{placeholder}</span>\n          )}\n        </span>\n        <span className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2\">\n          <ChevronDownIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n        </span>\n      </button>\n\n      {isOpen && (\n        <div className=\"absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\n          <div\n            className=\"relative cursor-pointer select-none py-2 pl-3 pr-9 text-gray-900 hover:bg-blue-50\"\n            onClick={() => handleAccountSelect(null as any)}\n          >\n            <span className=\"block truncate text-gray-500\">Clear selection</span>\n          </div>\n          {accounts.map((account) => (\n            <div\n              key={account.id}\n              className=\"relative cursor-pointer select-none py-2 pl-3 pr-9 text-gray-900 hover:bg-blue-50\"\n              onClick={() => handleAccountSelect(account)}\n            >\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center\">\n                    <span className=\"font-medium\">\n                      {getBrokerDisplayName(account.brokerConnection.brokerType)}\n                    </span>\n                    <span className=\"ml-2 text-gray-500\">\n                      {account.brokerConnection.accountName}\n                    </span>\n                    <span className=\"ml-2 text-xs bg-gray-100 text-gray-600 px-2 py-1 rounded\">\n                      {account.brokerConnection.environment}\n                    </span>\n                  </div>\n                  <div className=\"text-sm text-gray-600 mt-1\">\n                    <span>{getAccountTypeDisplay(account.accountType)}</span>\n                    <span className=\"mx-2\">•</span>\n                    <span>Account: {account.accountNumber}</span>\n                  </div>\n                  <div className=\"text-sm text-gray-600\">\n                    <span>Portfolio: {formatCurrency(account.portfolioValue, account.currency)}</span>\n                    <span className=\"mx-2\">•</span>\n                    <span>Cash: {formatCurrency(account.cashBalance, account.currency)}</span>\n                    <span className=\"mx-2\">•</span>\n                    <span>Buying Power: {formatCurrency(account.buyingPower, account.currency)}</span>\n                  </div>\n                </div>\n              </div>\n\n              {selectedAccount?.id === account.id && (\n                <span className=\"absolute inset-y-0 right-0 flex items-center pr-4 text-blue-600\">\n                  <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                </span>\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3027, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/trading/LiveChart.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useRef } from 'react';\nimport { Activity, TrendingUp, TrendingDown } from 'lucide-react';\nimport { liveMarketService } from '@/services/liveMarketService';\n\ninterface LiveChartProps {\n  symbol: string;\n  timeframe: string;\n  data: {\n    symbol: string;\n    name: string;\n    price: number;\n    change: number;\n    changePercent: number;\n    volume: number;\n    marketCap: number;\n    high24h: number;\n    low24h: number;\n    sector: string;\n    type: 'stock' | 'crypto' | 'forex' | 'commodity';\n  };\n  isLive: boolean;\n}\n\ninterface CandlestickData {\n  timestamp: number;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n}\n\nexport default function LiveChart({ symbol, timeframe, data, isLive }: LiveChartProps) {\n  const [chartData, setChartData] = useState<CandlestickData[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [livePrice, setLivePrice] = useState(data.price);\n  const [priceChange, setPriceChange] = useState(0);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const lastPriceRef = useRef(data.price);\n\n  const formatCurrency = (value: number, decimals: number = 2) => {\n    if (data.type === 'crypto') {\n      return `$${value.toLocaleString('en-US', { minimumFractionDigits: decimals, maximumFractionDigits: decimals })}`;\n    } else if (data.type === 'forex') {\n      return value.toFixed(4);\n    } else {\n      return `$${value.toLocaleString('en-US', { minimumFractionDigits: decimals, maximumFractionDigits: decimals })}`;\n    }\n  };\n\n  // Subscribe to live price updates\n  useEffect(() => {\n    if (!isLive) return;\n\n    const unsubscribe = liveMarketService.subscribe(symbol, (ticker) => {\n      const newPrice = ticker.price;\n      const change = newPrice - lastPriceRef.current;\n      \n      setLivePrice(newPrice);\n      setPriceChange(change);\n      lastPriceRef.current = newPrice;\n      \n      // Update the latest candlestick with new price\n      setChartData(prevData => {\n        if (prevData.length === 0) return prevData;\n        \n        const updatedData = [...prevData];\n        const lastCandle = updatedData[updatedData.length - 1];\n        \n        updatedData[updatedData.length - 1] = {\n          ...lastCandle,\n          close: newPrice,\n          high: Math.max(lastCandle.high, newPrice),\n          low: Math.min(lastCandle.low, newPrice)\n        };\n        \n        return updatedData;\n      });\n    });\n\n    return () => {\n      if (unsubscribe) unsubscribe();\n    };\n  }, [symbol, isLive]);\n\n  // Generate mock candlestick data\n  useEffect(() => {\n    const generateMockData = () => {\n      const now = Date.now();\n      const intervals = {\n        '1D': 24 * 60 * 60 * 1000, // 1 day\n        '1W': 7 * 24 * 60 * 60 * 1000, // 1 week\n        '1M': 30 * 24 * 60 * 60 * 1000, // 1 month\n        '3M': 90 * 24 * 60 * 60 * 1000, // 3 months\n        '1Y': 365 * 24 * 60 * 60 * 1000, // 1 year\n      };\n      \n      const interval = intervals[timeframe as keyof typeof intervals] || intervals['1D'];\n      const points = timeframe === '1D' ? 24 : timeframe === '1W' ? 7 : timeframe === '1M' ? 30 : timeframe === '3M' ? 90 : 365;\n      const stepSize = interval / points;\n      \n      const mockData: CandlestickData[] = [];\n      let currentPrice = data.price;\n      \n      for (let i = points; i >= 0; i--) {\n        const timestamp = now - (i * stepSize);\n        const volatility = 0.02; // 2% volatility\n        const change = (Math.random() - 0.5) * volatility * currentPrice;\n        \n        const open = currentPrice;\n        const close = currentPrice + change;\n        const high = Math.max(open, close) + Math.random() * 0.01 * currentPrice;\n        const low = Math.min(open, close) - Math.random() * 0.01 * currentPrice;\n        const volume = Math.random() * 1000000;\n        \n        mockData.push({\n          timestamp,\n          open,\n          high,\n          low,\n          close,\n          volume\n        });\n        \n        currentPrice = close;\n      }\n      \n      return mockData;\n    };\n\n    setIsLoading(true);\n    const timer = setTimeout(() => {\n      setChartData(generateMockData());\n      setIsLoading(false);\n    }, 500);\n\n    return () => clearTimeout(timer);\n  }, [symbol, timeframe, data.price]);\n\n  // Draw simple candlestick chart\n  useEffect(() => {\n    if (!canvasRef.current || chartData.length === 0) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Set canvas size\n    const rect = canvas.getBoundingClientRect();\n    canvas.width = rect.width * window.devicePixelRatio;\n    canvas.height = rect.height * window.devicePixelRatio;\n    ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n\n    // Clear canvas\n    ctx.clearRect(0, 0, rect.width, rect.height);\n\n    // Calculate price range\n    const prices = chartData.flatMap(d => [d.high, d.low]);\n    const minPrice = Math.min(...prices);\n    const maxPrice = Math.max(...prices);\n    const priceRange = maxPrice - minPrice;\n\n    // Chart dimensions\n    const padding = 40;\n    const chartWidth = rect.width - padding * 2;\n    const chartHeight = rect.height - padding * 2;\n    const candleWidth = chartWidth / chartData.length * 0.8;\n\n    // Draw grid lines\n    ctx.strokeStyle = '#e5e7eb';\n    ctx.lineWidth = 1;\n    for (let i = 0; i <= 5; i++) {\n      const y = padding + (chartHeight / 5) * i;\n      ctx.beginPath();\n      ctx.moveTo(padding, y);\n      ctx.lineTo(rect.width - padding, y);\n      ctx.stroke();\n    }\n\n    // Draw candlesticks\n    chartData.forEach((candle, index) => {\n      const x = padding + (chartWidth / chartData.length) * index + candleWidth / 4;\n      const openY = padding + chartHeight - ((candle.open - minPrice) / priceRange) * chartHeight;\n      const closeY = padding + chartHeight - ((candle.close - minPrice) / priceRange) * chartHeight;\n      const highY = padding + chartHeight - ((candle.high - minPrice) / priceRange) * chartHeight;\n      const lowY = padding + chartHeight - ((candle.low - minPrice) / priceRange) * chartHeight;\n\n      const isGreen = candle.close > candle.open;\n      ctx.fillStyle = isGreen ? '#10b981' : '#ef4444';\n      ctx.strokeStyle = isGreen ? '#10b981' : '#ef4444';\n      ctx.lineWidth = 1;\n\n      // Draw wick\n      ctx.beginPath();\n      ctx.moveTo(x + candleWidth / 2, highY);\n      ctx.lineTo(x + candleWidth / 2, lowY);\n      ctx.stroke();\n\n      // Draw body\n      const bodyTop = Math.min(openY, closeY);\n      const bodyHeight = Math.abs(closeY - openY);\n      ctx.fillRect(x, bodyTop, candleWidth, bodyHeight || 1);\n    });\n\n    // Draw price labels\n    ctx.fillStyle = '#6b7280';\n    ctx.font = '12px sans-serif';\n    ctx.textAlign = 'right';\n    for (let i = 0; i <= 5; i++) {\n      const price = minPrice + (priceRange / 5) * (5 - i);\n      const y = padding + (chartHeight / 5) * i;\n      ctx.fillText(formatCurrency(price), padding - 10, y + 4);\n    }\n  }, [chartData, data.type]);\n\n  if (isLoading) {\n    return (\n      <div className=\"h-full flex items-center justify-center\">\n        <div className=\"text-center\">\n          <Activity className=\"h-8 w-8 text-blue-500 mx-auto mb-2 animate-spin\" />\n          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Loading chart data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      {/* Chart Header */}\n      <div className=\"flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-600\">\n        <div className=\"flex items-center space-x-3\">\n          <div className=\"flex items-center space-x-2\">\n            {isLive && <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\" />}\n            <h3 className=\"font-semibold text-gray-900 dark:text-white\">{symbol}</h3>\n          </div>\n          <span className=\"text-sm text-gray-500 dark:text-gray-400\">{data.name}</span>\n        </div>\n        <div className=\"text-right\">\n          <div className={`text-lg font-bold transition-colors duration-200 ${\n            isLive && priceChange !== 0 \n              ? priceChange > 0 \n                ? 'text-green-600' \n                : 'text-red-600'\n              : 'text-gray-900 dark:text-white'\n          }`}>\n            {formatCurrency(isLive ? livePrice : data.price, data.type === 'forex' ? 4 : 2)}\n            {isLive && priceChange !== 0 && (\n              <span className={`ml-2 text-sm ${\n                priceChange > 0 ? 'text-green-600' : 'text-red-600'\n              }`}>\n                ({priceChange > 0 ? '+' : ''}{priceChange.toFixed(2)})\n              </span>\n            )}\n          </div>\n          <div className={`flex items-center text-sm ${\n            data.change >= 0 ? 'text-green-600' : 'text-red-600'\n          }`}>\n            {data.change >= 0 ? <TrendingUp className=\"w-4 h-4 mr-1\" /> : <TrendingDown className=\"w-4 h-4 mr-1\" />}\n            {data.change >= 0 ? '+' : ''}{data.change.toFixed(2)} ({data.changePercent.toFixed(2)}%)\n          </div>\n        </div>\n      </div>\n\n      {/* Chart Canvas */}\n      <div className=\"flex-1 relative\">\n        <canvas\n          ref={canvasRef}\n          className=\"w-full h-full\"\n          style={{ width: '100%', height: '100%' }}\n        />\n      </div>\n\n      {/* Chart Footer */}\n      <div className=\"p-4 border-t border-gray-200 dark:border-gray-600\">\n        <div className=\"grid grid-cols-4 gap-4 text-sm\">\n          <div>\n            <span className=\"text-gray-500 dark:text-gray-400\">Volume:</span>\n            <div className=\"font-medium text-gray-900 dark:text-white\">\n              {data.volume.toLocaleString()}\n            </div>\n          </div>\n          <div>\n            <span className=\"text-gray-500 dark:text-gray-400\">24h High:</span>\n            <div className=\"font-medium text-gray-900 dark:text-white\">\n              {formatCurrency(data.high24h, data.type === 'forex' ? 4 : 2)}\n            </div>\n          </div>\n          <div>\n            <span className=\"text-gray-500 dark:text-gray-400\">24h Low:</span>\n            <div className=\"font-medium text-gray-900 dark:text-white\">\n              {formatCurrency(data.low24h, data.type === 'forex' ? 4 : 2)}\n            </div>\n          </div>\n          <div>\n            <span className=\"text-gray-500 dark:text-gray-400\">Market Cap:</span>\n            <div className=\"font-medium text-gray-900 dark:text-white\">\n              {data.marketCap > 0 ? `$${(data.marketCap / 1e9).toFixed(1)}B` : 'N/A'}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3501, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;;;;AAEA,MAAM,qBAAO,mNAAgB,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,mNAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,mNAAgB,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,IAAA,yHAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,mNAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 3586, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,MAAM,iBAAiB,IAAA,uKAAG,EACxB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,mNAAgB,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,wKAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,IAAA,yHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 3646, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAKA,MAAM,sBAAQ,mNAAgB,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,IAAA,yHAAE,EACX,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 3674, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/tabs.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\ninterface TabsContextValue {\n  value: string\n  onValueChange: (value: string) => void\n}\n\nconst TabsContext = React.createContext<TabsContextValue | undefined>(undefined)\n\ninterface TabsProps {\n  value: string\n  onValueChange: (value: string) => void\n  children: React.ReactNode\n  className?: string\n}\n\nconst Tabs = ({ value, onValueChange, children, className }: TabsProps) => {\n  return (\n    <TabsContext.Provider value={{ value, onValueChange }}>\n      <div className={cn(\"w-full\", className)}>\n        {children}\n      </div>\n    </TabsContext.Provider>\n  )\n}\n\nconst TabsList = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = \"TabsList\"\n\ninterface TabsTriggerProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  value: string\n}\n\nconst TabsTrigger = React.forwardRef<HTMLButtonElement, TabsTriggerProps>(\n  ({ className, value: triggerValue, ...props }, ref) => {\n    const context = React.useContext(TabsContext)\n    if (!context) {\n      throw new Error('TabsTrigger must be used within a Tabs component')\n    }\n    \n    const { value, onValueChange } = context\n    const isActive = value === triggerValue\n    \n    return (\n      <button\n        ref={ref}\n        className={cn(\n          \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n          isActive\n            ? \"bg-background text-foreground shadow-sm\"\n            : \"hover:bg-background/50\",\n          className\n        )}\n        onClick={() => onValueChange(triggerValue)}\n        {...props}\n      />\n    )\n  }\n)\nTabsTrigger.displayName = \"TabsTrigger\"\n\ninterface TabsContentProps extends React.HTMLAttributes<HTMLDivElement> {\n  value: string\n}\n\nconst TabsContent = React.forwardRef<HTMLDivElement, TabsContentProps>(\n  ({ className, value: contentValue, ...props }, ref) => {\n    const context = React.useContext(TabsContext)\n    if (!context) {\n      throw new Error('TabsContent must be used within a Tabs component')\n    }\n    \n    const { value } = context\n    \n    if (value !== contentValue) {\n      return null\n    }\n    \n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n          className\n        )}\n        {...props}\n      />\n    )\n  }\n)\nTabsContent.displayName = \"TabsContent\"\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }"],"names":[],"mappings":";;;;;;;;;;;AAAA;AACA;;;;AAOA,MAAM,4BAAc,sNAAmB,CAA+B;AAStE,MAAM,OAAO,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,EAAa;IACpE,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAO;QAAc;kBAClD,cAAA,8OAAC;YAAI,WAAW,IAAA,yHAAE,EAAC,UAAU;sBAC1B;;;;;;;;;;;AAIT;AAEA,MAAM,yBAAW,mNAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAMvB,MAAM,4BAAc,mNAAgB,CAClC,CAAC,EAAE,SAAS,EAAE,OAAO,YAAY,EAAE,GAAG,OAAO,EAAE;IAC7C,MAAM,UAAU,mNAAgB,CAAC;IACjC,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG;IACjC,MAAM,WAAW,UAAU;IAE3B,qBACE,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,mSACA,WACI,4CACA,0BACJ;QAEF,SAAS,IAAM,cAAc;QAC5B,GAAG,KAAK;;;;;;AAGf;AAEF,YAAY,WAAW,GAAG;AAM1B,MAAM,4BAAc,mNAAgB,CAClC,CAAC,EAAE,SAAS,EAAE,OAAO,YAAY,EAAE,GAAG,OAAO,EAAE;IAC7C,MAAM,UAAU,mNAAgB,CAAC;IACjC,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,EAAE,KAAK,EAAE,GAAG;IAElB,IAAI,UAAU,cAAc;QAC1B,OAAO;IACT;IAEA,qBACE,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,mIACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEF,YAAY,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 3765, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/trading/TradingViewChart.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useRef, memo, useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { BarChart3, Maximize2, Settings, TrendingUp, TrendingDown, Wifi, WifiOff } from 'lucide-react';\nimport { useMarketData, useMarketConnection } from '@/services/marketDataService';\nimport { cn } from '@/lib/utils';\n\ninterface TradingViewChartProps {\n  symbol: string;\n  interval?: string;\n  theme?: 'light' | 'dark';\n  height?: number;\n  width?: string;\n  autosize?: boolean;\n  timezone?: string;\n  locale?: string;\n  toolbar_bg?: string;\n  enable_publishing?: boolean;\n  allow_symbol_change?: boolean;\n  container_id?: string;\n  studies?: string[];\n  show_popup_button?: boolean;\n  popup_width?: string;\n  popup_height?: string;\n  enableLiveData?: boolean;\n  onReady?: () => void;\n}\n\ninterface TradingViewWidget {\n  new (config: any): any;\n}\n\ndeclare global {\n  interface Window {\n    TradingView: {\n      widget: TradingViewWidget;\n    };\n  }\n}\n\nconst TradingViewChart: React.FC<TradingViewChartProps> = ({\n  symbol = 'BINANCE:BTCUSDT',\n  interval = '15',\n  theme = 'dark',\n  height = 500,\n  width = '100%',\n  autosize = true,\n  timezone = 'Etc/UTC',\n  locale = 'en',\n  toolbar_bg = '#f1f3f6',\n  enable_publishing = false,\n  allow_symbol_change = true,\n  container_id,\n  studies = ['RSI', 'MACD'],\n  show_popup_button = false,\n  popup_width = '1000',\n  popup_height = '650',\n  enableLiveData = true,\n  onReady\n}) => {\n  const [isLiveDataEnabled, setIsLiveDataEnabled] = useState(enableLiveData);\n  const [lastUpdate, setLastUpdate] = useState<Date | null>(null);\n  \n  // Get live market data\n  const marketData = useMarketData(symbol.replace('BINANCE:', '').replace('NASDAQ:', ''));\n  const { isConnected, connect, disconnect } = useMarketConnection();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const widgetRef = useRef<any>(null);\n  const scriptRef = useRef<HTMLScriptElement | null>(null);\n  const containerId = container_id || `tradingview_${Math.random().toString(36).substr(2, 9)}`;\n\n  // Create datafeed for live data\n  const createDatafeed = () => {\n    return {\n      onReady: (callback: any) => {\n        setTimeout(() => callback({\n          supported_resolutions: ['1', '5', '15', '30', '60', '240', '1D'],\n          supports_marks: false,\n          supports_timescale_marks: false,\n        }), 0);\n      },\n      searchSymbols: (userInput: string, exchange: string, symbolType: string, onResultReadyCallback: any) => {\n        onResultReadyCallback([]);\n      },\n      resolveSymbol: (symbolName: string, onSymbolResolvedCallback: any, onResolveErrorCallback: any) => {\n        const symbolInfo = {\n          name: symbolName,\n          ticker: symbolName,\n          description: symbolName,\n          type: 'crypto',\n          session: '24x7',\n          timezone: 'Etc/UTC',\n          exchange: 'BINANCE',\n          minmov: 1,\n          pricescale: 100,\n          has_intraday: true,\n          supported_resolutions: ['1', '5', '15', '30', '60', '240', '1D'],\n          volume_precision: 2,\n          data_status: 'streaming',\n        };\n        setTimeout(() => onSymbolResolvedCallback(symbolInfo), 0);\n      },\n      getBars: (symbolInfo: any, resolution: string, periodParams: any, onHistoryCallback: any, onErrorCallback: any) => {\n        // Generate mock historical data\n        const bars = [];\n        const now = Date.now();\n        const interval = resolution === '1D' ? 24 * 60 * 60 * 1000 : parseInt(resolution) * 60 * 1000;\n        \n        for (let i = 100; i >= 0; i--) {\n           const time = now - (i * interval);\n           const basePrice = marketData?.data?.price || 43000;\n           const randomChange = (Math.random() - 0.5) * 0.02;\n           const price = basePrice * (1 + randomChange);\n          \n          bars.push({\n            time: time,\n            low: price * 0.995,\n            high: price * 1.005,\n            open: price,\n            close: price,\n            volume: Math.random() * 1000000\n          });\n        }\n        \n        onHistoryCallback(bars, { noData: false });\n      },\n      subscribeBars: (symbolInfo: any, resolution: string, onRealtimeCallback: any, subscriberUID: string, onResetCacheNeededCallback: any) => {\n        // Subscribe to real-time updates\n        const interval = setInterval(() => {\n           if (marketData?.data && isLiveDataEnabled) {\n             const now = Date.now();\n             const price = marketData.data.price;\n             const bar = {\n              time: now,\n              low: price * 0.999,\n              high: price * 1.001,\n              open: price,\n              close: price,\n              volume: Math.random() * 100000\n            };\n            onRealtimeCallback(bar);\n            setLastUpdate(new Date());\n          }\n        }, 1000);\n        \n        return () => clearInterval(interval);\n      },\n      unsubscribeBars: (subscriberUID: string) => {\n        // Cleanup subscription\n      }\n    };\n  };\n\n  // Toggle live data\n  const toggleLiveData = () => {\n    setIsLiveDataEnabled(!isLiveDataEnabled);\n    if (!isLiveDataEnabled && !isConnected) {\n      connect();\n    } else if (isLiveDataEnabled && isConnected) {\n      disconnect();\n    }\n  };\n\n  // Connect to market data when live data is enabled\n  useEffect(() => {\n    if (isLiveDataEnabled && !isConnected) {\n      connect();\n    }\n  }, [isLiveDataEnabled, isConnected, connect]);\n\n  // Convert symbol to TradingView format\n  const formatSymbol = (sym: string): string => {\n    // Handle different symbol formats\n    if (sym.includes('USDT')) {\n      return `BINANCE:${sym}`;\n    }\n    if (sym.includes('-PERP')) {\n      const base = sym.replace('-PERP', '');\n      return `BINANCE:${base}USDT`;\n    }\n    if (sym.includes('-C-') || sym.includes('-P-')) {\n      // Options - use underlying\n      const underlying = sym.split('-')[0];\n      return `NASDAQ:${underlying}`;\n    }\n    // Futures\n    const futuresMap: { [key: string]: string } = {\n      'ES': 'CME_MINI:ES1!',\n      'NQ': 'CME_MINI:NQ1!',\n      'YM': 'CBOT_MINI:YM1!',\n      'RTY': 'CME_MINI:RTY1!',\n      'CL': 'NYMEX:CL1!',\n      'GC': 'COMEX:GC1!',\n      'SI': 'COMEX:SI1!',\n      'NG': 'NYMEX:NG1!',\n      'ZB': 'CBOT:ZB1!',\n      'ZN': 'CBOT:ZN1!',\n      'ZF': 'CBOT:ZF1!',\n      'ZT': 'CBOT:ZT1!'\n    };\n    \n    if (futuresMap[sym]) {\n      return futuresMap[sym];\n    }\n    \n    // Default to NASDAQ for stocks\n    return `NASDAQ:${sym}`;\n  };\n\n  const loadTradingViewScript = (): Promise<void> => {\n    return new Promise((resolve, reject) => {\n      if (window.TradingView) {\n        resolve();\n        return;\n      }\n\n      const script = document.createElement('script');\n      script.src = 'https://s3.tradingview.com/tv.js';\n      script.async = true;\n      script.onload = () => resolve();\n      script.onerror = () => reject(new Error('Failed to load TradingView script'));\n      \n      document.head.appendChild(script);\n      scriptRef.current = script;\n    });\n  };\n\n  const createWidget = () => {\n    // Check if container exists and is mounted\n    if (!containerRef.current) {\n      console.warn('Container not ready, skipping widget creation');\n      return;\n    }\n\n    // Cleanup existing widget\n    if (widgetRef.current) {\n      try {\n        widgetRef.current.remove();\n      } catch (e) {\n        console.warn('Error removing existing widget:', e);\n      }\n    }\n\n    // Clear container\n    if (containerRef.current) {\n      containerRef.current.innerHTML = '';\n    }\n\n    try {\n      const widgetConfig = {\n        autosize,\n        symbol: formatSymbol(symbol),\n        interval,\n        timezone,\n        theme,\n        style: '1', // Candlestick\n        locale,\n        toolbar_bg,\n        enable_publishing,\n        allow_symbol_change,\n        container: containerRef.current,\n        width,\n        height,\n        studies,\n        show_popup_button,\n        popup_width,\n        popup_height,\n        hide_side_toolbar: false,\n        hide_top_toolbar: false,\n        hide_legend: false,\n        save_image: false,\n        calendar: false,\n        hotlist: false,\n        news: [],\n        details: false,\n        withdateranges: true,\n        range: '3M',\n        hide_volume: false,\n        support_host: 'https://www.tradingview.com',\n        // Enable real-time data\n        datafeed: isLiveDataEnabled ? createDatafeed() : undefined,\n        library_path: '/charting_library/',\n        custom_css_url: '/charting_library/custom.css'\n      };\n\n      widgetRef.current = new window.TradingView.widget(widgetConfig);\n      \n      if (onReady) {\n        widgetRef.current.onChartReady(() => {\n          onReady();\n        });\n      }\n    } catch (error) {\n      console.error('Error creating TradingView widget:', error);\n    }\n  };\n\n  useEffect(() => {\n    let mounted = true;\n\n    const initializeWidget = async () => {\n      try {\n        await loadTradingViewScript();\n        if (mounted && containerRef.current && window.TradingView) {\n          // Small delay to ensure DOM is ready\n          setTimeout(() => {\n            if (mounted && containerRef.current) {\n              createWidget();\n            }\n          }, 100);\n        }\n      } catch (error) {\n        console.error('Failed to initialize TradingView widget:', error);\n      }\n    };\n\n    initializeWidget();\n\n    return () => {\n      mounted = false;\n      if (widgetRef.current) {\n        try {\n          widgetRef.current.remove();\n        } catch (e) {\n          console.warn('Error cleaning up widget:', e);\n        }\n      }\n    };\n  }, []);\n\n  // Update widget when symbol or interval changes\n  useEffect(() => {\n    if (widgetRef.current && window.TradingView && containerRef.current) {\n      createWidget();\n    }\n  }, [symbol, interval, theme]);\n\n  return (\n    <Card className=\"w-full\">\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"flex items-center gap-2 text-lg\">\n            <BarChart3 className=\"h-5 w-5\" />\n            Advanced Chart\n            <Badge variant=\"outline\" className=\"ml-2\">\n              {formatSymbol(symbol).replace(':', ' ')}\n            </Badge>\n            {isLiveDataEnabled && (\n              <Badge \n                variant={isConnected ? \"default\" : \"secondary\"} \n                className={cn(\n                  \"ml-2 flex items-center gap-1\",\n                  isConnected ? \"bg-green-500 hover:bg-green-600\" : \"bg-gray-500\"\n                )}\n              >\n                {isConnected ? <Wifi className=\"h-3 w-3\" /> : <WifiOff className=\"h-3 w-3\" />}\n                {isConnected ? 'LIVE' : 'OFFLINE'}\n              </Badge>\n            )}\n          </CardTitle>\n          <div className=\"flex items-center gap-2\">\n            {lastUpdate && isLiveDataEnabled && (\n              <span className=\"text-xs text-gray-500\">\n                Last update: {lastUpdate.toLocaleTimeString()}\n              </span>\n            )}\n            <Button \n              variant={isLiveDataEnabled ? \"default\" : \"outline\"} \n              size=\"sm\"\n              onClick={toggleLiveData}\n              className={cn(\n                isLiveDataEnabled && \"bg-green-500 hover:bg-green-600\"\n              )}\n            >\n              {isLiveDataEnabled ? <Wifi className=\"h-4 w-4\" /> : <WifiOff className=\"h-4 w-4\" />}\n              {isLiveDataEnabled ? 'Live' : 'Static'}\n            </Button>\n            <Button variant=\"outline\" size=\"sm\">\n              <Settings className=\"h-4 w-4\" />\n            </Button>\n            <Button variant=\"outline\" size=\"sm\">\n              <Maximize2 className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </div>\n        {isLiveDataEnabled && marketData?.data && (\n           <div className=\"flex items-center gap-4 text-sm text-gray-600 dark:text-gray-400 mt-2\">\n             <span>Price: <span className=\"font-medium\">${marketData.data.price.toLocaleString()}</span></span>\n             <span className={cn(\n               \"flex items-center gap-1\",\n               marketData.data.changePercent >= 0 ? \"text-green-500\" : \"text-red-500\"\n             )}>\n               {marketData.data.changePercent >= 0 ? <TrendingUp className=\"h-3 w-3\" /> : <TrendingDown className=\"h-3 w-3\" />}\n               {marketData.data.changePercent.toFixed(2)}%\n             </span>\n             <span>Volume: <span className=\"font-medium\">{marketData.data.volume.toLocaleString()}</span></span>\n           </div>\n         )}\n      </CardHeader>\n      <CardContent className=\"p-0\">\n        <div \n          ref={containerRef}\n          id={containerId}\n          className=\"w-full\"\n          style={{ height: autosize ? '100%' : `${height}px`, minHeight: '400px' }}\n        />\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default memo(TradingViewChart);"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4322, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/progress.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\ninterface ProgressProps extends React.HTMLAttributes<HTMLDivElement> {\n  value?: number\n}\n\nconst Progress = React.forwardRef<HTMLDivElement, ProgressProps>(\n  ({ className, value = 0, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative h-4 w-full overflow-hidden rounded-full bg-gray-200 dark:bg-gray-700\",\n        className\n      )}\n      {...props}\n    >\n      <div\n        className=\"h-full bg-blue-600 transition-all duration-300 ease-in-out\"\n        style={{ width: `${Math.min(100, Math.max(0, value))}%` }}\n      />\n    </div>\n  )\n)\nProgress.displayName = \"Progress\"\n\nexport { Progress }"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAMA,MAAM,yBAAW,mNAAgB,CAC/B,CAAC,EAAE,SAAS,EAAE,QAAQ,CAAC,EAAE,GAAG,OAAO,EAAE,oBACnC,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,iFACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC;YACC,WAAU;YACV,OAAO;gBAAE,OAAO,GAAG,KAAK,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC;YAAC;;;;;;;;;;;AAKhE,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 4357, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/label.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Label = React.forwardRef<\n  HTMLLabelElement,\n  React.LabelHTMLAttributes<HTMLLabelElement>\n>(({ className, ...props }, ref) => (\n  <label\n    ref={ref}\n    className={cn(\n      \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n      className\n    )}\n    {...props}\n  />\n))\nLabel.displayName = \"Label\"\n\nexport { Label }"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAEA,MAAM,sBAAQ,mNAAgB,CAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 4382, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/trading/RiskManagementDashboard.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport {\n  Shield,\n  AlertTriangle,\n  TrendingDown,\n  TrendingUp,\n  Target,\n  Settings,\n  Bell,\n  X,\n  CheckCircle,\n  Clock,\n  DollarSign,\n  BarChart3,\n  Activity,\n  Zap,\n  Eye,\n  EyeOff,\n  RefreshCw,\n  Download,\n  Upload\n} from 'lucide-react';\nimport {\n  useRiskManagement,\n  riskManagementSystem,\n  type RiskAlert,\n  type RiskParameters,\n  type PositionRisk,\n  type AccountRisk\n} from '@/services/riskManagementSystem';\n\ninterface RiskManagementDashboardProps {\n  accountBalance: number;\n  positions: any[];\n  onParametersChange?: (params: Partial<RiskParameters>) => void;\n  className?: string;\n}\n\nconst RiskManagementDashboard: React.FC<RiskManagementDashboardProps> = ({\n  accountBalance,\n  positions = [],\n  onParametersChange,\n  className = ''\n}) => {\n  const {\n    alerts,\n    parameters,\n    updateParameters,\n    acknowledgeAlert,\n    validateOrder,\n    calculatePositionRisk,\n    getOptimalPositionSize,\n    unacknowledgedAlerts,\n    clearAlerts\n  } = useRiskManagement();\n\n  const [showSettings, setShowSettings] = useState(false);\n  const [activeTab, setActiveTab] = useState('alerts');\n  const [editableParams, setEditableParams] = useState<RiskParameters>(parameters);\n  const [accountRisk, setAccountRisk] = useState<AccountRisk | null>(null);\n  const [positionRisks, setPositionRisks] = useState<PositionRisk[]>([]);\n\n  // Update risk management system with current account balance\n  useEffect(() => {\n    riskManagementSystem.updateAccountBalance(accountBalance);\n  }, [accountBalance]);\n\n  // Calculate position risks\n  useEffect(() => {\n    const risks = positions.map(position => \n      calculatePositionRisk(\n        position.symbol,\n        position.entryPrice || position.price,\n        position.size || position.quantity,\n        position.stopLoss\n      )\n    );\n    setPositionRisks(risks);\n\n    // Calculate account risk\n    const accRisk = riskManagementSystem.calculateAccountRisk(risks);\n    setAccountRisk(accRisk);\n\n    // Check risk rules\n    riskManagementSystem.checkRiskRules(accRisk, risks);\n  }, [positions, calculatePositionRisk]);\n\n  const handleParameterChange = (key: keyof RiskParameters, value: number) => {\n    const newParams = { ...editableParams, [key]: value };\n    setEditableParams(newParams);\n  };\n\n  const saveParameters = () => {\n    updateParameters(editableParams);\n    onParametersChange?.(editableParams);\n    setShowSettings(false);\n  };\n\n  const resetParameters = () => {\n    setEditableParams(parameters);\n  };\n\n  const getRiskColor = (riskScore: number) => {\n    if (riskScore < 30) return 'text-green-600';\n    if (riskScore < 60) return 'text-yellow-600';\n    if (riskScore < 80) return 'text-orange-600';\n    return 'text-red-600';\n  };\n\n  const getRiskBadgeVariant = (type: RiskAlert['type']) => {\n    switch (type) {\n      case 'critical': return 'destructive';\n      case 'warning': return 'secondary';\n      default: return 'outline';\n    }\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(amount);\n  };\n\n  const formatPercentage = (value: number) => {\n    return `${value >= 0 ? '+' : ''}${value.toFixed(2)}%`;\n  };\n\n  return (\n    <div className={`space-y-4 ${className}`}>\n      {/* Risk Overview Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        {/* Overall Risk Score */}\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"flex items-center gap-2 text-sm\">\n              <Shield className=\"h-4 w-4\" />\n              Risk Score\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2\">\n              <div className={`text-2xl font-bold ${getRiskColor(accountRisk?.riskScore || 0)}`}>\n                {accountRisk?.riskScore?.toFixed(0) || '0'}/100\n              </div>\n              <Progress \n                value={accountRisk?.riskScore || 0} \n                className=\"h-2\"\n              />\n              <p className=\"text-xs text-muted-foreground\">\n                {(accountRisk?.riskScore || 0) < 30 ? 'Low Risk' :\n                 (accountRisk?.riskScore || 0) < 60 ? 'Moderate Risk' :\n                 (accountRisk?.riskScore || 0) < 80 ? 'High Risk' : 'Critical Risk'}\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Daily P&L */}\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"flex items-center gap-2 text-sm\">\n              <TrendingUp className=\"h-4 w-4\" />\n              Daily P&L\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2\">\n              <div className={`text-2xl font-bold ${\n                (accountRisk?.dailyPnL || 0) >= 0 ? 'text-green-600' : 'text-red-600'\n              }`}>\n                {formatCurrency(accountRisk?.dailyPnL || 0)}\n              </div>\n              <p className={`text-sm ${\n                (accountRisk?.dailyPnLPercentage || 0) >= 0 ? 'text-green-600' : 'text-red-600'\n              }`}>\n                {formatPercentage(accountRisk?.dailyPnLPercentage || 0)}\n              </p>\n              <Progress \n                value={Math.min(Math.abs(accountRisk?.dailyPnLPercentage || 0) / parameters.maxDailyLoss * 100, 100)}\n                className=\"h-2\"\n              />\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Total Risk Exposure */}\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"flex items-center gap-2 text-sm\">\n              <Target className=\"h-4 w-4\" />\n              Risk Exposure\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2\">\n              <div className=\"text-2xl font-bold\">\n                {accountRisk?.totalRisk.toFixed(1) || '0'}%\n              </div>\n              <p className=\"text-sm text-muted-foreground\">\n                of account balance\n              </p>\n              <Progress \n                value={Math.min((accountRisk?.totalRisk || 0) / parameters.maxPositionSize * 100, 100)}\n                className=\"h-2\"\n              />\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Active Alerts */}\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"flex items-center gap-2 text-sm\">\n              <Bell className=\"h-4 w-4\" />\n              Active Alerts\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2\">\n              <div className=\"text-2xl font-bold text-orange-600\">\n                {unacknowledgedAlerts.length}\n              </div>\n              <p className=\"text-sm text-muted-foreground\">\n                {unacknowledgedAlerts.length === 1 ? 'alert' : 'alerts'} pending\n              </p>\n              {unacknowledgedAlerts.length > 0 && (\n                <Button \n                  size=\"sm\" \n                  variant=\"outline\" \n                  onClick={clearAlerts}\n                  className=\"w-full\"\n                >\n                  Clear All\n                </Button>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Main Dashboard */}\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-3\">\n          <TabsTrigger value=\"alerts\">Alerts</TabsTrigger>\n          <TabsTrigger value=\"positions\">Position Risk</TabsTrigger>\n          <TabsTrigger value=\"settings\">Settings</TabsTrigger>\n        </TabsList>\n\n        {/* Alerts Tab */}\n        <TabsContent value=\"alerts\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <div className=\"flex items-center justify-between\">\n                <CardTitle className=\"flex items-center gap-2\">\n                  <AlertTriangle className=\"h-5 w-5\" />\n                  Risk Alerts\n                </CardTitle>\n                <div className=\"flex items-center gap-2\">\n                  <Button size=\"sm\" variant=\"outline\" onClick={clearAlerts}>\n                    <X className=\"h-4 w-4 mr-1\" />\n                    Clear All\n                  </Button>\n                </div>\n              </div>\n            </CardHeader>\n            <CardContent>\n              {alerts.length === 0 ? (\n                <div className=\"text-center py-8 text-muted-foreground\">\n                  <CheckCircle className=\"h-12 w-12 mx-auto mb-4 text-green-500\" />\n                  <p>No active risk alerts</p>\n                  <p className=\"text-sm\">Your trading is within risk parameters</p>\n                </div>\n              ) : (\n                <div className=\"space-y-3\">\n                  {alerts.slice(0, 10).map(alert => (\n                    <div \n                      key={alert.id} \n                      className={`p-4 rounded-lg border ${\n                        alert.acknowledged ? 'bg-muted/50' : 'bg-background'\n                      }`}\n                    >\n                      <div className=\"flex items-start justify-between\">\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center gap-2 mb-2\">\n                            <Badge variant={getRiskBadgeVariant(alert.type)}>\n                              {alert.type.toUpperCase()}\n                            </Badge>\n                            {alert.symbol && (\n                              <Badge variant=\"outline\">{alert.symbol}</Badge>\n                            )}\n                            <span className=\"text-xs text-muted-foreground\">\n                              {alert.timestamp.toLocaleTimeString()}\n                            </span>\n                          </div>\n                          <p className=\"text-sm mb-2\">{alert.message}</p>\n                          {alert.action && (\n                            <p className=\"text-xs text-muted-foreground\">\n                              Recommended action: {alert.action.replace('_', ' ')}\n                            </p>\n                          )}\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          {!alert.acknowledged && (\n                            <Button \n                              size=\"sm\" \n                              variant=\"outline\"\n                              onClick={() => acknowledgeAlert(alert.id)}\n                            >\n                              <CheckCircle className=\"h-4 w-4\" />\n                            </Button>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Position Risk Tab */}\n        <TabsContent value=\"positions\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <BarChart3 className=\"h-5 w-5\" />\n                Position Risk Analysis\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              {positionRisks.length === 0 ? (\n                <div className=\"text-center py-8 text-muted-foreground\">\n                  <Activity className=\"h-12 w-12 mx-auto mb-4\" />\n                  <p>No open positions</p>\n                  <p className=\"text-sm\">Position risk will appear here when you have active trades</p>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {positionRisks.map((risk, index) => (\n                    <div key={risk.symbol} className=\"p-4 border rounded-lg\">\n                      <div className=\"flex items-center justify-between mb-3\">\n                        <div className=\"flex items-center gap-2\">\n                          <h4 className=\"font-semibold\">{risk.symbol}</h4>\n                          <Badge \n                            variant={risk.currentRisk > risk.maxRisk ? 'destructive' : 'outline'}\n                          >\n                            {risk.currentRisk.toFixed(1)}% Risk\n                          </Badge>\n                        </div>\n                        <div className=\"text-sm text-muted-foreground\">\n                          R:R {risk.riskRewardRatio.toFixed(2)}:1\n                        </div>\n                      </div>\n                      \n                      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n                        <div>\n                          <p className=\"text-muted-foreground\">Stop Loss</p>\n                          <p className=\"font-medium\">{formatCurrency(risk.stopLoss)}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-muted-foreground\">Take Profit</p>\n                          <p className=\"font-medium\">{formatCurrency(risk.takeProfit)}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-muted-foreground\">Max Risk</p>\n                          <p className=\"font-medium\">{risk.maxRisk}%</p>\n                        </div>\n                        <div>\n                          <p className=\"text-muted-foreground\">Correlation</p>\n                          <p className=\"font-medium\">{(risk.correlationRisk * 100).toFixed(0)}%</p>\n                        </div>\n                      </div>\n                      \n                      <div className=\"mt-3\">\n                        <div className=\"flex justify-between text-xs mb-1\">\n                          <span>Risk Exposure</span>\n                          <span>{risk.currentRisk.toFixed(1)}% / {risk.maxRisk}%</span>\n                        </div>\n                        <Progress \n                          value={Math.min(risk.currentRisk / risk.maxRisk * 100, 100)}\n                          className=\"h-2\"\n                        />\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Settings Tab */}\n        <TabsContent value=\"settings\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Settings className=\"h-5 w-5\" />\n                Risk Management Settings\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div className=\"space-y-4\">\n                  <h4 className=\"font-semibold\">Position Limits</h4>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"maxPositionSize\">Max Position Size (%)</Label>\n                    <Input\n                      id=\"maxPositionSize\"\n                      type=\"number\"\n                      value={editableParams.maxPositionSize}\n                      onChange={(e) => handleParameterChange('maxPositionSize', parseFloat(e.target.value))}\n                      min=\"1\"\n                      max=\"50\"\n                      step=\"0.1\"\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"maxOpenPositions\">Max Open Positions</Label>\n                    <Input\n                      id=\"maxOpenPositions\"\n                      type=\"number\"\n                      value={editableParams.maxOpenPositions}\n                      onChange={(e) => handleParameterChange('maxOpenPositions', parseInt(e.target.value))}\n                      min=\"1\"\n                      max=\"20\"\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"riskPerTrade\">Risk Per Trade (%)</Label>\n                    <Input\n                      id=\"riskPerTrade\"\n                      type=\"number\"\n                      value={editableParams.riskPerTrade}\n                      onChange={(e) => handleParameterChange('riskPerTrade', parseFloat(e.target.value))}\n                      min=\"0.1\"\n                      max=\"10\"\n                      step=\"0.1\"\n                    />\n                  </div>\n                </div>\n                \n                <div className=\"space-y-4\">\n                  <h4 className=\"font-semibold\">Risk Limits</h4>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"maxDailyLoss\">Max Daily Loss (%)</Label>\n                    <Input\n                      id=\"maxDailyLoss\"\n                      type=\"number\"\n                      value={editableParams.maxDailyLoss}\n                      onChange={(e) => handleParameterChange('maxDailyLoss', parseFloat(e.target.value))}\n                      min=\"1\"\n                      max=\"20\"\n                      step=\"0.1\"\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"maxDrawdown\">Max Drawdown (%)</Label>\n                    <Input\n                      id=\"maxDrawdown\"\n                      type=\"number\"\n                      value={editableParams.maxDrawdown}\n                      onChange={(e) => handleParameterChange('maxDrawdown', parseFloat(e.target.value))}\n                      min=\"5\"\n                      max=\"50\"\n                      step=\"0.1\"\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"stopLossPercentage\">Default Stop Loss (%)</Label>\n                    <Input\n                      id=\"stopLossPercentage\"\n                      type=\"number\"\n                      value={editableParams.stopLossPercentage}\n                      onChange={(e) => handleParameterChange('stopLossPercentage', parseFloat(e.target.value))}\n                      min=\"0.5\"\n                      max=\"10\"\n                      step=\"0.1\"\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"takeProfitRatio\">Take Profit Ratio</Label>\n                    <Input\n                      id=\"takeProfitRatio\"\n                      type=\"number\"\n                      value={editableParams.takeProfitRatio}\n                      onChange={(e) => handleParameterChange('takeProfitRatio', parseFloat(e.target.value))}\n                      min=\"1\"\n                      max=\"5\"\n                      step=\"0.1\"\n                    />\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"flex justify-end gap-2 pt-4 border-t\">\n                <Button variant=\"outline\" onClick={resetParameters}>\n                  Reset\n                </Button>\n                <Button onClick={saveParameters}>\n                  Save Settings\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default RiskManagementDashboard;"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AA/BA;;;;;;;;;;;;AA+CA,MAAM,0BAAkE,CAAC,EACvE,cAAc,EACd,YAAY,EAAE,EACd,kBAAkB,EAClB,YAAY,EAAE,EACf;IACC,MAAM,EACJ,MAAM,EACN,UAAU,EACV,gBAAgB,EAChB,gBAAgB,EAChB,aAAa,EACb,qBAAqB,EACrB,sBAAsB,EACtB,oBAAoB,EACpB,WAAW,EACZ,GAAG,IAAA,4JAAiB;IAErB,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,iNAAQ,EAAC;IACjD,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAC;IAC3C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,IAAA,iNAAQ,EAAiB;IACrE,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iNAAQ,EAAqB;IACnE,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,iNAAQ,EAAiB,EAAE;IAErE,6DAA6D;IAC7D,IAAA,kNAAS,EAAC;QACR,+JAAoB,CAAC,oBAAoB,CAAC;IAC5C,GAAG;QAAC;KAAe;IAEnB,2BAA2B;IAC3B,IAAA,kNAAS,EAAC;QACR,MAAM,QAAQ,UAAU,GAAG,CAAC,CAAA,WAC1B,sBACE,SAAS,MAAM,EACf,SAAS,UAAU,IAAI,SAAS,KAAK,EACrC,SAAS,IAAI,IAAI,SAAS,QAAQ,EAClC,SAAS,QAAQ;QAGrB,iBAAiB;QAEjB,yBAAyB;QACzB,MAAM,UAAU,+JAAoB,CAAC,oBAAoB,CAAC;QAC1D,eAAe;QAEf,mBAAmB;QACnB,+JAAoB,CAAC,cAAc,CAAC,SAAS;IAC/C,GAAG;QAAC;QAAW;KAAsB;IAErC,MAAM,wBAAwB,CAAC,KAA2B;QACxD,MAAM,YAAY;YAAE,GAAG,cAAc;YAAE,CAAC,IAAI,EAAE;QAAM;QACpD,kBAAkB;IACpB;IAEA,MAAM,iBAAiB;QACrB,iBAAiB;QACjB,qBAAqB;QACrB,gBAAgB;IAClB;IAEA,MAAM,kBAAkB;QACtB,kBAAkB;IACpB;IAEA,MAAM,eAAe,CAAC;QACpB,IAAI,YAAY,IAAI,OAAO;QAC3B,IAAI,YAAY,IAAI,OAAO;QAC3B,IAAI,YAAY,IAAI,OAAO;QAC3B,OAAO;IACT;IAEA,MAAM,sBAAsB,CAAC;QAC3B,OAAQ;YACN,KAAK;gBAAY,OAAO;YACxB,KAAK;gBAAW,OAAO;YACvB;gBAAS,OAAO;QAClB;IACF;IAEA,MAAM,iBAAiB,CAAC;QACtB,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;YACpC,OAAO;YACP,UAAU;YACV,uBAAuB;YACvB,uBAAuB;QACzB,GAAG,MAAM,CAAC;IACZ;IAEA,MAAM,mBAAmB,CAAC;QACxB,OAAO,GAAG,SAAS,IAAI,MAAM,KAAK,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC;IACvD;IAEA,qBACE,8OAAC;QAAI,WAAW,CAAC,UAAU,EAAE,WAAW;;0BAEtC,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC,wIAAI;;0CACH,8OAAC,8IAAU;gCAAC,WAAU;0CACpB,cAAA,8OAAC,6IAAS;oCAAC,WAAU;;sDACnB,8OAAC,gNAAM;4CAAC,WAAU;;;;;;wCAAY;;;;;;;;;;;;0CAIlC,8OAAC,+IAAW;0CACV,cAAA,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAW,CAAC,mBAAmB,EAAE,aAAa,aAAa,aAAa,IAAI;;gDAC9E,aAAa,WAAW,QAAQ,MAAM;gDAAI;;;;;;;sDAE7C,8OAAC,gJAAQ;4CACP,OAAO,aAAa,aAAa;4CACjC,WAAU;;;;;;sDAEZ,8OAAC;4CAAE,WAAU;sDACV,CAAC,aAAa,aAAa,CAAC,IAAI,KAAK,aACrC,CAAC,aAAa,aAAa,CAAC,IAAI,KAAK,kBACrC,CAAC,aAAa,aAAa,CAAC,IAAI,KAAK,cAAc;;;;;;;;;;;;;;;;;;;;;;;kCAO5D,8OAAC,wIAAI;;0CACH,8OAAC,8IAAU;gCAAC,WAAU;0CACpB,cAAA,8OAAC,6IAAS;oCAAC,WAAU;;sDACnB,8OAAC,gOAAU;4CAAC,WAAU;;;;;;wCAAY;;;;;;;;;;;;0CAItC,8OAAC,+IAAW;0CACV,cAAA,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAW,CAAC,mBAAmB,EAClC,CAAC,aAAa,YAAY,CAAC,KAAK,IAAI,mBAAmB,gBACvD;sDACC,eAAe,aAAa,YAAY;;;;;;sDAE3C,8OAAC;4CAAE,WAAW,CAAC,QAAQ,EACrB,CAAC,aAAa,sBAAsB,CAAC,KAAK,IAAI,mBAAmB,gBACjE;sDACC,iBAAiB,aAAa,sBAAsB;;;;;;sDAEvD,8OAAC,gJAAQ;4CACP,OAAO,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,aAAa,sBAAsB,KAAK,WAAW,YAAY,GAAG,KAAK;4CAChG,WAAU;;;;;;;;;;;;;;;;;;;;;;;kCAOlB,8OAAC,wIAAI;;0CACH,8OAAC,8IAAU;gCAAC,WAAU;0CACpB,cAAA,8OAAC,6IAAS;oCAAC,WAAU;;sDACnB,8OAAC,gNAAM;4CAAC,WAAU;;;;;;wCAAY;;;;;;;;;;;;0CAIlC,8OAAC,+IAAW;0CACV,cAAA,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;;gDACZ,aAAa,UAAU,QAAQ,MAAM;gDAAI;;;;;;;sDAE5C,8OAAC;4CAAE,WAAU;sDAAgC;;;;;;sDAG7C,8OAAC,gJAAQ;4CACP,OAAO,KAAK,GAAG,CAAC,CAAC,aAAa,aAAa,CAAC,IAAI,WAAW,eAAe,GAAG,KAAK;4CAClF,WAAU;;;;;;;;;;;;;;;;;;;;;;;kCAOlB,8OAAC,wIAAI;;0CACH,8OAAC,8IAAU;gCAAC,WAAU;0CACpB,cAAA,8OAAC,6IAAS;oCAAC,WAAU;;sDACnB,8OAAC,0MAAI;4CAAC,WAAU;;;;;;wCAAY;;;;;;;;;;;;0CAIhC,8OAAC,+IAAW;0CACV,cAAA,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;sDACZ,qBAAqB,MAAM;;;;;;sDAE9B,8OAAC;4CAAE,WAAU;;gDACV,qBAAqB,MAAM,KAAK,IAAI,UAAU;gDAAS;;;;;;;wCAEzD,qBAAqB,MAAM,GAAG,mBAC7B,8OAAC,4IAAM;4CACL,MAAK;4CACL,SAAQ;4CACR,SAAS;4CACT,WAAU;sDACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAUX,8OAAC,wIAAI;gBAAC,OAAO;gBAAW,eAAe;gBAAc,WAAU;;kCAC7D,8OAAC,4IAAQ;wBAAC,WAAU;;0CAClB,8OAAC,+IAAW;gCAAC,OAAM;0CAAS;;;;;;0CAC5B,8OAAC,+IAAW;gCAAC,OAAM;0CAAY;;;;;;0CAC/B,8OAAC,+IAAW;gCAAC,OAAM;0CAAW;;;;;;;;;;;;kCAIhC,8OAAC,+IAAW;wBAAC,OAAM;wBAAS,WAAU;kCACpC,cAAA,8OAAC,wIAAI;;8CACH,8OAAC,8IAAU;8CACT,cAAA,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,6IAAS;gDAAC,WAAU;;kEACnB,8OAAC,yOAAa;wDAAC,WAAU;;;;;;oDAAY;;;;;;;0DAGvC,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC,4IAAM;oDAAC,MAAK;oDAAK,SAAQ;oDAAU,SAAS;;sEAC3C,8OAAC,iMAAC;4DAAC,WAAU;;;;;;wDAAiB;;;;;;;;;;;;;;;;;;;;;;;8CAMtC,8OAAC,+IAAW;8CACT,OAAO,MAAM,KAAK,kBACjB,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,mOAAW;gDAAC,WAAU;;;;;;0DACvB,8OAAC;0DAAE;;;;;;0DACH,8OAAC;gDAAE,WAAU;0DAAU;;;;;;;;;;;iGAGzB,8OAAC;wCAAI,WAAU;kDACZ,OAAO,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,CAAA,sBACvB,8OAAC;gDAEC,WAAW,CAAC,sBAAsB,EAChC,MAAM,YAAY,GAAG,gBAAgB,iBACrC;0DAEF,cAAA,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;oEAAI,WAAU;;sFACb,8OAAC,0IAAK;4EAAC,SAAS,oBAAoB,MAAM,IAAI;sFAC3C,MAAM,IAAI,CAAC,WAAW;;;;;;wEAExB,MAAM,MAAM,kBACX,8OAAC,0IAAK;4EAAC,SAAQ;sFAAW,MAAM,MAAM;;;;;;sFAExC,8OAAC;4EAAK,WAAU;sFACb,MAAM,SAAS,CAAC,kBAAkB;;;;;;;;;;;;8EAGvC,8OAAC;oEAAE,WAAU;8EAAgB,MAAM,OAAO;;;;;;gEACzC,MAAM,MAAM,kBACX,8OAAC;oEAAE,WAAU;;wEAAgC;wEACtB,MAAM,MAAM,CAAC,OAAO,CAAC,KAAK;;;;;;;;;;;;;sEAIrD,8OAAC;4DAAI,WAAU;sEACZ,CAAC,MAAM,YAAY,kBAClB,8OAAC,4IAAM;gEACL,MAAK;gEACL,SAAQ;gEACR,SAAS,IAAM,iBAAiB,MAAM,EAAE;0EAExC,cAAA,8OAAC,mOAAW;oEAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;+CAhC1B,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;kCA8C3B,8OAAC,+IAAW;wBAAC,OAAM;wBAAY,WAAU;kCACvC,cAAA,8OAAC,wIAAI;;8CACH,8OAAC,8IAAU;8CACT,cAAA,8OAAC,6IAAS;wCAAC,WAAU;;0DACnB,8OAAC,iOAAS;gDAAC,WAAU;;;;;;4CAAY;;;;;;;;;;;;8CAIrC,8OAAC,+IAAW;8CACT,cAAc,MAAM,KAAK,kBACxB,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,sNAAQ;gDAAC,WAAU;;;;;;0DACpB,8OAAC;0DAAE;;;;;;0DACH,8OAAC;gDAAE,WAAU;0DAAU;;;;;;;;;;;iGAGzB,8OAAC;wCAAI,WAAU;kDACZ,cAAc,GAAG,CAAC,CAAC,MAAM,sBACxB,8OAAC;gDAAsB,WAAU;;kEAC/B,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEAAI,WAAU;;kFACb,8OAAC;wEAAG,WAAU;kFAAiB,KAAK,MAAM;;;;;;kFAC1C,8OAAC,0IAAK;wEACJ,SAAS,KAAK,WAAW,GAAG,KAAK,OAAO,GAAG,gBAAgB;;4EAE1D,KAAK,WAAW,CAAC,OAAO,CAAC;4EAAG;;;;;;;;;;;;;0EAGjC,8OAAC;gEAAI,WAAU;;oEAAgC;oEACxC,KAAK,eAAe,CAAC,OAAO,CAAC;oEAAG;;;;;;;;;;;;;kEAIzC,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;;kFACC,8OAAC;wEAAE,WAAU;kFAAwB;;;;;;kFACrC,8OAAC;wEAAE,WAAU;kFAAe,eAAe,KAAK,QAAQ;;;;;;;;;;;;0EAE1D,8OAAC;;kFACC,8OAAC;wEAAE,WAAU;kFAAwB;;;;;;kFACrC,8OAAC;wEAAE,WAAU;kFAAe,eAAe,KAAK,UAAU;;;;;;;;;;;;0EAE5D,8OAAC;;kFACC,8OAAC;wEAAE,WAAU;kFAAwB;;;;;;kFACrC,8OAAC;wEAAE,WAAU;;4EAAe,KAAK,OAAO;4EAAC;;;;;;;;;;;;;0EAE3C,8OAAC;;kFACC,8OAAC;wEAAE,WAAU;kFAAwB;;;;;;kFACrC,8OAAC;wEAAE,WAAU;;4EAAe,CAAC,KAAK,eAAe,GAAG,GAAG,EAAE,OAAO,CAAC;4EAAG;;;;;;;;;;;;;;;;;;;kEAIxE,8OAAC;wDAAI,WAAU;;0EACb,8OAAC;gEAAI,WAAU;;kFACb,8OAAC;kFAAK;;;;;;kFACN,8OAAC;;4EAAM,KAAK,WAAW,CAAC,OAAO,CAAC;4EAAG;4EAAK,KAAK,OAAO;4EAAC;;;;;;;;;;;;;0EAEvD,8OAAC,gJAAQ;gEACP,OAAO,KAAK,GAAG,CAAC,KAAK,WAAW,GAAG,KAAK,OAAO,GAAG,KAAK;gEACvD,WAAU;;;;;;;;;;;;;+CAzCN,KAAK,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;kCAqDjC,8OAAC,+IAAW;wBAAC,OAAM;wBAAW,WAAU;kCACtC,cAAA,8OAAC,wIAAI;;8CACH,8OAAC,8IAAU;8CACT,cAAA,8OAAC,6IAAS;wCAAC,WAAU;;0DACnB,8OAAC,sNAAQ;gDAAC,WAAU;;;;;;4CAAY;;;;;;;;;;;;8CAIpC,8OAAC,+IAAW;oCAAC,WAAU;;sDACrB,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DAAG,WAAU;sEAAgB;;;;;;sEAE9B,8OAAC;4DAAI,WAAU;;8EACb,8OAAC,0IAAK;oEAAC,SAAQ;8EAAkB;;;;;;8EACjC,8OAAC,0IAAK;oEACJ,IAAG;oEACH,MAAK;oEACL,OAAO,eAAe,eAAe;oEACrC,UAAU,CAAC,IAAM,sBAAsB,mBAAmB,WAAW,EAAE,MAAM,CAAC,KAAK;oEACnF,KAAI;oEACJ,KAAI;oEACJ,MAAK;;;;;;;;;;;;sEAIT,8OAAC;4DAAI,WAAU;;8EACb,8OAAC,0IAAK;oEAAC,SAAQ;8EAAmB;;;;;;8EAClC,8OAAC,0IAAK;oEACJ,IAAG;oEACH,MAAK;oEACL,OAAO,eAAe,gBAAgB;oEACtC,UAAU,CAAC,IAAM,sBAAsB,oBAAoB,SAAS,EAAE,MAAM,CAAC,KAAK;oEAClF,KAAI;oEACJ,KAAI;;;;;;;;;;;;sEAIR,8OAAC;4DAAI,WAAU;;8EACb,8OAAC,0IAAK;oEAAC,SAAQ;8EAAe;;;;;;8EAC9B,8OAAC,0IAAK;oEACJ,IAAG;oEACH,MAAK;oEACL,OAAO,eAAe,YAAY;oEAClC,UAAU,CAAC,IAAM,sBAAsB,gBAAgB,WAAW,EAAE,MAAM,CAAC,KAAK;oEAChF,KAAI;oEACJ,KAAI;oEACJ,MAAK;;;;;;;;;;;;;;;;;;8DAKX,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DAAG,WAAU;sEAAgB;;;;;;sEAE9B,8OAAC;4DAAI,WAAU;;8EACb,8OAAC,0IAAK;oEAAC,SAAQ;8EAAe;;;;;;8EAC9B,8OAAC,0IAAK;oEACJ,IAAG;oEACH,MAAK;oEACL,OAAO,eAAe,YAAY;oEAClC,UAAU,CAAC,IAAM,sBAAsB,gBAAgB,WAAW,EAAE,MAAM,CAAC,KAAK;oEAChF,KAAI;oEACJ,KAAI;oEACJ,MAAK;;;;;;;;;;;;sEAIT,8OAAC;4DAAI,WAAU;;8EACb,8OAAC,0IAAK;oEAAC,SAAQ;8EAAc;;;;;;8EAC7B,8OAAC,0IAAK;oEACJ,IAAG;oEACH,MAAK;oEACL,OAAO,eAAe,WAAW;oEACjC,UAAU,CAAC,IAAM,sBAAsB,eAAe,WAAW,EAAE,MAAM,CAAC,KAAK;oEAC/E,KAAI;oEACJ,KAAI;oEACJ,MAAK;;;;;;;;;;;;sEAIT,8OAAC;4DAAI,WAAU;;8EACb,8OAAC,0IAAK;oEAAC,SAAQ;8EAAqB;;;;;;8EACpC,8OAAC,0IAAK;oEACJ,IAAG;oEACH,MAAK;oEACL,OAAO,eAAe,kBAAkB;oEACxC,UAAU,CAAC,IAAM,sBAAsB,sBAAsB,WAAW,EAAE,MAAM,CAAC,KAAK;oEACtF,KAAI;oEACJ,KAAI;oEACJ,MAAK;;;;;;;;;;;;sEAIT,8OAAC;4DAAI,WAAU;;8EACb,8OAAC,0IAAK;oEAAC,SAAQ;8EAAkB;;;;;;8EACjC,8OAAC,0IAAK;oEACJ,IAAG;oEACH,MAAK;oEACL,OAAO,eAAe,eAAe;oEACrC,UAAU,CAAC,IAAM,sBAAsB,mBAAmB,WAAW,EAAE,MAAM,CAAC,KAAK;oEACnF,KAAI;oEACJ,KAAI;oEACJ,MAAK;;;;;;;;;;;;;;;;;;;;;;;;sDAMb,8OAAC;4CAAI,WAAU;;8DACb,8OAAC,4IAAM;oDAAC,SAAQ;oDAAU,SAAS;8DAAiB;;;;;;8DAGpD,8OAAC,4IAAM;oDAAC,SAAS;8DAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUjD;uCAEe","debugId":null}},
    {"offset": {"line": 5689, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/trading/TradingPanel.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\n// Note: Select, ScrollArea, and Separator components not available - using alternatives\nimport { Progress } from '@/components/ui/progress';\nimport TradingViewChart from './TradingViewChart';\nimport RiskManagementDashboard from './RiskManagementDashboard';\nimport { \n  TrendingUp, \n  TrendingDown, \n  Activity, \n  DollarSign, \n  BarChart3, \n  Clock, \n  Target, \n  AlertTriangle,\n  Play,\n  Pause,\n  Settings,\n  Zap,\n  Eye,\n  EyeOff,\n  X,\n  Maximize2,\n  Minimize2,\n  Shield\n} from 'lucide-react';\nimport { \n  liveMarketService, \n  useMarketData, \n  useCandlestickData, \n  useOrderBook, \n  useRecentTrades,\n  type MarketTicker,\n  type CandlestickData,\n  type OrderBook,\n  type Trade\n} from '@/services/liveMarketService';\nimport { useLiveTrading, OrderRequest } from '@/services/liveTradingService';\nimport { useTradingMode } from '@/contexts/TradingModeContext';\nimport DemoModeIndicator from '@/components/ui/DemoModeIndicator';\n\n// Using types from live trading service\nimport type { TradingPosition, TradingOrder } from '@/services/liveTradingService';\n\n// Local fallback interfaces for when not connected to live trading\ninterface LocalPosition {\n  id: string;\n  symbol: string;\n  side: 'long' | 'short';\n  size: number;\n  entryPrice: number;\n  currentPrice: number;\n  pnl: number;\n  pnlPercent: number;\n  timestamp: number;\n  stopLoss?: number;\n  takeProfit?: number;\n}\n\ninterface LocalOrder {\n  id: string;\n  symbol: string;\n  side: 'buy' | 'sell';\n  type: 'market' | 'limit' | 'stop';\n  size: number;\n  price?: number;\n  status: 'pending' | 'filled' | 'cancelled';\n  timestamp: number;\n}\n\ninterface TradingPanelProps {\n  className?: string;\n  defaultSymbol?: string;\n  isOpen?: boolean;\n  onClose?: () => void;\n  isModal?: boolean;\n}\n\nconst TradingPanel: React.FC<TradingPanelProps> = ({ \n  className = '',\n  defaultSymbol = 'BTCUSDT',\n  isOpen = true,\n  onClose,\n  isModal = false\n}) => {\n  const { isPaperTrading } = useTradingMode();\n  const [selectedSymbol, setSelectedSymbol] = useState(defaultSymbol);\n  const [orderType, setOrderType] = useState<'market' | 'limit' | 'stop'>('market');\n  const [orderSide, setOrderSide] = useState<'buy' | 'sell'>('buy');\n  const [orderSize, setOrderSize] = useState('');\n  const [orderPrice, setOrderPrice] = useState('');\n  const [leverage, setLeverage] = useState(1);\n  // Live trading integration\n  const { \n    account, \n    positions, \n    orders, \n    signals, \n    isConnected, \n    placeOrder: placeLiveOrder, \n    closePosition: closeLivePosition, \n    modifyPosition \n  } = useLiveTrading();\n  \n  const [localPositions, setLocalPositions] = useState<LocalPosition[]>([]);\n  const [localOrders, setLocalOrders] = useState<LocalOrder[]>([]);\n  const [balance, setBalance] = useState(10000);\n  const [isTrading, setIsTrading] = useState(false);\n  const [showOrderBook, setShowOrderBook] = useState(true);\n  const [chartTimeframe, setChartTimeframe] = useState('1m');\n  const [activeTab, setActiveTab] = useState('trading');\n  \n  // Market data hooks\n  const marketData = useMarketData(selectedSymbol) as MarketTicker;\n  const candlestickData = useCandlestickData(selectedSymbol, 100);\n  const orderBook = useOrderBook(selectedSymbol);\n  const recentTrades = useRecentTrades(selectedSymbol, 20);\n  const allMarketData = useMarketData() as MarketTicker[];\n\n  // Get supported symbols\n  const supportedSymbols = liveMarketService.getSupportedSymbols();\n\n  // Update positions with current prices\n  useEffect(() => {\n    if (marketData && localPositions.length > 0) {\n      setLocalPositions(prev => prev.map(position => {\n        if (position.symbol === selectedSymbol) {\n          const currentPrice = marketData.price;\n          const pnl = position.side === 'long' \n            ? (currentPrice - position.entryPrice) * position.size\n            : (position.entryPrice - currentPrice) * position.size;\n          const pnlPercent = (pnl / (position.entryPrice * position.size)) * 100;\n          \n          return {\n            ...position,\n            currentPrice,\n            pnl,\n            pnlPercent\n          };\n        }\n        return position;\n      }));\n    }\n  }, [marketData, selectedSymbol, localPositions]);\n\n  // Use live positions if connected, otherwise use local positions\n  const displayPositions = isConnected && positions ? positions : localPositions;\n  const displayOrders = isConnected && orders ? orders : localOrders;\n  const displayBalance = isConnected && account ? account.balance : balance;\n\n  // Place order function\n  const placeOrder = useCallback(async () => {\n    if (!orderSize || !marketData) return;\n    \n    const size = parseFloat(orderSize);\n    const price = orderType === 'market' ? marketData.price : parseFloat(orderPrice);\n    \n    if (isNaN(size) || size <= 0) {\n      alert('Please enter a valid order size');\n      return;\n    }\n    \n    if (orderType !== 'market' && (isNaN(price) || price <= 0)) {\n      alert('Please enter a valid order price');\n      return;\n    }\n\n    if (isConnected && placeLiveOrder) {\n      // Use live trading service\n      const orderRequest: OrderRequest = {\n        symbol: selectedSymbol,\n        type: orderType,\n        side: orderSide,\n        size,\n        price: orderType === 'market' ? undefined : price,\n        leverage: leverage\n      };\n\n      const result = await placeLiveOrder(orderRequest);\n      \n      if (result.success) {\n        // Reset form\n        setOrderSize('');\n        setOrderPrice('');\n        alert(`${orderSide.toUpperCase()} order placed successfully for ${size} ${selectedSymbol}`);\n      } else {\n        alert(`Order failed: ${result.error}`);\n      }\n    } else {\n      // Fallback to local simulation\n      const orderValue = size * price;\n      const requiredMargin = orderValue / leverage;\n      \n      if (requiredMargin > balance) {\n        alert('Insufficient balance');\n        return;\n      }\n      \n      const newOrder: LocalOrder = {\n        id: `order_${Date.now()}`,\n        symbol: selectedSymbol,\n        side: orderSide,\n        type: orderType,\n        size,\n        price: orderType === 'market' ? undefined : price,\n        status: orderType === 'market' ? 'filled' : 'pending',\n        timestamp: Date.now()\n      };\n      \n      setLocalOrders(prev => [newOrder, ...prev]);\n      \n      // If market order, create position immediately\n      if (orderType === 'market') {\n        const newPosition: LocalPosition = {\n          id: `pos_${Date.now()}`,\n          symbol: selectedSymbol,\n          side: orderSide === 'buy' ? 'long' : 'short',\n          size,\n          entryPrice: price,\n          currentPrice: price,\n          pnl: 0,\n          pnlPercent: 0,\n          timestamp: Date.now()\n        };\n        \n        setLocalPositions(prev => [newPosition, ...prev]);\n        setBalance(prev => prev - requiredMargin);\n      }\n      \n      // Reset form\n      setOrderSize('');\n      setOrderPrice('');\n    }\n  }, [orderSize, orderPrice, orderType, orderSide, selectedSymbol, marketData, leverage, balance, isConnected, placeLiveOrder]);\n\n  // Close position function\n  const closePosition = useCallback(async (positionId: string) => {\n    if (isConnected && closeLivePosition) {\n      // Use live trading service\n      const result = await closeLivePosition(positionId);\n      \n      if (result.success) {\n        alert('Position closed successfully');\n      } else {\n        alert(`Failed to close position: ${result.error}`);\n      }\n    } else {\n      // Fallback to local simulation\n      setLocalPositions(prev => {\n        const position = prev.find(p => p.id === positionId);\n        if (position) {\n          const returnAmount = (position.entryPrice * position.size / leverage) + position.pnl;\n          setBalance(prevBalance => prevBalance + returnAmount);\n        }\n        return prev.filter(p => p.id !== positionId);\n      });\n    }\n  }, [leverage, isConnected, closeLivePosition]);\n\n  // Format price function\n  const formatPrice = (price: number, decimals = 2) => {\n    return price.toFixed(decimals);\n  };\n\n  // Format currency function\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(amount);\n  };\n\n  // Chart data is now handled by TradingViewChart component\n\n  // Don't render if modal is closed\n  if (isModal && !isOpen) {\n    return null;\n  }\n\n  const content = (\n    <div className={`w-full space-y-2 sm:space-y-4 ${className}`}>\n      {/* Demo Mode Banner */}\n      {isPaperTrading && (\n        <DemoModeIndicator variant=\"banner\" />\n      )}\n      \n      {/* Main Navigation Tabs */}\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-2\">\n          <TabsTrigger value=\"trading\" className=\"flex items-center gap-2\">\n            <BarChart3 className=\"h-4 w-4\" />\n            Trading\n          </TabsTrigger>\n          <TabsTrigger value=\"risk\" className=\"flex items-center gap-2\">\n            <Shield className=\"h-4 w-4\" />\n            Risk Management\n          </TabsTrigger>\n        </TabsList>\n        \n        <TabsContent value=\"trading\" className=\"space-y-2 sm:space-y-4\">\n          {/* Header with Symbol Selector and Market Stats */}\n      <div className=\"flex flex-col lg:flex-row gap-2 sm:gap-4\">\n        <Card className=\"flex-1\">\n          <CardHeader className=\"pb-2 sm:pb-3\">\n            <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between gap-2 sm:gap-0\">\n              <div className=\"flex items-center gap-2 sm:gap-3\">\n                <select \n                  value={selectedSymbol} \n                  onChange={(e) => setSelectedSymbol(e.target.value)}\n                  className=\"w-32 sm:w-40 px-2 sm:px-3 py-1.5 sm:py-2 text-sm sm:text-base border border-gray-300 rounded-md bg-white dark:bg-gray-800 dark:border-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800\"\n                  aria-label=\"Select trading symbol\"\n                >\n                  {supportedSymbols.map(symbol => (\n                    <option key={symbol} value={symbol}>\n                      {symbol}\n                    </option>\n                  ))}\n                </select>\n                <Badge variant={marketData?.changePercent >= 0 ? 'default' : 'destructive'} className=\"text-xs sm:text-sm\">\n                  {marketData?.changePercent >= 0 ? '+' : ''}{marketData?.changePercent.toFixed(2)}%\n                </Badge>\n              </div>\n              <div className=\"flex items-center gap-1 sm:gap-2\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => setIsTrading(!isTrading)}\n                  className=\"text-xs sm:text-sm px-2 sm:px-3\"\n                >\n                  {isTrading ? <Pause className=\"h-3 w-3 sm:h-4 sm:w-4\" /> : <Play className=\"h-3 w-3 sm:h-4 sm:w-4\" />}\n                  <span className=\"hidden sm:inline ml-1\">{isTrading ? 'Pause' : 'Start'}</span>\n                </Button>\n                <Button variant=\"outline\" size=\"sm\" className=\"px-2 sm:px-3\">\n                  <Settings className=\"h-3 w-3 sm:h-4 sm:w-4\" />\n                </Button>\n              </div>\n            </div>\n          </CardHeader>\n          <CardContent className=\"pt-2 sm:pt-6\">\n            {marketData && (\n              <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-2 sm:gap-4\">\n                <div>\n                  <p className=\"text-xs sm:text-sm text-muted-foreground\">Price</p>\n                  <p className=\"text-lg sm:text-2xl font-bold\">${formatPrice(marketData.price)}</p>\n                </div>\n                <div>\n                  <p className=\"text-xs sm:text-sm text-muted-foreground\">24h Change</p>\n                  <p className={`text-sm sm:text-lg font-semibold ${\n                    marketData.change >= 0 ? 'text-green-600' : 'text-red-600'\n                  }`}>\n                    {marketData.change >= 0 ? '+' : ''}${formatPrice(marketData.change)}\n                  </p>\n                </div>\n                <div>\n                  <p className=\"text-xs sm:text-sm text-muted-foreground\">24h High</p>\n                  <p className=\"text-sm sm:text-lg font-semibold\">${formatPrice(marketData.high24h)}</p>\n                </div>\n                <div>\n                  <p className=\"text-xs sm:text-sm text-muted-foreground\">24h Low</p>\n                  <p className=\"text-sm sm:text-lg font-semibold\">${formatPrice(marketData.low24h)}</p>\n                </div>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n        \n        {/* Account Balance */}\n        <Card className=\"lg:w-80\">\n          <CardHeader className=\"pb-2 sm:pb-3\">\n            <CardTitle className=\"flex items-center gap-2 text-base sm:text-lg\">\n              <DollarSign className=\"h-4 w-4 sm:h-5 sm:w-5\" />\n              Account Balance\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"pt-2 sm:pt-6\">\n            <div className=\"space-y-2 sm:space-y-3\">\n              <div>\n                  <p className=\"text-xs sm:text-sm text-muted-foreground\">Available Balance</p>\n                  <p className=\"text-lg sm:text-2xl font-bold\">{formatCurrency(displayBalance)}</p>\n                </div>\n                <div className=\"grid grid-cols-2 gap-2 sm:gap-4 text-xs sm:text-sm\">\n                  <div>\n                    <p className=\"text-muted-foreground\">Total PnL</p>\n                    <p className={`font-semibold ${\n                      displayPositions.reduce((sum, p) => sum + p.pnl, 0) >= 0 ? 'text-green-600' : 'text-red-600'\n                    }`}>\n                      {formatCurrency(displayPositions.reduce((sum, p) => sum + p.pnl, 0))}\n                    </p>\n                  </div>\n                  <div>\n                    <p className=\"text-muted-foreground\">Open Positions</p>\n                    <p className=\"font-semibold\">{displayPositions.length}</p>\n                  </div>\n                </div>\n                {isConnected && (\n                  <div className=\"flex items-center gap-2 mt-2\">\n                    <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                    <span className=\"text-xs sm:text-sm text-green-600\">Connected to Live Trading</span>\n                  </div>\n                )}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Main Trading Interface */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-2 sm:gap-4\">\n        {/* Chart */}\n        <Card className=\"lg:col-span-2\">\n          <CardHeader className=\"pb-2 sm:pb-3\">\n            <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between gap-2 sm:gap-0\">\n              <CardTitle className=\"flex items-center gap-2 text-base sm:text-lg\">\n                <BarChart3 className=\"h-4 w-4 sm:h-5 sm:w-5\" />\n                Price Chart\n              </CardTitle>\n              <div className=\"flex items-center gap-2\">\n                <select \n                  value={chartTimeframe} \n                  onChange={(e) => setChartTimeframe(e.target.value)}\n                  className=\"w-16 sm:w-20 px-1 sm:px-2 py-1 border border-gray-300 rounded-md bg-white dark:bg-gray-800 dark:border-gray-600 text-xs sm:text-sm\"\n                >\n                  <option value=\"1m\">1m</option>\n                  <option value=\"5m\">5m</option>\n                  <option value=\"15m\">15m</option>\n                  <option value=\"1h\">1h</option>\n                  <option value=\"4h\">4h</option>\n                  <option value=\"1d\">1d</option>\n                </select>\n              </div>\n            </div>\n          </CardHeader>\n          <CardContent className=\"p-0\">\n            <TradingViewChart \n              symbol={selectedSymbol}\n              interval={chartTimeframe}\n              height={320}\n              theme=\"dark\"\n              autosize={false}\n            />\n          </CardContent>\n        </Card>\n\n        {/* Order Entry & Market Data */}\n        <div className=\"space-y-2 sm:space-y-4\">\n          {/* Order Entry */}\n          <Card>\n            <CardHeader className=\"pb-2 sm:pb-3\">\n              <CardTitle className=\"flex items-center gap-2 text-base sm:text-lg\">\n                <Target className=\"h-4 w-4 sm:h-5 sm:w-5\" />\n                Place Order\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-2 sm:space-y-4 pt-2 sm:pt-6\">\n              <Tabs value={orderSide} onValueChange={(value) => setOrderSide(value as 'buy' | 'sell')}>\n                <TabsList className=\"grid w-full grid-cols-2 h-8 sm:h-10\" role=\"tablist\" aria-label=\"Order side selection\">\n                  <TabsTrigger value=\"buy\" className=\"text-green-600 text-xs sm:text-sm\" aria-label=\"Buy order\">Buy</TabsTrigger>\n                  <TabsTrigger value=\"sell\" className=\"text-red-600 text-xs sm:text-sm\" aria-label=\"Sell order\">Sell</TabsTrigger>\n                </TabsList>\n              </Tabs>\n              \n              <div className=\"space-y-2 sm:space-y-3\">\n                <div>\n                  <label htmlFor=\"order-type\" className=\"text-xs sm:text-sm font-medium\">Order Type</label>\n                    <select \n                    id=\"order-type\"\n                    value={orderType} \n                    onChange={(e) => setOrderType(e.target.value as 'market' | 'limit' | 'stop')}\n                    className=\"w-full px-2 sm:px-3 py-1.5 sm:py-2 text-sm sm:text-base border border-gray-300 rounded-md bg-white dark:bg-gray-800 dark:border-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800\"\n                    aria-describedby=\"order-type-help\"\n                  >\n                    <option value=\"market\">Market</option>\n                    <option value=\"limit\">Limit</option>\n                    <option value=\"stop\">Stop</option>\n                  </select>\n                  <div id=\"order-type-help\" className=\"sr-only\">Select the type of order to place</div>\n                </div>\n                \n                {orderType !== 'market' && (\n                  <div>\n                    <label htmlFor=\"order-price\" className=\"text-xs sm:text-sm font-medium\">Price</label>\n                    <Input\n                      id=\"order-price\"\n                      type=\"number\"\n                      placeholder=\"0.00\"\n                      value={orderPrice}\n                      onChange={(e) => setOrderPrice(e.target.value)}\n                      className=\"h-8 sm:h-10 text-sm sm:text-base focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800\"\n                      aria-describedby=\"order-price-help\"\n                      aria-label=\"Order price in USD\"\n                    />\n                    <div id=\"order-price-help\" className=\"sr-only\">Enter the price for your {orderType} order</div>\n                  </div>\n                )}\n                \n                <div>\n                  <label htmlFor=\"order-size\" className=\"text-xs sm:text-sm font-medium\">Size</label>\n                  <Input\n                    id=\"order-size\"\n                    type=\"number\"\n                    placeholder=\"0.00\"\n                    value={orderSize}\n                    onChange={(e) => setOrderSize(e.target.value)}\n                    className=\"h-8 sm:h-10 text-sm sm:text-base focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800\"\n                    aria-describedby=\"order-size-help\"\n                    aria-label={`Order size in ${selectedSymbol}`}\n                  />\n                  <div id=\"order-size-help\" className=\"sr-only\">Enter the amount of {selectedSymbol} to {orderSide}</div>\n                </div>\n                \n                <div>\n                  <label htmlFor=\"leverage\" className=\"text-xs sm:text-sm font-medium\">Leverage</label>\n                    <select \n                    id=\"leverage\"\n                    value={leverage.toString()} \n                    onChange={(e) => setLeverage(parseInt(e.target.value))}\n                    className=\"w-full px-2 sm:px-3 py-1.5 sm:py-2 text-sm sm:text-base border border-gray-300 rounded-md bg-white dark:bg-gray-800 dark:border-gray-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800\"\n                    aria-describedby=\"leverage-help\"\n                  >\n                    <option value=\"1\">1x</option>\n                    <option value=\"2\">2x</option>\n                    <option value=\"5\">5x</option>\n                    <option value=\"10\">10x</option>\n                    <option value=\"20\">20x</option>\n                  </select>\n                  <div id=\"leverage-help\" className=\"sr-only\">Select leverage multiplier for your position</div>\n                </div>\n                \n                <Button \n                  onClick={placeOrder}\n                  className={`w-full h-8 sm:h-10 text-sm sm:text-base focus:outline-none focus:ring-2 focus:ring-offset-2 dark:focus:ring-offset-gray-800 ${\n                    orderSide === 'buy' \n                      ? 'bg-green-600 hover:bg-green-700 focus:ring-green-500' \n                      : 'bg-red-600 hover:bg-red-700 focus:ring-red-500'\n                  }`}\n                  disabled={!isTrading}\n                  aria-describedby=\"place-order-help\"\n                  aria-label={`Place ${orderType} ${orderSide} order for ${orderSize || '0'} ${selectedSymbol}${orderType !== 'market' ? ` at $${orderPrice || '0'}` : ''}`}\n                >\n                  {orderSide === 'buy' ? 'Buy' : 'Sell'} {selectedSymbol}\n                </Button>\n                <div id=\"place-order-help\" className=\"sr-only\">\n                  {!isTrading ? 'Trading is currently disabled' : `Place a ${orderType} ${orderSide} order`}\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Order Book */}\n          <Card>\n            <CardHeader className=\"pb-2 sm:pb-3\">\n              <div className=\"flex items-center justify-between\">\n                <CardTitle className=\"flex items-center gap-2 text-base sm:text-lg\">\n                  <Activity className=\"h-4 w-4 sm:h-5 sm:w-5\" />\n                  Order Book\n                </CardTitle>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => setShowOrderBook(!showOrderBook)}\n                  className=\"h-6 w-6 sm:h-8 sm:w-8 p-0 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800\"\n                  aria-label={showOrderBook ? 'Hide order book' : 'Show order book'}\n                  aria-expanded={showOrderBook}\n                  aria-controls=\"order-book-content\"\n                >\n                  {showOrderBook ? <EyeOff className=\"h-3 w-3 sm:h-4 sm:w-4\" aria-hidden=\"true\" /> : <Eye className=\"h-3 w-3 sm:h-4 sm:w-4\" aria-hidden=\"true\" />}\n                </Button>\n              </div>\n            </CardHeader>\n            {showOrderBook && orderBook && (\n              <CardContent id=\"order-book-content\" className=\"pt-2 sm:pt-6\">\n                <div className=\"space-y-1 sm:space-y-2\" role=\"table\" aria-label=\"Order book data\">\n                  <div className=\"text-xs text-muted-foreground grid grid-cols-3 gap-1 sm:gap-2\" role=\"row\">\n                    <span role=\"columnheader\">Price</span>\n                    <span className=\"text-right\" role=\"columnheader\">Size</span>\n                    <span className=\"text-right\" role=\"columnheader\">Total</span>\n                  </div>\n                  \n                  {/* Asks (Sell orders) */}\n                  <div className=\"h-20 sm:h-32 overflow-y-auto\">\n                    <div className=\"space-y-0.5 sm:space-y-1\">\n                      {orderBook.asks.slice(0, 10).reverse().map((ask, index) => (\n                        <div key={index} className=\"text-xs grid grid-cols-3 gap-1 sm:gap-2 text-red-600\">\n                          <span>{formatPrice(ask.price)}</span>\n                          <span className=\"text-right\">{ask.size.toFixed(4)}</span>\n                          <span className=\"text-right\">{formatPrice(ask.total)}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                  \n                  <div className=\"border-t border-gray-200 dark:border-gray-700\" />\n                  \n                  {/* Current Price */}\n                  <div className=\"text-center py-1\">\n                    <span className=\"text-sm sm:text-lg font-bold\">\n                      ${marketData ? formatPrice(marketData.price) : '0.00'}\n                    </span>\n                  </div>\n                  \n                  <div className=\"border-t border-gray-200 dark:border-gray-700\" />\n                  \n                  {/* Bids (Buy orders) */}\n                  <div className=\"h-20 sm:h-32 overflow-y-auto\">\n                    <div className=\"space-y-0.5 sm:space-y-1\">\n                      {orderBook.bids.slice(0, 10).map((bid, index) => (\n                        <div key={index} className=\"text-xs grid grid-cols-3 gap-1 sm:gap-2 text-green-600\">\n                          <span>{formatPrice(bid.price)}</span>\n                          <span className=\"text-right\">{bid.size.toFixed(4)}</span>\n                          <span className=\"text-right\">{formatPrice(bid.total)}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            )}\n          </Card>\n        </div>\n      </div>\n\n      {/* Positions and Orders */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-2 sm:gap-4\">\n        {/* Open Positions */}\n        <Card>\n          <CardHeader className=\"pb-2 sm:pb-3\">\n            <CardTitle className=\"flex items-center gap-2 text-base sm:text-lg\">\n              <TrendingUp className=\"h-4 w-4 sm:h-5 sm:w-5\" />\n              Open Positions ({displayPositions.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"pt-2 sm:pt-6\">\n            {displayPositions.length === 0 ? (\n              <p className=\"text-muted-foreground text-center py-4 sm:py-8 text-sm\">No open positions</p>\n            ) : (\n              <div className=\"h-48 sm:h-64 overflow-y-auto\">\n                <div className=\"space-y-2 sm:space-y-3\">\n                  {displayPositions.map(position => (\n                    <div key={position.id} className=\"border rounded-lg p-2 sm:p-3\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <div className=\"flex items-center gap-1 sm:gap-2\">\n                          <Badge variant={position.side === 'long' ? 'default' : 'destructive'} className=\"text-xs\">\n                            {position.side.toUpperCase()}\n                          </Badge>\n                          <span className=\"font-medium text-sm sm:text-base\">{position.symbol}</span>\n                        </div>\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => closePosition(position.id)}\n                          className=\"h-6 sm:h-8 px-2 sm:px-3 text-xs sm:text-sm\"\n                        >\n                          Close\n                        </Button>\n                      </div>\n                      <div className=\"grid grid-cols-2 gap-1 sm:gap-2 text-xs sm:text-sm\">\n                        <div>\n                          <p className=\"text-muted-foreground\">Size</p>\n                          <p className=\"font-medium\">{position.size}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-muted-foreground\">Entry Price</p>\n                          <p className=\"font-medium\">${formatPrice(position.entryPrice)}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-muted-foreground\">Current Price</p>\n                          <p className=\"font-medium\">${formatPrice(position.currentPrice)}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-muted-foreground\">PnL</p>\n                          <p className={`font-medium ${\n                            position.pnl >= 0 ? 'text-green-600' : 'text-red-600'\n                          }`}>\n                            {formatCurrency(position.pnl)} ({position.pnlPercent.toFixed(2)}%)\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Recent Orders */}\n        <Card>\n          <CardHeader className=\"pb-2 sm:pb-3\">\n            <CardTitle className=\"flex items-center gap-2 text-base sm:text-lg\">\n              <Clock className=\"h-4 w-4 sm:h-5 sm:w-5\" />\n              Recent Orders ({displayOrders.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"pt-2 sm:pt-6\">\n            {displayOrders.length === 0 ? (\n              <p className=\"text-muted-foreground text-center py-4 sm:py-8 text-sm\">No recent orders</p>\n            ) : (\n              <div className=\"h-48 sm:h-64 overflow-y-auto\">\n                <div className=\"space-y-2 sm:space-y-3\">\n                  {displayOrders.slice(0, 10).map(order => (\n                    <div key={order.id} className=\"border rounded-lg p-2 sm:p-3\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <div className=\"flex items-center gap-1 sm:gap-2\">\n                          <Badge variant={order.side === 'buy' ? 'default' : 'destructive'} className=\"text-xs\">\n                            {order.side.toUpperCase()}\n                          </Badge>\n                          <span className=\"font-medium text-sm sm:text-base\">{order.symbol}</span>\n                        </div>\n                        <Badge variant={order.status === 'filled' ? 'default' : 'secondary'} className=\"text-xs\">\n                          {order.status}\n                        </Badge>\n                      </div>\n                      <div className=\"grid grid-cols-2 gap-1 sm:gap-2 text-xs sm:text-sm\">\n                        <div>\n                          <p className=\"text-muted-foreground\">Type</p>\n                          <p className=\"font-medium\">{order.type.toUpperCase()}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-muted-foreground\">Size</p>\n                          <p className=\"font-medium\">{order.size}</p>\n                        </div>\n                        {order.price && (\n                          <div>\n                            <p className=\"text-muted-foreground\">Price</p>\n                            <p className=\"font-medium\">${formatPrice(order.price)}</p>\n                          </div>\n                        )}\n                        <div>\n                          <p className=\"text-muted-foreground\">Time</p>\n                          <p className=\"font-medium\">\n                            {new Date(typeof order.timestamp === 'number' ? order.timestamp : order.timestamp.getTime()).toLocaleTimeString()}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Recent Trades */}\n      <Card>\n        <CardHeader className=\"pb-2 sm:pb-3\">\n          <CardTitle className=\"flex items-center gap-2 text-base sm:text-lg\">\n            <Zap className=\"h-4 w-4 sm:h-5 sm:w-5\" />\n            Recent Market Trades\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"pt-2 sm:pt-6\">\n          {recentTrades && recentTrades.length > 0 ? (\n            <div className=\"h-32 sm:h-48 overflow-y-auto\">\n              <div className=\"space-y-0.5 sm:space-y-1\">\n                <div className=\"text-xs text-muted-foreground grid grid-cols-4 gap-1 sm:gap-2 pb-1 sm:pb-2\">\n                  <span>Time</span>\n                  <span>Side</span>\n                  <span className=\"text-right\">Price</span>\n                  <span className=\"text-right\">Size</span>\n                </div>\n                {recentTrades.map(trade => (\n                  <div key={trade.id} className=\"text-xs grid grid-cols-4 gap-1 sm:gap-2 py-0.5 sm:py-1\">\n                    <span className=\"text-muted-foreground\">\n                      {new Date(trade.timestamp).toLocaleTimeString()}\n                    </span>\n                    <span className={trade.side === 'buy' ? 'text-green-600' : 'text-red-600'}>\n                      {trade.side.toUpperCase()}\n                    </span>\n                    <span className=\"text-right font-medium\">\n                      ${formatPrice(trade.price)}\n                    </span>\n                    <span className=\"text-right\">\n                      {trade.size.toFixed(4)}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          ) : (\n            <p className=\"text-muted-foreground text-center py-4 sm:py-8 text-sm\">No recent trades</p>\n          )}\n        </CardContent>\n      </Card>\n        </TabsContent>\n        \n        <TabsContent value=\"risk\" className=\"space-y-2 sm:space-y-4\">\n          <RiskManagementDashboard \n            accountBalance={balance}\n            positions={displayPositions.map(pos => ({\n              symbol: pos.symbol,\n              quantity: pos.size,\n              side: pos.side,\n              entryPrice: pos.entryPrice,\n              currentPrice: pos.currentPrice,\n              unrealizedPnL: pos.pnl\n            }))}\n          />\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n\n  // Return modal wrapper if isModal is true\n  if (isModal) {\n    return (\n      <div className=\"fixed inset-0 z-50 bg-black bg-opacity-50 flex items-center justify-center p-4\">\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl w-full max-w-7xl h-[90vh] flex flex-col\">\n          {/* Modal Header */}\n          <div className=\"flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-700\">\n            <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">Advanced Trading Panel</h2>\n            <div className=\"flex items-center space-x-2\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={onClose}\n                className=\"text-gray-600 dark:text-gray-400\"\n              >\n                <X className=\"h-4 w-4\" />\n              </Button>\n            </div>\n          </div>\n          {/* Modal Content */}\n          <div className=\"flex-1 overflow-auto p-4\">\n            {content}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return content;\n};\n\nexport default TradingPanel;"],"names":[],"mappings":"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","debugId":null}}]
}