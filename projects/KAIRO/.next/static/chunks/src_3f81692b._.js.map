{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function formatCurrency(amount: number): string {\n  if (typeof amount !== 'number' || isNaN(amount)) return '$0.00'\n  try {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(amount)\n  } catch (error) {\n    return '$0.00'\n  }\n}\n\nexport function formatPercent(value: number): string {\n  if (typeof value !== 'number' || isNaN(value)) return '0.00%'\n  try {\n    return `${value >= 0 ? '+' : ''}${value.toFixed(2)}%`\n  } catch (error) {\n    return '0.00%'\n  }\n}\n\nexport function formatNumber(value: number): string {\n  if (typeof value !== 'number' || isNaN(value)) return '0'\n  try {\n    return new Intl.NumberFormat('en-US').format(value)\n  } catch (error) {\n    return '0'\n  }\n}"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,IAAA,yKAAO,EAAC,IAAA,gJAAI,EAAC;AACtB;AAEO,SAAS,eAAe,MAAc;IAC3C,IAAI,OAAO,WAAW,YAAY,MAAM,SAAS,OAAO;IACxD,IAAI;QACF,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;YACpC,OAAO;YACP,UAAU;QACZ,GAAG,MAAM,CAAC;IACZ,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,SAAS,cAAc,KAAa;IACzC,IAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,OAAO;IACtD,IAAI;QACF,OAAO,AAAC,GAA0B,OAAxB,SAAS,IAAI,MAAM,IAAsB,OAAjB,MAAM,OAAO,CAAC,IAAG;IACrD,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,SAAS,aAAa,KAAa;IACxC,IAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,OAAO;IACtD,IAAI;QACF,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS,MAAM,CAAC;IAC/C,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;;;;AAEA,MAAM,qBAAO,2KAAgB,MAG3B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,4DACA;QAED,GAAG,KAAK;;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,2KAAgB,OAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,2KAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,2KAAgB,OAGtC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,KAAK;QAAK,WAAW,IAAA,4HAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,2KAAgB,QAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,MAAM,iBAAiB,IAAA,0KAAG,EACxB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,2KAAgB,MAC7B,QAA0D;QAAzD,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO;IACtD,MAAM,OAAO,UAAU,2KAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,IAAA,4HAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }"],"names":[],"mappings":";;;;;;;AACA;AACA;;;;AAEA,MAAM,gBAAgB,IAAA,0KAAG,EACvB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,KAA4C;QAA5C,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB,GAA5C;IACb,qBACE,6LAAC;QAAI,WAAW,IAAA,4HAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/tabs.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\ninterface TabsContextValue {\n  value: string\n  onValueChange: (value: string) => void\n}\n\nconst TabsContext = React.createContext<TabsContextValue | undefined>(undefined)\n\ninterface TabsProps {\n  value: string\n  onValueChange: (value: string) => void\n  children: React.ReactNode\n  className?: string\n}\n\nconst Tabs = ({ value, onValueChange, children, className }: TabsProps) => {\n  return (\n    <TabsContext.Provider value={{ value, onValueChange }}>\n      <div className={cn(\"w-full\", className)}>\n        {children}\n      </div>\n    </TabsContext.Provider>\n  )\n}\n\nconst TabsList = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = \"TabsList\"\n\ninterface TabsTriggerProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  value: string\n}\n\nconst TabsTrigger = React.forwardRef<HTMLButtonElement, TabsTriggerProps>(\n  ({ className, value: triggerValue, ...props }, ref) => {\n    const context = React.useContext(TabsContext)\n    if (!context) {\n      throw new Error('TabsTrigger must be used within a Tabs component')\n    }\n    \n    const { value, onValueChange } = context\n    const isActive = value === triggerValue\n    \n    return (\n      <button\n        ref={ref}\n        className={cn(\n          \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n          isActive\n            ? \"bg-background text-foreground shadow-sm\"\n            : \"hover:bg-background/50\",\n          className\n        )}\n        onClick={() => onValueChange(triggerValue)}\n        {...props}\n      />\n    )\n  }\n)\nTabsTrigger.displayName = \"TabsTrigger\"\n\ninterface TabsContentProps extends React.HTMLAttributes<HTMLDivElement> {\n  value: string\n}\n\nconst TabsContent = React.forwardRef<HTMLDivElement, TabsContentProps>(\n  ({ className, value: contentValue, ...props }, ref) => {\n    const context = React.useContext(TabsContext)\n    if (!context) {\n      throw new Error('TabsContent must be used within a Tabs component')\n    }\n    \n    const { value } = context\n    \n    if (value !== contentValue) {\n      return null\n    }\n    \n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n          className\n        )}\n        {...props}\n      />\n    )\n  }\n)\nTabsContent.displayName = \"TabsContent\"\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }"],"names":[],"mappings":";;;;;;;;;;;AAAA;AACA;;;;;AAOA,MAAM,4BAAc,8KAAmB,CAA+B;AAStE,MAAM,OAAO;QAAC,EAAE,KAAK,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,EAAa;IACpE,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAO;QAAc;kBAClD,cAAA,6LAAC;YAAI,WAAW,IAAA,4HAAE,EAAC,UAAU;sBAC1B;;;;;;;;;;;AAIT;KARM;AAUN,MAAM,yBAAW,2KAAgB,OAG/B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,8FACA;QAED,GAAG,KAAK;;;;;;;;AAGb,SAAS,WAAW,GAAG;AAMvB,MAAM,4BAAc,GAAA,2KAAgB,UAClC,QAA+C;QAA9C,EAAE,SAAS,EAAE,OAAO,YAAY,EAAE,GAAG,OAAO;;IAC3C,MAAM,UAAU,2KAAgB,CAAC;IACjC,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG;IACjC,MAAM,WAAW,UAAU;IAE3B,qBACE,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,mSACA,WACI,4CACA,0BACJ;QAEF,SAAS,IAAM,cAAc;QAC5B,GAAG,KAAK;;;;;;AAGf;;AAEF,YAAY,WAAW,GAAG;AAM1B,MAAM,4BAAc,IAAA,2KAAgB,WAClC,QAA+C;QAA9C,EAAE,SAAS,EAAE,OAAO,YAAY,EAAE,GAAG,OAAO;;IAC3C,MAAM,UAAU,2KAAgB,CAAC;IACjC,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,EAAE,KAAK,EAAE,GAAG;IAElB,IAAI,UAAU,cAAc;QAC1B,OAAO;IACT;IAEA,qBACE,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,mIACA;QAED,GAAG,KAAK;;;;;;AAGf;;AAEF,YAAY,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 415, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/lib/logger.ts"],"sourcesContent":["'use client';\n\nimport { errorHandler, ErrorType, ErrorSeverity } from './errorHandler';\n\n// Logger utility to replace console usage with proper error handling\nexport class Logger {\n  private static isDevelopment = process.env.NODE_ENV === 'development';\n  private static isProduction = process.env.NODE_ENV === 'production';\n\n  // Error logging\n  static error(message: string, error?: Error | any, context?: string): void {\n    if (error instanceof Error) {\n      errorHandler.handle(error, context || 'Logger');\n    } else {\n      errorHandler.handle(new Error(message), context || 'Logger');\n    }\n\n    // Still log to console in development for debugging\n    if (this.isDevelopment) {\n      console.error(`[${context || 'Logger'}] ${message}`, error);\n    }\n  }\n\n  // Warning logging\n  static warn(message: string, context?: string, details?: any): void {\n    const warningError = new Error(message);\n    errorHandler.handle(warningError, context || 'Logger');\n\n    if (this.isDevelopment) {\n      console.warn(`[${context || 'Logger'}] ${message}`, details);\n    }\n  }\n\n  // Info logging (for important events)\n  static info(message: string, context?: string, details?: any): void {\n    // Only log to console in development, or to external service in production\n    if (this.isDevelopment) {\n      console.log(`[${context || 'Logger'}] ${message}`, details);\n    } else if (this.isProduction) {\n      // In production, you might want to log to an external service\n      // For now, we'll just store it internally\n      this.logToService('info', message, context, details);\n    }\n  }\n\n  // Debug logging (only in development)\n  static debug(message: string, context?: string, details?: any): void {\n    if (this.isDevelopment) {\n      console.log(`[DEBUG][${context || 'Logger'}] ${message}`, details);\n    }\n  }\n\n  // Trading-specific logging\n  static trading(message: string, details?: any, context?: string): void {\n    const tradingError = new Error(message);\n    errorHandler.handle(tradingError, context || 'Trading');\n\n    if (this.isDevelopment) {\n      console.log(`[TRADING][${context || 'Trading'}] ${message}`, details);\n    }\n  }\n\n  // Performance logging\n  static performance(operation: string, duration: number, context?: string): void {\n    const message = `${operation} completed in ${duration}ms`;\n    \n    if (duration > 1000) {\n      // Log slow operations as warnings\n      this.warn(`Slow operation: ${message}`, context || 'Performance');\n    } else {\n      this.info(message, context || 'Performance');\n    }\n  }\n\n  // User action logging\n  static userAction(action: string, userId?: string, details?: any): void {\n    const context = userId ? `User-${userId}` : 'User';\n    this.info(`User action: ${action}`, context, details);\n  }\n\n  // API call logging\n  static apiCall(method: string, url: string, status: number, duration: number): void {\n    const message = `${method} ${url} - ${status} (${duration}ms)`;\n    \n    if (status >= 400) {\n      this.error(`API Error: ${message}`, undefined, 'API');\n    } else if (duration > 2000) {\n      this.warn(`Slow API call: ${message}`, 'API');\n    } else {\n      this.debug(message, 'API');\n    }\n  }\n\n  // Private method to log to external service (placeholder)\n  private static logToService(level: string, message: string, context?: string, details?: any): void {\n    // In a real application, you would send this to your logging service\n    // For now, we'll just store it in memory or localStorage\n    try {\n      const logEntry = {\n        level,\n        message,\n        context,\n        details,\n        timestamp: new Date().toISOString(),\n        userAgent: typeof window !== 'undefined' ? window.navigator.userAgent : 'server',\n        url: typeof window !== 'undefined' ? window.location.href : 'server'\n      };\n\n      // Store in localStorage for now (in production, send to logging service)\n      if (typeof window !== 'undefined' && window.localStorage) {\n        const logs = JSON.parse(localStorage.getItem('app_logs') || '[]');\n        logs.push(logEntry);\n        \n        // Keep only last 100 logs to prevent storage overflow\n        if (logs.length > 100) {\n          logs.splice(0, logs.length - 100);\n        }\n        \n        localStorage.setItem('app_logs', JSON.stringify(logs));\n      }\n    } catch (error) {\n      // Fallback to console if logging service fails\n      if (this.isDevelopment) {\n        console.error('Failed to log to service:', error);\n      }\n    }\n  }\n\n  // Method to retrieve logs (useful for debugging)\n  static getLogs(): any[] {\n    try {\n      if (typeof window !== 'undefined' && window.localStorage) {\n        return JSON.parse(localStorage.getItem('app_logs') || '[]');\n      }\n    } catch (error) {\n      this.error('Failed to retrieve logs', error as Error, 'Logger');\n    }\n    return [];\n  }\n\n  // Method to clear logs\n  static clearLogs(): void {\n    try {\n      if (typeof window !== 'undefined' && window.localStorage) {\n        localStorage.removeItem('app_logs');\n      }\n    } catch (error) {\n      this.error('Failed to clear logs', error as Error, 'Logger');\n    }\n  }\n}\n\n// Convenience exports\nexport const logger = Logger;\nexport default Logger;\n\n// Hook for React components\nexport function useLogger() {\n  return {\n    error: Logger.error,\n    warn: Logger.warn,\n    info: Logger.info,\n    debug: Logger.debug,\n    trading: Logger.trading,\n    performance: Logger.performance,\n    userAction: Logger.userAction,\n    apiCall: Logger.apiCall,\n    getLogs: Logger.getLogs,\n    clearLogs: Logger.clearLogs\n  };\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 581, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/progress.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\ninterface ProgressProps extends React.HTMLAttributes<HTMLDivElement> {\n  value?: number\n}\n\nconst Progress = React.forwardRef<HTMLDivElement, ProgressProps>(\n  ({ className, value = 0, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative h-4 w-full overflow-hidden rounded-full bg-gray-200 dark:bg-gray-700\",\n        className\n      )}\n      {...props}\n    >\n      <div\n        className=\"h-full bg-blue-600 transition-all duration-300 ease-in-out\"\n        style={{ width: `${Math.min(100, Math.max(0, value))}%` }}\n      />\n    </div>\n  )\n)\nProgress.displayName = \"Progress\"\n\nexport { Progress }"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAMA,MAAM,yBAAW,2KAAgB,MAC/B,QAAqC;QAApC,EAAE,SAAS,EAAE,QAAQ,CAAC,EAAE,GAAG,OAAO;yBACjC,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,iFACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC;YACC,WAAU;YACV,OAAO;gBAAE,OAAO,AAAC,GAAoC,OAAlC,KAAK,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,GAAG,SAAQ;YAAG;;;;;;;;;;;;;AAKhE,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 626, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAKA,MAAM,sBAAQ,2KAAgB,MAC5B,QAAgC;QAA/B,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO;IAC5B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,IAAA,4HAAE,EACX,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 662, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/label.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Label = React.forwardRef<\n  HTMLLabelElement,\n  React.LabelHTMLAttributes<HTMLLabelElement>\n>(({ className, ...props }, ref) => (\n  <label\n    ref={ref}\n    className={cn(\n      \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n      className\n    )}\n    {...props}\n  />\n))\nLabel.displayName = \"Label\"\n\nexport { Label }"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAEA,MAAM,sBAAQ,2KAAgB,MAG5B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,8FACA;QAED,GAAG,KAAK;;;;;;;;AAGb,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 697, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/switch.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\ninterface SwitchProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'type'> {\n  checked?: boolean\n  onCheckedChange?: (checked: boolean) => void\n}\n\nconst Switch = React.forwardRef<HTMLInputElement, SwitchProps>(\n  ({ className, checked, onCheckedChange, onChange, ...props }, ref) => {\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      onCheckedChange?.(event.target.checked)\n      onChange?.(event)\n    }\n\n    return (\n      <label className={cn(\"relative inline-flex items-center cursor-pointer\", className)}>\n        <input\n          type=\"checkbox\"\n          ref={ref}\n          checked={checked}\n          onChange={handleChange}\n          className=\"sr-only peer\"\n          {...props}\n        />\n        <div className=\"relative w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\n      </label>\n    )\n  }\n)\nSwitch.displayName = \"Switch\"\n\nexport { Switch }"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAOA,MAAM,uBAAS,2KAAgB,MAC7B,QAA8D;QAA7D,EAAE,SAAS,EAAE,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,GAAG,OAAO;IAC1D,MAAM,eAAe,CAAC;QACpB,4BAAA,sCAAA,gBAAkB,MAAM,MAAM,CAAC,OAAO;QACtC,qBAAA,+BAAA,SAAW;IACb;IAEA,qBACE,6LAAC;QAAM,WAAW,IAAA,4HAAE,EAAC,oDAAoD;;0BACvE,6LAAC;gBACC,MAAK;gBACL,KAAK;gBACL,SAAS;gBACT,UAAU;gBACV,WAAU;gBACT,GAAG,KAAK;;;;;;0BAEX,6LAAC;gBAAI,WAAU;;;;;;;;;;;;AAGrB;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 755, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;;;;;AAEA,MAAM,gBAAgB,IAAA,0KAAG,EACvB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,2KAAgB,MAG5B,QAAmC;QAAlC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO;yBACjC,6LAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,IAAA,4HAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,2KAAgB,OAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,gDAAgD;QAC7D,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,2KAAgB,OAGvC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 842, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/trading/LiveTradingControls.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { logger } from '@/lib/logger';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Switch } from '@/components/ui/switch';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport {\n  Shield,\n  AlertTriangle,\n  Settings,\n  Play,\n  Pause,\n  Square,\n  TrendingUp,\n  TrendingDown,\n  DollarSign,\n  Target,\n  Clock,\n  Users,\n  Activity,\n  Zap,\n  CheckCircle,\n  XCircle,\n  Info\n} from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\n// Types\ninterface RiskLimits {\n  maxDailyLoss: number;\n  maxPositionSize: number;\n  maxPortfolioRisk: number;\n  maxDailyTrades: number;\n  stopLossPercentage: number;\n  takeProfitPercentage: number;\n  maxLeverage: number;\n  allowedSymbols: string[];\n  tradingHours: {\n    start: string;\n    end: string;\n    timezone: string;\n  };\n}\n\ninterface RiskMetrics {\n  portfolioValue: number;\n  dailyPnL: number;\n  dailyTradeCount: number;\n  currentRisk: number;\n  maxRiskReached: boolean;\n  riskUtilization: number;\n}\n\ninterface TradingStatus {\n  liveTradingEnabled: boolean;\n  emergencyStop: boolean;\n  riskLevel: 'low' | 'medium' | 'high' | 'critical';\n  connected: boolean;\n  lastUpdate: string;\n}\n\nconst LiveTradingControls: React.FC = () => {\n  // State\n  const [tradingStatus, setTradingStatus] = useState<TradingStatus>({\n    liveTradingEnabled: false,\n    emergencyStop: false,\n    riskLevel: 'low',\n    connected: false,\n    lastUpdate: new Date().toISOString()\n  });\n  \n  const [riskLimits, setRiskLimits] = useState<RiskLimits>({\n    maxDailyLoss: 1000,\n    maxPositionSize: 10000,\n    maxPortfolioRisk: 0.02,\n    maxDailyTrades: 50,\n    stopLossPercentage: 0.05,\n    takeProfitPercentage: 0.10,\n    maxLeverage: 1.0,\n    allowedSymbols: ['AAPL', 'GOOGL', 'MSFT', 'TSLA', 'AMZN', 'META', 'NVDA', 'NFLX'],\n    tradingHours: {\n      start: '09:30',\n      end: '16:00',\n      timezone: 'America/New_York'\n    }\n  });\n  \n  const [riskMetrics, setRiskMetrics] = useState<RiskMetrics>({\n    portfolioValue: 125750.50,\n    dailyPnL: 1250.75,\n    dailyTradeCount: 12,\n    currentRisk: 0.015,\n    maxRiskReached: false,\n    riskUtilization: 0.24\n  });\n  \n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedTab, setSelectedTab] = useState('status');\n  const [pendingChanges, setPendingChanges] = useState(false);\n\n  // Mock real-time updates\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setRiskMetrics(prev => ({\n        ...prev,\n        dailyPnL: prev.dailyPnL + (Math.random() - 0.5) * 50,\n        currentRisk: Math.max(0, prev.currentRisk + (Math.random() - 0.5) * 0.002),\n        riskUtilization: Math.min(1, Math.max(0, prev.riskUtilization + (Math.random() - 0.5) * 0.05))\n      }));\n      \n      setTradingStatus(prev => ({\n        ...prev,\n        lastUpdate: new Date().toISOString(),\n        connected: true\n      }));\n    }, 3000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Handlers\n  const handleToggleLiveTrading = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      setTradingStatus(prev => ({\n        ...prev,\n        liveTradingEnabled: !prev.liveTradingEnabled,\n        emergencyStop: false\n      }));\n    } catch (error) {\n      logger.error('Failed to toggle live trading', error, 'LiveTradingControls');\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const handleEmergencyStop = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      setTradingStatus(prev => ({\n        ...prev,\n        liveTradingEnabled: false,\n        emergencyStop: true,\n        riskLevel: 'critical'\n      }));\n    } catch (error) {\n      logger.error('Failed to execute emergency stop', error, 'LiveTradingControls');\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const handleRemoveEmergencyStop = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      setTradingStatus(prev => ({\n        ...prev,\n        emergencyStop: false,\n        riskLevel: 'low'\n      }));\n    } catch (error) {\n      logger.error('Failed to remove emergency stop', error, 'LiveTradingControls');\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const handleUpdateRiskLimits = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      setPendingChanges(false);\n      // In real implementation, make API call to update risk limits\n    } catch (error) {\n      logger.error('Failed to update risk limits', error, 'LiveTradingControls');\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const handleRiskLimitChange = useCallback((field: keyof RiskLimits, value: any) => {\n    setRiskLimits(prev => ({ ...prev, [field]: value }));\n    setPendingChanges(true);\n  }, []);\n\n  const formatCurrency = (value: number): string => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2\n    }).format(value);\n  };\n\n  const formatPercent = (value: number): string => {\n    return `${(value * 100).toFixed(2)}%`;\n  };\n\n  const getRiskLevelColor = (level: string) => {\n    switch (level) {\n      case 'low': return 'text-green-600';\n      case 'medium': return 'text-yellow-600';\n      case 'high': return 'text-orange-600';\n      case 'critical': return 'text-red-600';\n      default: return 'text-gray-600';\n    }\n  };\n\n  const getRiskLevelBadgeVariant = (level: string) => {\n    switch (level) {\n      case 'low': return 'default';\n      case 'medium': return 'secondary';\n      case 'high': return 'destructive';\n      case 'critical': return 'destructive';\n      default: return 'secondary';\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Status Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"flex items-center space-x-2\">\n            <div className={cn(\n              \"w-3 h-3 rounded-full\",\n              tradingStatus.connected ? \"bg-green-500 animate-pulse\" : \"bg-red-500\"\n            )} />\n            <span className=\"text-sm font-medium\">\n              {tradingStatus.connected ? 'Connected' : 'Disconnected'}\n            </span>\n          </div>\n          \n          <Badge variant={tradingStatus.liveTradingEnabled ? 'default' : 'secondary'}>\n            {tradingStatus.liveTradingEnabled ? 'Live Trading ON' : 'Live Trading OFF'}\n          </Badge>\n          \n          <Badge variant={getRiskLevelBadgeVariant(tradingStatus.riskLevel)}>\n            Risk: {tradingStatus.riskLevel.toUpperCase()}\n          </Badge>\n        </div>\n\n        <div className=\"text-sm text-muted-foreground\">\n          Last update: {new Date(tradingStatus.lastUpdate).toLocaleTimeString()}\n        </div>\n      </div>\n\n      {/* Emergency Alert */}\n      {tradingStatus.emergencyStop && (\n        <Alert className=\"border-red-200 bg-red-50 dark:bg-red-900/20\">\n          <AlertTriangle className=\"h-4 w-4 text-red-600\" />\n          <AlertDescription className=\"text-red-800 dark:text-red-200\">\n            Emergency stop is active. All trading has been halted. Click &quot;Remove Emergency Stop&quot; to resume trading.\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* Main Controls */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm font-medium flex items-center\">\n              <Play className=\"h-4 w-4 mr-2\" />\n              Trading Control\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-3\">\n            <Button\n              onClick={handleToggleLiveTrading}\n              disabled={isLoading || tradingStatus.emergencyStop}\n              className={cn(\n                \"w-full\",\n                tradingStatus.liveTradingEnabled ? \"bg-red-600 hover:bg-red-700\" : \"bg-green-600 hover:bg-green-700\"\n              )}\n            >\n              {isLoading ? (\n                <Activity className=\"h-4 w-4 mr-2 animate-spin\" />\n              ) : tradingStatus.liveTradingEnabled ? (\n                <Pause className=\"h-4 w-4 mr-2\" />\n              ) : (\n                <Play className=\"h-4 w-4 mr-2\" />\n              )}\n              {tradingStatus.liveTradingEnabled ? 'Stop Trading' : 'Start Trading'}\n            </Button>\n            \n            <Button\n              onClick={tradingStatus.emergencyStop ? handleRemoveEmergencyStop : handleEmergencyStop}\n              disabled={isLoading}\n              variant={tradingStatus.emergencyStop ? \"default\" : \"destructive\"}\n              className=\"w-full\"\n            >\n              {isLoading ? (\n                <Activity className=\"h-4 w-4 mr-2 animate-spin\" />\n              ) : tradingStatus.emergencyStop ? (\n                <CheckCircle className=\"h-4 w-4 mr-2\" />\n              ) : (\n                <Square className=\"h-4 w-4 mr-2\" />\n              )}\n              {tradingStatus.emergencyStop ? 'Remove Emergency Stop' : 'Emergency Stop'}\n            </Button>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm font-medium flex items-center\">\n              <Shield className=\"h-4 w-4 mr-2\" />\n              Risk Status\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-3\">\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between text-sm\">\n                <span>Risk Utilization</span>\n                <span className={getRiskLevelColor(tradingStatus.riskLevel)}>\n                  {formatPercent(riskMetrics.riskUtilization)}\n                </span>\n              </div>\n              <Progress \n                value={riskMetrics.riskUtilization * 100} \n                className=\"h-2\"\n              />\n            </div>\n            \n            <div className=\"grid grid-cols-2 gap-2 text-sm\">\n              <div>\n                <span className=\"text-muted-foreground\">Daily Trades</span>\n                <div className=\"font-medium\">{riskMetrics.dailyTradeCount}/{riskLimits.maxDailyTrades}</div>\n              </div>\n              <div>\n                <span className=\"text-muted-foreground\">Portfolio Risk</span>\n                <div className=\"font-medium\">{formatPercent(riskMetrics.currentRisk)}</div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm font-medium flex items-center\">\n              <DollarSign className=\"h-4 w-4 mr-2\" />\n              Daily P&L\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-3\">\n            <div className={cn(\n              \"text-2xl font-bold\",\n              riskMetrics.dailyPnL >= 0 ? \"text-green-600\" : \"text-red-600\"\n            )}>\n              {formatCurrency(riskMetrics.dailyPnL)}\n            </div>\n            \n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between text-sm\">\n                <span>Loss Limit</span>\n                <span>{formatCurrency(riskLimits.maxDailyLoss)}</span>\n              </div>\n              <Progress \n                value={Math.min(100, (Math.abs(riskMetrics.dailyPnL) / riskLimits.maxDailyLoss) * 100)} \n                className=\"h-2\"\n              />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Detailed Controls */}\n      <Tabs value={selectedTab} onValueChange={setSelectedTab} className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"status\">Status</TabsTrigger>\n          <TabsTrigger value=\"limits\">Risk Limits</TabsTrigger>\n          <TabsTrigger value=\"settings\">Settings</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"status\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Current Risk Metrics</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label className=\"text-sm text-muted-foreground\">Portfolio Value</Label>\n                    <div className=\"text-lg font-semibold\">{formatCurrency(riskMetrics.portfolioValue)}</div>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label className=\"text-sm text-muted-foreground\">Daily P&L</Label>\n                    <div className={cn(\n                      \"text-lg font-semibold\",\n                      riskMetrics.dailyPnL >= 0 ? \"text-green-600\" : \"text-red-600\"\n                    )}>\n                      {formatCurrency(riskMetrics.dailyPnL)}\n                    </div>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label className=\"text-sm text-muted-foreground\">Daily Trades</Label>\n                    <div className=\"text-lg font-semibold\">{riskMetrics.dailyTradeCount}</div>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label className=\"text-sm text-muted-foreground\">Current Risk</Label>\n                    <div className=\"text-lg font-semibold\">{formatPercent(riskMetrics.currentRisk)}</div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Trading Hours</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm text-muted-foreground\">Market Hours</span>\n                    <span className=\"text-sm font-medium\">\n                      {riskLimits.tradingHours.start} - {riskLimits.tradingHours.end}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm text-muted-foreground\">Timezone</span>\n                    <span className=\"text-sm font-medium\">{riskLimits.tradingHours.timezone}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm text-muted-foreground\">Current Time</span>\n                    <span className=\"text-sm font-medium\">\n                      {new Date().toLocaleTimeString('en-US', {\n                        timeZone: riskLimits.tradingHours.timezone,\n                        hour12: false\n                      })}\n                    </span>\n                  </div>\n                </div>\n                \n                <div className=\"pt-2\">\n                  <Badge variant=\"default\" className=\"w-full justify-center\">\n                    <Clock className=\"h-3 w-3 mr-1\" />\n                    Market Open\n                  </Badge>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"limits\" className=\"space-y-4\">\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between\">\n              <CardTitle>Risk Limits Configuration</CardTitle>\n              {pendingChanges && (\n                <Button onClick={handleUpdateRiskLimits} disabled={isLoading} size=\"sm\">\n                  {isLoading ? <Activity className=\"h-4 w-4 mr-2 animate-spin\" /> : null}\n                  Save Changes\n                </Button>\n              )}\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div className=\"space-y-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"maxDailyLoss\">Max Daily Loss ($)</Label>\n                    <Input\n                      id=\"maxDailyLoss\"\n                      type=\"number\"\n                      value={riskLimits.maxDailyLoss}\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleRiskLimitChange('maxDailyLoss', parseFloat(e.target.value))}\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"maxPositionSize\">Max Position Size ($)</Label>\n                    <Input\n                      id=\"maxPositionSize\"\n                      type=\"number\"\n                      value={riskLimits.maxPositionSize}\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleRiskLimitChange('maxPositionSize', parseFloat(e.target.value))}\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"maxPortfolioRisk\">Max Portfolio Risk (%)</Label>\n                    <Input\n                      id=\"maxPortfolioRisk\"\n                      type=\"number\"\n                      step=\"0.01\"\n                      value={riskLimits.maxPortfolioRisk * 100}\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleRiskLimitChange('maxPortfolioRisk', parseFloat(e.target.value) / 100)}\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"maxDailyTrades\">Max Daily Trades</Label>\n                    <Input\n                      id=\"maxDailyTrades\"\n                      type=\"number\"\n                      value={riskLimits.maxDailyTrades}\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleRiskLimitChange('maxDailyTrades', parseInt(e.target.value))}\n                    />\n                  </div>\n                </div>\n                \n                <div className=\"space-y-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"stopLossPercentage\">Stop Loss (%)</Label>\n                    <Input\n                      id=\"stopLossPercentage\"\n                      type=\"number\"\n                      step=\"0.01\"\n                      value={riskLimits.stopLossPercentage * 100}\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleRiskLimitChange('stopLossPercentage', parseFloat(e.target.value) / 100)}\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"takeProfitPercentage\">Take Profit (%)</Label>\n                    <Input\n                      id=\"takeProfitPercentage\"\n                      type=\"number\"\n                      step=\"0.01\"\n                      value={riskLimits.takeProfitPercentage * 100}\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleRiskLimitChange('takeProfitPercentage', parseFloat(e.target.value) / 100)}\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"maxLeverage\">Max Leverage</Label>\n                    <Input\n                      id=\"maxLeverage\"\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={riskLimits.maxLeverage}\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleRiskLimitChange('maxLeverage', parseFloat(e.target.value))}\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label>Trading Hours</Label>\n                    <div className=\"grid grid-cols-2 gap-2\">\n                      <Input\n                        placeholder=\"Start (HH:MM)\"\n                        value={riskLimits.tradingHours.start}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleRiskLimitChange('tradingHours', {\n                          ...riskLimits.tradingHours,\n                          start: e.target.value\n                        })}\n                      />\n                      <Input\n                        placeholder=\"End (HH:MM)\"\n                        value={riskLimits.tradingHours.end}\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => handleRiskLimitChange('tradingHours', {\n                          ...riskLimits.tradingHours,\n                          end: e.target.value\n                        })}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"settings\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Advanced Settings</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label>Auto Risk Management</Label>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Automatically adjust position sizes based on risk limits\n                    </p>\n                  </div>\n                  <Switch defaultChecked />\n                </div>\n                \n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label>Emergency Stop on Loss Limit</Label>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Automatically trigger emergency stop when daily loss limit is reached\n                    </p>\n                  </div>\n                  <Switch defaultChecked />\n                </div>\n                \n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label>Real-time Risk Monitoring</Label>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Monitor risk levels in real-time and send alerts\n                    </p>\n                  </div>\n                  <Switch defaultChecked />\n                </div>\n                \n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label>Trading Hours Enforcement</Label>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Prevent trading outside of configured hours\n                    </p>\n                  </div>\n                  <Switch defaultChecked />\n                </div>\n              </div>\n              \n              <div className=\"pt-4 border-t\">\n                <div className=\"space-y-2\">\n                  <Label>Allowed Symbols</Label>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {riskLimits.allowedSymbols.map((symbol) => (\n                      <Badge key={symbol} variant=\"secondary\">\n                        {symbol}\n                      </Badge>\n                    ))}\n                  </div>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Only these symbols are allowed for live trading\n                  </p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default LiveTradingControls;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2476, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/trading/LiveTradingDashboard.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport {\n  Activity,\n  TrendingUp,\n  TrendingDown,\n  DollarSign,\n  Target,\n  AlertTriangle,\n  Play,\n  Pause,\n  Square,\n  RefreshCw,\n  Eye,\n  EyeOff\n} from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { logger } from '@/lib/logger';\nimport LiveTradingControls from './LiveTradingControls';\n\n// Types\ninterface LivePrice {\n  symbol: string;\n  price: number;\n  change: number;\n  changePercent: number;\n  volume: number;\n  timestamp: number;\n}\n\ninterface Position {\n  symbol: string;\n  quantity: number;\n  averagePrice: number;\n  currentPrice: number;\n  marketValue: number;\n  unrealizedPnL: number;\n  unrealizedPnLPercent: number;\n  dayPnL: number;\n  dayPnLPercent: number;\n  weight: number;\n}\n\ninterface Portfolio {\n  id: string;\n  name: string;\n  totalValue: number;\n  cashBalance: number;\n  investedValue: number;\n  totalPnL: number;\n  dayPnL: number;\n  totalReturn: number;\n  dayReturn: number;\n}\n\ninterface Order {\n  id: string;\n  symbol: string;\n  side: 'buy' | 'sell';\n  type: string;\n  quantity: number;\n  price?: number;\n  status: string;\n  filledQuantity: number;\n  createdAt: string;\n}\n\ninterface LiveTradingStatus {\n  liveTradingEnabled: boolean;\n  websocketEnabled: boolean;\n  connected: boolean;\n}\n\nconst LiveTradingDashboard: React.FC = () => {\n  // State\n  const [isConnected, setIsConnected] = useState(false);\n  const [liveTradingStatus, setLiveTradingStatus] = useState<LiveTradingStatus>({\n    liveTradingEnabled: false,\n    websocketEnabled: false,\n    connected: false\n  });\n  const [portfolio, setPortfolio] = useState<Portfolio | null>(null);\n  const [positions, setPositions] = useState<Position[]>([]);\n  const [orders, setOrders] = useState<Order[]>([]);\n  const [marketData, setMarketData] = useState<LivePrice[]>([]);\n  const [selectedTab, setSelectedTab] = useState('overview');\n  const [showSensitiveData, setShowSensitiveData] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Mock data for demonstration\n  useEffect(() => {\n    // Simulate loading data\n    setTimeout(() => {\n      setPortfolio({\n        id: 'portfolio-1',\n        name: 'Main Trading Portfolio',\n        totalValue: 125750.50,\n        cashBalance: 25750.50,\n        investedValue: 100000.00,\n        totalPnL: 5750.50,\n        dayPnL: 1250.75,\n        totalReturn: 5.75,\n        dayReturn: 1.01\n      });\n\n      setPositions([\n        {\n          symbol: 'AAPL',\n          quantity: 100,\n          averagePrice: 175.80,\n          currentPrice: 178.25,\n          marketValue: 17825.00,\n          unrealizedPnL: 245.00,\n          unrealizedPnLPercent: 1.39,\n          dayPnL: 125.00,\n          dayPnLPercent: 0.71,\n          weight: 14.17\n        },\n        {\n          symbol: 'TSLA',\n          quantity: 50,\n          averagePrice: 245.30,\n          currentPrice: 248.90,\n          marketValue: 12445.00,\n          unrealizedPnL: 180.00,\n          unrealizedPnLPercent: 1.47,\n          dayPnL: -85.50,\n          dayPnLPercent: -0.68,\n          weight: 9.89\n        },\n        {\n          symbol: 'MSFT',\n          quantity: 75,\n          averagePrice: 420.50,\n          currentPrice: 425.80,\n          marketValue: 31935.00,\n          unrealizedPnL: 397.50,\n          unrealizedPnLPercent: 1.26,\n          dayPnL: 225.00,\n          dayPnLPercent: 0.71,\n          weight: 25.40\n        }\n      ]);\n\n      setOrders([\n        {\n          id: 'ORD_001',\n          symbol: 'GOOGL',\n          side: 'buy',\n          type: 'limit',\n          quantity: 10,\n          price: 2800.00,\n          status: 'pending',\n          filledQuantity: 0,\n          createdAt: new Date().toISOString()\n        },\n        {\n          id: 'ORD_002',\n          symbol: 'AAPL',\n          side: 'sell',\n          type: 'limit',\n          quantity: 25,\n          price: 180.00,\n          status: 'partially_filled',\n          filledQuantity: 10,\n          createdAt: new Date(Date.now() - 300000).toISOString()\n        }\n      ]);\n\n      setMarketData([\n        { symbol: 'AAPL', price: 178.25, change: 2.45, changePercent: 1.39, volume: 45678900, timestamp: Date.now() },\n        { symbol: 'TSLA', price: 248.90, change: -1.70, changePercent: -0.68, volume: 23456789, timestamp: Date.now() },\n        { symbol: 'MSFT', price: 425.80, change: 5.30, changePercent: 1.26, volume: 34567890, timestamp: Date.now() }\n      ]);\n\n      setIsConnected(true);\n      setLiveTradingStatus({\n        liveTradingEnabled: true,\n        websocketEnabled: true,\n        connected: true\n      });\n      setIsLoading(false);\n    }, 1000);\n\n    // Simulate real-time updates\n    const interval = setInterval(() => {\n      setMarketData(prev => prev.map(item => ({\n        ...item,\n        price: item.price + (Math.random() - 0.5) * 2,\n        change: item.change + (Math.random() - 0.5) * 0.5,\n        changePercent: item.changePercent + (Math.random() - 0.5) * 0.2,\n        timestamp: Date.now()\n      })));\n    }, 2000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Handlers\n  const handleToggleLiveTrading = useCallback(async () => {\n    try {\n      const newStatus = !liveTradingStatus.liveTradingEnabled;\n      // In real implementation, make API call here\n      setLiveTradingStatus(prev => ({ ...prev, liveTradingEnabled: newStatus }));\n    } catch (error) {\n      logger.error('Failed to toggle live trading', error, 'LiveTradingDashboard');\n    }\n  }, [liveTradingStatus.liveTradingEnabled]);\n\n  const handleEmergencyStop = useCallback(async () => {\n    try {\n      // In real implementation, make API call here\n      setLiveTradingStatus(prev => ({ ...prev, liveTradingEnabled: false }));\n      // Cancel all pending orders\n      setOrders(prev => prev.map(order => \n        order.status === 'pending' ? { ...order, status: 'cancelled' } : order\n      ));\n    } catch (error) {\n      logger.error('Failed to execute emergency stop', error, 'LiveTradingDashboard');\n    }\n  }, []);\n\n  const formatCurrency = (value: number): string => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2\n    }).format(value);\n  };\n\n  const formatPercent = (value: number): string => {\n    return `${value >= 0 ? '+' : ''}${value.toFixed(2)}%`;\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-96\">\n        <RefreshCw className=\"h-8 w-8 animate-spin text-blue-500\" />\n        <span className=\"ml-2 text-lg\">Loading live trading dashboard...</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header with Status and Controls */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"flex items-center space-x-2\">\n            <div className={cn(\n              \"w-3 h-3 rounded-full\",\n              isConnected ? \"bg-green-500 animate-pulse\" : \"bg-red-500\"\n            )} />\n            <span className=\"text-sm font-medium\">\n              {isConnected ? 'Connected' : 'Disconnected'}\n            </span>\n          </div>\n          \n          <Badge variant={liveTradingStatus.liveTradingEnabled ? 'default' : 'secondary'}>\n            {liveTradingStatus.liveTradingEnabled ? 'Live Trading ON' : 'Live Trading OFF'}\n          </Badge>\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => setShowSensitiveData(!showSensitiveData)}\n          >\n            {showSensitiveData ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n          </Button>\n          \n          <Button\n            variant={liveTradingStatus.liveTradingEnabled ? 'destructive' : 'default'}\n            size=\"sm\"\n            onClick={handleToggleLiveTrading}\n          >\n            {liveTradingStatus.liveTradingEnabled ? (\n              <><Pause className=\"h-4 w-4 mr-2\" />Disable</>\n            ) : (\n              <><Play className=\"h-4 w-4 mr-2\" />Enable</>\n            )}\n          </Button>\n          \n          <Button\n            variant=\"destructive\"\n            size=\"sm\"\n            onClick={handleEmergencyStop}\n            disabled={!liveTradingStatus.liveTradingEnabled}\n          >\n            <Square className=\"h-4 w-4 mr-2\" />\n            Emergency Stop\n          </Button>\n        </div>\n      </div>\n\n      {/* Portfolio Overview Cards */}\n      {portfolio && (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Total Value</CardTitle>\n              <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">\n                {showSensitiveData ? formatCurrency(portfolio.totalValue) : '••••••'}\n              </div>\n              <p className=\"text-xs text-muted-foreground\">\n                Cash: {showSensitiveData ? formatCurrency(portfolio.cashBalance) : '••••••'}\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Total P&L</CardTitle>\n              <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className={cn(\n                \"text-2xl font-bold\",\n                portfolio.totalPnL >= 0 ? \"text-green-600\" : \"text-red-600\"\n              )}>\n                {showSensitiveData ? formatCurrency(portfolio.totalPnL) : '••••••'}\n              </div>\n              <p className={cn(\n                \"text-xs\",\n                portfolio.totalReturn >= 0 ? \"text-green-600\" : \"text-red-600\"\n              )}>\n                {showSensitiveData ? formatPercent(portfolio.totalReturn) : '••••••'}\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Day P&L</CardTitle>\n              <Activity className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className={cn(\n                \"text-2xl font-bold\",\n                portfolio.dayPnL >= 0 ? \"text-green-600\" : \"text-red-600\"\n              )}>\n                {showSensitiveData ? formatCurrency(portfolio.dayPnL) : '••••••'}\n              </div>\n              <p className={cn(\n                \"text-xs\",\n                portfolio.dayReturn >= 0 ? \"text-green-600\" : \"text-red-600\"\n              )}>\n                {showSensitiveData ? formatPercent(portfolio.dayReturn) : '••••••'}\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Positions</CardTitle>\n              <Target className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">{positions.length}</div>\n              <p className=\"text-xs text-muted-foreground\">\n                Invested: {showSensitiveData ? formatCurrency(portfolio.investedValue) : '••••••'}\n              </p>\n            </CardContent>\n          </Card>\n        </div>\n      )}\n\n      {/* Main Content Tabs */}\n      <Tabs value={selectedTab} onValueChange={setSelectedTab} className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"overview\">Overview</TabsTrigger>\n          <TabsTrigger value=\"positions\">Positions</TabsTrigger>\n          <TabsTrigger value=\"orders\">Orders</TabsTrigger>\n          <TabsTrigger value=\"controls\">Controls</TabsTrigger>\n          <TabsTrigger value=\"market\">Market Data</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"overview\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n            {/* Top Positions */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Top Positions</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {positions.slice(0, 5).map((position) => (\n                    <div key={position.symbol} className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-3\">\n                        <div className=\"font-medium\">{position.symbol}</div>\n                        <div className=\"text-sm text-muted-foreground\">\n                          {position.quantity} shares\n                        </div>\n                      </div>\n                      <div className=\"text-right\">\n                        <div className={cn(\n                          \"font-medium\",\n                          position.unrealizedPnL >= 0 ? \"text-green-600\" : \"text-red-600\"\n                        )}>\n                          {showSensitiveData ? formatCurrency(position.unrealizedPnL) : '••••••'}\n                        </div>\n                        <div className={cn(\n                          \"text-sm\",\n                          position.unrealizedPnLPercent >= 0 ? \"text-green-600\" : \"text-red-600\"\n                        )}>\n                          {showSensitiveData ? formatPercent(position.unrealizedPnLPercent) : '••••••'}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Recent Orders */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Recent Orders</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {orders.slice(0, 5).map((order) => (\n                    <div key={order.id} className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-3\">\n                        <Badge variant={order.side === 'buy' ? 'default' : 'destructive'}>\n                          {order.side.toUpperCase()}\n                        </Badge>\n                        <div>\n                          <div className=\"font-medium\">{order.symbol}</div>\n                          <div className=\"text-sm text-muted-foreground\">\n                            {order.quantity} @ {order.price ? formatCurrency(order.price) : 'Market'}\n                          </div>\n                        </div>\n                      </div>\n                      <Badge variant={order.status === 'filled' ? 'default' : \n                                   order.status === 'cancelled' ? 'destructive' : 'secondary'}>\n                        {order.status}\n                      </Badge>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"positions\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>All Positions</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full\">\n                  <thead>\n                    <tr className=\"border-b\">\n                      <th className=\"text-left p-2\">Symbol</th>\n                      <th className=\"text-right p-2\">Quantity</th>\n                      <th className=\"text-right p-2\">Avg Price</th>\n                      <th className=\"text-right p-2\">Current Price</th>\n                      <th className=\"text-right p-2\">Market Value</th>\n                      <th className=\"text-right p-2\">P&L</th>\n                      <th className=\"text-right p-2\">Day P&L</th>\n                      <th className=\"text-right p-2\">Weight</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {positions.map((position) => (\n                      <tr key={position.symbol} className=\"border-b\">\n                        <td className=\"p-2 font-medium\">{position.symbol}</td>\n                        <td className=\"p-2 text-right\">{position.quantity}</td>\n                        <td className=\"p-2 text-right\">\n                          {showSensitiveData ? formatCurrency(position.averagePrice) : '••••••'}\n                        </td>\n                        <td className=\"p-2 text-right\">\n                          {showSensitiveData ? formatCurrency(position.currentPrice) : '••••••'}\n                        </td>\n                        <td className=\"p-2 text-right\">\n                          {showSensitiveData ? formatCurrency(position.marketValue) : '••••••'}\n                        </td>\n                        <td className={cn(\n                          \"p-2 text-right\",\n                          position.unrealizedPnL >= 0 ? \"text-green-600\" : \"text-red-600\"\n                        )}>\n                          {showSensitiveData ? (\n                            <>\n                              {formatCurrency(position.unrealizedPnL)}<br />\n                              <span className=\"text-sm\">{formatPercent(position.unrealizedPnLPercent)}</span>\n                            </>\n                          ) : '••••••'}\n                        </td>\n                        <td className={cn(\n                          \"p-2 text-right\",\n                          position.dayPnL >= 0 ? \"text-green-600\" : \"text-red-600\"\n                        )}>\n                          {showSensitiveData ? (\n                            <>\n                              {formatCurrency(position.dayPnL)}<br />\n                              <span className=\"text-sm\">{formatPercent(position.dayPnLPercent)}</span>\n                            </>\n                          ) : '••••••'}\n                        </td>\n                        <td className=\"p-2 text-right\">\n                          {showSensitiveData ? `${position.weight.toFixed(1)}%` : '••••••'}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"orders\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Order Management</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full\">\n                  <thead>\n                    <tr className=\"border-b\">\n                      <th className=\"text-left p-2\">Order ID</th>\n                      <th className=\"text-left p-2\">Symbol</th>\n                      <th className=\"text-left p-2\">Side</th>\n                      <th className=\"text-right p-2\">Quantity</th>\n                      <th className=\"text-right p-2\">Price</th>\n                      <th className=\"text-right p-2\">Filled</th>\n                      <th className=\"text-left p-2\">Status</th>\n                      <th className=\"text-left p-2\">Time</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {orders.map((order) => (\n                      <tr key={order.id} className=\"border-b\">\n                        <td className=\"p-2 font-mono text-sm\">{order.id}</td>\n                        <td className=\"p-2 font-medium\">{order.symbol}</td>\n                        <td className=\"p-2\">\n                          <Badge variant={order.side === 'buy' ? 'default' : 'destructive'}>\n                            {order.side.toUpperCase()}\n                          </Badge>\n                        </td>\n                        <td className=\"p-2 text-right\">{order.quantity}</td>\n                        <td className=\"p-2 text-right\">\n                          {order.price ? formatCurrency(order.price) : 'Market'}\n                        </td>\n                        <td className=\"p-2 text-right\">{order.filledQuantity}</td>\n                        <td className=\"p-2\">\n                          <Badge variant={order.status === 'filled' ? 'default' : \n                                       order.status === 'cancelled' ? 'destructive' : 'secondary'}>\n                            {order.status}\n                          </Badge>\n                        </td>\n                        <td className=\"p-2 text-sm text-muted-foreground\">\n                          {new Date(order.createdAt).toLocaleTimeString()}\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"controls\" className=\"space-y-4\">\n          <LiveTradingControls />\n        </TabsContent>\n\n        <TabsContent value=\"market\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Live Market Data</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                {marketData.map((item) => (\n                  <Card key={item.symbol}>\n                    <CardContent className=\"p-4\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <h3 className=\"font-bold text-lg\">{item.symbol}</h3>\n                        <div className={cn(\n                          \"w-2 h-2 rounded-full animate-pulse\",\n                          \"bg-green-500\"\n                        )} />\n                      </div>\n                      <div className=\"space-y-1\">\n                        <div className=\"text-2xl font-bold\">\n                          {formatCurrency(item.price)}\n                        </div>\n                        <div className={cn(\n                          \"flex items-center space-x-1\",\n                          item.change >= 0 ? \"text-green-600\" : \"text-red-600\"\n                        )}>\n                          {item.change >= 0 ? (\n                            <TrendingUp className=\"h-4 w-4\" />\n                          ) : (\n                            <TrendingDown className=\"h-4 w-4\" />\n                          )}\n                          <span>{formatCurrency(Math.abs(item.change))}</span>\n                          <span>({formatPercent(item.changePercent)})</span>\n                        </div>\n                        <div className=\"text-sm text-muted-foreground\">\n                          Volume: {item.volume.toLocaleString()}\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default LiveTradingDashboard;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4032, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/DemoModeIndicator.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\nimport { Badge } from '@/components/ui/badge'\nimport { AlertTriangle, Play } from 'lucide-react'\nimport { useTradingMode } from '@/contexts/TradingModeContext'\nimport { cn } from '@/lib/utils'\n\ninterface DemoModeIndicatorProps {\n  className?: string\n  variant?: 'badge' | 'banner'\n}\n\nexport function DemoModeIndicator({ className, variant = 'badge' }: DemoModeIndicatorProps) {\n  const { isPaperTrading, tradingMode } = useTradingMode()\n\n  if (!isPaperTrading) {\n    return null\n  }\n\n  if (variant === 'banner') {\n    return (\n      <div className={cn(\n        'bg-orange-100 dark:bg-orange-900/20 border border-orange-200 dark:border-orange-800 rounded-lg p-3 mb-4',\n        className\n      )}>\n        <div className=\"flex items-center gap-2\">\n          <Play className=\"h-4 w-4 text-orange-600 dark:text-orange-400\" />\n          <span className=\"text-sm font-medium text-orange-800 dark:text-orange-200\">\n            Demo Mode Active\n          </span>\n          <span className=\"text-xs text-orange-600 dark:text-orange-400\">\n            • All trades are simulated • No real money involved\n          </span>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <Badge \n      variant=\"outline\" \n      className={cn(\n        'bg-orange-50 dark:bg-orange-900/20 border-orange-200 dark:border-orange-800 text-orange-700 dark:text-orange-300 font-medium',\n        className\n      )}\n    >\n      <Play className=\"h-3 w-3 mr-1\" />\n      Demo Mode\n    </Badge>\n  )\n}\n\nexport default DemoModeIndicator"],"names":[],"mappings":";;;;;;;AAGA;AACA;AACA;AACA;;;AANA;;;;;AAaO,SAAS,kBAAkB,KAAwD;QAAxD,EAAE,SAAS,EAAE,UAAU,OAAO,EAA0B,GAAxD;;IAChC,MAAM,EAAE,cAAc,EAAE,WAAW,EAAE,GAAG,IAAA,2JAAc;IAEtD,IAAI,CAAC,gBAAgB;QACnB,OAAO;IACT;IAEA,IAAI,YAAY,UAAU;QACxB,qBACE,6LAAC;YAAI,WAAW,IAAA,4HAAE,EAChB,2GACA;sBAEA,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,6MAAI;wBAAC,WAAU;;;;;;kCAChB,6LAAC;wBAAK,WAAU;kCAA2D;;;;;;kCAG3E,6LAAC;wBAAK,WAAU;kCAA+C;;;;;;;;;;;;;;;;;IAMvE;IAEA,qBACE,6LAAC,6IAAK;QACJ,SAAQ;QACR,WAAW,IAAA,4HAAE,EACX,gIACA;;0BAGF,6LAAC,6MAAI;gBAAC,WAAU;;;;;;YAAiB;;;;;;;AAIvC;GAtCgB;;QAC0B,2JAAc;;;KADxC;uCAwCD","debugId":null}},
    {"offset": {"line": 4133, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/Navigation.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter, usePathname } from 'next/navigation';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { useTheme } from '@/contexts/ThemeContext';\nimport { useTradingMode } from '@/contexts/TradingModeContext';\nimport DemoModeIndicator from '@/components/ui/DemoModeIndicator';\nimport { toast } from 'react-hot-toast';\nimport {\n  Menu,\n  X,\n  Home,\n  TrendingUp,\n  BarChart3,\n  Users,\n  Copy,\n  Bell,\n  Settings,\n  LogOut,\n  Sun,\n  Moon,\n  User,\n  ChevronDown,\n  Search,\n  Wallet,\n  Activity,\n  Shield,\n  HelpCircle,\n  Zap,\n  Radio,\n  CreditCard,\n  Crown,\n  Award,\n  Bot,\n  Link\n} from 'lucide-react';\n\ninterface NavigationItem {\n  name: string;\n  href: string;\n  icon: any;\n  badge?: number;\n  description?: string;\n}\n\nconst navigationItems: NavigationItem[] = [\n  {\n    name: 'Dashboard',\n    href: '/dashboard',\n    icon: Home,\n    description: 'Overview and portfolio summary'\n  },\n  {\n    name: 'User Dashboard',\n    href: '/user-dashboard',\n    icon: User,\n    description: 'Personal account and subscription management'\n  },\n  {\n    name: 'Trading',\n    href: '/trading',\n    icon: TrendingUp,\n    description: 'Execute trades and view market data'\n  },\n  {\n    name: 'Live Trading',\n    href: '/trading/live',\n    icon: Radio,\n    description: 'Real-time trading dashboard'\n  },\n  {\n    name: 'Futures Trading',\n    href: '/trading/futures',\n    icon: TrendingUp,\n    description: 'Futures contracts trading'\n  },\n  {\n    name: 'Options Trading',\n    href: '/trading/options',\n    icon: BarChart3,\n    description: 'Options contracts trading'\n  },\n  {\n    name: 'Market Updates',\n    href: '/trading/market-updates',\n    icon: Bell,\n    description: 'Real-time market news and updates'\n  },\n  {\n    name: 'Pine Editor',\n    href: '/trading/pine-editor',\n    icon: Settings,\n    description: 'Pine Script editor for custom indicators'\n  },\n  {\n    name: 'Profit Targets',\n    href: '/trading/profit-targets',\n    icon: Award,\n    description: 'Set and manage profit targets'\n  },\n  {\n    name: 'Portfolio',\n    href: '/portfolio',\n    icon: BarChart3,\n    description: 'Manage your investments'\n  },\n  {\n    name: 'Copy Trade',\n    href: '/copy-trade',\n    icon: Copy,\n    description: 'Follow and copy successful traders'\n  },\n  {\n    name: 'Creators',\n    href: '/creators',\n    icon: Award,\n    description: 'Discover top trading creators and investors'\n  },\n  {\n    name: 'Social',\n    href: '/social',\n    icon: Users,\n    badge: 3,\n    description: 'Connect with the trading community'\n  },\n  {\n    name: 'Pricing',\n    href: '/pricing',\n    icon: Crown,\n    description: 'View subscription plans and pricing'\n  },\n  {\n    name: 'Payment',\n    href: '/payment',\n    icon: CreditCard,\n    description: 'Manage payment methods and billing'\n  },\n  {\n    name: 'Security',\n    href: '/security',\n    icon: Shield,\n    description: 'Security settings and compliance'\n  },\n  {\n    name: 'Automation',\n    href: '/automation',\n    icon: Bot,\n    description: 'Automated trading and system management'\n  },\n  {\n    name: 'Trading Bot',\n    href: '/automation/trading-bot',\n    icon: Bot,\n    description: 'Configure and manage trading bots'\n  },\n  {\n    name: 'Copy Trading Auto',\n    href: '/automation/copy-trading',\n    icon: Copy,\n    description: 'Automated copy trading settings'\n  },\n  {\n    name: 'Risk Management',\n    href: '/automation/risk-management',\n    icon: Shield,\n    description: 'Automated risk management rules'\n  },\n  {\n    name: 'Data Pipeline',\n    href: '/automation/data-pipeline',\n    icon: Activity,\n    description: 'Automated data processing and analysis'\n  },\n  {\n    name: 'Auto Notifications',\n    href: '/automation/notifications',\n    icon: Bell,\n    description: 'Automated notification settings'\n  },\n  {\n    name: 'Auto Payments',\n    href: '/automation/payments',\n    icon: CreditCard,\n    description: 'Automated payment processing'\n  },\n  {\n    name: 'Auto Reporting',\n    href: '/automation/reporting',\n    icon: BarChart3,\n    description: 'Automated report generation'\n  },\n  {\n    name: 'Auto Onboarding',\n    href: '/automation/onboarding',\n    icon: User,\n    description: 'Automated user onboarding process'\n  },\n  {\n    name: 'Brokers',\n    href: '/brokers',\n    icon: Link,\n    description: 'Connect and manage broker accounts'\n  },\n  {\n    name: 'Demo',\n    href: '/demo',\n    icon: Activity,\n    description: 'Practice trading with demo account'\n  },\n  {\n    name: 'Settings',\n    href: '/settings',\n    icon: Settings,\n    description: 'Application settings and preferences'\n  },\n  {\n    name: 'Profile',\n    href: '/profile',\n    icon: User,\n    description: 'Manage your profile and account details'\n  },\n  {\n    name: 'Help',\n    href: '/help',\n    icon: HelpCircle,\n    description: 'Get help and support'\n  }\n];\n\nexport default function Navigation() {\n  const { user, logout } = useAuth();\n  const { theme, setTheme } = useTheme();\n  const { isPaperTrading } = useTradingMode();\n  const router = useRouter();\n  const pathname = usePathname();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [isProfileMenuOpen, setIsProfileMenuOpen] = useState(false);\n  const [mounted, setMounted] = useState(false);\n  const [focusedItemIndex, setFocusedItemIndex] = useState(-1);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  const handleLogout = async () => {\n    try {\n      await logout();\n      router.push('/login');\n      toast.success('Logged out successfully');\n    } catch (error) {\n      toast.error('Failed to logout. Please try again.');\n    }\n  };\n\n  const toggleTheme = () => {\n    setTheme(theme === 'dark' ? 'light' : 'dark');\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent, action: () => void) => {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      action();\n    }\n  };\n\n  const handleNavigationKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === 'ArrowDown') {\n      event.preventDefault();\n      setFocusedItemIndex(prev => (prev + 1) % navigationItems.length);\n    } else if (event.key === 'ArrowUp') {\n      event.preventDefault();\n      setFocusedItemIndex(prev => prev <= 0 ? navigationItems.length - 1 : prev - 1);\n    } else if (event.key === 'Enter' && focusedItemIndex >= 0) {\n      event.preventDefault();\n      router.push(navigationItems[focusedItemIndex].href);\n    } else if (event.key === 'Escape') {\n      setIsProfileMenuOpen(false);\n      setIsMobileMenuOpen(false);\n    }\n  };\n\n  const isActive = (href: string) => {\n    return pathname === href;\n  };\n\n  if (!mounted) {\n    return null;\n  }\n\n  return (\n    <>\n      {/* Desktop Navigation */}\n      <nav className=\"hidden lg:flex lg:flex-col lg:w-64 lg:fixed lg:inset-y-0 lg:border-r lg:border-gray-200 lg:dark:border-gray-700 lg:bg-white lg:dark:bg-gray-800 lg:shadow-sm\">\n        {/* Logo */}\n        <div className=\"flex items-center justify-center h-16 px-6 border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex flex-col items-center space-y-1\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"h-8 w-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center\">\n                <Zap className=\"h-5 w-5 text-white\" />\n              </div>\n              <span className=\"text-xl font-bold text-gray-900 dark:text-white\">KAIRO</span>\n            </div>\n            {isPaperTrading && <DemoModeIndicator className=\"text-xs\" />}\n          </div>\n        </div>\n\n        {/* Simplified Navigation - Only Logo Area */}\n        <div className=\"flex-1 flex items-center justify-center px-4 py-6\">\n          <div className=\"text-center text-gray-500 dark:text-gray-400\">\n            <p className=\"text-sm\">Navigation Menu</p>\n            <p className=\"text-xs mt-1\">Available in Profile</p>\n          </div>\n        </div>\n\n        {/* User Profile Section */}\n        <div className=\"border-t border-gray-200 dark:border-gray-700 p-4\">\n          <div className=\"relative\">\n            <button\n              onClick={() => setIsProfileMenuOpen(!isProfileMenuOpen)}\n              className=\"w-full flex items-center space-x-3 p-3 rounded-xl hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\"\n              aria-expanded={isProfileMenuOpen}\n              aria-haspopup=\"menu\"\n              aria-label=\"User profile menu\"\n            >\n              <div className=\"h-10 w-10 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full flex items-center justify-center\">\n                <span className=\"text-white font-semibold text-sm\">\n                  {user ? `${user.firstName?.[0] || ''}${user.lastName?.[0] || ''}` || 'U' : 'U'}\n                </span>\n              </div>\n              <div className=\"flex-1 text-left\">\n                <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                  {user ? `${user.firstName || ''} ${user.lastName || ''}`.trim() || 'User' : 'User'}\n                </p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  {user?.email || 'user@example.com'}\n                </p>\n              </div>\n              <ChevronDown className={`h-4 w-4 text-gray-400 transition-transform ${\n                isProfileMenuOpen ? 'rotate-180' : ''\n              }`} />\n            </button>\n\n            {/* Profile Dropdown with Navigation Menu */}\n            {isProfileMenuOpen && (\n              <div \n                className=\"absolute bottom-full left-0 right-0 mb-2 bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 py-2 max-h-96 overflow-y-auto\"\n                role=\"menu\"\n                aria-label=\"User profile and navigation menu\"\n              >\n                {/* Navigation Items */}\n                <div className=\"px-2 py-2\">\n                  <p className=\"px-2 py-1 text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Navigation</p>\n                  <div onKeyDown={handleNavigationKeyDown}>\n                    {navigationItems.map((item, index) => {\n                      const active = isActive(item.href);\n                      const isFocused = focusedItemIndex === index;\n                      return (\n                        <button\n                          key={item.href}\n                          onClick={() => {\n                            router.push(item.href);\n                            setIsProfileMenuOpen(false);\n                          }}\n                          onKeyDown={(e) => handleKeyDown(e, () => {\n                            router.push(item.href);\n                            setIsProfileMenuOpen(false);\n                          })}\n                          className={`w-full flex items-center space-x-3 px-3 py-2 mb-1 rounded-lg transition-all duration-200 group text-sm ${\n                            active\n                              ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-sm'\n                              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 hover:text-gray-900 dark:hover:text-white'\n                          } ${\n                            isFocused ? 'ring-2 ring-blue-500 ring-offset-2 dark:ring-offset-gray-800' : ''\n                          }`}\n                          aria-current={active ? 'page' : undefined}\n                          title={item.description}\n                        >\n                          <item.icon className={`h-4 w-4 transition-colors ${\n                            active ? 'text-white' : 'text-gray-500 dark:text-gray-400 group-hover:text-gray-700 dark:group-hover:text-gray-300'\n                          }`} aria-hidden=\"true\" />\n                          <span className=\"flex-1 text-left\">{item.name}</span>\n                          {item.badge && (\n                            <span className={`ml-2 inline-flex items-center justify-center px-1.5 py-0.5 text-xs font-bold rounded-full ${\n                              active \n                                ? 'bg-white/20 text-white' \n                                : 'bg-blue-100 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400'\n                            }`} aria-label={`${item.badge} notifications`}>\n                              {item.badge}\n                            </span>\n                          )}\n                        </button>\n                      );\n                    })}\n                  </div>\n                </div>\n                \n                {/* Profile Actions */}\n                <div className=\"border-t border-gray-200 dark:border-gray-700 mt-2 pt-2\">\n                  <p className=\"px-4 py-1 text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Account</p>\n                  <button\n                    onClick={() => {\n                      router.push('/profile');\n                      setIsProfileMenuOpen(false);\n                    }}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                    role=\"menuitem\"\n                    aria-label=\"Go to profile page\"\n                  >\n                    <User className=\"h-4 w-4\" aria-hidden=\"true\" />\n                    <span>Profile</span>\n                  </button>\n                  <button\n                    onClick={() => {\n                      router.push('/settings');\n                      setIsProfileMenuOpen(false);\n                    }}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                  >\n                    <Settings className=\"h-4 w-4\" />\n                    <span>Settings</span>\n                  </button>\n                  <button\n                    onClick={toggleTheme}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                  >\n                    {theme === 'dark' ? <Sun className=\"h-4 w-4\" /> : <Moon className=\"h-4 w-4\" />}\n                    <span>{theme === 'dark' ? 'Light Mode' : 'Dark Mode'}</span>\n                  </button>\n                  <div className=\"border-t border-gray-200 dark:border-gray-700 my-2\"></div>\n                  <button\n                    onClick={handleLogout}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20\"\n                  >\n                    <LogOut className=\"h-4 w-4\" />\n                    <span>Sign Out</span>\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </nav>\n\n      {/* Mobile Navigation */}\n      <div className=\"lg:hidden\">\n        {/* Mobile Header */}\n        <div className=\"flex items-center justify-between h-16 px-4 bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 shadow-sm\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"h-8 w-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center\" role=\"img\" aria-label=\"KAIRO logo\">\n                <Zap className=\"h-5 w-5 text-white\" aria-hidden=\"true\" />\n              </div>\n              <span className=\"text-xl font-bold text-gray-900 dark:text-white\">KAIRO</span>\n            </div>\n            {isPaperTrading && <DemoModeIndicator className=\"text-xs\" />}\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={toggleTheme}\n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n              aria-label={`Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`}\n              title={`Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`}\n            >\n              {theme === 'dark' ? <Sun className=\"h-5 w-5\" aria-hidden=\"true\" /> : <Moon className=\"h-5 w-5\" aria-hidden=\"true\" />}\n            </button>\n            <button \n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors relative\"\n              aria-label=\"Notifications\"\n              title=\"View notifications\"\n            >\n              <Bell className=\"h-5 w-5\" />\n              <span className=\"absolute -top-1 -right-1 h-3 w-3 bg-red-500 rounded-full\"></span>\n            </button>\n          </div>\n        </div>\n\n        {/* Mobile Menu Overlay */}\n        {isMobileMenuOpen && (\n          <div className=\"fixed inset-0 z-50 lg:hidden\">\n            <div className=\"fixed inset-0 bg-black bg-opacity-25\" onClick={() => setIsMobileMenuOpen(false)}></div>\n            <div className=\"fixed top-0 right-0 bottom-0 w-full max-w-sm bg-white dark:bg-gray-800 shadow-xl\">\n              {/* Mobile Menu Header */}\n              <div className=\"flex items-center justify-between h-16 px-4 border-b border-gray-200 dark:border-gray-700\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"h-10 w-10 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full flex items-center justify-center\">\n                    <span className=\"text-white font-semibold text-sm\">\n                      {user ? `${user.firstName?.[0] || ''}${user.lastName?.[0] || ''}` || 'U' : 'U'}\n                    </span>\n                  </div>\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      {user ? `${user.firstName || ''} ${user.lastName || ''}`.trim() || 'User' : 'User'}\n                    </p>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      {user?.email || 'user@example.com'}\n                    </p>\n                  </div>\n                </div>\n                <button\n                  onClick={() => setIsMobileMenuOpen(false)}\n                  className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n                >\n                  <X className=\"h-6 w-6\" />\n                </button>\n              </div>\n\n              {/* Mobile Navigation Items */}\n              <div className=\"px-4 py-6 space-y-2\" onKeyDown={handleNavigationKeyDown} role=\"navigation\" aria-label=\"Mobile navigation menu\">\n                {navigationItems.map((item, index) => {\n                  const Icon = item.icon;\n                  const active = isActive(item.href);\n                  const isFocused = focusedItemIndex === index;\n                  \n                  return (\n                    <button\n                      key={item.name}\n                      onClick={() => {\n                        router.push(item.href);\n                        setIsMobileMenuOpen(false);\n                      }}\n                      onKeyDown={(e) => handleKeyDown(e, () => {\n                        router.push(item.href);\n                        setIsMobileMenuOpen(false);\n                      })}\n                      className={`w-full group flex items-center px-4 py-3 text-sm font-medium rounded-xl transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 ${\n                        active\n                          ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-lg'\n                          : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n                      } ${\n                        isFocused ? 'ring-2 ring-blue-500 ring-offset-2 dark:ring-offset-gray-800' : ''\n                      }`}\n                      aria-current={active ? 'page' : undefined}\n                      aria-describedby={item.description ? `${item.href}-mobile-desc` : undefined}\n                      title={item.description}\n                    >\n                      <Icon className={`mr-3 h-5 w-5 ${\n                        active ? 'text-white' : 'text-gray-400'\n                      }`} aria-hidden=\"true\" />\n                      <div className=\"flex-1 text-left\">\n                        <div className=\"font-medium\">{item.name}</div>\n                        {item.description && (\n                          <div className={`text-xs mt-1 ${\n                            active ? 'text-white/80' : 'text-gray-500 dark:text-gray-400'\n                          }`} id={`${item.href}-mobile-desc`}>\n                            {item.description}\n                          </div>\n                        )}\n                      </div>\n                      {item.badge && (\n                        <span className={`ml-2 inline-flex items-center justify-center px-2 py-1 text-xs font-bold rounded-full ${\n                          active \n                            ? 'bg-white/20 text-white' \n                            : 'bg-blue-100 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400'\n                        }`} aria-label={`${item.badge} notifications`}>\n                          {item.badge}\n                        </span>\n                      )}\n                    </button>\n                  );\n                })}\n              </div>\n\n              {/* Mobile Menu Footer */}\n              <div className=\"border-t border-gray-200 dark:border-gray-700 px-4 py-4 space-y-2\">\n                <button\n                  onClick={() => {\n                    router.push('/profile');\n                    setIsMobileMenuOpen(false);\n                  }}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-xl transition-colors\"\n                >\n                  <User className=\"h-5 w-5 text-gray-400\" />\n                  <span>Profile</span>\n                </button>\n                <button\n                  onClick={() => {\n                    router.push('/settings');\n                    setIsMobileMenuOpen(false);\n                  }}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-xl transition-colors\"\n                >\n                  <Settings className=\"h-5 w-5 text-gray-400\" />\n                  <span>Settings</span>\n                </button>\n                <button\n                  onClick={() => {\n                    router.push('/help');\n                    setIsMobileMenuOpen(false);\n                  }}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-xl transition-colors\"\n                >\n                  <HelpCircle className=\"h-5 w-5 text-gray-400\" />\n                  <span>Help & Support</span>\n                </button>\n                <button\n                  onClick={handleLogout}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20 rounded-xl transition-colors\"\n                >\n                  <LogOut className=\"h-5 w-5\" />\n                  <span>Sign Out</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Mobile Bottom Navigation */}\n      <div className=\"lg:hidden fixed bottom-0 left-0 right-0 bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700 shadow-lg\">\n        <div className=\"grid grid-cols-5 h-16\">\n          {/* Show only the 5 most important navigation items in bottom bar */}\n          {navigationItems.slice(0, 5).map((item) => {\n            const Icon = item.icon;\n            const active = isActive(item.href);\n            \n            return (\n              <button\n                key={item.name}\n                onClick={() => router.push(item.href)}\n                className={`flex flex-col items-center justify-center space-y-1 transition-colors ${\n                  active\n                    ? 'text-blue-600 dark:text-blue-400'\n                    : 'text-gray-400 hover:text-gray-600 dark:hover:text-gray-300'\n                }`}\n              >\n                <div className=\"relative\">\n                  <Icon className=\"h-5 w-5\" />\n                  {item.badge && (\n                    <span className=\"absolute -top-2 -right-2 h-4 w-4 bg-red-500 text-white text-xs rounded-full flex items-center justify-center\">\n                      {item.badge}\n                    </span>\n                  )}\n                </div>\n                <span className=\"text-xs font-medium truncate\">{item.name}</span>\n              </button>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AATA;;;;;;;;;AA8CA,MAAM,kBAAoC;IACxC;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,mOAAU;QAChB,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gNAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,mOAAU;QAChB,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,oOAAS;QACf,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,yNAAQ;QACd,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gNAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,oOAAS;QACf,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gNAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gNAAK;QACX,OAAO;QACP,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gNAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,mOAAU;QAChB,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,mNAAM;QACZ,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,0MAAG;QACT,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,0MAAG;QACT,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","debugId":null}},
    {"offset": {"line": 5308, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/layouts/AppLayout.tsx"],"sourcesContent":["'use client';\n\nimport { ReactNode } from 'react';\nimport Navigation from '@/components/Navigation';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { useRouter, usePathname } from 'next/navigation';\nimport { useEffect } from 'react';\n\ninterface AppLayoutProps {\n  children: ReactNode;\n  requireAuth?: boolean;\n}\n\nexport default function AppLayout({ children, requireAuth = true }: AppLayoutProps) {\n  const { user, loading } = useAuth();\n  const router = useRouter();\n  const pathname = usePathname();\n\n  // Public routes that don't require authentication\n  const publicRoutes = ['/login', '/register', '/demo', '/'];\n  const isPublicRoute = publicRoutes.includes(pathname);\n\n  useEffect(() => {\n    if (!loading && requireAuth && !user && !isPublicRoute) {\n      router.push('/login');\n    }\n  }, [user, loading, requireAuth, isPublicRoute, router]);\n\n  // Show loading spinner while checking authentication\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  // For public routes or when auth is not required, show content without navigation\n  if (!requireAuth || isPublicRoute) {\n    return <>{children}</>;\n  }\n\n  // For authenticated routes, show navigation + content\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      <Navigation />\n      \n      {/* Main content area with proper spacing for navigation */}\n      <div className=\"lg:pl-64\">\n        {/* Content wrapper with padding */}\n        <main className=\"min-h-screen\">\n          {children}\n        </main>\n      </div>\n      \n      {/* Bottom spacing for mobile navigation */}\n      <div className=\"h-16 lg:hidden\"></div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AACA;;;AANA;;;;;AAae,SAAS,UAAU,KAAgD;QAAhD,EAAE,QAAQ,EAAE,cAAc,IAAI,EAAkB,GAAhD;;IAChC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,IAAA,6IAAO;IACjC,MAAM,SAAS,IAAA,kJAAS;IACxB,MAAM,WAAW,IAAA,oJAAW;IAE5B,kDAAkD;IAClD,MAAM,eAAe;QAAC;QAAU;QAAa;QAAS;KAAI;IAC1D,MAAM,gBAAgB,aAAa,QAAQ,CAAC;IAE5C,IAAA,0KAAS;+BAAC;YACR,IAAI,CAAC,WAAW,eAAe,CAAC,QAAQ,CAAC,eAAe;gBACtD,OAAO,IAAI,CAAC;YACd;QACF;8BAAG;QAAC;QAAM;QAAS;QAAa;QAAe;KAAO;IAEtD,qDAAqD;IACrD,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,kFAAkF;IAClF,IAAI,CAAC,eAAe,eAAe;QACjC,qBAAO;sBAAG;;IACZ;IAEA,sDAAsD;IACtD,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,8IAAU;;;;;0BAGX,6LAAC;gBAAI,WAAU;0BAEb,cAAA,6LAAC;oBAAK,WAAU;8BACb;;;;;;;;;;;0BAKL,6LAAC;gBAAI,WAAU;;;;;;;;;;;;AAGrB;GA9CwB;;QACI,6IAAO;QAClB,kJAAS;QACP,oJAAW;;;KAHN","debugId":null}}]
}