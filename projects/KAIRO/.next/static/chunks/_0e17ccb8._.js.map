{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/components/trading/PineScriptEditor.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Play, Save, Download, Upload, Settings, AlertCircle, CheckCircle } from 'lucide-react';\nimport { useErrorHandler } from '@/lib/errorHandler';\n\ninterface PineScriptEditorProps {\n  onSave?: (script: string) => void;\n  onRun?: (script: string) => void;\n  initialScript?: string;\n}\n\ninterface ValidationError {\n  line: number;\n  message: string;\n  type: 'error' | 'warning';\n}\n\n// Default Pine Script template\nconst defaultPineScript = `//@version=5\nstrategy(\"My Strategy\", overlay=true, margin_long=100, margin_short=100)\n\n// Input parameters\nlength = input.int(14, title=\"Length\")\nsource = input(close, title=\"Source\")\n\n// Calculate indicators\nrsiValue = ta.rsi(source, length)\nsmaValue = ta.sma(source, length)\n\n// Entry conditions\nlongCondition = ta.crossover(rsiValue, 30)\nshortCondition = ta.crossunder(rsiValue, 70)\n\n// Strategy entries\nif (longCondition)\n    strategy.entry(\"Long\", strategy.long)\n\nif (shortCondition)\n    strategy.entry(\"Short\", strategy.short)\n\n// Plot indicators\nplot(smaValue, color=color.blue, title=\"SMA\")\nhline(70, \"Overbought\", color=color.red)\nhline(30, \"Oversold\", color=color.green)\n\n// Plot RSI in separate pane\nrsiPlot = plot(rsiValue, title=\"RSI\", color=color.purple)\nhline(50, \"Midline\", color=color.gray)`;\n\nconst PineScriptEditor: React.FC<PineScriptEditorProps> = ({\n  onSave,\n  onRun,\n  initialScript = ''\n}) => {\n  const [script, setScript] = useState(initialScript || defaultPineScript);\n  const [validationErrors, setValidationErrors] = useState<ValidationError[]>([]);\n  const [isValidating, setIsValidating] = useState(false);\n  const { handleCompilationError } = useErrorHandler();\n  const [savedScripts, setSavedScripts] = useState<{name: string, script: string}[]>([]);\n  const [showSettings, setShowSettings] = useState(false);\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  // Pine Script keywords for syntax highlighting\n  const pineKeywords = [\n    'strategy', 'study', 'indicator', 'var', 'varip', 'if', 'else', 'for', 'while',\n    'true', 'false', 'na', 'close', 'open', 'high', 'low', 'volume', 'time',\n    'sma', 'ema', 'rsi', 'macd', 'bollinger', 'stoch', 'atr', 'adx',\n    'plot', 'plotshape', 'plotchar', 'hline', 'fill', 'bgcolor',\n    'strategy.entry', 'strategy.exit', 'strategy.close', 'strategy.cancel',\n    'input', 'input.int', 'input.float', 'input.bool', 'input.string',\n    'math.abs', 'math.max', 'math.min', 'math.round', 'math.floor', 'math.ceil'\n  ];\n\n  // Syntax highlighting state\n  const [syntaxHighlighting, setSyntaxHighlighting] = useState(true);\n  const [autoComplete, setAutoComplete] = useState(true);\n  const [wordWrap, setWordWrap] = useState(false);\n  const [showAutoComplete, setShowAutoComplete] = useState(false);\n  const [autoCompleteOptions, setAutoCompleteOptions] = useState<string[]>([]);\n  const [autoCompletePosition, setAutoCompletePosition] = useState({ top: 0, left: 0 });\n  const [selectedSuggestion, setSelectedSuggestion] = useState(0);\n\n  // Apply syntax highlighting\n  const applySyntaxHighlighting = (code: string) => {\n    if (!syntaxHighlighting) return code;\n    \n    let highlightedCode = code;\n    \n    // Highlight comments\n    highlightedCode = highlightedCode.replace(\n      /(\\/\\/.*$)/gm,\n      '<span style=\"color: #6a9955; font-style: italic;\">$1</span>'\n    );\n    \n    // Highlight strings\n    highlightedCode = highlightedCode.replace(\n      /([\"'])((?:(?!\\1)[^\\\\]|\\\\.)*)\\1/g,\n      '<span style=\"color: #ce9178;\">$&</span>'\n    );\n    \n    // Highlight numbers\n    highlightedCode = highlightedCode.replace(\n      /\\b\\d+(\\.\\d+)?\\b/g,\n      '<span style=\"color: #b5cea8;\">$&</span>'\n    );\n    \n    // Highlight Pine Script keywords\n    pineKeywords.forEach(keyword => {\n      const regex = new RegExp(`\\\\b${keyword.replace('.', '\\\\.')}\\\\b`, 'g');\n      highlightedCode = highlightedCode.replace(\n        regex,\n        `<span style=\"color: #569cd6; font-weight: bold;\">${keyword}</span>`\n      );\n    });\n    \n    return highlightedCode;\n  };\n\n\n\n  // Validate Pine Script syntax\n  const validateScript = (scriptText: string) => {\n    setIsValidating(true);\n    const errors: ValidationError[] = [];\n    const lines = scriptText.split('\\n');\n\n    lines.forEach((line, index) => {\n      const lineNum = index + 1;\n      const trimmedLine = line.trim();\n\n      // Check for common syntax errors\n      if (trimmedLine && !trimmedLine.startsWith('//')) {\n        // Check for missing version declaration\n        if (lineNum === 1 && !trimmedLine.includes('@version')) {\n          errors.push({\n            line: lineNum,\n            message: 'Missing @version declaration at the beginning',\n            type: 'error'\n          });\n        }\n\n        // Check for unmatched parentheses\n        const openParens = (line.match(/\\(/g) || []).length;\n        const closeParens = (line.match(/\\)/g) || []).length;\n        if (openParens !== closeParens) {\n          errors.push({\n            line: lineNum,\n            message: 'Unmatched parentheses',\n            type: 'error'\n          });\n        }\n\n        // Check for undefined variables (basic check)\n        const variablePattern = /\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*=/;\n        const usagePattern = /\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b/g;\n        \n        // Warning for deprecated functions\n        if (line.includes('security(') && !line.includes('request.security(')) {\n          errors.push({\n            line: lineNum,\n            message: 'security() is deprecated, use request.security() instead',\n            type: 'warning'\n          });\n        }\n      }\n    });\n\n    // Log validation errors using centralized handler\n    errors.forEach(error => {\n      handleCompilationError(error.line, error.message, error.type);\n    });\n    \n    setValidationErrors(errors);\n   setIsValidating(false);\n  };\n\n  // Handle script changes\n  const handleScriptChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const newScript = e.target.value;\n    setScript(newScript);\n    validateScript(newScript);\n    \n    // Auto-complete logic\n    if (autoComplete) {\n      const cursorPosition = e.target.selectionStart;\n      const textBeforeCursor = newScript.substring(0, cursorPosition);\n      const words = textBeforeCursor.split(/\\s+/);\n      const currentWord = words[words.length - 1];\n      \n      if (currentWord.length > 1) {\n        const suggestions = pineKeywords.filter(keyword => \n          keyword.toLowerCase().startsWith(currentWord.toLowerCase())\n        );\n        \n        if (suggestions.length > 0) {\n          setAutoCompleteOptions(suggestions);\n          setSelectedSuggestion(0);\n          setShowAutoComplete(true);\n          \n          // Calculate position for auto-complete dropdown\n          const textarea = e.target;\n          const rect = textarea.getBoundingClientRect();\n          setAutoCompletePosition({\n            top: rect.top + 20,\n            left: rect.left + 10\n          });\n        } else {\n          setShowAutoComplete(false);\n        }\n      } else {\n        setShowAutoComplete(false);\n      }\n    }\n  };\n  \n  // Handle keyboard events for auto-complete\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (showAutoComplete && autoCompleteOptions.length > 0) {\n      switch (e.key) {\n        case 'ArrowDown':\n          e.preventDefault();\n          setSelectedSuggestion(prev => \n            prev < autoCompleteOptions.length - 1 ? prev + 1 : 0\n          );\n          break;\n        case 'ArrowUp':\n          e.preventDefault();\n          setSelectedSuggestion(prev => \n            prev > 0 ? prev - 1 : autoCompleteOptions.length - 1\n          );\n          break;\n        case 'Tab':\n        case 'Enter':\n          e.preventDefault();\n          insertAutoComplete(autoCompleteOptions[selectedSuggestion]);\n          break;\n        case 'Escape':\n          setShowAutoComplete(false);\n          break;\n      }\n    }\n  };\n  \n  // Insert auto-complete suggestion\n  const insertAutoComplete = (suggestion: string) => {\n    if (!textareaRef.current) return;\n    \n    const textarea = textareaRef.current;\n    const cursorPosition = textarea.selectionStart;\n    const textBeforeCursor = script.substring(0, cursorPosition);\n    const textAfterCursor = script.substring(cursorPosition);\n    const words = textBeforeCursor.split(/\\s+/);\n    const currentWord = words[words.length - 1];\n    \n    const newText = textBeforeCursor.substring(0, textBeforeCursor.length - currentWord.length) + \n                   suggestion + textAfterCursor;\n    \n    setScript(newText);\n    setShowAutoComplete(false);\n    \n    // Set cursor position after the inserted suggestion\n    setTimeout(() => {\n      const newCursorPosition = cursorPosition - currentWord.length + suggestion.length;\n      textarea.setSelectionRange(newCursorPosition, newCursorPosition);\n      textarea.focus();\n    }, 0);\n  };\n\n  // Save script\n  const handleSave = () => {\n    const name = prompt('Enter script name:');\n    if (name) {\n      const newScript = { name, script };\n      setSavedScripts(prev => [...prev, newScript]);\n      onSave?.(script);\n    }\n  };\n\n  // Load script\n  const handleLoad = (savedScript: {name: string, script: string}) => {\n    setScript(savedScript.script);\n    validateScript(savedScript.script);\n  };\n\n  // Export script\n  const handleExport = () => {\n    const blob = new Blob([script], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'pine_script.pine';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  // Import script\n  const handleImport = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        const content = event.target?.result as string;\n        setScript(content);\n        validateScript(content);\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  // Run script\n  const handleRun = () => {\n    if (validationErrors.filter(e => e.type === 'error').length === 0) {\n      onRun?.(script);\n    } else {\n      alert('Please fix all errors before running the script.');\n    }\n  };\n\n  // Add line numbers\n  const getLineNumbers = () => {\n    const lines = script.split('\\n');\n    return lines.map((_, index) => (\n      <div key={index} className=\"text-gray-500 text-sm pr-2 text-right select-none\">\n        {index + 1}\n      </div>\n    ));\n  };\n\n  useEffect(() => {\n    validateScript(script);\n  }, []);\n\n  return (\n    <div className=\"flex flex-col h-full bg-white dark:bg-gray-900\">\n      {/* Toolbar */}\n      <div className=\"flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"flex items-center space-x-2\">\n          <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n            Pine Script Editor\n          </h2>\n          <div className=\"flex items-center space-x-1\">\n            {validationErrors.filter(e => e.type === 'error').length === 0 ? (\n              <CheckCircle className=\"h-4 w-4 text-green-500\" />\n            ) : (\n              <AlertCircle className=\"h-4 w-4 text-red-500\" />\n            )}\n            <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n              {validationErrors.filter(e => e.type === 'error').length} errors,{' '}\n              {validationErrors.filter(e => e.type === 'warning').length} warnings\n            </span>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={handleRun}\n            disabled={validationErrors.filter(e => e.type === 'error').length > 0}\n            className=\"flex items-center px-3 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 disabled:bg-gray-400 disabled:cursor-not-allowed\"\n          >\n            <Play className=\"h-4 w-4 mr-1\" />\n            Run\n          </button>\n          \n          <button\n            onClick={handleSave}\n            className=\"flex items-center px-3 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n          >\n            <Save className=\"h-4 w-4 mr-1\" />\n            Save\n          </button>\n          \n          <button\n            onClick={handleExport}\n            className=\"flex items-center px-3 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700\"\n          >\n            <Download className=\"h-4 w-4 mr-1\" />\n            Export\n          </button>\n          \n          <button\n            onClick={() => fileInputRef.current?.click()}\n            className=\"flex items-center px-3 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700\"\n          >\n            <Upload className=\"h-4 w-4 mr-1\" />\n            Import\n          </button>\n          \n          <button\n            onClick={() => setShowSettings(!showSettings)}\n            className=\"flex items-center px-3 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700\"\n          >\n            <Settings className=\"h-4 w-4\" />\n          </button>\n        </div>\n      </div>\n\n      <div className=\"flex flex-1 overflow-hidden\">\n        {/* Editor */}\n        <div className=\"flex-1 flex\">\n          {/* Line numbers */}\n          <div className=\"bg-gray-50 dark:bg-gray-800 border-r border-gray-200 dark:border-gray-700 py-4 px-2\">\n            {getLineNumbers()}\n          </div>\n          \n          {/* Code editor */}\n          <div className=\"flex-1 relative\">\n            {/* Syntax highlighting overlay */}\n            {syntaxHighlighting && (\n              <div \n                className=\"absolute inset-0 p-4 font-mono text-sm pointer-events-none overflow-hidden whitespace-pre-wrap break-words\"\n                style={{\n                  color: 'transparent',\n                  zIndex: 1,\n                  wordWrap: wordWrap ? 'break-word' : 'normal'\n                }}\n                dangerouslySetInnerHTML={{\n                  __html: applySyntaxHighlighting(script)\n                }}\n              />\n            )}\n            <textarea\n              ref={textareaRef}\n              value={script}\n              onChange={handleScriptChange}\n              onKeyDown={handleKeyDown}\n              className={`w-full h-full p-4 font-mono text-sm border-none outline-none resize-none relative z-10 ${\n                syntaxHighlighting \n                  ? 'bg-transparent text-transparent caret-gray-900 dark:caret-white' \n                  : 'bg-white dark:bg-gray-900 text-gray-900 dark:text-white'\n              }`}\n              style={{\n                wordWrap: wordWrap ? 'break-word' : 'normal',\n                whiteSpace: wordWrap ? 'pre-wrap' : 'pre'\n              }}\n              placeholder=\"Enter your Pine Script code here...\"\n              spellCheck={false}\n            />\n            \n            {/* Auto-complete dropdown */}\n            {showAutoComplete && autoCompleteOptions.length > 0 && (\n              <div \n                className=\"absolute bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md shadow-lg z-50 max-h-48 overflow-y-auto\"\n                style={{\n                  top: autoCompletePosition.top,\n                  left: autoCompletePosition.left,\n                  minWidth: '200px'\n                }}\n              >\n                {autoCompleteOptions.map((option, index) => (\n                  <div\n                    key={option}\n                    className={`px-3 py-2 cursor-pointer text-sm ${\n                      index === selectedSuggestion\n                        ? 'bg-blue-100 dark:bg-blue-900 text-blue-900 dark:text-blue-100'\n                        : 'text-gray-900 dark:text-white hover:bg-gray-100 dark:hover:bg-gray-700'\n                    }`}\n                    onClick={() => insertAutoComplete(option)}\n                  >\n                    <span className=\"font-mono\">{option}</span>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Sidebar */}\n        {showSettings && (\n          <div className=\"w-80 border-l border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-800\">\n            <div className=\"p-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                Settings & Saved Scripts\n              </h3>\n              \n              {/* Saved Scripts */}\n              <div className=\"mb-6\">\n                <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Saved Scripts\n                </h4>\n                <div className=\"space-y-2\">\n                  {savedScripts.map((savedScript, index) => (\n                    <button\n                      key={index}\n                      onClick={() => handleLoad(savedScript)}\n                      className=\"w-full text-left p-2 bg-white dark:bg-gray-700 rounded border border-gray-200 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600\"\n                    >\n                      <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                        {savedScript.name}\n                      </div>\n                      <div className=\"text-xs text-gray-500 dark:text-gray-400 truncate\">\n                        {savedScript.script.substring(0, 50)}...\n                      </div>\n                    </button>\n                  ))}\n                </div>\n              </div>\n              \n              {/* Editor Settings */}\n              <div>\n                <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Editor Settings\n                </h4>\n                <div className=\"space-y-3\">\n                  <label className=\"flex items-center\">\n                    <input type=\"checkbox\" className=\"mr-2\" defaultChecked />\n                    <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      Auto-validation\n                    </span>\n                  </label>\n                  <label className=\"flex items-center\">\n                    <input type=\"checkbox\" className=\"mr-2\" defaultChecked />\n                    <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      Line numbers\n                    </span>\n                  </label>\n                  <label className=\"flex items-center\">\n                    <input \n                      type=\"checkbox\" \n                      className=\"mr-2\" \n                      checked={syntaxHighlighting}\n                      onChange={(e) => setSyntaxHighlighting(e.target.checked)}\n                    />\n                    <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      Syntax highlighting\n                    </span>\n                  </label>\n                  <label className=\"flex items-center\">\n                    <input \n                      type=\"checkbox\" \n                      className=\"mr-2\" \n                      checked={autoComplete}\n                      onChange={(e) => setAutoComplete(e.target.checked)}\n                    />\n                    <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      Auto-complete\n                    </span>\n                  </label>\n                  <label className=\"flex items-center\">\n                    <input \n                      type=\"checkbox\" \n                      className=\"mr-2\" \n                      checked={wordWrap}\n                      onChange={(e) => setWordWrap(e.target.checked)}\n                    />\n                    <span className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      Word wrap\n                    </span>\n                  </label>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Error panel */}\n      {validationErrors.length > 0 && (\n        <div className=\"border-t border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-800 max-h-40 overflow-y-auto\">\n          <div className=\"p-4\">\n            <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n              Validation Results\n            </h4>\n            <div className=\"space-y-1\">\n              {validationErrors.map((error, index) => (\n                <div\n                  key={index}\n                  className={`text-sm p-2 rounded ${\n                    error.type === 'error'\n                      ? 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400'\n                      : 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400'\n                  }`}\n                >\n                  <span className=\"font-medium\">Line {error.line}:</span> {error.message}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Hidden file input */}\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        accept=\".pine,.txt\"\n        onChange={handleImport}\n        className=\"hidden\"\n      />\n    </div>\n  );\n};\n\nexport default PineScriptEditor;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 894, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function formatCurrency(amount: number): string {\n  if (typeof amount !== 'number' || isNaN(amount)) return '$0.00'\n  try {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(amount)\n  } catch (error) {\n    return '$0.00'\n  }\n}\n\nexport function formatPercent(value: number): string {\n  if (typeof value !== 'number' || isNaN(value)) return '0.00%'\n  try {\n    return `${value >= 0 ? '+' : ''}${value.toFixed(2)}%`\n  } catch (error) {\n    return '0.00%'\n  }\n}\n\nexport function formatNumber(value: number): string {\n  if (typeof value !== 'number' || isNaN(value)) return '0'\n  try {\n    return new Intl.NumberFormat('en-US').format(value)\n  } catch (error) {\n    return '0'\n  }\n}"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,IAAA,yKAAO,EAAC,IAAA,gJAAI,EAAC;AACtB;AAEO,SAAS,eAAe,MAAc;IAC3C,IAAI,OAAO,WAAW,YAAY,MAAM,SAAS,OAAO;IACxD,IAAI;QACF,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;YACpC,OAAO;YACP,UAAU;QACZ,GAAG,MAAM,CAAC;IACZ,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,SAAS,cAAc,KAAa;IACzC,IAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,OAAO;IACtD,IAAI;QACF,OAAO,AAAC,GAA0B,OAAxB,SAAS,IAAI,MAAM,IAAsB,OAAjB,MAAM,OAAO,CAAC,IAAG;IACrD,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,SAAS,aAAa,KAAa;IACxC,IAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,OAAO;IACtD,IAAI;QACF,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS,MAAM,CAAC;IAC/C,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 948, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }"],"names":[],"mappings":";;;;;;;AACA;AACA;;;;AAEA,MAAM,gBAAgB,IAAA,0KAAG,EACvB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,KAA4C;QAA5C,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB,GAA5C;IACb,qBACE,6LAAC;QAAI,WAAW,IAAA,4HAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 997, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/DemoModeIndicator.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\nimport { Badge } from '@/components/ui/badge'\nimport { AlertTriangle, Play } from 'lucide-react'\nimport { useTradingMode } from '@/contexts/TradingModeContext'\nimport { cn } from '@/lib/utils'\n\ninterface DemoModeIndicatorProps {\n  className?: string\n  variant?: 'badge' | 'banner'\n}\n\nexport function DemoModeIndicator({ className, variant = 'badge' }: DemoModeIndicatorProps) {\n  const { isPaperTrading, tradingMode } = useTradingMode()\n\n  if (!isPaperTrading) {\n    return null\n  }\n\n  if (variant === 'banner') {\n    return (\n      <div className={cn(\n        'bg-orange-100 dark:bg-orange-900/20 border border-orange-200 dark:border-orange-800 rounded-lg p-3 mb-4',\n        className\n      )}>\n        <div className=\"flex items-center gap-2\">\n          <Play className=\"h-4 w-4 text-orange-600 dark:text-orange-400\" />\n          <span className=\"text-sm font-medium text-orange-800 dark:text-orange-200\">\n            Demo Mode Active\n          </span>\n          <span className=\"text-xs text-orange-600 dark:text-orange-400\">\n            • All trades are simulated • No real money involved\n          </span>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <Badge \n      variant=\"outline\" \n      className={cn(\n        'bg-orange-50 dark:bg-orange-900/20 border-orange-200 dark:border-orange-800 text-orange-700 dark:text-orange-300 font-medium',\n        className\n      )}\n    >\n      <Play className=\"h-3 w-3 mr-1\" />\n      Demo Mode\n    </Badge>\n  )\n}\n\nexport default DemoModeIndicator"],"names":[],"mappings":";;;;;;;AAGA;AACA;AACA;AACA;;;AANA;;;;;AAaO,SAAS,kBAAkB,KAAwD;QAAxD,EAAE,SAAS,EAAE,UAAU,OAAO,EAA0B,GAAxD;;IAChC,MAAM,EAAE,cAAc,EAAE,WAAW,EAAE,GAAG,IAAA,2JAAc;IAEtD,IAAI,CAAC,gBAAgB;QACnB,OAAO;IACT;IAEA,IAAI,YAAY,UAAU;QACxB,qBACE,6LAAC;YAAI,WAAW,IAAA,4HAAE,EAChB,2GACA;sBAEA,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,6MAAI;wBAAC,WAAU;;;;;;kCAChB,6LAAC;wBAAK,WAAU;kCAA2D;;;;;;kCAG3E,6LAAC;wBAAK,WAAU;kCAA+C;;;;;;;;;;;;;;;;;IAMvE;IAEA,qBACE,6LAAC,6IAAK;QACJ,SAAQ;QACR,WAAW,IAAA,4HAAE,EACX,gIACA;;0BAGF,6LAAC,6MAAI;gBAAC,WAAU;;;;;;YAAiB;;;;;;;AAIvC;GAtCgB;;QAC0B,2JAAc;;;KADxC;uCAwCD","debugId":null}},
    {"offset": {"line": 1098, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/Navigation.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter, usePathname } from 'next/navigation';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { useTheme } from '@/contexts/ThemeContext';\nimport { useTradingMode } from '@/contexts/TradingModeContext';\nimport DemoModeIndicator from '@/components/ui/DemoModeIndicator';\nimport { toast } from 'react-hot-toast';\nimport {\n  Menu,\n  X,\n  Home,\n  TrendingUp,\n  BarChart3,\n  Users,\n  Copy,\n  Bell,\n  Settings,\n  LogOut,\n  Sun,\n  Moon,\n  User,\n  ChevronDown,\n  Search,\n  Wallet,\n  Activity,\n  Shield,\n  HelpCircle,\n  Zap,\n  Radio,\n  CreditCard,\n  Crown,\n  Award,\n  Bot,\n  Link\n} from 'lucide-react';\n\ninterface NavigationItem {\n  name: string;\n  href: string;\n  icon: any;\n  badge?: number;\n  description?: string;\n}\n\nconst navigationItems: NavigationItem[] = [\n  {\n    name: 'Dashboard',\n    href: '/dashboard',\n    icon: Home,\n    description: 'Overview and portfolio summary'\n  },\n  {\n    name: 'User Dashboard',\n    href: '/user-dashboard',\n    icon: User,\n    description: 'Personal account and subscription management'\n  },\n  {\n    name: 'Trading',\n    href: '/trading',\n    icon: TrendingUp,\n    description: 'Execute trades and view market data'\n  },\n  {\n    name: 'Live Trading',\n    href: '/trading/live',\n    icon: Radio,\n    description: 'Real-time trading dashboard'\n  },\n  {\n    name: 'Futures Trading',\n    href: '/trading/futures',\n    icon: TrendingUp,\n    description: 'Futures contracts trading'\n  },\n  {\n    name: 'Options Trading',\n    href: '/trading/options',\n    icon: BarChart3,\n    description: 'Options contracts trading'\n  },\n  {\n    name: 'Market Updates',\n    href: '/trading/market-updates',\n    icon: Bell,\n    description: 'Real-time market news and updates'\n  },\n  {\n    name: 'Pine Editor',\n    href: '/trading/pine-editor',\n    icon: Settings,\n    description: 'Pine Script editor for custom indicators'\n  },\n  {\n    name: 'Profit Targets',\n    href: '/trading/profit-targets',\n    icon: Award,\n    description: 'Set and manage profit targets'\n  },\n  {\n    name: 'Portfolio',\n    href: '/portfolio',\n    icon: BarChart3,\n    description: 'Manage your investments'\n  },\n  {\n    name: 'Copy Trade',\n    href: '/copy-trade',\n    icon: Copy,\n    description: 'Follow and copy successful traders'\n  },\n  {\n    name: 'Creators',\n    href: '/creators',\n    icon: Award,\n    description: 'Discover top trading creators and investors'\n  },\n  {\n    name: 'Social',\n    href: '/social',\n    icon: Users,\n    badge: 3,\n    description: 'Connect with the trading community'\n  },\n  {\n    name: 'Pricing',\n    href: '/pricing',\n    icon: Crown,\n    description: 'View subscription plans and pricing'\n  },\n  {\n    name: 'Payment',\n    href: '/payment',\n    icon: CreditCard,\n    description: 'Manage payment methods and billing'\n  },\n  {\n    name: 'Security',\n    href: '/security',\n    icon: Shield,\n    description: 'Security settings and compliance'\n  },\n  {\n    name: 'Automation',\n    href: '/automation',\n    icon: Bot,\n    description: 'Automated trading and system management'\n  },\n  {\n    name: 'Trading Bot',\n    href: '/automation/trading-bot',\n    icon: Bot,\n    description: 'Configure and manage trading bots'\n  },\n  {\n    name: 'Copy Trading Auto',\n    href: '/automation/copy-trading',\n    icon: Copy,\n    description: 'Automated copy trading settings'\n  },\n  {\n    name: 'Risk Management',\n    href: '/automation/risk-management',\n    icon: Shield,\n    description: 'Automated risk management rules'\n  },\n  {\n    name: 'Data Pipeline',\n    href: '/automation/data-pipeline',\n    icon: Activity,\n    description: 'Automated data processing and analysis'\n  },\n  {\n    name: 'Auto Notifications',\n    href: '/automation/notifications',\n    icon: Bell,\n    description: 'Automated notification settings'\n  },\n  {\n    name: 'Auto Payments',\n    href: '/automation/payments',\n    icon: CreditCard,\n    description: 'Automated payment processing'\n  },\n  {\n    name: 'Auto Reporting',\n    href: '/automation/reporting',\n    icon: BarChart3,\n    description: 'Automated report generation'\n  },\n  {\n    name: 'Auto Onboarding',\n    href: '/automation/onboarding',\n    icon: User,\n    description: 'Automated user onboarding process'\n  },\n  {\n    name: 'Brokers',\n    href: '/brokers',\n    icon: Link,\n    description: 'Connect and manage broker accounts'\n  },\n  {\n    name: 'Demo',\n    href: '/demo',\n    icon: Activity,\n    description: 'Practice trading with demo account'\n  },\n  {\n    name: 'Settings',\n    href: '/settings',\n    icon: Settings,\n    description: 'Application settings and preferences'\n  },\n  {\n    name: 'Profile',\n    href: '/profile',\n    icon: User,\n    description: 'Manage your profile and account details'\n  },\n  {\n    name: 'Help',\n    href: '/help',\n    icon: HelpCircle,\n    description: 'Get help and support'\n  }\n];\n\nexport default function Navigation() {\n  const { user, logout } = useAuth();\n  const { theme, setTheme } = useTheme();\n  const { isPaperTrading } = useTradingMode();\n  const router = useRouter();\n  const pathname = usePathname();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [isProfileMenuOpen, setIsProfileMenuOpen] = useState(false);\n  const [mounted, setMounted] = useState(false);\n  const [focusedItemIndex, setFocusedItemIndex] = useState(-1);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  const handleLogout = async () => {\n    try {\n      await logout();\n      router.push('/login');\n      toast.success('Logged out successfully');\n    } catch (error) {\n      toast.error('Failed to logout. Please try again.');\n    }\n  };\n\n  const toggleTheme = () => {\n    setTheme(theme === 'dark' ? 'light' : 'dark');\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent, action: () => void) => {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      action();\n    }\n  };\n\n  const handleNavigationKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === 'ArrowDown') {\n      event.preventDefault();\n      setFocusedItemIndex(prev => (prev + 1) % navigationItems.length);\n    } else if (event.key === 'ArrowUp') {\n      event.preventDefault();\n      setFocusedItemIndex(prev => prev <= 0 ? navigationItems.length - 1 : prev - 1);\n    } else if (event.key === 'Enter' && focusedItemIndex >= 0) {\n      event.preventDefault();\n      router.push(navigationItems[focusedItemIndex].href);\n    } else if (event.key === 'Escape') {\n      setIsProfileMenuOpen(false);\n      setIsMobileMenuOpen(false);\n    }\n  };\n\n  const isActive = (href: string) => {\n    return pathname === href;\n  };\n\n  if (!mounted) {\n    return null;\n  }\n\n  return (\n    <>\n      {/* Desktop Navigation */}\n      <nav className=\"hidden lg:flex lg:flex-col lg:w-64 lg:fixed lg:inset-y-0 lg:border-r lg:border-gray-200 lg:dark:border-gray-700 lg:bg-white lg:dark:bg-gray-800 lg:shadow-sm\">\n        {/* Logo */}\n        <div className=\"flex items-center justify-center h-16 px-6 border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex flex-col items-center space-y-1\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"h-8 w-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center\">\n                <Zap className=\"h-5 w-5 text-white\" />\n              </div>\n              <span className=\"text-xl font-bold text-gray-900 dark:text-white\">KAIRO</span>\n            </div>\n            {isPaperTrading && <DemoModeIndicator className=\"text-xs\" />}\n          </div>\n        </div>\n\n        {/* Simplified Navigation - Only Logo Area */}\n        <div className=\"flex-1 flex items-center justify-center px-4 py-6\">\n          <div className=\"text-center text-gray-500 dark:text-gray-400\">\n            <p className=\"text-sm\">Navigation Menu</p>\n            <p className=\"text-xs mt-1\">Available in Profile</p>\n          </div>\n        </div>\n\n        {/* User Profile Section */}\n        <div className=\"border-t border-gray-200 dark:border-gray-700 p-4\">\n          <div className=\"relative\">\n            <button\n              onClick={() => setIsProfileMenuOpen(!isProfileMenuOpen)}\n              className=\"w-full flex items-center space-x-3 p-3 rounded-xl hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\"\n              aria-expanded={isProfileMenuOpen}\n              aria-haspopup=\"menu\"\n              aria-label=\"User profile menu\"\n            >\n              <div className=\"h-10 w-10 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full flex items-center justify-center\">\n                <span className=\"text-white font-semibold text-sm\">\n                  {user ? `${user.firstName?.[0] || ''}${user.lastName?.[0] || ''}` || 'U' : 'U'}\n                </span>\n              </div>\n              <div className=\"flex-1 text-left\">\n                <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                  {user ? `${user.firstName || ''} ${user.lastName || ''}`.trim() || 'User' : 'User'}\n                </p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  {user?.email || 'user@example.com'}\n                </p>\n              </div>\n              <ChevronDown className={`h-4 w-4 text-gray-400 transition-transform ${\n                isProfileMenuOpen ? 'rotate-180' : ''\n              }`} />\n            </button>\n\n            {/* Profile Dropdown with Navigation Menu */}\n            {isProfileMenuOpen && (\n              <div \n                className=\"absolute bottom-full left-0 right-0 mb-2 bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 py-2 max-h-96 overflow-y-auto\"\n                role=\"menu\"\n                aria-label=\"User profile and navigation menu\"\n              >\n                {/* Navigation Items */}\n                <div className=\"px-2 py-2\">\n                  <p className=\"px-2 py-1 text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Navigation</p>\n                  <div onKeyDown={handleNavigationKeyDown}>\n                    {navigationItems.map((item, index) => {\n                      const active = isActive(item.href);\n                      const isFocused = focusedItemIndex === index;\n                      return (\n                        <button\n                          key={item.href}\n                          onClick={() => {\n                            router.push(item.href);\n                            setIsProfileMenuOpen(false);\n                          }}\n                          onKeyDown={(e) => handleKeyDown(e, () => {\n                            router.push(item.href);\n                            setIsProfileMenuOpen(false);\n                          })}\n                          className={`w-full flex items-center space-x-3 px-3 py-2 mb-1 rounded-lg transition-all duration-200 group text-sm ${\n                            active\n                              ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-sm'\n                              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 hover:text-gray-900 dark:hover:text-white'\n                          } ${\n                            isFocused ? 'ring-2 ring-blue-500 ring-offset-2 dark:ring-offset-gray-800' : ''\n                          }`}\n                          aria-current={active ? 'page' : undefined}\n                          title={item.description}\n                        >\n                          <item.icon className={`h-4 w-4 transition-colors ${\n                            active ? 'text-white' : 'text-gray-500 dark:text-gray-400 group-hover:text-gray-700 dark:group-hover:text-gray-300'\n                          }`} aria-hidden=\"true\" />\n                          <span className=\"flex-1 text-left\">{item.name}</span>\n                          {item.badge && (\n                            <span className={`ml-2 inline-flex items-center justify-center px-1.5 py-0.5 text-xs font-bold rounded-full ${\n                              active \n                                ? 'bg-white/20 text-white' \n                                : 'bg-blue-100 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400'\n                            }`} aria-label={`${item.badge} notifications`}>\n                              {item.badge}\n                            </span>\n                          )}\n                        </button>\n                      );\n                    })}\n                  </div>\n                </div>\n                \n                {/* Profile Actions */}\n                <div className=\"border-t border-gray-200 dark:border-gray-700 mt-2 pt-2\">\n                  <p className=\"px-4 py-1 text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Account</p>\n                  <button\n                    onClick={() => {\n                      router.push('/profile');\n                      setIsProfileMenuOpen(false);\n                    }}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                    role=\"menuitem\"\n                    aria-label=\"Go to profile page\"\n                  >\n                    <User className=\"h-4 w-4\" aria-hidden=\"true\" />\n                    <span>Profile</span>\n                  </button>\n                  <button\n                    onClick={() => {\n                      router.push('/settings');\n                      setIsProfileMenuOpen(false);\n                    }}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                  >\n                    <Settings className=\"h-4 w-4\" />\n                    <span>Settings</span>\n                  </button>\n                  <button\n                    onClick={toggleTheme}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                  >\n                    {theme === 'dark' ? <Sun className=\"h-4 w-4\" /> : <Moon className=\"h-4 w-4\" />}\n                    <span>{theme === 'dark' ? 'Light Mode' : 'Dark Mode'}</span>\n                  </button>\n                  <div className=\"border-t border-gray-200 dark:border-gray-700 my-2\"></div>\n                  <button\n                    onClick={handleLogout}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20\"\n                  >\n                    <LogOut className=\"h-4 w-4\" />\n                    <span>Sign Out</span>\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </nav>\n\n      {/* Mobile Navigation */}\n      <div className=\"lg:hidden\">\n        {/* Mobile Header */}\n        <div className=\"flex items-center justify-between h-16 px-4 bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 shadow-sm\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"h-8 w-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center\" role=\"img\" aria-label=\"KAIRO logo\">\n                <Zap className=\"h-5 w-5 text-white\" aria-hidden=\"true\" />\n              </div>\n              <span className=\"text-xl font-bold text-gray-900 dark:text-white\">KAIRO</span>\n            </div>\n            {isPaperTrading && <DemoModeIndicator className=\"text-xs\" />}\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={toggleTheme}\n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n              aria-label={`Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`}\n              title={`Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`}\n            >\n              {theme === 'dark' ? <Sun className=\"h-5 w-5\" aria-hidden=\"true\" /> : <Moon className=\"h-5 w-5\" aria-hidden=\"true\" />}\n            </button>\n            <button \n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors relative\"\n              aria-label=\"Notifications\"\n              title=\"View notifications\"\n            >\n              <Bell className=\"h-5 w-5\" />\n              <span className=\"absolute -top-1 -right-1 h-3 w-3 bg-red-500 rounded-full\"></span>\n            </button>\n          </div>\n        </div>\n\n        {/* Mobile Menu Overlay */}\n        {isMobileMenuOpen && (\n          <div className=\"fixed inset-0 z-50 lg:hidden\">\n            <div className=\"fixed inset-0 bg-black bg-opacity-25\" onClick={() => setIsMobileMenuOpen(false)}></div>\n            <div className=\"fixed top-0 right-0 bottom-0 w-full max-w-sm bg-white dark:bg-gray-800 shadow-xl\">\n              {/* Mobile Menu Header */}\n              <div className=\"flex items-center justify-between h-16 px-4 border-b border-gray-200 dark:border-gray-700\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"h-10 w-10 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full flex items-center justify-center\">\n                    <span className=\"text-white font-semibold text-sm\">\n                      {user ? `${user.firstName?.[0] || ''}${user.lastName?.[0] || ''}` || 'U' : 'U'}\n                    </span>\n                  </div>\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      {user ? `${user.firstName || ''} ${user.lastName || ''}`.trim() || 'User' : 'User'}\n                    </p>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      {user?.email || 'user@example.com'}\n                    </p>\n                  </div>\n                </div>\n                <button\n                  onClick={() => setIsMobileMenuOpen(false)}\n                  className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n                >\n                  <X className=\"h-6 w-6\" />\n                </button>\n              </div>\n\n              {/* Mobile Navigation Items */}\n              <div className=\"px-4 py-6 space-y-2\" onKeyDown={handleNavigationKeyDown} role=\"navigation\" aria-label=\"Mobile navigation menu\">\n                {navigationItems.map((item, index) => {\n                  const Icon = item.icon;\n                  const active = isActive(item.href);\n                  const isFocused = focusedItemIndex === index;\n                  \n                  return (\n                    <button\n                      key={item.name}\n                      onClick={() => {\n                        router.push(item.href);\n                        setIsMobileMenuOpen(false);\n                      }}\n                      onKeyDown={(e) => handleKeyDown(e, () => {\n                        router.push(item.href);\n                        setIsMobileMenuOpen(false);\n                      })}\n                      className={`w-full group flex items-center px-4 py-3 text-sm font-medium rounded-xl transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 ${\n                        active\n                          ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-lg'\n                          : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n                      } ${\n                        isFocused ? 'ring-2 ring-blue-500 ring-offset-2 dark:ring-offset-gray-800' : ''\n                      }`}\n                      aria-current={active ? 'page' : undefined}\n                      aria-describedby={item.description ? `${item.href}-mobile-desc` : undefined}\n                      title={item.description}\n                    >\n                      <Icon className={`mr-3 h-5 w-5 ${\n                        active ? 'text-white' : 'text-gray-400'\n                      }`} aria-hidden=\"true\" />\n                      <div className=\"flex-1 text-left\">\n                        <div className=\"font-medium\">{item.name}</div>\n                        {item.description && (\n                          <div className={`text-xs mt-1 ${\n                            active ? 'text-white/80' : 'text-gray-500 dark:text-gray-400'\n                          }`} id={`${item.href}-mobile-desc`}>\n                            {item.description}\n                          </div>\n                        )}\n                      </div>\n                      {item.badge && (\n                        <span className={`ml-2 inline-flex items-center justify-center px-2 py-1 text-xs font-bold rounded-full ${\n                          active \n                            ? 'bg-white/20 text-white' \n                            : 'bg-blue-100 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400'\n                        }`} aria-label={`${item.badge} notifications`}>\n                          {item.badge}\n                        </span>\n                      )}\n                    </button>\n                  );\n                })}\n              </div>\n\n              {/* Mobile Menu Footer */}\n              <div className=\"border-t border-gray-200 dark:border-gray-700 px-4 py-4 space-y-2\">\n                <button\n                  onClick={() => {\n                    router.push('/profile');\n                    setIsMobileMenuOpen(false);\n                  }}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-xl transition-colors\"\n                >\n                  <User className=\"h-5 w-5 text-gray-400\" />\n                  <span>Profile</span>\n                </button>\n                <button\n                  onClick={() => {\n                    router.push('/settings');\n                    setIsMobileMenuOpen(false);\n                  }}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-xl transition-colors\"\n                >\n                  <Settings className=\"h-5 w-5 text-gray-400\" />\n                  <span>Settings</span>\n                </button>\n                <button\n                  onClick={() => {\n                    router.push('/help');\n                    setIsMobileMenuOpen(false);\n                  }}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-xl transition-colors\"\n                >\n                  <HelpCircle className=\"h-5 w-5 text-gray-400\" />\n                  <span>Help & Support</span>\n                </button>\n                <button\n                  onClick={handleLogout}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20 rounded-xl transition-colors\"\n                >\n                  <LogOut className=\"h-5 w-5\" />\n                  <span>Sign Out</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Mobile Bottom Navigation */}\n      <div className=\"lg:hidden fixed bottom-0 left-0 right-0 bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700 shadow-lg\">\n        <div className=\"grid grid-cols-5 h-16\">\n          {/* Show only the 5 most important navigation items in bottom bar */}\n          {navigationItems.slice(0, 5).map((item) => {\n            const Icon = item.icon;\n            const active = isActive(item.href);\n            \n            return (\n              <button\n                key={item.name}\n                onClick={() => router.push(item.href)}\n                className={`flex flex-col items-center justify-center space-y-1 transition-colors ${\n                  active\n                    ? 'text-blue-600 dark:text-blue-400'\n                    : 'text-gray-400 hover:text-gray-600 dark:hover:text-gray-300'\n                }`}\n              >\n                <div className=\"relative\">\n                  <Icon className=\"h-5 w-5\" />\n                  {item.badge && (\n                    <span className=\"absolute -top-2 -right-2 h-4 w-4 bg-red-500 text-white text-xs rounded-full flex items-center justify-center\">\n                      {item.badge}\n                    </span>\n                  )}\n                </div>\n                <span className=\"text-xs font-medium truncate\">{item.name}</span>\n              </button>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AATA;;;;;;;;;AA8CA,MAAM,kBAAoC;IACxC;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,mOAAU;QAChB,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gNAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,mOAAU;QAChB,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,oOAAS;QACf,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,yNAAQ;QACd,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gNAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,oOAAS;QACf,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gNAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gNAAK;QACX,OAAO;QACP,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gNAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,mOAAU;QAChB,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,mNAAM;QACZ,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,0MAAG;QACT,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,0MAAG;QACT,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","debugId":null}},
    {"offset": {"line": 2273, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/layouts/AppLayout.tsx"],"sourcesContent":["'use client';\n\nimport { ReactNode } from 'react';\nimport Navigation from '@/components/Navigation';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { useRouter, usePathname } from 'next/navigation';\nimport { useEffect } from 'react';\n\ninterface AppLayoutProps {\n  children: ReactNode;\n  requireAuth?: boolean;\n}\n\nexport default function AppLayout({ children, requireAuth = true }: AppLayoutProps) {\n  const { user, loading } = useAuth();\n  const router = useRouter();\n  const pathname = usePathname();\n\n  // Public routes that don't require authentication\n  const publicRoutes = ['/login', '/register', '/demo', '/'];\n  const isPublicRoute = publicRoutes.includes(pathname);\n\n  useEffect(() => {\n    if (!loading && requireAuth && !user && !isPublicRoute) {\n      router.push('/login');\n    }\n  }, [user, loading, requireAuth, isPublicRoute, router]);\n\n  // Show loading spinner while checking authentication\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  // For public routes or when auth is not required, show content without navigation\n  if (!requireAuth || isPublicRoute) {\n    return <>{children}</>;\n  }\n\n  // For authenticated routes, show navigation + content\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      <Navigation />\n      \n      {/* Main content area with proper spacing for navigation */}\n      <div className=\"lg:pl-64\">\n        {/* Content wrapper with padding */}\n        <main className=\"min-h-screen\">\n          {children}\n        </main>\n      </div>\n      \n      {/* Bottom spacing for mobile navigation */}\n      <div className=\"h-16 lg:hidden\"></div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AACA;;;AANA;;;;;AAae,SAAS,UAAU,KAAgD;QAAhD,EAAE,QAAQ,EAAE,cAAc,IAAI,EAAkB,GAAhD;;IAChC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,IAAA,6IAAO;IACjC,MAAM,SAAS,IAAA,kJAAS;IACxB,MAAM,WAAW,IAAA,oJAAW;IAE5B,kDAAkD;IAClD,MAAM,eAAe;QAAC;QAAU;QAAa;QAAS;KAAI;IAC1D,MAAM,gBAAgB,aAAa,QAAQ,CAAC;IAE5C,IAAA,0KAAS;+BAAC;YACR,IAAI,CAAC,WAAW,eAAe,CAAC,QAAQ,CAAC,eAAe;gBACtD,OAAO,IAAI,CAAC;YACd;QACF;8BAAG;QAAC;QAAM;QAAS;QAAa;QAAe;KAAO;IAEtD,qDAAqD;IACrD,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,kFAAkF;IAClF,IAAI,CAAC,eAAe,eAAe;QACjC,qBAAO;sBAAG;;IACZ;IAEA,sDAAsD;IACtD,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,8IAAU;;;;;0BAGX,6LAAC;gBAAI,WAAU;0BAEb,cAAA,6LAAC;oBAAK,WAAU;8BACb;;;;;;;;;;;0BAKL,6LAAC;gBAAI,WAAU;;;;;;;;;;;;AAGrB;GA9CwB;;QACI,6IAAO;QAClB,kJAAS;QACP,oJAAW;;;KAHN","debugId":null}},
    {"offset": {"line": 2394, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/app/trading/pine-editor/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport PineScriptEditor from '../../../../components/trading/PineScriptEditor';\nimport AppLayout from '@/components/layouts/AppLayout';\nimport { Code, Save, Play, ArrowLeft } from 'lucide-react';\nimport Link from 'next/link';\nimport { toast } from 'react-hot-toast';\n\nexport default function PineEditorPage() {\n  const [isSaving, setIsSaving] = useState(false);\n  const [isRunning, setIsRunning] = useState(false);\n\n  const handleSave = async (script: string) => {\n    setIsSaving(true);\n    try {\n      // Here you would save the script to your backend\n      await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate API call\n      toast.success('Pine Script saved successfully!');\n    } catch (error) {\n      toast.error('Failed to save Pine Script');\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const handleRun = async (script: string) => {\n    setIsRunning(true);\n    try {\n      // Here you would execute the script\n      await new Promise(resolve => setTimeout(resolve, 2000)); // Simulate execution\n      toast.success('Pine Script executed successfully!');\n    } catch (error) {\n      toast.error('Failed to execute Pine Script');\n    } finally {\n      setIsRunning(false);\n    }\n  };\n\n  return (\n    <AppLayout>\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 p-6\">\n      {/* Header */}\n      <div className=\"bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center space-x-4\">\n              <Link\n                href=\"/trading\"\n                className=\"flex items-center space-x-2 text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white transition-colors\"\n              >\n                <ArrowLeft className=\"h-5 w-5\" />\n                <span>Back to Trading</span>\n              </Link>\n              <div className=\"h-6 w-px bg-gray-300 dark:bg-gray-600\" />\n              <div className=\"flex items-center space-x-2\">\n                <Code className=\"h-6 w-6 text-blue-600\" />\n                <h1 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                  Pine Script Editor\n                </h1>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center space-x-3\">\n              <div className=\"flex items-center space-x-2\">\n                {isSaving && (\n                  <div className=\"flex items-center space-x-2 text-sm text-gray-500 dark:text-gray-400\">\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\"></div>\n                    <span>Saving...</span>\n                  </div>\n                )}\n                {isRunning && (\n                  <div className=\"flex items-center space-x-2 text-sm text-gray-500 dark:text-gray-400\">\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-green-600\"></div>\n                    <span>Running...</span>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden\">\n          <PineScriptEditor\n            onSave={handleSave}\n            onRun={handleRun}\n          />\n        </div>\n      </div>\n      </div>\n    </AppLayout>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;;;AAPA;;;;;;;AASe,SAAS;;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EAAC;IACzC,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,yKAAQ,EAAC;IAE3C,MAAM,aAAa,OAAO;QACxB,YAAY;QACZ,IAAI;YACF,iDAAiD;YACjD,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS,QAAQ,oBAAoB;YAC7E,mKAAK,CAAC,OAAO,CAAC;QAChB,EAAE,OAAO,OAAO;YACd,mKAAK,CAAC,KAAK,CAAC;QACd,SAAU;YACR,YAAY;QACd;IACF;IAEA,MAAM,YAAY,OAAO;QACvB,aAAa;QACb,IAAI;YACF,oCAAoC;YACpC,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS,QAAQ,qBAAqB;YAC9E,mKAAK,CAAC,OAAO,CAAC;QAChB,EAAE,OAAO,OAAO;YACd,mKAAK,CAAC,KAAK,CAAC;QACd,SAAU;YACR,aAAa;QACf;IACF;IAEA,qBACE,6LAAC,wJAAS;kBACR,cAAA,6LAAC;YAAI,WAAU;;8BAEf,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;;sDACb,6LAAC,0KAAI;4CACH,MAAK;4CACL,WAAU;;8DAEV,6LAAC,gOAAS;oDAAC,WAAU;;;;;;8DACrB,6LAAC;8DAAK;;;;;;;;;;;;sDAER,6LAAC;4CAAI,WAAU;;;;;;sDACf,6LAAC;4CAAI,WAAU;;8DACb,6LAAC,6MAAI;oDAAC,WAAU;;;;;;8DAChB,6LAAC;oDAAG,WAAU;8DAAsD;;;;;;;;;;;;;;;;;;8CAMxE,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;wCAAI,WAAU;;4CACZ,0BACC,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAI,WAAU;;;;;;kEACf,6LAAC;kEAAK;;;;;;;;;;;;4CAGT,2BACC,6LAAC;gDAAI,WAAU;;kEACb,6LAAC;wDAAI,WAAU;;;;;;kEACf,6LAAC;kEAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAUpB,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,wJAAgB;4BACf,QAAQ;4BACR,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOnB;GAtFwB;KAAA","debugId":null}}]
}