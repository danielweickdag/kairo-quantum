{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/contexts/AuthContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-hot-toast';\n\ninterface User {\n  id: string;\n  username: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  avatar?: string;\n  bio?: string;\n  accountType: 'INDIVIDUAL' | 'HEDGE_FUND' | 'CELEBRITY' | 'INFLUENCER';\n  isVerified: boolean;\n  isPublic: boolean;\n  createdAt: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  register: (data: RegisterData) => Promise<void>;\n  logout: () => void;\n  updateProfile: (data: Partial<User>) => Promise<void>;\n  refreshToken: () => Promise<void>;\n}\n\ninterface RegisterData {\n  username: string;\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  accountType: 'INDIVIDUAL' | 'HEDGE_FUND' | 'CELEBRITY' | 'INFLUENCER';\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Configure axios defaults\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || 'https://api.kairoquantum.com';\naxios.defaults.baseURL = `${API_URL}/api`;\n\n// Add request interceptor to include auth token\naxios.interceptors.request.use(\n  (config) => {\n    const token = typeof window !== 'undefined' ? localStorage.getItem('token') : null;\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor to handle token refresh\naxios.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n    \n    if (error.response?.status === 401 && !originalRequest._retry && typeof window !== 'undefined') {\n      originalRequest._retry = true;\n      \n      try {\n        const refreshToken = localStorage.getItem('refreshToken');\n        if (refreshToken) {\n          const response = await axios.post('/auth/refresh', {\n            refreshToken,\n          });\n          \n          const { token } = response.data.data;\n          localStorage.setItem('token', token);\n          \n          // Retry the original request\n          originalRequest.headers.Authorization = `Bearer ${token}`;\n          return axios(originalRequest);\n        }\n      } catch (refreshError) {\n        // Refresh failed, redirect to login\n        localStorage.removeItem('token');\n        localStorage.removeItem('refreshToken');\n        if (typeof window !== 'undefined') {\n          window.location.href = '/login';\n        }\n      }\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      if (typeof window === 'undefined') {\n        setLoading(false);\n        return;\n      }\n      \n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await axios.get('/auth/me');\n          setUser(response.data.data.user);\n        } catch (error) {\n          localStorage.removeItem('token');\n          localStorage.removeItem('refreshToken');\n        }\n      }\n      setLoading(false);\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await axios.post('/auth/login', {\n        email,\n        password,\n      });\n\n      const { user, accessToken, refreshToken } = response.data.data;\n      \n      if (typeof window !== 'undefined') {\n        localStorage.setItem('token', accessToken);\n        localStorage.setItem('refreshToken', refreshToken);\n      }\n      setUser(user);\n      \n      toast.success('Login successful!');\n    } catch (error: any) {\n      const message = error.response?.data?.message || 'Login failed';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  const register = async (data: RegisterData) => {\n    try {\n      const response = await axios.post('/auth/register', data);\n      \n      const { user, accessToken, refreshToken } = response.data.data;\n      \n      if (typeof window !== 'undefined') {\n        localStorage.setItem('token', accessToken);\n        localStorage.setItem('refreshToken', refreshToken);\n      }\n      setUser(user);\n      \n      toast.success('Registration successful!');\n    } catch (error: any) {\n      const message = error.response?.data?.message || 'Registration failed';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    if (typeof window !== 'undefined') {\n      localStorage.removeItem('token');\n      localStorage.removeItem('refreshToken');\n    }\n    setUser(null);\n    toast.success('Logged out successfully');\n  };\n\n  const updateProfile = async (data: Partial<User>) => {\n    try {\n      const response = await axios.put('/auth/profile', data);\n      setUser(response.data.data.user);\n      toast.success('Profile updated successfully!');\n    } catch (error: any) {\n      const message = error.response?.data?.message || 'Profile update failed';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  const refreshToken = async () => {\n    try {\n      if (typeof window === 'undefined') {\n        throw new Error('Cannot refresh token on server side');\n      }\n      \n      const refreshToken = localStorage.getItem('refreshToken');\n      if (!refreshToken) throw new Error('No refresh token');\n      \n      const response = await axios.post('/auth/refresh', {\n        refreshToken,\n      });\n      \n      const { token } = response.data.data;\n      localStorage.setItem('token', token);\n    } catch (error) {\n      logout();\n      throw error;\n    }\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile,\n    refreshToken,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/contexts/ThemeContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';\n\ntype Theme = 'light' | 'dark';\n\ninterface ThemeContextType {\n  theme: Theme;\n  toggleTheme: () => void;\n  setTheme: (theme: Theme) => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const ThemeProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [theme, setThemeState] = useState<Theme>('light');\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n    \n    // Check for saved theme preference or default to 'light'\n    const savedTheme = typeof window !== 'undefined' ? localStorage.getItem('theme') as Theme : null;\n    const prefersDark = typeof window !== 'undefined' ? window.matchMedia('(prefers-color-scheme: dark)').matches : false;\n    \n    const initialTheme = savedTheme || (prefersDark ? 'dark' : 'light');\n    setThemeState(initialTheme);\n    \n    // Apply theme to document\n    if (typeof document !== 'undefined') {\n      document.documentElement.classList.toggle('dark', initialTheme === 'dark');\n    }\n  }, []);\n\n  // Prevent hydration mismatch by not rendering theme-dependent content until mounted\n  if (!mounted) {\n    return <>{children}</>;\n  }\n\n  const setTheme = (newTheme: Theme) => {\n    setThemeState(newTheme);\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('theme', newTheme);\n    }\n    if (typeof document !== 'undefined') {\n      document.documentElement.classList.toggle('dark', newTheme === 'dark');\n    }\n  };\n\n  const toggleTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme);\n  };\n\n  const value = {\n    theme,\n    toggleTheme,\n    setTheme,\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    // Return default values during mounting phase to prevent hydration errors\n    return {\n      theme: 'light' as Theme,\n      toggleTheme: () => {},\n      setTheme: () => {}\n    };\n  }\n  return context;\n};\n\nexport default ThemeContext;"],"names":[],"mappings":";;;;;;;;;AAEA;;;AAFA;;AAYA,MAAM,6BAAe,IAAA,8KAAa,EAA+B;AAE1D,MAAM,gBAAmD;QAAC,EAAE,QAAQ,EAAE;;IAC3E,MAAM,CAAC,OAAO,cAAc,GAAG,IAAA,yKAAQ,EAAQ;IAC/C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,yKAAQ,EAAC;IAEvC,IAAA,0KAAS;mCAAC;YACR,WAAW;YAEX,yDAAyD;YACzD,MAAM,aAAa,uCAAgC,aAAa,OAAO,CAAC,WAAoB;YAC5F,MAAM,cAAc,uCAAgC,OAAO,UAAU,CAAC,gCAAgC,OAAO,GAAG;YAEhH,MAAM,eAAe,cAAc,CAAC,cAAc,SAAS,OAAO;YAClE,cAAc;YAEd,0BAA0B;YAC1B,IAAI,OAAO,aAAa,aAAa;gBACnC,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,iBAAiB;YACrE;QACF;kCAAG,EAAE;IAEL,oFAAoF;IACpF,IAAI,CAAC,SAAS;QACZ,qBAAO;sBAAG;;IACZ;IAEA,MAAM,WAAW,CAAC;QAChB,cAAc;QACd,wCAAmC;YACjC,aAAa,OAAO,CAAC,SAAS;QAChC;QACA,IAAI,OAAO,aAAa,aAAa;YACnC,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,aAAa;QACjE;IACF;IAEA,MAAM,cAAc;QAClB,MAAM,WAAW,UAAU,UAAU,SAAS;QAC9C,SAAS;IACX;IAEA,MAAM,QAAQ;QACZ;QACA;QACA;IACF;IAEA,qBACE,6LAAC,aAAa,QAAQ;QAAC,OAAO;kBAC3B;;;;;;AAGP;GAnDa;KAAA;AAqDN,MAAM,WAAW;;IACtB,MAAM,UAAU,IAAA,2KAAU,EAAC;IAC3B,IAAI,YAAY,WAAW;QACzB,0EAA0E;QAC1E,OAAO;YACL,OAAO;YACP,aAAa,KAAO;YACpB,UAAU,KAAO;QACnB;IACF;IACA,OAAO;AACT;IAXa;uCAaE","debugId":null}},
    {"offset": {"line": 298, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/contexts/BrokerAccountContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, useEffect, useCallback, ReactNode } from 'react';\n\ninterface BrokerAccount {\n  id: string;\n  accountNumber: string;\n  accountType: string;\n  status: string;\n  buyingPower: number;\n  cashBalance: number;\n  portfolioValue: number;\n  currency: string;\n  brokerConnection: {\n    id: string;\n    accountName: string;\n    brokerType: string;\n    environment: string;\n  };\n}\n\ninterface BrokerAccountContextType {\n  selectedAccount: BrokerAccount | null;\n  setSelectedAccount: (account: BrokerAccount | null) => void;\n  accounts: BrokerAccount[];\n  loading: boolean;\n  error: string | null;\n  refreshAccounts: () => Promise<void>;\n}\n\nconst BrokerAccountContext = createContext<BrokerAccountContextType | undefined>(undefined);\n\ninterface BrokerAccountProviderProps {\n  children: ReactNode;\n}\n\nexport function BrokerAccountProvider({ children }: BrokerAccountProviderProps) {\n  const [selectedAccount, setSelectedAccount] = useState<BrokerAccount | null>(null);\n  const [accounts, setAccounts] = useState<BrokerAccount[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchBrokerAccounts = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const token = localStorage.getItem('token');\n      if (!token) {\n        // User is not authenticated, set empty accounts and return\n        setAccounts([]);\n        setSelectedAccount(null);\n        setLoading(false);\n        return;\n      }\n\n      const response = await fetch('/api/brokers/accounts', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch broker accounts');\n      }\n\n      const data = await response.json();\n      if (data.success) {\n        setAccounts(data.data || []);\n        \n        // If there's a previously selected account, try to maintain it\n        if (selectedAccount) {\n          const stillExists = data.data.find((acc: BrokerAccount) => acc.id === selectedAccount.id);\n          if (!stillExists) {\n            setSelectedAccount(null);\n          }\n        }\n        \n        // Auto-select the first account if none is selected and accounts are available\n        if (!selectedAccount && data.data.length > 0) {\n          setSelectedAccount(data.data[0]);\n        }\n      } else {\n        throw new Error(data.message || 'Failed to fetch accounts');\n      }\n    } catch (err) {\n      console.error('Error fetching broker accounts:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load accounts');\n      setAccounts([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedAccount]);\n\n  const refreshAccounts = async () => {\n    await fetchBrokerAccounts();\n  };\n\n  useEffect(() => {\n    fetchBrokerAccounts();\n  }, []);\n\n  // Save selected account to localStorage\n  useEffect(() => {\n    if (selectedAccount) {\n      localStorage.setItem('selectedBrokerAccount', JSON.stringify(selectedAccount));\n    } else {\n      localStorage.removeItem('selectedBrokerAccount');\n    }\n  }, [selectedAccount]);\n\n  // Load selected account from localStorage on mount\n  useEffect(() => {\n    const savedAccount = localStorage.getItem('selectedBrokerAccount');\n    if (savedAccount) {\n      try {\n        const parsedAccount = JSON.parse(savedAccount);\n        setSelectedAccount(parsedAccount);\n      } catch (err) {\n        console.error('Error parsing saved broker account:', err);\n        localStorage.removeItem('selectedBrokerAccount');\n      }\n    }\n  }, []);\n\n  const value: BrokerAccountContextType = {\n    selectedAccount,\n    setSelectedAccount,\n    accounts,\n    loading,\n    error,\n    refreshAccounts\n  };\n\n  return (\n    <BrokerAccountContext.Provider value={value}>\n      {children}\n    </BrokerAccountContext.Provider>\n  );\n}\n\nexport function useBrokerAccount() {\n  const context = useContext(BrokerAccountContext);\n  if (context === undefined) {\n    throw new Error('useBrokerAccount must be used within a BrokerAccountProvider');\n  }\n  return context;\n}\n\nexport type { BrokerAccount, BrokerAccountContextType };"],"names":[],"mappings":";;;;;;;AAEA;;;AAFA;;AA8BA,MAAM,qCAAuB,IAAA,8KAAa,EAAuC;AAM1E,SAAS,sBAAsB,KAAwC;QAAxC,EAAE,QAAQ,EAA8B,GAAxC;;IACpC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,yKAAQ,EAAuB;IAC7E,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EAAkB,EAAE;IAC5D,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,yKAAQ,EAAC;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,yKAAQ,EAAgB;IAElD,MAAM,sBAAsB,IAAA,4KAAW;kEAAC;YACtC,IAAI;gBACF,WAAW;gBACX,SAAS;gBAET,MAAM,QAAQ,aAAa,OAAO,CAAC;gBACnC,IAAI,CAAC,OAAO;oBACV,2DAA2D;oBAC3D,YAAY,EAAE;oBACd,mBAAmB;oBACnB,WAAW;oBACX;gBACF;gBAEA,MAAM,WAAW,MAAM,MAAM,yBAAyB;oBACpD,SAAS;wBACP,iBAAiB,AAAC,UAAe,OAAN;wBAC3B,gBAAgB;oBAClB;gBACF;gBAEA,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,IAAI,MAAM;gBAClB;gBAEA,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,IAAI,KAAK,OAAO,EAAE;oBAChB,YAAY,KAAK,IAAI,IAAI,EAAE;oBAE3B,+DAA+D;oBAC/D,IAAI,iBAAiB;wBACnB,MAAM,cAAc,KAAK,IAAI,CAAC,IAAI;kGAAC,CAAC,MAAuB,IAAI,EAAE,KAAK,gBAAgB,EAAE;;wBACxF,IAAI,CAAC,aAAa;4BAChB,mBAAmB;wBACrB;oBACF;oBAEA,+EAA+E;oBAC/E,IAAI,CAAC,mBAAmB,KAAK,IAAI,CAAC,MAAM,GAAG,GAAG;wBAC5C,mBAAmB,KAAK,IAAI,CAAC,EAAE;oBACjC;gBACF,OAAO;oBACL,MAAM,IAAI,MAAM,KAAK,OAAO,IAAI;gBAClC;YACF,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,mCAAmC;gBACjD,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;gBAC9C,YAAY,EAAE;YAChB,SAAU;gBACR,WAAW;YACb;QACF;iEAAG;QAAC;KAAgB;IAEpB,MAAM,kBAAkB;QACtB,MAAM;IACR;IAEA,IAAA,0KAAS;2CAAC;YACR;QACF;0CAAG,EAAE;IAEL,wCAAwC;IACxC,IAAA,0KAAS;2CAAC;YACR,IAAI,iBAAiB;gBACnB,aAAa,OAAO,CAAC,yBAAyB,KAAK,SAAS,CAAC;YAC/D,OAAO;gBACL,aAAa,UAAU,CAAC;YAC1B;QACF;0CAAG;QAAC;KAAgB;IAEpB,mDAAmD;IACnD,IAAA,0KAAS;2CAAC;YACR,MAAM,eAAe,aAAa,OAAO,CAAC;YAC1C,IAAI,cAAc;gBAChB,IAAI;oBACF,MAAM,gBAAgB,KAAK,KAAK,CAAC;oBACjC,mBAAmB;gBACrB,EAAE,OAAO,KAAK;oBACZ,QAAQ,KAAK,CAAC,uCAAuC;oBACrD,aAAa,UAAU,CAAC;gBAC1B;YACF;QACF;0CAAG,EAAE;IAEL,MAAM,QAAkC;QACtC;QACA;QACA;QACA;QACA;QACA;IACF;IAEA,qBACE,6LAAC,qBAAqB,QAAQ;QAAC,OAAO;kBACnC;;;;;;AAGP;GAxGgB;KAAA;AA0GT,SAAS;;IACd,MAAM,UAAU,IAAA,2KAAU,EAAC;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANgB","debugId":null}},
    {"offset": {"line": 442, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/contexts/TradingModeContext.tsx"],"sourcesContent":["'use client'\n\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\n\ninterface TradingModeContextType {\n  isPaperTrading: boolean;\n  setIsPaperTrading: (value: boolean) => void;\n  tradingMode: 'paper' | 'live';\n  toggleTradingMode: () => void;\n}\n\nconst TradingModeContext = createContext<TradingModeContextType | undefined>(undefined);\n\ninterface TradingModeProviderProps {\n  children: ReactNode;\n}\n\nexport function TradingModeProvider({ children }: TradingModeProviderProps) {\n  const [isPaperTrading, setIsPaperTrading] = useState(true); // Default to paper trading (demo mode)\n\n  // Load trading mode from localStorage on mount\n  useEffect(() => {\n    const savedMode = localStorage.getItem('tradingMode');\n    if (savedMode) {\n      setIsPaperTrading(savedMode === 'paper');\n    }\n  }, []);\n\n  // Save trading mode to localStorage when it changes\n  useEffect(() => {\n    localStorage.setItem('tradingMode', isPaperTrading ? 'paper' : 'live');\n  }, [isPaperTrading]);\n\n  const tradingMode = isPaperTrading ? 'paper' : 'live';\n\n  const toggleTradingMode = () => {\n    setIsPaperTrading(!isPaperTrading);\n  };\n\n  return (\n    <TradingModeContext.Provider\n      value={{\n        isPaperTrading,\n        setIsPaperTrading,\n        tradingMode,\n        toggleTradingMode,\n      }}\n    >\n      {children}\n    </TradingModeContext.Provider>\n  );\n}\n\nexport function useTradingMode() {\n  const context = useContext(TradingModeContext);\n  if (context === undefined) {\n    throw new Error('useTradingMode must be used within a TradingModeProvider');\n  }\n  return context;\n}\n\nexport { TradingModeContext };"],"names":[],"mappings":";;;;;;;;;AAEA;;;AAFA;;AAWA,MAAM,mCAAqB,IAAA,8KAAa,EAAqC;AAMtE,SAAS,oBAAoB,KAAsC;QAAtC,EAAE,QAAQ,EAA4B,GAAtC;;IAClC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,IAAA,yKAAQ,EAAC,OAAO,uCAAuC;IAEnG,+CAA+C;IAC/C,IAAA,0KAAS;yCAAC;YACR,MAAM,YAAY,aAAa,OAAO,CAAC;YACvC,IAAI,WAAW;gBACb,kBAAkB,cAAc;YAClC;QACF;wCAAG,EAAE;IAEL,oDAAoD;IACpD,IAAA,0KAAS;yCAAC;YACR,aAAa,OAAO,CAAC,eAAe,iBAAiB,UAAU;QACjE;wCAAG;QAAC;KAAe;IAEnB,MAAM,cAAc,iBAAiB,UAAU;IAE/C,MAAM,oBAAoB;QACxB,kBAAkB,CAAC;IACrB;IAEA,qBACE,6LAAC,mBAAmB,QAAQ;QAC1B,OAAO;YACL;YACA;YACA;YACA;QACF;kBAEC;;;;;;AAGP;GAlCgB;KAAA;AAoCT,SAAS;;IACd,MAAM,UAAU,IAAA,2KAAU,EAAC;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANgB","debugId":null}},
    {"offset": {"line": 517, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/app/providers.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { AuthProvider } from '@/contexts/AuthContext';\nimport { ThemeProvider } from '@/contexts/ThemeContext';\nimport { BrokerAccountProvider } from '@/contexts/BrokerAccountContext';\nimport { TradingModeProvider } from '@/contexts/TradingModeContext';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      retry: 1,\n      staleTime: 5 * 60 * 1000, // 5 minutes\n    },\n  },\n});\n\ninterface ProvidersProps {\n  children: React.ReactNode;\n}\n\nexport function Providers({ children }: ProvidersProps) {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider>\n        <AuthProvider>\n          <BrokerAccountProvider>\n            <TradingModeProvider>\n              {children}\n            </TradingModeProvider>\n          </BrokerAccountProvider>\n        </AuthProvider>\n      </ThemeProvider>\n    </QueryClientProvider>\n  );\n}"],"names":[],"mappings":";;;;;AAGA;AAAA;AACA;AACA;AACA;AACA;AAPA;;;;;;;AASA,MAAM,cAAc,IAAI,+LAAW,CAAC;IAClC,gBAAgB;QACd,SAAS;YACP,sBAAsB;YACtB,OAAO;YACP,WAAW,IAAI,KAAK;QACtB;IACF;AACF;AAMO,SAAS,UAAU,KAA4B;QAA5B,EAAE,QAAQ,EAAkB,GAA5B;IACxB,qBACE,6LAAC,gNAAmB;QAAC,QAAQ;kBAC3B,cAAA,6LAAC,oJAAa;sBACZ,cAAA,6LAAC,kJAAY;0BACX,cAAA,6LAAC,oKAAqB;8BACpB,cAAA,6LAAC,gKAAmB;kCACjB;;;;;;;;;;;;;;;;;;;;;;;;;;AAOf;KAdgB","debugId":null}},
    {"offset": {"line": 589, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/lib/errorHandler.ts"],"sourcesContent":["'use client';\n\nimport { toast } from 'react-hot-toast';\n\n// Error types for better categorization\nexport enum ErrorType {\n  VALIDATION = 'validation',\n  NETWORK = 'network',\n  AUTHENTICATION = 'authentication',\n  TRADING = 'trading',\n  COMPILATION = 'compilation',\n  SYSTEM = 'system',\n  USER_INPUT = 'user_input'\n}\n\n// Error severity levels\nexport enum ErrorSeverity {\n  LOW = 'low',\n  MEDIUM = 'medium',\n  HIGH = 'high',\n  CRITICAL = 'critical'\n}\n\n// Standardized error interface\nexport interface AppError {\n  type: ErrorType;\n  severity: ErrorSeverity;\n  message: string;\n  code?: string;\n  details?: any;\n  timestamp: Date;\n  userId?: string;\n  context?: string;\n}\n\n// Error handler configuration\ninterface ErrorHandlerConfig {\n  showToast: boolean;\n  logToConsole: boolean;\n  logToService: boolean;\n  retryable: boolean;\n}\n\n// Default configurations for different error types\nconst DEFAULT_CONFIGS: Record<ErrorType, ErrorHandlerConfig> = {\n  [ErrorType.VALIDATION]: {\n    showToast: true,\n    logToConsole: false,\n    logToService: false,\n    retryable: false\n  },\n  [ErrorType.NETWORK]: {\n    showToast: true,\n    logToConsole: true,\n    logToService: true,\n    retryable: true\n  },\n  [ErrorType.AUTHENTICATION]: {\n    showToast: true,\n    logToConsole: true,\n    logToService: true,\n    retryable: false\n  },\n  [ErrorType.TRADING]: {\n    showToast: true,\n    logToConsole: true,\n    logToService: true,\n    retryable: true\n  },\n  [ErrorType.COMPILATION]: {\n    showToast: false,\n    logToConsole: true,\n    logToService: false,\n    retryable: false\n  },\n  [ErrorType.SYSTEM]: {\n    showToast: true,\n    logToConsole: true,\n    logToService: true,\n    retryable: false\n  },\n  [ErrorType.USER_INPUT]: {\n    showToast: true,\n    logToConsole: false,\n    logToService: false,\n    retryable: false\n  }\n};\n\n// Centralized error handler class\nclass ErrorHandler {\n  private static instance: ErrorHandler;\n  private errorQueue: AppError[] = [];\n  private maxQueueSize = 100;\n\n  private constructor() {}\n\n  static getInstance(): ErrorHandler {\n    if (!ErrorHandler.instance) {\n      ErrorHandler.instance = new ErrorHandler();\n    }\n    return ErrorHandler.instance;\n  }\n\n  // Main error handling method\n  handle(error: Error | AppError | string, context?: string, config?: Partial<ErrorHandlerConfig>): AppError {\n    const appError = this.normalizeError(error, context);\n    const finalConfig = { ...DEFAULT_CONFIGS[appError.type], ...config };\n\n    // Add to error queue\n    this.addToQueue(appError);\n\n    // Handle based on configuration\n    if (finalConfig.showToast) {\n      this.showToast(appError);\n    }\n\n    if (finalConfig.logToConsole) {\n      this.logToConsole(appError);\n    }\n\n    if (finalConfig.logToService) {\n      this.logToService(appError);\n    }\n\n    return appError;\n  }\n\n  // Normalize different error types to AppError\n  private normalizeError(error: Error | AppError | string, context?: string): AppError {\n    if (typeof error === 'string') {\n      return {\n        type: ErrorType.SYSTEM,\n        severity: ErrorSeverity.MEDIUM,\n        message: error,\n        timestamp: new Date(),\n        context\n      };\n    }\n\n    if (error instanceof Error) {\n      return {\n        type: this.inferErrorType(error),\n        severity: this.inferSeverity(error),\n        message: error.message,\n        details: {\n          name: error.name,\n          stack: error.stack\n        },\n        timestamp: new Date(),\n        context\n      };\n    }\n\n    // Already an AppError\n    return {\n      ...error,\n      context: context || error.context\n    };\n  }\n\n  // Infer error type from Error object\n  private inferErrorType(error: Error): ErrorType {\n    const message = error.message.toLowerCase();\n    const name = error.name.toLowerCase();\n\n    if (message.includes('validation') || message.includes('required') || message.includes('invalid')) {\n      return ErrorType.VALIDATION;\n    }\n    if (message.includes('network') || message.includes('fetch') || name.includes('network')) {\n      return ErrorType.NETWORK;\n    }\n    if (message.includes('auth') || message.includes('token') || message.includes('unauthorized')) {\n      return ErrorType.AUTHENTICATION;\n    }\n    if (message.includes('trade') || message.includes('order') || message.includes('position')) {\n      return ErrorType.TRADING;\n    }\n    if (message.includes('compile') || message.includes('syntax') || message.includes('parse')) {\n      return ErrorType.COMPILATION;\n    }\n\n    return ErrorType.SYSTEM;\n  }\n\n  // Infer severity from Error object\n  private inferSeverity(error: Error): ErrorSeverity {\n    const message = error.message.toLowerCase();\n\n    if (message.includes('critical') || message.includes('fatal')) {\n      return ErrorSeverity.CRITICAL;\n    }\n    if (message.includes('failed') || message.includes('error')) {\n      return ErrorSeverity.HIGH;\n    }\n    if (message.includes('warning') || message.includes('deprecated')) {\n      return ErrorSeverity.MEDIUM;\n    }\n\n    return ErrorSeverity.LOW;\n  }\n\n  // Show appropriate toast based on error severity\n  private showToast(error: AppError): void {\n    const message = this.formatUserMessage(error);\n\n    switch (error.severity) {\n      case ErrorSeverity.CRITICAL:\n        toast.error(message, { duration: 8000 });\n        break;\n      case ErrorSeverity.HIGH:\n        toast.error(message, { duration: 6000 });\n        break;\n      case ErrorSeverity.MEDIUM:\n        toast(message, { icon: '⚠️', duration: 4000 });\n        break;\n      case ErrorSeverity.LOW:\n        toast(message, { icon: 'ℹ️', duration: 3000 });\n        break;\n    }\n  }\n\n  // Format user-friendly error messages\n  private formatUserMessage(error: AppError): string {\n    switch (error.type) {\n      case ErrorType.VALIDATION:\n        return error.message;\n      case ErrorType.NETWORK:\n        return 'Network error. Please check your connection and try again.';\n      case ErrorType.AUTHENTICATION:\n        return 'Authentication failed. Please log in again.';\n      case ErrorType.TRADING:\n        return `Trading error: ${error.message}`;\n      case ErrorType.COMPILATION:\n        return `Compilation error: ${error.message}`;\n      default:\n        return 'An unexpected error occurred. Please try again.';\n    }\n  }\n\n  // Log to console with proper formatting\n  private logToConsole(error: AppError): void {\n    const logMethod = error.severity === ErrorSeverity.CRITICAL || error.severity === ErrorSeverity.HIGH \n      ? console.error \n      : console.warn;\n\n    logMethod(`[${error.type.toUpperCase()}] ${error.message}`, {\n      severity: error.severity,\n      timestamp: error.timestamp,\n      context: error.context,\n      details: error.details\n    });\n  }\n\n  // Log to external service (placeholder for future implementation)\n  private logToService(error: AppError): void {\n    // In production, this would send to error tracking service like Sentry\n    if (process.env.NODE_ENV === 'production') {\n      // Example: Sentry.captureException(error);\n      console.log('Would log to external service:', error);\n    }\n  }\n\n  // Add error to queue for analysis\n  private addToQueue(error: AppError): void {\n    this.errorQueue.push(error);\n    if (this.errorQueue.length > this.maxQueueSize) {\n      this.errorQueue.shift(); // Remove oldest error\n    }\n  }\n\n  // Get recent errors for debugging\n  getRecentErrors(count: number = 10): AppError[] {\n    return this.errorQueue.slice(-count);\n  }\n\n  // Clear error queue\n  clearErrors(): void {\n    this.errorQueue = [];\n  }\n\n  // Get error statistics\n  getErrorStats(): { total: number; byType: Record<ErrorType, number>; bySeverity: Record<ErrorSeverity, number> } {\n    const stats = {\n      total: this.errorQueue.length,\n      byType: {} as Record<ErrorType, number>,\n      bySeverity: {} as Record<ErrorSeverity, number>\n    };\n\n    // Initialize counters\n    Object.values(ErrorType).forEach(type => {\n      stats.byType[type] = 0;\n    });\n    Object.values(ErrorSeverity).forEach(severity => {\n      stats.bySeverity[severity] = 0;\n    });\n\n    // Count errors\n    this.errorQueue.forEach(error => {\n      stats.byType[error.type]++;\n      stats.bySeverity[error.severity]++;\n    });\n\n    return stats;\n  }\n}\n\n// Export singleton instance\nexport const errorHandler = ErrorHandler.getInstance();\n\n// Convenience functions for common error types\nexport const handleValidationError = (message: string, context?: string) => {\n  return errorHandler.handle({\n    type: ErrorType.VALIDATION,\n    severity: ErrorSeverity.MEDIUM,\n    message,\n    timestamp: new Date()\n  }, context);\n};\n\nexport const handleNetworkError = (error: Error, context?: string) => {\n  return errorHandler.handle(error, context, {\n    showToast: true,\n    logToConsole: true,\n    logToService: true\n  });\n};\n\nexport const handleTradingError = (message: string, details?: any, context?: string) => {\n  return errorHandler.handle({\n    type: ErrorType.TRADING,\n    severity: ErrorSeverity.HIGH,\n    message,\n    details,\n    timestamp: new Date()\n  }, context);\n};\n\nexport const handleCompilationError = (line: number, message: string, type: 'error' | 'warning' = 'error') => {\n  return errorHandler.handle({\n    type: ErrorType.COMPILATION,\n    severity: type === 'error' ? ErrorSeverity.HIGH : ErrorSeverity.MEDIUM,\n    message: `Line ${line}: ${message}`,\n    details: { line, type },\n    timestamp: new Date()\n  }, 'Pine Script Compilation');\n};\n\n// React hook for error handling\nexport const useErrorHandler = () => {\n  return {\n    handleError: (error: Error | string, context?: string) => errorHandler.handle(error, context),\n    handleValidationError,\n    handleNetworkError,\n    handleTradingError,\n    handleCompilationError,\n    getRecentErrors: () => errorHandler.getRecentErrors(),\n    getErrorStats: () => errorHandler.getErrorStats(),\n    clearErrors: () => errorHandler.clearErrors()\n  };\n};\n\nexport default errorHandler;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 933, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ErrorBoundary.tsx"],"sourcesContent":["'use client';\n\nimport React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { errorHandler, ErrorSeverity } from '@/lib/errorHandler';\nimport { AlertTriangle, RefreshCw, Home } from 'lucide-react';\n\ninterface Props {\n  children: ReactNode;\n  fallback?: ReactNode;\n  onError?: (error: Error, errorInfo: ErrorInfo) => void;\n}\n\ninterface State {\n  hasError: boolean;\n  error?: Error;\n  errorInfo?: ErrorInfo;\n}\n\nclass ErrorBoundary extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: Error): State {\n    // Update state so the next render will show the fallback UI\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    // Store error info in state\n    this.setState({ errorInfo });\n\n    // Use centralized error handler\n    errorHandler.handle(error, 'ErrorBoundary');\n\n    // Call custom error handler if provided\n    if (this.props.onError) {\n      this.props.onError(error, errorInfo);\n    }\n  }\n\n  handleRetry = () => {\n    this.setState({ hasError: false, error: undefined, errorInfo: undefined });\n  };\n\n  handleGoHome = () => {\n    // Use router navigation instead of window.location for better hydration\n    if (typeof window !== 'undefined') {\n      window.location.href = '/dashboard';\n    }\n  };\n\n  render() {\n    if (this.state.hasError) {\n      // Custom fallback UI\n      if (this.props.fallback) {\n        return this.props.fallback;\n      }\n\n      // Default fallback UI\n      return (\n        <div className=\"min-h-screen flex items-center justify-center p-4 bg-gray-50 dark:bg-gray-900\">\n          <div className=\"w-full max-w-md bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n            <div className=\"p-6 text-center\">\n              <div className=\"mx-auto mb-4 w-12 h-12 bg-red-100 dark:bg-red-900/20 rounded-full flex items-center justify-center\">\n                <AlertTriangle className=\"w-6 h-6 text-red-600 dark:text-red-400\" />\n              </div>\n              <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\n                Oops! Something went wrong\n              </h2>\n            </div>\n            <div className=\"px-6 pb-6 space-y-4\">\n              <p className=\"text-sm text-gray-600 dark:text-gray-400 text-center\">\n                We encountered an unexpected error. This has been logged and our team will look into it.\n              </p>\n              \n              {process.env.NODE_ENV === 'development' && this.state.error && (\n                <details className=\"mt-4 p-3 bg-gray-100 dark:bg-gray-800 rounded-lg\">\n                  <summary className=\"cursor-pointer text-sm font-medium text-gray-700 dark:text-gray-300\">\n                    Error Details (Development)\n                  </summary>\n                  <div className=\"mt-2 text-xs text-gray-600 dark:text-gray-400 font-mono\">\n                    <div className=\"mb-2\">\n                      <strong>Error:</strong> {this.state.error.message}\n                    </div>\n                    {this.state.error.stack && (\n                      <div className=\"mb-2\">\n                        <strong>Stack:</strong>\n                        <pre className=\"whitespace-pre-wrap mt-1\">{this.state.error.stack}</pre>\n                      </div>\n                    )}\n                    {this.state.errorInfo?.componentStack && (\n                      <div>\n                        <strong>Component Stack:</strong>\n                        <pre className=\"whitespace-pre-wrap mt-1\">{this.state.errorInfo.componentStack}</pre>\n                      </div>\n                    )}\n                  </div>\n                </details>\n              )}\n              \n              <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\n                <button \n                  onClick={this.handleRetry}\n                  className=\"flex-1 flex items-center justify-center gap-2 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors\"\n                >\n                  <RefreshCw className=\"w-4 h-4\" />\n                  Try Again\n                </button>\n                <button \n                  onClick={this.handleGoHome}\n                  className=\"flex-1 flex items-center justify-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n                >\n                  <Home className=\"w-4 h-4\" />\n                  Go Home\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n\n// Hook version for functional components (React 18+)\nexport function useErrorHandler() {\n  return (error: Error, errorInfo?: ErrorInfo) => {\n      // Use centralized error handler\n      errorHandler.handle(error, 'useErrorHandler');\n  };\n}\n\n// Higher-order component for wrapping components with error boundary\nexport function withErrorBoundary<P extends object>(\n  Component: React.ComponentType<P>,\n  errorBoundaryProps?: Omit<Props, 'children'>\n) {\n  const WrappedComponent = (props: P) => (\n    <ErrorBoundary {...errorBoundaryProps}>\n      <Component {...props} />\n    </ErrorBoundary>\n  );\n  \n  WrappedComponent.displayName = `withErrorBoundary(${Component.displayName || Component.name})`;\n  \n  return WrappedComponent;\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1236, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/lib/chunkErrorHandler.ts"],"sourcesContent":["'use client';\n\nimport { errorHandler, ErrorSeverity } from './errorHandler';\n\n// Chunk loading error handler\nexport class ChunkLoadErrorHandler {\n  private static retryAttempts = new Map<string, number>();\n  private static maxRetries = 3;\n  private static retryDelay = 1000; // 1 second\n\n  static handleChunkError(error: any, chunkId?: string): Promise<void> {\n    const errorMessage = error?.message || 'Unknown chunk loading error';\n    const isChunkError = errorMessage.includes('ChunkLoadError') || \n                        errorMessage.includes('Loading chunk') ||\n                        errorMessage.includes('Loading CSS chunk');\n\n    if (!isChunkError) {\n      // Not a chunk error, handle normally\n      errorHandler.handle(error, 'ChunkErrorHandler');\n      return Promise.reject(error);\n    }\n\n    const key = chunkId || errorMessage;\n    const attempts = this.retryAttempts.get(key) || 0;\n\n    if (attempts >= this.maxRetries) {\n      // Max retries reached, log error and reload page\n      errorHandler.handle(error, 'ChunkErrorHandler - Max Retries Reached');\n\n      // Clear retry attempts for this chunk\n      this.retryAttempts.delete(key);\n      \n      // Reload the page as last resort\n      if (typeof window !== 'undefined') {\n        window.location.reload();\n      }\n      \n      return Promise.reject(error);\n    }\n\n    // Increment retry count\n    this.retryAttempts.set(key, attempts + 1);\n\n    // Log retry attempt\n    errorHandler.handle(error, 'ChunkErrorHandler - Retry Attempt');\n\n    // Return a promise that resolves after retry delay\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        // Try to reload the failed chunk\n        if (typeof window !== 'undefined' && chunkId) {\n          // Clear any cached modules for this chunk\n          this.clearChunkCache(chunkId);\n        }\n        resolve();\n      }, this.retryDelay * (attempts + 1)); // Exponential backoff\n    });\n  }\n\n  private static clearChunkCache(chunkId: string): void {\n    try {\n      // Clear webpack chunk cache if available\n      if (typeof window !== 'undefined' && (window as any).__webpack_require__) {\n        const webpackRequire = (window as any).__webpack_require__;\n        \n        // Clear chunk from cache\n        if (webpackRequire.cache) {\n          Object.keys(webpackRequire.cache).forEach(key => {\n            if (key.includes(chunkId)) {\n              delete webpackRequire.cache[key];\n            }\n          });\n        }\n\n        // Clear installed chunks\n        if (webpackRequire.installedChunks) {\n          delete webpackRequire.installedChunks[chunkId];\n        }\n      }\n    } catch (cacheError) {\n      // Ignore cache clearing errors\n      console.warn('Failed to clear chunk cache:', cacheError);\n    }\n  }\n\n  static resetRetryCount(chunkId?: string): void {\n    if (chunkId) {\n      this.retryAttempts.delete(chunkId);\n    } else {\n      this.retryAttempts.clear();\n    }\n  }\n\n  static getRetryCount(chunkId: string): number {\n    return this.retryAttempts.get(chunkId) || 0;\n  }\n}\n\n// Global error handler for unhandled chunk loading errors\nif (typeof window !== 'undefined') {\n  // Handle unhandled promise rejections (common for chunk loading errors)\n  window.addEventListener('unhandledrejection', (event) => {\n    const error = event.reason;\n    if (error && (error.name === 'ChunkLoadError' || \n                  (error.message && error.message.includes('Loading chunk')))) {\n      event.preventDefault(); // Prevent default browser error handling\n      ChunkLoadErrorHandler.handleChunkError(error);\n    }\n  });\n\n  // Handle general errors that might be chunk-related\n  window.addEventListener('error', (event) => {\n    const error = event.error;\n    if (error && (error.name === 'ChunkLoadError' || \n                  (error.message && error.message.includes('Loading chunk')))) {\n      event.preventDefault();\n      ChunkLoadErrorHandler.handleChunkError(error);\n    }\n  });\n}\n\n// React error boundary integration\nexport function withChunkErrorHandling<T extends (...args: any[]) => any>(\n  fn: T\n): T {\n  return ((...args: any[]) => {\n    try {\n      const result = fn(...args);\n      \n      // Handle promises that might reject with chunk errors\n      if (result && typeof result.catch === 'function') {\n        return result.catch((error: any) => {\n          if (error && (error.name === 'ChunkLoadError' || \n                       (error.message && error.message.includes('Loading chunk')))) {\n            return ChunkLoadErrorHandler.handleChunkError(error);\n          }\n          throw error;\n        });\n      }\n      \n      return result;\n    } catch (error) {\n      if (error && ((error as any).name === 'ChunkLoadError' || \n                   ((error as any).message && (error as any).message.includes('Loading chunk')))) {\n        ChunkLoadErrorHandler.handleChunkError(error);\n        return;\n      }\n      throw error;\n    }\n  }) as T;\n}\n\n// Hook for React components\nexport function useChunkErrorHandler() {\n  return {\n    handleChunkError: ChunkLoadErrorHandler.handleChunkError,\n    resetRetryCount: ChunkLoadErrorHandler.resetRetryCount,\n    getRetryCount: ChunkLoadErrorHandler.getRetryCount\n  };\n}\n\nexport default ChunkLoadErrorHandler;"],"names":[],"mappings":"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","debugId":null}}]
}