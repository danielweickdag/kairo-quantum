{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,MAAM,iBAAiB,IAAA,0KAAG,EACxB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,2KAAgB,MAC7B,QAA0D;QAAzD,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO;IACtD,MAAM,OAAO,UAAU,2KAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,IAAA,4HAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAKA,MAAM,sBAAQ,2KAAgB,MAC5B,QAAgC;QAA/B,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO;IAC5B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,IAAA,4HAAE,EACX,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/label.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Label = React.forwardRef<\n  HTMLLabelElement,\n  React.LabelHTMLAttributes<HTMLLabelElement>\n>(({ className, ...props }, ref) => (\n  <label\n    ref={ref}\n    className={cn(\n      \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n      className\n    )}\n    {...props}\n  />\n))\nLabel.displayName = \"Label\"\n\nexport { Label }"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAEA,MAAM,sBAAQ,2KAAgB,MAG5B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,8FACA;QAED,GAAG,KAAK;;;;;;;;AAGb,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,6KAAoB;AAEnC,MAAM,cAAc,8KAAqB;AAEzC,MAAM,cAAc,8KAAqB;AAEzC,MAAM,8BAAgB,2KAAgB,MAGpC,QAAoC;QAAnC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;yBAClC,6LAAC,gLAAuB;QACtB,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,mTACA;QAED,GAAG,KAAK;;YAER;0BACD,6LAAC,6KAAoB;gBAAC,OAAO;0BAC3B,cAAA,6LAAC,sOAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;;;AAI7B,cAAc,WAAW,GAAG,gLAAuB,CAAC,WAAW;AAE/D,MAAM,qCAAuB,2KAAgB,CAG3C,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,uLAA8B;QAC7B,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,gOAAS;YAAC,WAAU;;;;;;;;;;;;MAZnB;AAeN,qBAAqB,WAAW,GAAG,uLAA8B,CAAC,WAAW;AAE7E,MAAM,uCAAyB,2KAAgB,CAG7C,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,yLAAgC;QAC/B,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,sOAAW;YAAC,WAAU;;;;;;;;;;;;MAZrB;AAeN,uBAAuB,WAAW,GAChC,yLAAgC,CAAC,WAAW;AAE9C,MAAM,8BAAgB,2KAAgB,OAGpC,QAAyD;QAAxD,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,QAAQ,EAAE,GAAG,OAAO;yBACvD,6LAAC,+KAAsB;kBACrB,cAAA,6LAAC,gLAAuB;YACtB,KAAK;YACL,WAAW,IAAA,4HAAE,EACX,ucACA,aAAa,YACX,mIACF;YAEF,UAAU;YACT,GAAG,KAAK;;8BAET,6LAAC;;;;;8BACD,6LAAC,iLAAwB;oBACvB,WAAW,IAAA,4HAAE,EACX,OACA,aAAa,YACX;8BAGH;;;;;;8BAEH,6LAAC;;;;;;;;;;;;;;;;;;AAIP,cAAc,WAAW,GAAG,gLAAuB,CAAC,WAAW;AAE/D,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,8KAAqB;QACpB,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,0CAA0C;QACvD,GAAG,KAAK;;;;;;;;AAGb,YAAY,WAAW,GAAG,8KAAqB,CAAC,WAAW;AAE3D,MAAM,2BAAa,2KAAgB,OAGjC,QAAoC;QAAnC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;yBAClC,6LAAC,6KAAoB;QACnB,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,6NACA;QAED,GAAG,KAAK;;0BAET,6LAAC;gBAAK,WAAU;0BACd,cAAA,6LAAC,sLAA6B;8BAC5B,cAAA,6LAAC,gNAAK;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAIrB,6LAAC,iLAAwB;0BAAE;;;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAoB,CAAC,WAAW;AAEzD,MAAM,gCAAkB,2KAAgB,QAGtC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,kLAAyB;QACxB,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,4BAA4B;QACzC,GAAG,KAAK;;;;;;;;AAGb,gBAAgB,WAAW,GAAG,kLAAyB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 387, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;;;;AAEA,MAAM,qBAAO,2KAAgB,MAG3B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,4DACA;QAED,GAAG,KAAK;;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,2KAAgB,OAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,2KAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,2KAAgB,OAGtC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,KAAK;QAAK,WAAW,IAAA,4HAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,2KAAgB,QAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 512, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }"],"names":[],"mappings":";;;;;;;AACA;AACA;;;;AAEA,MAAM,gBAAgB,IAAA,0KAAG,EACvB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,KAA4C;QAA5C,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB,GAA5C;IACb,qBACE,6LAAC;QAAI,WAAW,IAAA,4HAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 561, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/switch.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\ninterface SwitchProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'type'> {\n  checked?: boolean\n  onCheckedChange?: (checked: boolean) => void\n}\n\nconst Switch = React.forwardRef<HTMLInputElement, SwitchProps>(\n  ({ className, checked, onCheckedChange, onChange, ...props }, ref) => {\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      onCheckedChange?.(event.target.checked)\n      onChange?.(event)\n    }\n\n    return (\n      <label className={cn(\"relative inline-flex items-center cursor-pointer\", className)}>\n        <input\n          type=\"checkbox\"\n          ref={ref}\n          checked={checked}\n          onChange={handleChange}\n          className=\"sr-only peer\"\n          {...props}\n        />\n        <div className=\"relative w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\n      </label>\n    )\n  }\n)\nSwitch.displayName = \"Switch\"\n\nexport { Switch }"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAOA,MAAM,uBAAS,2KAAgB,MAC7B,QAA8D;QAA7D,EAAE,SAAS,EAAE,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,GAAG,OAAO;IAC1D,MAAM,eAAe,CAAC;QACpB,4BAAA,sCAAA,gBAAkB,MAAM,MAAM,CAAC,OAAO;QACtC,qBAAA,+BAAA,SAAW;IACb;IAEA,qBACE,6LAAC;QAAM,WAAW,IAAA,4HAAE,EAAC,oDAAoD;;0BACvE,6LAAC;gBACC,MAAK;gBACL,KAAK;gBACL,SAAS;gBACT,UAAU;gBACV,WAAU;gBACT,GAAG,KAAK;;;;;;0BAEX,6LAAC;gBAAI,WAAU;;;;;;;;;;;;AAGrB;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 619, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/tabs.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\ninterface TabsContextValue {\n  value: string\n  onValueChange: (value: string) => void\n}\n\nconst TabsContext = React.createContext<TabsContextValue | undefined>(undefined)\n\ninterface TabsProps {\n  value: string\n  onValueChange: (value: string) => void\n  children: React.ReactNode\n  className?: string\n}\n\nconst Tabs = ({ value, onValueChange, children, className }: TabsProps) => {\n  return (\n    <TabsContext.Provider value={{ value, onValueChange }}>\n      <div className={cn(\"w-full\", className)}>\n        {children}\n      </div>\n    </TabsContext.Provider>\n  )\n}\n\nconst TabsList = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = \"TabsList\"\n\ninterface TabsTriggerProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  value: string\n}\n\nconst TabsTrigger = React.forwardRef<HTMLButtonElement, TabsTriggerProps>(\n  ({ className, value: triggerValue, ...props }, ref) => {\n    const context = React.useContext(TabsContext)\n    if (!context) {\n      throw new Error('TabsTrigger must be used within a Tabs component')\n    }\n    \n    const { value, onValueChange } = context\n    const isActive = value === triggerValue\n    \n    return (\n      <button\n        ref={ref}\n        className={cn(\n          \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n          isActive\n            ? \"bg-background text-foreground shadow-sm\"\n            : \"hover:bg-background/50\",\n          className\n        )}\n        onClick={() => onValueChange(triggerValue)}\n        {...props}\n      />\n    )\n  }\n)\nTabsTrigger.displayName = \"TabsTrigger\"\n\ninterface TabsContentProps extends React.HTMLAttributes<HTMLDivElement> {\n  value: string\n}\n\nconst TabsContent = React.forwardRef<HTMLDivElement, TabsContentProps>(\n  ({ className, value: contentValue, ...props }, ref) => {\n    const context = React.useContext(TabsContext)\n    if (!context) {\n      throw new Error('TabsContent must be used within a Tabs component')\n    }\n    \n    const { value } = context\n    \n    if (value !== contentValue) {\n      return null\n    }\n    \n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n          className\n        )}\n        {...props}\n      />\n    )\n  }\n)\nTabsContent.displayName = \"TabsContent\"\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }"],"names":[],"mappings":";;;;;;;;;;;AAAA;AACA;;;;;AAOA,MAAM,4BAAc,8KAAmB,CAA+B;AAStE,MAAM,OAAO;QAAC,EAAE,KAAK,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,EAAa;IACpE,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAO;QAAc;kBAClD,cAAA,6LAAC;YAAI,WAAW,IAAA,4HAAE,EAAC,UAAU;sBAC1B;;;;;;;;;;;AAIT;KARM;AAUN,MAAM,yBAAW,2KAAgB,OAG/B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,8FACA;QAED,GAAG,KAAK;;;;;;;;AAGb,SAAS,WAAW,GAAG;AAMvB,MAAM,4BAAc,GAAA,2KAAgB,UAClC,QAA+C;QAA9C,EAAE,SAAS,EAAE,OAAO,YAAY,EAAE,GAAG,OAAO;;IAC3C,MAAM,UAAU,2KAAgB,CAAC;IACjC,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG;IACjC,MAAM,WAAW,UAAU;IAE3B,qBACE,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,mSACA,WACI,4CACA,0BACJ;QAEF,SAAS,IAAM,cAAc;QAC5B,GAAG,KAAK;;;;;;AAGf;;AAEF,YAAY,WAAW,GAAG;AAM1B,MAAM,4BAAc,IAAA,2KAAgB,WAClC,QAA+C;QAA9C,EAAE,SAAS,EAAE,OAAO,YAAY,EAAE,GAAG,OAAO;;IAC3C,MAAM,UAAU,2KAAgB,CAAC;IACjC,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,EAAE,KAAK,EAAE,GAAG;IAElB,IAAI,UAAU,cAAc;QAC1B,OAAO;IACT;IAEA,qBACE,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,mIACA;QAED,GAAG,KAAK;;;;;;AAGf;;AAEF,YAAY,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 734, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/progress.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\ninterface ProgressProps extends React.HTMLAttributes<HTMLDivElement> {\n  value?: number\n}\n\nconst Progress = React.forwardRef<HTMLDivElement, ProgressProps>(\n  ({ className, value = 0, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative h-4 w-full overflow-hidden rounded-full bg-gray-200 dark:bg-gray-700\",\n        className\n      )}\n      {...props}\n    >\n      <div\n        className=\"h-full bg-blue-600 transition-all duration-300 ease-in-out\"\n        style={{ width: `${Math.min(100, Math.max(0, value))}%` }}\n      />\n    </div>\n  )\n)\nProgress.displayName = \"Progress\"\n\nexport { Progress }"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAMA,MAAM,yBAAW,2KAAgB,MAC/B,QAAqC;QAApC,EAAE,SAAS,EAAE,QAAQ,CAAC,EAAE,GAAG,OAAO;yBACjC,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,iFACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC;YACC,WAAU;YACV,OAAO;gBAAE,OAAO,AAAC,GAAoC,OAAlC,KAAK,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,GAAG,SAAQ;YAAG;;;;;;;;;;;;;AAKhE,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 779, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/modals/QuickTradeModal.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport {\n  TrendingUp,\n  TrendingDown,\n  DollarSign,\n  Target,\n  AlertTriangle,\n  CheckCircle,\n  X\n} from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\ninterface QuickTradeModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\ninterface MarketData {\n  symbol: string;\n  price: number;\n  change: number;\n  changePercent: number;\n}\n\nconst popularAssets: MarketData[] = [\n  { symbol: 'AAPL', price: 185.25, change: 2.85, changePercent: 1.56 },\n  { symbol: 'TSLA', price: 245.80, change: -5.25, changePercent: -2.09 },\n  { symbol: 'MSFT', price: 378.90, change: 4.20, changePercent: 1.12 },\n  { symbol: 'NVDA', price: 875.30, change: 15.60, changePercent: 1.81 },\n  { symbol: 'BTC', price: 43250.00, change: 850.00, changePercent: 2.01 },\n  { symbol: 'ETH', price: 2580.50, change: -45.20, changePercent: -1.72 }\n];\n\nexport default function QuickTradeModal({ isOpen, onClose }: QuickTradeModalProps) {\n  const [selectedAsset, setSelectedAsset] = useState<string>('');\n  const [orderType, setOrderType] = useState<'market' | 'limit'>('market');\n  const [tradeType, setTradeType] = useState<'buy' | 'sell'>('buy');\n  const [amount, setAmount] = useState('');\n  const [price, setPrice] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const selectedMarketData = popularAssets.find(asset => asset.symbol === selectedAsset);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!selectedAsset || !amount) return;\n\n    setIsLoading(true);\n    \n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      // Show success message or handle response\n      console.log('Trade executed:', {\n        symbol: selectedAsset,\n        type: tradeType,\n        orderType,\n        amount: parseFloat(amount),\n        price: orderType === 'limit' ? parseFloat(price) : selectedMarketData?.price\n      });\n      \n      // Reset form and close modal\n      setSelectedAsset('');\n      setAmount('');\n      setPrice('');\n      onClose();\n    } catch (error) {\n      console.error('Trade failed:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const calculateTotal = () => {\n    if (!amount || !selectedMarketData) return 0;\n    const qty = parseFloat(amount);\n    const assetPrice = orderType === 'limit' && price ? parseFloat(price) : selectedMarketData.price;\n    return qty * assetPrice;\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex items-center space-x-2\">\n            <Target className=\"h-5 w-5 text-blue-600\" />\n            <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">Quick Trade</h2>\n          </div>\n          <Button variant=\"ghost\" size=\"sm\" onClick={onClose}>\n            <X className=\"h-4 w-4\" />\n          </Button>\n        </div>\n\n        <div className=\"p-6 grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Asset Selection */}\n          <div className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"asset\">Select Asset</Label>\n              <div className=\"grid grid-cols-2 gap-2 mt-2\">\n                {popularAssets.map((asset) => (\n                  <Card\n                    key={asset.symbol}\n                    className={cn(\n                      \"cursor-pointer transition-all hover:shadow-md\",\n                      selectedAsset === asset.symbol\n                        ? \"ring-2 ring-blue-500 bg-blue-50 dark:bg-blue-900/20\"\n                        : \"hover:bg-gray-50 dark:hover:bg-gray-800\"\n                    )}\n                    onClick={() => setSelectedAsset(asset.symbol)}\n                  >\n                    <CardContent className=\"p-3\">\n                      <div className=\"flex items-center justify-between mb-1\">\n                        <span className=\"font-semibold text-sm\">{asset.symbol}</span>\n                        <Badge\n                          variant={asset.change >= 0 ? \"default\" : \"destructive\"}\n                          className=\"text-xs\"\n                        >\n                          {asset.change >= 0 ? '+' : ''}{asset.changePercent.toFixed(2)}%\n                        </Badge>\n                      </div>\n                      <div className=\"text-lg font-bold\">\n                        ${asset.price.toLocaleString()}\n                      </div>\n                      <div className={cn(\n                        \"text-sm flex items-center\",\n                        asset.change >= 0 ? \"text-green-600\" : \"text-red-600\"\n                      )}>\n                        {asset.change >= 0 ? (\n                          <TrendingUp className=\"h-3 w-3 mr-1\" />\n                        ) : (\n                          <TrendingDown className=\"h-3 w-3 mr-1\" />\n                        )}\n                        {asset.change >= 0 ? '+' : ''}${asset.change.toFixed(2)}\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Trade Form */}\n          <div className=\"space-y-4\">\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              {/* Buy/Sell Toggle */}\n              <div>\n                <Label>Order Side</Label>\n                <div className=\"grid grid-cols-2 gap-2 mt-2\">\n                  <Button\n                    type=\"button\"\n                    variant={tradeType === 'buy' ? 'default' : 'outline'}\n                    onClick={() => setTradeType('buy')}\n                    className={cn(\n                      \"w-full\",\n                      tradeType === 'buy' && \"bg-green-600 hover:bg-green-700 text-white\"\n                    )}\n                  >\n                    <TrendingUp className=\"h-4 w-4 mr-2\" />\n                    Buy\n                  </Button>\n                  <Button\n                    type=\"button\"\n                    variant={tradeType === 'sell' ? 'default' : 'outline'}\n                    onClick={() => setTradeType('sell')}\n                    className={cn(\n                      \"w-full\",\n                      tradeType === 'sell' && \"bg-red-600 hover:bg-red-700 text-white\"\n                    )}\n                  >\n                    <TrendingDown className=\"h-4 w-4 mr-2\" />\n                    Sell\n                  </Button>\n                </div>\n              </div>\n\n              {/* Order Type */}\n              <div>\n                <Label htmlFor=\"orderType\">Order Type</Label>\n                <Select value={orderType} onValueChange={(value: 'market' | 'limit') => setOrderType(value)}>\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"market\">Market Order</SelectItem>\n                    <SelectItem value=\"limit\">Limit Order</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n\n              {/* Amount */}\n              <div>\n                <Label htmlFor=\"amount\">Amount</Label>\n                <Input\n                  id=\"amount\"\n                  type=\"number\"\n                  placeholder=\"Enter quantity\"\n                  value={amount}\n                  onChange={(e) => setAmount(e.target.value)}\n                  step=\"0.01\"\n                  min=\"0\"\n                  required\n                />\n              </div>\n\n              {/* Price (for limit orders) */}\n              {orderType === 'limit' && (\n                <div>\n                  <Label htmlFor=\"price\">Limit Price</Label>\n                  <Input\n                    id=\"price\"\n                    type=\"number\"\n                    placeholder=\"Enter limit price\"\n                    value={price}\n                    onChange={(e) => setPrice(e.target.value)}\n                    step=\"0.01\"\n                    min=\"0\"\n                    required\n                  />\n                </div>\n              )}\n\n              {/* Order Summary */}\n              {selectedAsset && amount && (\n                <Card className=\"bg-gray-50 dark:bg-gray-800\">\n                  <CardContent className=\"p-4\">\n                    <h4 className=\"font-semibold mb-2\">Order Summary</h4>\n                    <div className=\"space-y-2 text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span>Asset:</span>\n                        <span className=\"font-medium\">{selectedAsset}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Type:</span>\n                        <span className=\"font-medium capitalize\">{tradeType} {orderType}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Quantity:</span>\n                        <span className=\"font-medium\">{amount}</span>\n                      </div>\n                      {orderType === 'market' && selectedMarketData && (\n                        <div className=\"flex justify-between\">\n                          <span>Market Price:</span>\n                          <span className=\"font-medium\">${selectedMarketData.price.toLocaleString()}</span>\n                        </div>\n                      )}\n                      {orderType === 'limit' && price && (\n                        <div className=\"flex justify-between\">\n                          <span>Limit Price:</span>\n                          <span className=\"font-medium\">${parseFloat(price).toLocaleString()}</span>\n                        </div>\n                      )}\n                      <div className=\"flex justify-between border-t pt-2 font-semibold\">\n                        <span>Total:</span>\n                        <span className=\"flex items-center\">\n                          <DollarSign className=\"h-4 w-4 mr-1\" />\n                          {calculateTotal().toLocaleString()}\n                        </span>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              )}\n\n              {/* Submit Button */}\n              <div className=\"flex space-x-2\">\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  onClick={onClose}\n                  className=\"flex-1\"\n                  disabled={isLoading}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  type=\"submit\"\n                  disabled={!selectedAsset || !amount || isLoading || (orderType === 'limit' && !price)}\n                  className={cn(\n                    \"flex-1\",\n                    tradeType === 'buy' ? \"bg-green-600 hover:bg-green-700\" : \"bg-red-600 hover:bg-red-700\"\n                  )}\n                >\n                  {isLoading ? (\n                    <div className=\"flex items-center\">\n                      <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                      Processing...\n                    </div>\n                  ) : (\n                    <div className=\"flex items-center\">\n                      {tradeType === 'buy' ? (\n                        <TrendingUp className=\"h-4 w-4 mr-2\" />\n                      ) : (\n                        <TrendingDown className=\"h-4 w-4 mr-2\" />\n                      )}\n                      {tradeType === 'buy' ? 'Buy' : 'Sell'} {selectedAsset}\n                    </div>\n                  )}\n                </Button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1558, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/BrokerAccountSelector.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { ChevronDownIcon, CheckIcon, PlusIcon } from '@heroicons/react/24/outline';\nimport Link from 'next/link';\n\ninterface BrokerAccount {\n  id: string;\n  accountNumber: string;\n  accountType: string;\n  status: string;\n  buyingPower: number;\n  cashBalance: number;\n  portfolioValue: number;\n  currency: string;\n  brokerConnection: {\n    id: string;\n    accountName: string;\n    brokerType: string;\n    environment: string;\n  };\n}\n\ninterface BrokerAccountSelectorProps {\n  selectedAccount?: BrokerAccount | null;\n  onAccountSelect: (account: BrokerAccount | null) => void;\n  className?: string;\n  placeholder?: string;\n}\n\nexport default function BrokerAccountSelector({\n  selectedAccount,\n  onAccountSelect,\n  className = '',\n  placeholder = 'Select a broker account'\n}: BrokerAccountSelectorProps) {\n  const [accounts, setAccounts] = useState<BrokerAccount[]>([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(() => {\n    fetchBrokerAccounts();\n  }, []);\n\n  const fetchBrokerAccounts = async () => {\n    try {\n      setLoading(true);\n      const token = localStorage.getItem('token');\n      if (!token) {\n        // User is not authenticated, set empty accounts and return\n        setIsAuthenticated(false);\n        setAccounts([]);\n        setLoading(false);\n        return;\n      }\n      \n      setIsAuthenticated(true);\n\n      const response = await fetch('/api/brokers/accounts', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch broker accounts');\n      }\n\n      const data = await response.json();\n      if (data.success) {\n        setAccounts(data.data || []);\n      } else {\n        throw new Error(data.message || 'Failed to fetch accounts');\n      }\n    } catch (err) {\n      console.error('Error fetching broker accounts:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load accounts');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatCurrency = (amount: number, currency: string = 'USD') => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: currency\n    }).format(amount);\n  };\n\n  const getBrokerDisplayName = (brokerType: string) => {\n    const brokerNames: { [key: string]: string } = {\n      'ALPACA': 'Alpaca',\n      'INTERACTIVE_BROKERS': 'Interactive Brokers',\n      'TD_AMERITRADE': 'TD Ameritrade',\n      'SCHWAB': 'Charles Schwab',\n      'FIDELITY': 'Fidelity',\n      'E_TRADE': 'E*TRADE'\n    };\n    return brokerNames[brokerType] || brokerType;\n  };\n\n  const getAccountTypeDisplay = (accountType: string) => {\n    const typeNames: { [key: string]: string } = {\n      'CASH': 'Cash Account',\n      'MARGIN': 'Margin Account',\n      'RETIREMENT': 'Retirement Account',\n      'CRYPTO': 'Crypto Account'\n    };\n    return typeNames[accountType] || accountType;\n  };\n\n  const handleAccountSelect = (account: BrokerAccount) => {\n    onAccountSelect(account);\n    setIsOpen(false);\n  };\n\n  if (loading) {\n    return (\n      <div className={`relative ${className}`}>\n        <div className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50 text-gray-500\">\n          Loading accounts...\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className={`relative ${className}`}>\n        <div className=\"w-full px-3 py-2 border border-red-300 rounded-md bg-red-50 text-red-600\">\n          {error}\n        </div>\n      </div>\n    );\n  }\n\n  if (accounts.length === 0) {\n    return (\n      <div className={`relative ${className}`}>\n        {isAuthenticated ? (\n          <div className=\"space-y-3\">\n            <div className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50 text-gray-500 text-center\">\n              No broker accounts found. Please connect a broker first.\n            </div>\n            <Link href=\"/brokers\">\n              <button className=\"w-full flex items-center justify-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-md transition-colors duration-200\">\n                <PlusIcon className=\"h-4 w-4 mr-2\" />\n                Connect Broker\n              </button>\n            </Link>\n          </div>\n        ) : (\n          <div className=\"w-full px-3 py-2 border border-gray-300 rounded-md bg-gray-50 text-gray-500 text-center\">\n            Please log in to view broker accounts.\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={`relative ${className}`}>\n      <button\n        type=\"button\"\n        onClick={() => setIsOpen(!isOpen)}\n        className=\"relative w-full cursor-pointer rounded-md border border-gray-300 bg-white py-2 pl-3 pr-10 text-left shadow-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500 sm:text-sm\"\n      >\n        <span className=\"block truncate\">\n          {selectedAccount ? (\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <span className=\"font-medium\">\n                  {getBrokerDisplayName(selectedAccount.brokerConnection.brokerType)}\n                </span>\n                <span className=\"ml-2 text-gray-500\">\n                  {selectedAccount.brokerConnection.accountName}\n                </span>\n              </div>\n              <div className=\"text-sm text-gray-600\">\n                {formatCurrency(selectedAccount.portfolioValue, selectedAccount.currency)}\n              </div>\n            </div>\n          ) : (\n            <span className=\"text-gray-500\">{placeholder}</span>\n          )}\n        </span>\n        <span className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2\">\n          <ChevronDownIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n        </span>\n      </button>\n\n      {isOpen && (\n        <div className=\"absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\n          <div\n            className=\"relative cursor-pointer select-none py-2 pl-3 pr-9 text-gray-900 hover:bg-blue-50\"\n            onClick={() => handleAccountSelect(null as any)}\n          >\n            <span className=\"block truncate text-gray-500\">Clear selection</span>\n          </div>\n          {accounts.map((account) => (\n            <div\n              key={account.id}\n              className=\"relative cursor-pointer select-none py-2 pl-3 pr-9 text-gray-900 hover:bg-blue-50\"\n              onClick={() => handleAccountSelect(account)}\n            >\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center\">\n                    <span className=\"font-medium\">\n                      {getBrokerDisplayName(account.brokerConnection.brokerType)}\n                    </span>\n                    <span className=\"ml-2 text-gray-500\">\n                      {account.brokerConnection.accountName}\n                    </span>\n                    <span className=\"ml-2 text-xs bg-gray-100 text-gray-600 px-2 py-1 rounded\">\n                      {account.brokerConnection.environment}\n                    </span>\n                  </div>\n                  <div className=\"text-sm text-gray-600 mt-1\">\n                    <span>{getAccountTypeDisplay(account.accountType)}</span>\n                    <span className=\"mx-2\">•</span>\n                    <span>Account: {account.accountNumber}</span>\n                  </div>\n                  <div className=\"text-sm text-gray-600\">\n                    <span>Portfolio: {formatCurrency(account.portfolioValue, account.currency)}</span>\n                    <span className=\"mx-2\">•</span>\n                    <span>Cash: {formatCurrency(account.cashBalance, account.currency)}</span>\n                    <span className=\"mx-2\">•</span>\n                    <span>Buying Power: {formatCurrency(account.buyingPower, account.currency)}</span>\n                  </div>\n                </div>\n              </div>\n\n              {selectedAccount?.id === account.id && (\n                <span className=\"absolute inset-y-0 right-0 flex items-center pr-4 text-blue-600\">\n                  <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                </span>\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}