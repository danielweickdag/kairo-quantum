{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function formatCurrency(amount: number): string {\n  if (typeof amount !== 'number' || isNaN(amount)) return '$0.00'\n  try {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(amount)\n  } catch (error) {\n    return '$0.00'\n  }\n}\n\nexport function formatPercent(value: number): string {\n  if (typeof value !== 'number' || isNaN(value)) return '0.00%'\n  try {\n    return `${value >= 0 ? '+' : ''}${value.toFixed(2)}%`\n  } catch (error) {\n    return '0.00%'\n  }\n}\n\nexport function formatNumber(value: number): string {\n  if (typeof value !== 'number' || isNaN(value)) return '0'\n  try {\n    return new Intl.NumberFormat('en-US').format(value)\n  } catch (error) {\n    return '0'\n  }\n}"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,IAAA,yKAAO,EAAC,IAAA,gJAAI,EAAC;AACtB;AAEO,SAAS,eAAe,MAAc;IAC3C,IAAI,OAAO,WAAW,YAAY,MAAM,SAAS,OAAO;IACxD,IAAI;QACF,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;YACpC,OAAO;YACP,UAAU;QACZ,GAAG,MAAM,CAAC;IACZ,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,SAAS,cAAc,KAAa;IACzC,IAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,OAAO;IACtD,IAAI;QACF,OAAO,AAAC,GAA0B,OAAxB,SAAS,IAAI,MAAM,IAAsB,OAAjB,MAAM,OAAO,CAAC,IAAG;IACrD,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,SAAS,aAAa,KAAa;IACxC,IAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,OAAO;IACtD,IAAI;QACF,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS,MAAM,CAAC;IAC/C,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;;;;AAEA,MAAM,qBAAO,2KAAgB,MAG3B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,4DACA;QAED,GAAG,KAAK;;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,2KAAgB,OAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,2KAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,2KAAgB,OAGtC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,KAAK;QAAK,WAAW,IAAA,4HAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,2KAAgB,QAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,MAAM,iBAAiB,IAAA,0KAAG,EACxB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,2KAAgB,MAC7B,QAA0D;QAAzD,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO;IACtD,MAAM,OAAO,UAAU,2KAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,IAAA,4HAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }"],"names":[],"mappings":";;;;;;;AACA;AACA;;;;AAEA,MAAM,gBAAgB,IAAA,0KAAG,EACvB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,KAA4C;QAA5C,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB,GAA5C;IACb,qBACE,6LAAC;QAAI,WAAW,IAAA,4HAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/tabs.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\ninterface TabsContextValue {\n  value: string\n  onValueChange: (value: string) => void\n}\n\nconst TabsContext = React.createContext<TabsContextValue | undefined>(undefined)\n\ninterface TabsProps {\n  value: string\n  onValueChange: (value: string) => void\n  children: React.ReactNode\n  className?: string\n}\n\nconst Tabs = ({ value, onValueChange, children, className }: TabsProps) => {\n  return (\n    <TabsContext.Provider value={{ value, onValueChange }}>\n      <div className={cn(\"w-full\", className)}>\n        {children}\n      </div>\n    </TabsContext.Provider>\n  )\n}\n\nconst TabsList = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = \"TabsList\"\n\ninterface TabsTriggerProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  value: string\n}\n\nconst TabsTrigger = React.forwardRef<HTMLButtonElement, TabsTriggerProps>(\n  ({ className, value: triggerValue, ...props }, ref) => {\n    const context = React.useContext(TabsContext)\n    if (!context) {\n      throw new Error('TabsTrigger must be used within a Tabs component')\n    }\n    \n    const { value, onValueChange } = context\n    const isActive = value === triggerValue\n    \n    return (\n      <button\n        ref={ref}\n        className={cn(\n          \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n          isActive\n            ? \"bg-background text-foreground shadow-sm\"\n            : \"hover:bg-background/50\",\n          className\n        )}\n        onClick={() => onValueChange(triggerValue)}\n        {...props}\n      />\n    )\n  }\n)\nTabsTrigger.displayName = \"TabsTrigger\"\n\ninterface TabsContentProps extends React.HTMLAttributes<HTMLDivElement> {\n  value: string\n}\n\nconst TabsContent = React.forwardRef<HTMLDivElement, TabsContentProps>(\n  ({ className, value: contentValue, ...props }, ref) => {\n    const context = React.useContext(TabsContext)\n    if (!context) {\n      throw new Error('TabsContent must be used within a Tabs component')\n    }\n    \n    const { value } = context\n    \n    if (value !== contentValue) {\n      return null\n    }\n    \n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n          className\n        )}\n        {...props}\n      />\n    )\n  }\n)\nTabsContent.displayName = \"TabsContent\"\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }"],"names":[],"mappings":";;;;;;;;;;;AAAA;AACA;;;;;AAOA,MAAM,4BAAc,8KAAmB,CAA+B;AAStE,MAAM,OAAO;QAAC,EAAE,KAAK,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,EAAa;IACpE,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAO;QAAc;kBAClD,cAAA,6LAAC;YAAI,WAAW,IAAA,4HAAE,EAAC,UAAU;sBAC1B;;;;;;;;;;;AAIT;KARM;AAUN,MAAM,yBAAW,2KAAgB,OAG/B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,8FACA;QAED,GAAG,KAAK;;;;;;;;AAGb,SAAS,WAAW,GAAG;AAMvB,MAAM,4BAAc,GAAA,2KAAgB,UAClC,QAA+C;QAA9C,EAAE,SAAS,EAAE,OAAO,YAAY,EAAE,GAAG,OAAO;;IAC3C,MAAM,UAAU,2KAAgB,CAAC;IACjC,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG;IACjC,MAAM,WAAW,UAAU;IAE3B,qBACE,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,mSACA,WACI,4CACA,0BACJ;QAEF,SAAS,IAAM,cAAc;QAC5B,GAAG,KAAK;;;;;;AAGf;;AAEF,YAAY,WAAW,GAAG;AAM1B,MAAM,4BAAc,IAAA,2KAAgB,WAClC,QAA+C;QAA9C,EAAE,SAAS,EAAE,OAAO,YAAY,EAAE,GAAG,OAAO;;IAC3C,MAAM,UAAU,2KAAgB,CAAC;IACjC,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,EAAE,KAAK,EAAE,GAAG;IAElB,IAAI,UAAU,cAAc;QAC1B,OAAO;IACT;IAEA,qBACE,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,mIACA;QAED,GAAG,KAAK;;;;;;AAGf;;AAEF,YAAY,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 415, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/progress.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\ninterface ProgressProps extends React.HTMLAttributes<HTMLDivElement> {\n  value?: number\n}\n\nconst Progress = React.forwardRef<HTMLDivElement, ProgressProps>(\n  ({ className, value = 0, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative h-4 w-full overflow-hidden rounded-full bg-gray-200 dark:bg-gray-700\",\n        className\n      )}\n      {...props}\n    >\n      <div\n        className=\"h-full bg-blue-600 transition-all duration-300 ease-in-out\"\n        style={{ width: `${Math.min(100, Math.max(0, value))}%` }}\n      />\n    </div>\n  )\n)\nProgress.displayName = \"Progress\"\n\nexport { Progress }"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAMA,MAAM,yBAAW,2KAAgB,MAC/B,QAAqC;QAApC,EAAE,SAAS,EAAE,QAAQ,CAAC,EAAE,GAAG,OAAO;yBACjC,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,iFACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC;YACC,WAAU;YACV,OAAO;gBAAE,OAAO,AAAC,GAAoC,OAAlC,KAAK,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,GAAG,SAAQ;YAAG;;;;;;;;;;;;;AAKhE,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 460, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/services/BalanceTrackingService.ts"],"sourcesContent":["'use client'\n\ninterface BalanceData {\n  totalBalance: number\n  availableBalance: number\n  investedAmount: number\n  pendingDeposits: number\n  pendingWithdrawals: number\n  lastUpdated: Date\n}\n\ninterface BalanceUpdateListener {\n  (balance: BalanceData): void\n}\n\nclass BalanceTrackingService {\n  private balance: BalanceData = {\n    totalBalance: 125000,\n    availableBalance: 45000,\n    investedAmount: 80000,\n    pendingDeposits: 0,\n    pendingWithdrawals: 0,\n    lastUpdated: new Date()\n  }\n\n  private listeners: Set<BalanceUpdateListener> = new Set()\n  private updateInterval: NodeJS.Timeout | null = null\n\n  constructor() {\n    // Start real-time updates\n    this.startRealTimeUpdates()\n  }\n\n  /**\n   * Subscribe to balance updates\n   */\n  subscribe(listener: BalanceUpdateListener): () => void {\n    this.listeners.add(listener)\n    \n    // Immediately send current balance\n    listener(this.balance)\n    \n    // Return unsubscribe function\n    return () => {\n      this.listeners.delete(listener)\n    }\n  }\n\n  /**\n   * Get current balance\n   */\n  getCurrentBalance(): BalanceData {\n    return { ...this.balance }\n  }\n\n  /**\n   * Update balance after deposit\n   */\n  async processDeposit(amount: number): Promise<void> {\n    // Add to pending deposits first\n    this.balance.pendingDeposits += amount\n    this.notifyListeners()\n\n    // Simulate processing time\n    await new Promise(resolve => setTimeout(resolve, 2000))\n\n    // Move from pending to available balance\n    this.balance.pendingDeposits -= amount\n    this.balance.availableBalance += amount\n    this.balance.totalBalance += amount\n    this.balance.lastUpdated = new Date()\n    \n    this.notifyListeners()\n  }\n\n  /**\n   * Update balance after withdrawal\n   */\n  async processWithdrawal(amount: number): Promise<void> {\n    // Check if sufficient funds\n    if (this.balance.availableBalance < amount) {\n      throw new Error('Insufficient funds for withdrawal')\n    }\n\n    // Add to pending withdrawals\n    this.balance.pendingWithdrawals += amount\n    this.balance.availableBalance -= amount\n    this.notifyListeners()\n\n    // Simulate processing time\n    await new Promise(resolve => setTimeout(resolve, 2000))\n\n    // Complete withdrawal\n    this.balance.pendingWithdrawals -= amount\n    this.balance.totalBalance -= amount\n    this.balance.lastUpdated = new Date()\n    \n    this.notifyListeners()\n  }\n\n  /**\n   * Update invested amount\n   */\n  updateInvestedAmount(amount: number): void {\n    const difference = amount - this.balance.investedAmount\n    \n    // Adjust available balance\n    this.balance.availableBalance -= difference\n    this.balance.investedAmount = amount\n    this.balance.lastUpdated = new Date()\n    \n    this.notifyListeners()\n  }\n\n  /**\n   * Add profit from trading\n   */\n  addTradingProfit(profit: number): void {\n    this.balance.availableBalance += profit\n    this.balance.totalBalance += profit\n    this.balance.lastUpdated = new Date()\n    \n    this.notifyListeners()\n  }\n\n  /**\n   * Start real-time balance updates (simulate market changes)\n   */\n  private startRealTimeUpdates(): void {\n    this.updateInterval = setInterval(() => {\n      // Simulate small market fluctuations in invested amount\n      const fluctuation = (Math.random() - 0.5) * 100 // ±$50\n      const newInvestedValue = Math.max(0, this.balance.investedAmount + fluctuation)\n      const difference = newInvestedValue - this.balance.investedAmount\n      \n      this.balance.investedAmount = newInvestedValue\n      this.balance.totalBalance += difference\n      this.balance.lastUpdated = new Date()\n      \n      this.notifyListeners()\n    }, 5000) // Update every 5 seconds\n  }\n\n  /**\n   * Stop real-time updates\n   */\n  stopRealTimeUpdates(): void {\n    if (this.updateInterval) {\n      clearInterval(this.updateInterval)\n      this.updateInterval = null\n    }\n  }\n\n  /**\n   * Notify all listeners of balance changes\n   */\n  private notifyListeners(): void {\n    const balanceCopy = { ...this.balance }\n    this.listeners.forEach(listener => {\n      try {\n        listener(balanceCopy)\n      } catch (error) {\n        console.error('Error in balance listener:', error)\n      }\n    })\n  }\n\n  /**\n   * Format currency for display\n   */\n  formatCurrency(amount: number): string {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(amount)\n  }\n\n  /**\n   * Get balance summary for display\n   */\n  getBalanceSummary(): {\n    total: string\n    available: string\n    invested: string\n    pending: string\n  } {\n    return {\n      total: this.formatCurrency(this.balance.totalBalance),\n      available: this.formatCurrency(this.balance.availableBalance),\n      invested: this.formatCurrency(this.balance.investedAmount),\n      pending: this.formatCurrency(this.balance.pendingDeposits + this.balance.pendingWithdrawals)\n    }\n  }\n}\n\n// Create singleton instance\nconst balanceTrackingService = new BalanceTrackingService()\n\nexport default balanceTrackingService\nexport type { BalanceData, BalanceUpdateListener }"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 620, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/services/AutomatedWorkflowService.ts"],"sourcesContent":["'use client';\n\nimport { toast } from 'react-hot-toast';\nimport balanceTrackingService from './BalanceTrackingService';\n\n// Types for the automated workflow\nexport interface WorkflowConfig {\n  autoDeposit: {\n    enabled: boolean;\n    amount: number;\n    frequency: 'daily' | 'weekly' | 'monthly';\n    source: 'bank' | 'card' | 'crypto';\n  };\n  autoInvest: {\n    enabled: boolean;\n    strategy: 'conservative' | 'moderate' | 'aggressive' | 'custom';\n    allocation: {\n      stocks: number;\n      crypto: number;\n      forex: number;\n      commodities: number;\n    };\n    minBalance: number;\n  };\n  autoWithdraw: {\n    enabled: boolean;\n    profitThreshold: number;\n    withdrawPercentage: number;\n    destination: 'bank' | 'card' | 'crypto';\n  };\n}\n\nexport interface WorkflowStatus {\n  isRunning: boolean;\n  lastExecution: Date | null;\n  nextExecution: Date | null;\n  totalDeposited: number;\n  totalInvested: number;\n  totalWithdrawn: number;\n  currentBalance: number;\n  totalProfit: number;\n}\n\nexport interface Transaction {\n  id: string;\n  type: 'deposit' | 'invest' | 'withdraw';\n  amount: number;\n  status: 'pending' | 'completed' | 'failed';\n  timestamp: Date;\n  description: string;\n}\n\nclass AutomatedWorkflowService {\n  private config: WorkflowConfig;\n  private status: WorkflowStatus;\n  private transactions: Transaction[];\n  private intervalId: NodeJS.Timeout | null = null;\n\n  constructor() {\n    // Load configuration from localStorage or use defaults\n    this.config = this.loadConfig();\n    this.status = this.loadStatus();\n    this.transactions = this.loadTransactions();\n    \n    // Start the workflow if enabled\n    if (this.isAnyWorkflowEnabled()) {\n      this.startWorkflow();\n    }\n  }\n\n  private loadConfig(): WorkflowConfig {\n    if (typeof window === 'undefined') {\n      return this.getDefaultConfig();\n    }\n    \n    const saved = localStorage.getItem('automatedWorkflowConfig');\n    return saved ? JSON.parse(saved) : this.getDefaultConfig();\n  }\n\n  private loadStatus(): WorkflowStatus {\n    if (typeof window === 'undefined') {\n      return this.getDefaultStatus();\n    }\n    \n    const saved = localStorage.getItem('automatedWorkflowStatus');\n    return saved ? JSON.parse(saved) : this.getDefaultStatus();\n  }\n\n  private loadTransactions(): Transaction[] {\n    if (typeof window === 'undefined') {\n      return [];\n    }\n    \n    const saved = localStorage.getItem('automatedWorkflowTransactions');\n    return saved ? JSON.parse(saved) : [];\n  }\n\n  private getDefaultConfig(): WorkflowConfig {\n    return {\n      autoDeposit: {\n        enabled: false,\n        amount: 100,\n        frequency: 'weekly',\n        source: 'bank'\n      },\n      autoInvest: {\n        enabled: false,\n        strategy: 'moderate',\n        allocation: {\n          stocks: 40,\n          crypto: 30,\n          forex: 20,\n          commodities: 10\n        },\n        minBalance: 50\n      },\n      autoWithdraw: {\n        enabled: false,\n        profitThreshold: 500,\n        withdrawPercentage: 50,\n        destination: 'bank'\n      }\n    };\n  }\n\n  private getDefaultStatus(): WorkflowStatus {\n    return {\n      isRunning: false,\n      lastExecution: null,\n      nextExecution: null,\n      totalDeposited: 0,\n      totalInvested: 0,\n      totalWithdrawn: 0,\n      currentBalance: 1250.75, // Mock current balance\n      totalProfit: 250.75 // Mock profit\n    };\n  }\n\n  private saveConfig(): void {\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('automatedWorkflowConfig', JSON.stringify(this.config));\n    }\n  }\n\n  private saveStatus(): void {\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('automatedWorkflowStatus', JSON.stringify(this.status));\n    }\n  }\n\n  private saveTransactions(): void {\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('automatedWorkflowTransactions', JSON.stringify(this.transactions));\n    }\n  }\n\n  private isAnyWorkflowEnabled(): boolean {\n    return this.config.autoDeposit.enabled || \n           this.config.autoInvest.enabled || \n           this.config.autoWithdraw.enabled;\n  }\n\n  public updateConfig(newConfig: Partial<WorkflowConfig>): void {\n    this.config = { ...this.config, ...newConfig };\n    this.saveConfig();\n    \n    // Restart workflow with new config\n    this.stopWorkflow();\n    if (this.isAnyWorkflowEnabled()) {\n      this.startWorkflow();\n    }\n    \n    toast.success('Automated workflow configuration updated');\n  }\n\n  public getConfig(): WorkflowConfig {\n    return { ...this.config };\n  }\n\n  public getStatus(): WorkflowStatus {\n    return { ...this.status };\n  }\n\n  public getTransactions(): Transaction[] {\n    return [...this.transactions];\n  }\n\n  public startWorkflow(): void {\n    if (this.intervalId) {\n      this.stopWorkflow();\n    }\n\n    this.status.isRunning = true;\n    this.status.nextExecution = this.calculateNextExecution();\n    this.saveStatus();\n\n    // Run workflow every minute (in production, this would be less frequent)\n    this.intervalId = setInterval(() => {\n      this.executeWorkflow();\n    }, 60000); // 1 minute\n\n    toast.success('Automated workflow started');\n  }\n\n  public stopWorkflow(): void {\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n      this.intervalId = null;\n    }\n\n    this.status.isRunning = false;\n    this.status.nextExecution = null;\n    this.saveStatus();\n\n    toast.success('Automated workflow stopped');\n  }\n\n  private calculateNextExecution(): Date {\n    const now = new Date();\n    const next = new Date(now);\n    \n    // For demo purposes, set next execution to 1 minute from now\n    next.setMinutes(next.getMinutes() + 1);\n    \n    return next;\n  }\n\n  private async executeWorkflow(): Promise<void> {\n    try {\n      this.status.lastExecution = new Date();\n      \n      // Execute auto deposit\n      if (this.config.autoDeposit.enabled) {\n        await this.executeAutoDeposit();\n      }\n\n      // Execute auto invest\n      if (this.config.autoInvest.enabled && this.status.currentBalance >= this.config.autoInvest.minBalance) {\n        await this.executeAutoInvest();\n      }\n\n      // Execute auto withdraw\n      if (this.config.autoWithdraw.enabled && this.status.totalProfit >= this.config.autoWithdraw.profitThreshold) {\n        await this.executeAutoWithdraw();\n      }\n\n      this.status.nextExecution = this.calculateNextExecution();\n      this.saveStatus();\n      \n    } catch (error) {\n      console.error('Workflow execution failed:', error);\n      toast.error('Automated workflow execution failed');\n    }\n  }\n\n  private async executeAutoDeposit(): Promise<void> {\n    const transaction: Transaction = {\n      id: `dep_${Date.now()}`,\n      type: 'deposit',\n      amount: this.config.autoDeposit.amount,\n      status: 'pending',\n      timestamp: new Date(),\n      description: `Auto deposit from ${this.config.autoDeposit.source}`\n    };\n\n    this.transactions.unshift(transaction);\n    this.saveTransactions();\n\n    // Simulate deposit processing\n    setTimeout(() => {\n      transaction.status = 'completed';\n      this.status.totalDeposited += transaction.amount;\n      this.status.currentBalance += transaction.amount;\n      this.saveStatus();\n      this.saveTransactions();\n      \n      toast.success(`Auto deposit of $${transaction.amount} completed`);\n    }, 2000);\n  }\n\n  private async executeAutoInvest(): Promise<void> {\n    const investAmount = Math.min(\n      this.status.currentBalance - this.config.autoInvest.minBalance,\n      this.status.currentBalance * 0.8 // Invest max 80% of available balance\n    );\n\n    if (investAmount <= 0) return;\n\n    const transaction: Transaction = {\n      id: `inv_${Date.now()}`,\n      type: 'invest',\n      amount: investAmount,\n      status: 'pending',\n      timestamp: new Date(),\n      description: `Auto investment using ${this.config.autoInvest.strategy} strategy`\n    };\n\n    this.transactions.unshift(transaction);\n    this.saveTransactions();\n\n    // Simulate investment processing\n    setTimeout(() => {\n      transaction.status = 'completed';\n      this.status.totalInvested += transaction.amount;\n      this.status.currentBalance -= transaction.amount;\n      \n      // Simulate profit generation (random between 1-5%)\n      const profitRate = (Math.random() * 4 + 1) / 100;\n      const profit = transaction.amount * profitRate;\n      this.status.totalProfit += profit;\n      this.status.currentBalance += profit;\n      \n      this.saveStatus();\n      this.saveTransactions();\n      \n      toast.success(`Auto investment of $${transaction.amount.toFixed(2)} completed`);\n    }, 3000);\n  }\n\n  private async executeAutoWithdraw(): Promise<void> {\n    const withdrawAmount = (this.status.totalProfit * this.config.autoWithdraw.withdrawPercentage) / 100;\n\n    if (withdrawAmount <= 0) return;\n\n    const transaction: Transaction = {\n      id: `wit_${Date.now()}`,\n      type: 'withdraw',\n      amount: withdrawAmount,\n      status: 'pending',\n      timestamp: new Date(),\n      description: `Auto withdrawal to ${this.config.autoWithdraw.destination}`\n    };\n\n    this.transactions.unshift(transaction);\n    this.saveTransactions();\n\n    // Simulate withdrawal processing\n    setTimeout(() => {\n      transaction.status = 'completed';\n      this.status.totalWithdrawn += transaction.amount;\n      this.status.currentBalance -= transaction.amount;\n      this.status.totalProfit -= transaction.amount;\n      this.saveStatus();\n      this.saveTransactions();\n      \n      toast.success(`Auto withdrawal of $${transaction.amount.toFixed(2)} completed`);\n    }, 4000);\n  }\n\n  public async manualDeposit(amount: number, source: string): Promise<void> {\n    try {\n      const transaction: Transaction = {\n        id: `man_dep_${Date.now()}`,\n        type: 'deposit',\n        amount,\n        status: 'pending',\n        timestamp: new Date(),\n        description: `Manual deposit from ${source}`\n      };\n\n      this.transactions.unshift(transaction);\n      this.saveTransactions();\n\n      // Process deposit with balance tracking\n      await balanceTrackingService.processDeposit(amount);\n      \n      transaction.status = 'completed';\n      this.status.totalDeposited += amount;\n      this.status.currentBalance += amount;\n      this.saveStatus();\n      this.saveTransactions();\n      \n      toast.success(`Deposit of $${amount} completed`);\n    } catch (error) {\n      toast.error('Deposit failed. Please try again.');\n      throw error;\n    }\n  }\n\n  public async manualWithdraw(amount: number, destination: string): Promise<void> {\n    try {\n      if (amount > this.status.currentBalance) {\n        toast.error('Insufficient balance for withdrawal');\n        throw new Error('Insufficient balance');\n      }\n\n      const transaction: Transaction = {\n        id: `man_wit_${Date.now()}`,\n        type: 'withdraw',\n        amount,\n        status: 'pending',\n        timestamp: new Date(),\n        description: `Manual withdrawal to ${destination}`\n      };\n\n      this.transactions.unshift(transaction);\n      this.saveTransactions();\n\n      // Process withdrawal with balance tracking\n      await balanceTrackingService.processWithdrawal(amount);\n      \n      transaction.status = 'completed';\n      this.status.totalWithdrawn += amount;\n      this.status.currentBalance -= amount;\n      this.saveStatus();\n      this.saveTransactions();\n      \n      toast.success(`Withdrawal of $${amount} completed`);\n    } catch (error) {\n      toast.error('Withdrawal failed. Please try again.');\n      throw error;\n    }\n  }\n}\n\n// Export singleton instance\nexport const automatedWorkflowService = new AutomatedWorkflowService();\nexport default automatedWorkflowService;"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAHA;;;;AAoDA,MAAM;IAkBI,aAA6B;QACnC;;QAIA,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,OAAO,QAAQ,KAAK,KAAK,CAAC,SAAS,IAAI,CAAC,gBAAgB;IAC1D;IAEQ,aAA6B;QACnC;;QAIA,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,OAAO,QAAQ,KAAK,KAAK,CAAC,SAAS,IAAI,CAAC,gBAAgB;IAC1D;IAEQ,mBAAkC;QACxC;;QAIA,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,OAAO,QAAQ,KAAK,KAAK,CAAC,SAAS,EAAE;IACvC;IAEQ,mBAAmC;QACzC,OAAO;YACL,aAAa;gBACX,SAAS;gBACT,QAAQ;gBACR,WAAW;gBACX,QAAQ;YACV;YACA,YAAY;gBACV,SAAS;gBACT,UAAU;gBACV,YAAY;oBACV,QAAQ;oBACR,QAAQ;oBACR,OAAO;oBACP,aAAa;gBACf;gBACA,YAAY;YACd;YACA,cAAc;gBACZ,SAAS;gBACT,iBAAiB;gBACjB,oBAAoB;gBACpB,aAAa;YACf;QACF;IACF;IAEQ,mBAAmC;QACzC,OAAO;YACL,WAAW;YACX,eAAe;YACf,eAAe;YACf,gBAAgB;YAChB,eAAe;YACf,gBAAgB;YAChB,gBAAgB;YAChB,aAAa,OAAO,cAAc;QACpC;IACF;IAEQ,aAAmB;QACzB,wCAAmC;YACjC,aAAa,OAAO,CAAC,2BAA2B,KAAK,SAAS,CAAC,IAAI,CAAC,MAAM;QAC5E;IACF;IAEQ,aAAmB;QACzB,wCAAmC;YACjC,aAAa,OAAO,CAAC,2BAA2B,KAAK,SAAS,CAAC,IAAI,CAAC,MAAM;QAC5E;IACF;IAEQ,mBAAyB;QAC/B,wCAAmC;YACjC,aAAa,OAAO,CAAC,iCAAiC,KAAK,SAAS,CAAC,IAAI,CAAC,YAAY;QACxF;IACF;IAEQ,uBAAgC;QACtC,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,IAC/B,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,IAC9B,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO;IACzC;IAEO,aAAa,SAAkC,EAAQ;QAC5D,IAAI,CAAC,MAAM,GAAG;YAAE,GAAG,IAAI,CAAC,MAAM;YAAE,GAAG,SAAS;QAAC;QAC7C,IAAI,CAAC,UAAU;QAEf,mCAAmC;QACnC,IAAI,CAAC,YAAY;QACjB,IAAI,IAAI,CAAC,oBAAoB,IAAI;YAC/B,IAAI,CAAC,aAAa;QACpB;QAEA,mKAAK,CAAC,OAAO,CAAC;IAChB;IAEO,YAA4B;QACjC,OAAO;YAAE,GAAG,IAAI,CAAC,MAAM;QAAC;IAC1B;IAEO,YAA4B;QACjC,OAAO;YAAE,GAAG,IAAI,CAAC,MAAM;QAAC;IAC1B;IAEO,kBAAiC;QACtC,OAAO;eAAI,IAAI,CAAC,YAAY;SAAC;IAC/B;IAEO,gBAAsB;QAC3B,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,YAAY;QACnB;QAEA,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG;QACxB,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC,sBAAsB;QACvD,IAAI,CAAC,UAAU;QAEf,yEAAyE;QACzE,IAAI,CAAC,UAAU,GAAG,YAAY;YAC5B,IAAI,CAAC,eAAe;QACtB,GAAG,QAAQ,WAAW;QAEtB,mKAAK,CAAC,OAAO,CAAC;IAChB;IAEO,eAAqB;QAC1B,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,cAAc,IAAI,CAAC,UAAU;YAC7B,IAAI,CAAC,UAAU,GAAG;QACpB;QAEA,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG;QACxB,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG;QAC5B,IAAI,CAAC,UAAU;QAEf,mKAAK,CAAC,OAAO,CAAC;IAChB;IAEQ,yBAA+B;QACrC,MAAM,MAAM,IAAI;QAChB,MAAM,OAAO,IAAI,KAAK;QAEtB,6DAA6D;QAC7D,KAAK,UAAU,CAAC,KAAK,UAAU,KAAK;QAEpC,OAAO;IACT;IAEA,MAAc,kBAAiC;QAC7C,IAAI;YACF,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,IAAI;YAEhC,uBAAuB;YACvB,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE;gBACnC,MAAM,IAAI,CAAC,kBAAkB;YAC/B;YAEA,sBAAsB;YACtB,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,EAAE;gBACrG,MAAM,IAAI,CAAC,iBAAiB;YAC9B;YAEA,wBAAwB;YACxB,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,eAAe,EAAE;gBAC3G,MAAM,IAAI,CAAC,mBAAmB;YAChC;YAEA,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC,sBAAsB;YACvD,IAAI,CAAC,UAAU;QAEjB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,mKAAK,CAAC,KAAK,CAAC;QACd;IACF;IAEA,MAAc,qBAAoC;QAChD,MAAM,cAA2B;YAC/B,IAAI,AAAC,OAAiB,OAAX,KAAK,GAAG;YACnB,MAAM;YACN,QAAQ,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM;YACtC,QAAQ;YACR,WAAW,IAAI;YACf,aAAa,AAAC,qBAAmD,OAA/B,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM;QAClE;QAEA,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;QAC1B,IAAI,CAAC,gBAAgB;QAErB,8BAA8B;QAC9B,WAAW;YACT,YAAY,MAAM,GAAG;YACrB,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,YAAY,MAAM;YAChD,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,YAAY,MAAM;YAChD,IAAI,CAAC,UAAU;YACf,IAAI,CAAC,gBAAgB;YAErB,mKAAK,CAAC,OAAO,CAAC,AAAC,oBAAsC,OAAnB,YAAY,MAAM,EAAC;QACvD,GAAG;IACL;IAEA,MAAc,oBAAmC;QAC/C,MAAM,eAAe,KAAK,GAAG,CAC3B,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,EAC9D,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,IAAI,sCAAsC;;QAGzE,IAAI,gBAAgB,GAAG;QAEvB,MAAM,cAA2B;YAC/B,IAAI,AAAC,OAAiB,OAAX,KAAK,GAAG;YACnB,MAAM;YACN,QAAQ;YACR,QAAQ;YACR,WAAW,IAAI;YACf,aAAa,AAAC,yBAAwD,OAAhC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAC;QACxE;QAEA,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;QAC1B,IAAI,CAAC,gBAAgB;QAErB,iCAAiC;QACjC,WAAW;YACT,YAAY,MAAM,GAAG;YACrB,IAAI,CAAC,MAAM,CAAC,aAAa,IAAI,YAAY,MAAM;YAC/C,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,YAAY,MAAM;YAEhD,mDAAmD;YACnD,MAAM,aAAa,CAAC,KAAK,MAAM,KAAK,IAAI,CAAC,IAAI;YAC7C,MAAM,SAAS,YAAY,MAAM,GAAG;YACpC,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI;YAC3B,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI;YAE9B,IAAI,CAAC,UAAU;YACf,IAAI,CAAC,gBAAgB;YAErB,mKAAK,CAAC,OAAO,CAAC,AAAC,uBAAoD,OAA9B,YAAY,MAAM,CAAC,OAAO,CAAC,IAAG;QACrE,GAAG;IACL;IAEA,MAAc,sBAAqC;QACjD,MAAM,iBAAiB,AAAC,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,kBAAkB,GAAI;QAEjG,IAAI,kBAAkB,GAAG;QAEzB,MAAM,cAA2B;YAC/B,IAAI,AAAC,OAAiB,OAAX,KAAK,GAAG;YACnB,MAAM;YACN,QAAQ;YACR,QAAQ;YACR,WAAW,IAAI;YACf,aAAa,AAAC,sBAA0D,OAArC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,WAAW;QACzE;QAEA,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;QAC1B,IAAI,CAAC,gBAAgB;QAErB,iCAAiC;QACjC,WAAW;YACT,YAAY,MAAM,GAAG;YACrB,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,YAAY,MAAM;YAChD,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,YAAY,MAAM;YAChD,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,YAAY,MAAM;YAC7C,IAAI,CAAC,UAAU;YACf,IAAI,CAAC,gBAAgB;YAErB,mKAAK,CAAC,OAAO,CAAC,AAAC,uBAAoD,OAA9B,YAAY,MAAM,CAAC,OAAO,CAAC,IAAG;QACrE,GAAG;IACL;IAEA,MAAa,cAAc,MAAc,EAAE,MAAc,EAAiB;QACxE,IAAI;YACF,MAAM,cAA2B;gBAC/B,IAAI,AAAC,WAAqB,OAAX,KAAK,GAAG;gBACvB,MAAM;gBACN;gBACA,QAAQ;gBACR,WAAW,IAAI;gBACf,aAAa,AAAC,uBAA6B,OAAP;YACtC;YAEA,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;YAC1B,IAAI,CAAC,gBAAgB;YAErB,wCAAwC;YACxC,MAAM,uJAAsB,CAAC,cAAc,CAAC;YAE5C,YAAY,MAAM,GAAG;YACrB,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI;YAC9B,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI;YAC9B,IAAI,CAAC,UAAU;YACf,IAAI,CAAC,gBAAgB;YAErB,mKAAK,CAAC,OAAO,CAAC,AAAC,eAAqB,OAAP,QAAO;QACtC,EAAE,OAAO,OAAO;YACd,mKAAK,CAAC,KAAK,CAAC;YACZ,MAAM;QACR;IACF;IAEA,MAAa,eAAe,MAAc,EAAE,WAAmB,EAAiB;QAC9E,IAAI;YACF,IAAI,SAAS,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;gBACvC,mKAAK,CAAC,KAAK,CAAC;gBACZ,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,cAA2B;gBAC/B,IAAI,AAAC,WAAqB,OAAX,KAAK,GAAG;gBACvB,MAAM;gBACN;gBACA,QAAQ;gBACR,WAAW,IAAI;gBACf,aAAa,AAAC,wBAAmC,OAAZ;YACvC;YAEA,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;YAC1B,IAAI,CAAC,gBAAgB;YAErB,2CAA2C;YAC3C,MAAM,uJAAsB,CAAC,iBAAiB,CAAC;YAE/C,YAAY,MAAM,GAAG;YACrB,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI;YAC9B,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI;YAC9B,IAAI,CAAC,UAAU;YACf,IAAI,CAAC,gBAAgB;YAErB,mKAAK,CAAC,OAAO,CAAC,AAAC,kBAAwB,OAAP,QAAO;QACzC,EAAE,OAAO,OAAO;YACd,mKAAK,CAAC,KAAK,CAAC;YACZ,MAAM;QACR;IACF;IAlWA,aAAc;QALd,+KAAQ,UAAR,KAAA;QACA,+KAAQ,UAAR,KAAA;QACA,+KAAQ,gBAAR,KAAA;QACA,+KAAQ,cAAoC;QAG1C,uDAAuD;QACvD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU;QAC7B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU;QAC7B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB;QAEzC,gCAAgC;QAChC,IAAI,IAAI,CAAC,oBAAoB,IAAI;YAC/B,IAAI,CAAC,aAAa;QACpB;IACF;AAyVF;AAGO,MAAM,2BAA2B,IAAI;uCAC7B","debugId":null}},
    {"offset": {"line": 941, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/hooks/useBalance.ts"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport balanceTrackingService, { BalanceData } from '@/services/BalanceTrackingService'\n\n/**\n * Custom hook for real-time balance tracking\n */\nexport function useBalance() {\n  const [balance, setBalance] = useState<BalanceData>(balanceTrackingService.getCurrentBalance())\n  const [isLoading, setIsLoading] = useState(false)\n\n  useEffect(() => {\n    // Subscribe to balance updates\n    const unsubscribe = balanceTrackingService.subscribe((newBalance) => {\n      setBalance(newBalance)\n      setIsLoading(false)\n    })\n\n    // Cleanup subscription on unmount\n    return unsubscribe\n  }, [])\n\n  /**\n   * Manually refresh balance\n   */\n  const refreshBalance = () => {\n    setIsLoading(true)\n    setBalance(balanceTrackingService.getCurrentBalance())\n    setIsLoading(false)\n  }\n\n  /**\n   * Get formatted balance values\n   */\n  const formattedBalance = balanceTrackingService.getBalanceSummary()\n\n  return {\n    balance,\n    formattedBalance,\n    isLoading,\n    refreshBalance,\n    formatCurrency: balanceTrackingService.formatCurrency.bind(balanceTrackingService)\n  }\n}\n\n/**\n * Hook for balance change notifications\n */\nexport function useBalanceNotifications() {\n  const [lastChange, setLastChange] = useState<{\n    type: 'deposit' | 'withdrawal' | 'profit' | 'loss'\n    amount: number\n    timestamp: Date\n  } | null>(null)\n\n  useEffect(() => {\n    let previousBalance = balanceTrackingService.getCurrentBalance().totalBalance\n\n    const unsubscribe = balanceTrackingService.subscribe((newBalance) => {\n      const difference = newBalance.totalBalance - previousBalance\n      \n      if (Math.abs(difference) > 0.01) { // Ignore very small changes\n        setLastChange({\n          type: difference > 0 ? 'deposit' : 'withdrawal',\n          amount: Math.abs(difference),\n          timestamp: newBalance.lastUpdated\n        })\n      }\n      \n      previousBalance = newBalance.totalBalance\n    })\n\n    return unsubscribe\n  }, [])\n\n  return { lastChange }\n}\n\nexport default useBalance"],"names":[],"mappings":";;;;;;;;AAEA;AACA;;AAHA;;;AAQO,SAAS;;IACd,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,yKAAQ,EAAc,uJAAsB,CAAC,iBAAiB;IAC5F,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,yKAAQ,EAAC;IAE3C,IAAA,0KAAS;gCAAC;YACR,+BAA+B;YAC/B,MAAM,cAAc,uJAAsB,CAAC,SAAS;oDAAC,CAAC;oBACpD,WAAW;oBACX,aAAa;gBACf;;YAEA,kCAAkC;YAClC,OAAO;QACT;+BAAG,EAAE;IAEL;;GAEC,GACD,MAAM,iBAAiB;QACrB,aAAa;QACb,WAAW,uJAAsB,CAAC,iBAAiB;QACnD,aAAa;IACf;IAEA;;GAEC,GACD,MAAM,mBAAmB,uJAAsB,CAAC,iBAAiB;IAEjE,OAAO;QACL;QACA;QACA;QACA;QACA,gBAAgB,uJAAsB,CAAC,cAAc,CAAC,IAAI,CAAC,uJAAsB;IACnF;AACF;GApCgB;AAyCT,SAAS;;IACd,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,yKAAQ,EAIlC;IAEV,IAAA,0KAAS;6CAAC;YACR,IAAI,kBAAkB,uJAAsB,CAAC,iBAAiB,GAAG,YAAY;YAE7E,MAAM,cAAc,uJAAsB,CAAC,SAAS;iEAAC,CAAC;oBACpD,MAAM,aAAa,WAAW,YAAY,GAAG;oBAE7C,IAAI,KAAK,GAAG,CAAC,cAAc,MAAM;wBAC/B,cAAc;4BACZ,MAAM,aAAa,IAAI,YAAY;4BACnC,QAAQ,KAAK,GAAG,CAAC;4BACjB,WAAW,WAAW,WAAW;wBACnC;oBACF;oBAEA,kBAAkB,WAAW,YAAY;gBAC3C;;YAEA,OAAO;QACT;4CAAG,EAAE;IAEL,OAAO;QAAE;IAAW;AACtB;IA5BgB;uCA8BD","debugId":null}},
    {"offset": {"line": 1026, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/dashboard/UserDashboard.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState, useEffect } from 'react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport { Progress } from '@/components/ui/progress'\nimport {\n  User,\n  Settings,\n  CreditCard,\n  TrendingUp,\n  TrendingDown,\n  DollarSign,\n  Users,\n  Brain,\n  Shield,\n  Bell,\n  Eye,\n  EyeOff,\n  Copy,\n  ExternalLink,\n  Crown,\n  Star,\n  Activity,\n  BarChart3,\n  PieChart,\n  LineChart,\n  Target,\n  Zap,\n  Calendar,\n  Clock,\n  Award,\n  Smartphone,\n  Mail,\n  Phone,\n  MapPin,\n  Edit,\n  Check,\n  X,\n  Plus,\n  Minus,\n  ArrowUpRight,\n  ArrowDownLeft,\n  RefreshCw,\n  Download,\n  Upload,\n  Filter,\n  Search,\n  MoreHorizontal,\n  ChevronRight,\n  ChevronDown,\n  AlertTriangle,\n  CheckCircle,\n  Info,\n  Bookmark,\n  Share,\n  Heart,\n  MessageSquare,\n  Globe,\n  Lock,\n  Unlock,\n  Key,\n  Database,\n  Server,\n  Wifi,\n  Signal,\n  Menu\n} from 'lucide-react'\nimport { cn, formatCurrency as utilsFormatCurrency, formatPercent as utilsFormatPercent } from '@/lib/utils'\nimport automatedWorkflowService from '@/services/AutomatedWorkflowService'\nimport { useBalance } from '@/hooks/useBalance'\n\ninterface PortfolioData {\n  totalValue: number\n  todayChange: number\n  todayChangePercent: number\n  weekChange: number\n  monthChange: number\n  yearChange: number\n}\n\ninterface SubscriptionData {\n  plan: string\n  status: string\n  nextBilling: string\n  amount: number\n  features: string[]\n  usage: {\n    trades: { used: number; limit: number }\n    copyTraders: { used: number; limit: number }\n    aiInsights: { used: number; limit: number }\n  }\n}\n\ninterface TradeData {\n  id: string\n  symbol: string\n  type: 'buy' | 'sell'\n  amount: number\n  price: number\n  profit: number\n  profitPercent: number\n  timestamp: string\n  status: 'completed' | 'pending' | 'cancelled'\n}\n\ninterface CopyTraderData {\n  id: string\n  name: string\n  avatar: string\n  followers: number\n  monthlyReturn: number\n  totalReturn: number\n  winRate: number\n  riskScore: number\n  isFollowing: boolean\n  copiedAmount: number\n}\n\nconst UserDashboard: React.FC = () => {\n  const [activeTab, setActiveTab] = useState('overview')\n  const [balanceVisible, setBalanceVisible] = useState(true)\n  const [isEditing, setIsEditing] = useState(false)\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false)\n  const [isAutoRebalancing, setIsAutoRebalancing] = useState(false)\n  const [realTimeUpdates, setRealTimeUpdates] = useState(true)\n  const [lastUpdate, setLastUpdate] = useState<Date | null>(null)\n  const [autoTradeEnabled, setAutoTradeEnabled] = useState(false)\n  const [pendingTrades, setPendingTrades] = useState<string[]>([])\n  const [autoCopyTradeEnabled, setAutoCopyTradeEnabled] = useState(false)\n  const [riskManagementEnabled, setRiskManagementEnabled] = useState(true)\n  const [smartAlertsEnabled, setSmartAlertsEnabled] = useState(true)\n  const [aiInsightsEnabled, setAiInsightsEnabled] = useState(true)\n  const [portfolioOptimizationEnabled, setPortfolioOptimizationEnabled] = useState(false)\n  const [advancedAnalyticsEnabled, setAdvancedAnalyticsEnabled] = useState(true)\n  \n  // Real-time balance tracking\n  const { balance, formattedBalance, isLoading: balanceLoading } = useBalance()\n  \n  // Mock data - in real app, this would come from API\n  const [portfolioData, setPortfolioData] = useState<PortfolioData>({\n    totalValue: 125847.32,\n    todayChange: 2847.21,\n    todayChangePercent: 2.31,\n    weekChange: 5234.12,\n    monthChange: 12847.89,\n    yearChange: 34521.67\n  })\n  \n  const [subscriptionData] = useState<SubscriptionData>({\n    plan: 'Pro Annual',\n    status: 'active',\n    nextBilling: '2024-12-15',\n    amount: 89.99,\n    features: [\n      'Unlimited trades',\n      'Follow up to 50 traders',\n      'Advanced AI insights',\n      'Priority support',\n      'Advanced analytics',\n      'Risk management tools'\n    ],\n    usage: {\n      trades: { used: 1247, limit: -1 },\n      copyTraders: { used: 12, limit: 50 },\n      aiInsights: { used: 89, limit: -1 }\n    }\n  })\n  \n  const [recentTrades] = useState<TradeData[]>([\n    {\n      id: '1',\n      symbol: 'BTC/USD',\n      type: 'buy',\n      amount: 0.5,\n      price: 43250.00,\n      profit: 1247.50,\n      profitPercent: 5.76,\n      timestamp: '2024-01-15T10:30:00Z',\n      status: 'completed'\n    },\n    {\n      id: '2',\n      symbol: 'ETH/USD',\n      type: 'sell',\n      amount: 2.3,\n      price: 2650.00,\n      profit: -234.12,\n      profitPercent: -3.84,\n      timestamp: '2024-01-15T09:15:00Z',\n      status: 'completed'\n    },\n    {\n      id: '3',\n      symbol: 'AAPL',\n      type: 'buy',\n      amount: 50,\n      price: 185.50,\n      profit: 425.00,\n      profitPercent: 4.58,\n      timestamp: '2024-01-14T16:45:00Z',\n      status: 'completed'\n    }\n  ])\n  \n  const [copyTraders] = useState<CopyTraderData[]>([\n    {\n      id: '1',\n      name: 'Sarah Chen',\n      avatar: 'SC',\n      followers: 12847,\n      monthlyReturn: 24.5,\n      totalReturn: 156.7,\n      winRate: 78.5,\n      riskScore: 6.2,\n      isFollowing: true,\n      copiedAmount: 5000\n    },\n    {\n      id: '2',\n      name: 'Marcus Rodriguez',\n      avatar: 'MR',\n      followers: 8934,\n      monthlyReturn: 18.3,\n      totalReturn: 134.2,\n      winRate: 82.1,\n      riskScore: 4.8,\n      isFollowing: true,\n      copiedAmount: 3000\n    },\n    {\n      id: '3',\n      name: 'Emily Watson',\n      avatar: 'EW',\n      followers: 15623,\n      monthlyReturn: 31.2,\n      totalReturn: 203.4,\n      winRate: 75.9,\n      riskScore: 7.1,\n      isFollowing: false,\n      copiedAmount: 0\n    }\n  ])\n  \n  const [userProfile, setUserProfile] = useState({\n    name: 'John Doe',\n    email: 'john.doe@example.com',\n    phone: '+1 (555) 123-4567',\n    location: 'New York, NY',\n    joinDate: '2023-06-15',\n    verified: true,\n    twoFactorEnabled: true\n  })\n\n  // Initialize lastUpdate on client side only to prevent hydration mismatch\n  useEffect(() => {\n    setLastUpdate(new Date())\n  }, [])\n\n  // Real-time updates effect\n  useEffect(() => {\n    let interval: NodeJS.Timeout\n    \n    if (realTimeUpdates) {\n      interval = setInterval(() => {\n        // Simulate real-time portfolio updates\n        setPortfolioData(prev => ({\n          ...prev,\n          totalValue: prev.totalValue + (Math.random() - 0.5) * 1000,\n          todayChange: prev.todayChange + (Math.random() - 0.5) * 100,\n          todayChangePercent: prev.todayChangePercent + (Math.random() - 0.5) * 0.5\n        }))\n        setLastUpdate(new Date())\n      }, 3000) // Update every 3 seconds\n    }\n    \n    return () => {\n      if (interval) clearInterval(interval)\n    }\n  }, [realTimeUpdates])\n  \n  // Auto-rebalancing effect\n  useEffect(() => {\n    let timeout: NodeJS.Timeout\n    \n    if (isAutoRebalancing) {\n      timeout = setTimeout(() => {\n        // Simulate portfolio rebalancing\n        alert('Portfolio automatically rebalanced based on AI recommendations!')\n        setIsAutoRebalancing(false)\n      }, 5000) // Rebalance after 5 seconds\n    }\n    \n    return () => {\n      if (timeout) clearTimeout(timeout)\n    }\n  }, [isAutoRebalancing])\n\n  const formatCurrency = (amount: number) => {\n    if (typeof amount !== 'number' || isNaN(amount)) return '$0.00'\n    try {\n      return new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 2\n      }).format(amount)\n    } catch (error) {\n      return '$0.00'\n    }\n  }\n\n  const formatPercent = (percent: number) => {\n    return `${percent >= 0 ? '+' : ''}${percent.toFixed(2)}%`\n  }\n\n  const formatDate = (dateString: string) => {\n    if (!dateString) return 'N/A'\n    try {\n      return new Date(dateString).toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      })\n    } catch (error) {\n      return 'Invalid Date'\n    }\n  }\n\n  const formatTime = (dateString: string) => {\n    return new Date(dateString).toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit'\n    })\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-blue-900 text-white p-6\">\n      <div className=\"max-w-7xl mx-auto space-y-8\">\n        {/* Top Navigation Bar */}\n        <div className=\"bg-gray-800/30 backdrop-blur-xl rounded-xl border border-gray-700/50 p-4\">\n          <div className=\"flex flex-wrap items-center justify-between gap-4\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"h-8 w-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center\">\n                <Zap className=\"h-5 w-5 text-white\" />\n              </div>\n              <span className=\"text-xl font-bold text-white\">KAIRO</span>\n              <Badge className=\"bg-orange-500/20 text-orange-300 border-orange-500/30 ml-2\">\n                Demo Mode\n              </Badge>\n            </div>\n            \n            <div className=\"flex items-center space-x-2 overflow-x-auto\">\n              <Button \n                variant=\"ghost\" \n                size=\"sm\" \n                onClick={() => window.open('/dashboard', '_self')}\n                className=\"text-gray-300 hover:text-white hover:bg-gray-700/50 whitespace-nowrap\"\n              >\n                <BarChart3 className=\"w-4 h-4 mr-2\" />\n                Dashboard\n              </Button>\n              <Button \n                variant=\"ghost\" \n                size=\"sm\" \n                onClick={() => window.open('/trading', '_self')}\n                className=\"text-gray-300 hover:text-white hover:bg-gray-700/50 whitespace-nowrap\"\n              >\n                <TrendingUp className=\"w-4 h-4 mr-2\" />\n                Trading\n              </Button>\n              <Button \n                variant=\"ghost\" \n                size=\"sm\" \n                onClick={() => window.open('/portfolio', '_self')}\n                className=\"text-gray-300 hover:text-white hover:bg-gray-700/50 whitespace-nowrap\"\n              >\n                <PieChart className=\"w-4 h-4 mr-2\" />\n                Portfolio\n              </Button>\n              <Button \n                variant=\"ghost\" \n                size=\"sm\" \n                onClick={() => window.open('/copy-trade', '_self')}\n                className=\"text-gray-300 hover:text-white hover:bg-gray-700/50 whitespace-nowrap\"\n              >\n                <Users className=\"w-4 h-4 mr-2\" />\n                Copy Trade\n              </Button>\n              <Button \n                variant=\"ghost\" \n                size=\"sm\" \n                onClick={() => window.open('/automation', '_self')}\n                className=\"text-gray-300 hover:text-white hover:bg-gray-700/50 whitespace-nowrap\"\n              >\n                <Zap className=\"w-4 h-4 mr-2\" />\n                Automation\n              </Button>\n              <Button \n                variant=\"ghost\" \n                size=\"sm\" \n                onClick={() => window.open('/settings', '_self')}\n                className=\"text-gray-300 hover:text-white hover:bg-gray-700/50 whitespace-nowrap\"\n              >\n                <Settings className=\"w-4 h-4 mr-2\" />\n                Settings\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        {/* Header */}\n        <div className=\"flex flex-col lg:flex-row justify-between items-start lg:items-center gap-6\">\n          <div>\n            <h1 className=\"text-3xl lg:text-4xl font-bold mb-2\">\n              Welcome back, {userProfile.name.split(' ')[0]}!\n            </h1>\n            <p className=\"text-gray-300\">\n              Here&apos;s your trading overview for today\n            </p>\n          </div>\n          \n          <div className=\"flex items-center space-x-4\">\n            {/* Quick Fund Management Buttons */}\n            <Button \n              onClick={async () => {\n                try {\n                  await automatedWorkflowService.manualDeposit(1000, 'bank');\n                } catch (error) {\n                  console.error('Quick deposit failed:', error);\n                }\n              }}\n              className=\"bg-green-600 hover:bg-green-700 text-white\"\n            >\n              <Plus className=\"w-4 h-4 mr-2\" />\n              Quick Deposit\n            </Button>\n            <Button \n              onClick={async () => {\n                try {\n                  await automatedWorkflowService.manualWithdraw(500, 'bank');\n                } catch (error) {\n                  console.error('Quick withdrawal failed:', error);\n                }\n              }}\n              variant=\"outline\" \n              className=\"border-blue-600 text-blue-300 hover:bg-blue-600/20\"\n            >\n              <Minus className=\"w-4 h-4 mr-2\" />\n              Quick Withdraw\n            </Button>\n            <Button variant=\"outline\" className=\"border-gray-600 text-gray-300 hover:bg-gray-800\">\n              <Download className=\"w-4 h-4 mr-2\" />\n              Export Data\n            </Button>\n            <div className=\"flex items-center space-x-3\">\n              <Button \n                variant=\"outline\" \n                size=\"sm\"\n                className={cn(\n                  \"border-gray-600\",\n                  realTimeUpdates \n                    ? \"border-green-500 bg-green-500/20 text-green-300\" \n                    : \"text-gray-300 hover:bg-gray-700\"\n                )}\n                onClick={() => {\n                  setRealTimeUpdates(!realTimeUpdates)\n                  setLastUpdate(new Date())\n                  if (!realTimeUpdates) {\n                    alert('Real-time updates enabled')\n                  } else {\n                    alert('Real-time updates disabled')\n                  }\n                }}\n              >\n                <RefreshCw className={cn(\"w-4 h-4 mr-2\", realTimeUpdates && \"animate-spin\")} />\n                {realTimeUpdates ? 'Live' : 'Refresh'}\n              </Button>\n              <Button\n                onClick={() => window.open('/trading', '_blank')}\n                className=\"bg-gradient-to-r from-purple-500 to-blue-500 hover:from-purple-600 hover:to-blue-600\"\n              >\n                <Plus className=\"w-4 h-4 mr-2\" />\n                New Trade\n              </Button>\n            </div>\n            <button\n              onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n              className=\"lg:hidden p-2 text-gray-400 hover:text-gray-300 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-900\"\n              aria-expanded={mobileMenuOpen}\n              aria-controls=\"mobile-menu\"\n              aria-label={mobileMenuOpen ? 'Close mobile menu' : 'Open mobile menu'}\n            >\n              {mobileMenuOpen ? <X className=\"h-6 w-6\" aria-hidden=\"true\" /> : <Menu className=\"h-6 w-6\" aria-hidden=\"true\" />}\n            </button>\n          </div>\n        </div>\n\n        {/* Portfolio Overview Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          <Card className=\"bg-gray-800/50 border-gray-700 backdrop-blur-xl\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"w-12 h-12 bg-blue-500/20 rounded-lg flex items-center justify-center\">\n                  <DollarSign className=\"w-6 h-6 text-blue-400\" />\n                </div>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => setBalanceVisible(!balanceVisible)}\n                  className=\"text-gray-400 hover:text-white\"\n                >\n                  {balanceVisible ? <Eye className=\"w-4 h-4\" /> : <EyeOff className=\"w-4 h-4\" />}\n                </Button>\n              </div>\n              <div>\n                <p className=\"text-gray-400 text-sm mb-1\">Total Portfolio Value</p>\n                <p className=\"text-2xl font-bold text-white\">\n                  {balanceVisible ? formattedBalance.total : '••••••'}\n                  {balanceLoading && <span className=\"ml-2 text-sm text-gray-400\">updating...</span>}\n                </p>\n                <div className=\"flex items-center mt-2\">\n                  <TrendingUp className=\"w-4 h-4 text-green-400 mr-1\" />\n                  <span className=\"text-green-400 text-sm\">\n                    {formatPercent(portfolioData.todayChangePercent)}\n                  </span>\n                  <span className=\"text-gray-400 text-sm ml-1\">today</span>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card className=\"bg-gray-800/50 border-gray-700 backdrop-blur-xl\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"w-12 h-12 bg-green-500/20 rounded-lg flex items-center justify-center\">\n                  <TrendingUp className=\"w-6 h-6 text-green-400\" />\n                </div>\n                <Badge className=\"bg-green-500/20 text-green-400 border-green-500/30\">\n                  Active\n                </Badge>\n              </div>\n              <div>\n                <p className=\"text-gray-400 text-sm mb-1\">Today&apos;s P&L</p>\n                <p className=\"text-2xl font-bold text-green-400\">\n                  {balanceVisible ? formatCurrency(portfolioData.todayChange) : '••••••'}\n                </p>\n                <p className=\"text-gray-400 text-sm mt-2\">\n                  {formatPercent(portfolioData.todayChangePercent)} from yesterday\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card className=\"bg-gray-800/50 border-gray-700 backdrop-blur-xl\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"w-12 h-12 bg-purple-500/20 rounded-lg flex items-center justify-center\">\n                  <Users className=\"w-6 h-6 text-purple-400\" />\n                </div>\n                <Badge className=\"bg-purple-500/20 text-purple-400 border-purple-500/30\">\n                  {copyTraders.filter(t => t.isFollowing).length} Following\n                </Badge>\n              </div>\n              <div>\n                <p className=\"text-gray-400 text-sm mb-1\">Copy Trading</p>\n                <p className=\"text-2xl font-bold text-white\">\n                  {copyTraders.filter(t => t.isFollowing).length} Traders\n                </p>\n                <p className=\"text-gray-400 text-sm mt-2\">\n                  {formatCurrency(copyTraders.reduce((sum, t) => sum + t.copiedAmount, 0))} allocated\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card className=\"bg-gray-800/50 border-gray-700 backdrop-blur-xl\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"w-12 h-12 bg-orange-500/20 rounded-lg flex items-center justify-center\">\n                  <Crown className=\"w-6 h-6 text-orange-400\" />\n                </div>\n                <Badge className=\"bg-orange-500/20 text-orange-400 border-orange-500/30\">\n                  {subscriptionData.plan}\n                </Badge>\n              </div>\n              <div>\n                <p className=\"text-gray-400 text-sm mb-1\">Subscription</p>\n                <p className=\"text-2xl font-bold text-white\">\n                  {formatCurrency(subscriptionData.amount)}\n                </p>\n                <p className=\"text-gray-400 text-sm mt-2\">\n                  Next billing: {formatDate(subscriptionData.nextBilling)}\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Balance Breakdown Card */}\n          <Card className=\"bg-gray-800/50 border-gray-700\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div className=\"w-12 h-12 bg-green-500/20 rounded-lg flex items-center justify-center\">\n                  <DollarSign className=\"w-6 h-6 text-green-400\" />\n                </div>\n                <Badge className=\"bg-green-500/20 text-green-400 border-green-500/30\">\n                  Live\n                </Badge>\n              </div>\n              <div>\n                <p className=\"text-gray-400 text-sm mb-1\">Available Balance</p>\n                <p className=\"text-xl font-bold text-white\">\n                  {balanceVisible ? formattedBalance.available : '••••••'}\n                  {balanceLoading && <span className=\"ml-2 text-xs text-gray-400\">updating...</span>}\n                </p>\n                <p className=\"text-gray-400 text-sm mt-3 mb-1\">Invested Amount</p>\n                <p className=\"text-lg font-semibold text-white\">\n                  {balanceVisible ? formattedBalance.invested : '••••••'}\n                </p>\n                <p className=\"text-gray-400 text-sm mt-3 mb-1\">Pending Deposits</p>\n                <p className=\"text-lg font-semibold text-blue-400\">\n                  {balanceVisible ? balance.pendingDeposits.toLocaleString('en-US', { style: 'currency', currency: 'USD' }) : '••••••'}\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Main Content Tabs */}\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-6\">\n          <TabsList className=\"bg-gray-800/50 border border-gray-700 p-1\">\n            <TabsTrigger value=\"overview\" className=\"data-[state=active]:bg-purple-500 data-[state=active]:text-white\">\n              <BarChart3 className=\"w-4 h-4 mr-2\" />\n              Overview\n            </TabsTrigger>\n            <TabsTrigger value=\"trades\" className=\"data-[state=active]:bg-purple-500 data-[state=active]:text-white\">\n              <Activity className=\"w-4 h-4 mr-2\" />\n              Recent Trades\n            </TabsTrigger>\n            <TabsTrigger value=\"copy-trading\" className=\"data-[state=active]:bg-purple-500 data-[state=active]:text-white\">\n              <Users className=\"w-4 h-4 mr-2\" />\n              Copy Trading\n            </TabsTrigger>\n            <TabsTrigger value=\"subscription\" className=\"data-[state=active]:bg-purple-500 data-[state=active]:text-white\">\n              <Crown className=\"w-4 h-4 mr-2\" />\n              Subscription\n            </TabsTrigger>\n            <TabsTrigger value=\"profile\" className=\"data-[state=active]:bg-purple-500 data-[state=active]:text-white\">\n              <User className=\"w-4 h-4 mr-2\" />\n              Profile\n            </TabsTrigger>\n          </TabsList>\n\n          {/* Overview Tab */}\n          <TabsContent value=\"overview\" className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              {/* Performance Chart */}\n              <Card className=\"bg-gray-800/50 border-gray-700 backdrop-blur-xl\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center justify-between\">\n                    <span>Portfolio Performance</span>\n                    <Button variant=\"ghost\" size=\"sm\" className=\"text-gray-400\">\n                      <RefreshCw className=\"w-4 h-4\" />\n                    </Button>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"grid grid-cols-3 gap-4\">\n                      <div>\n                        <p className=\"text-gray-400 text-sm\">1W</p>\n                        <p className=\"text-lg font-semibold text-green-400\">\n                          {formatPercent(4.2)}\n                        </p>\n                      </div>\n                      <div>\n                        <p className=\"text-gray-400 text-sm\">1M</p>\n                        <p className=\"text-lg font-semibold text-green-400\">\n                          {formatPercent(12.8)}\n                        </p>\n                      </div>\n                      <div>\n                        <p className=\"text-gray-400 text-sm\">1Y</p>\n                        <p className=\"text-lg font-semibold text-green-400\">\n                          {formatPercent(38.5)}\n                        </p>\n                      </div>\n                    </div>\n                    \n                    {/* Mock chart area */}\n                    <div className=\"h-48 bg-gray-900/50 rounded-lg flex items-center justify-center\">\n                      <div className=\"text-center\">\n                        <LineChart className=\"w-12 h-12 text-gray-600 mx-auto mb-2\" />\n                        <p className=\"text-gray-500 text-sm\">Performance Chart</p>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n              \n              {/* AI Insights */}\n              <Card className=\"bg-gray-800/50 border-gray-700 backdrop-blur-xl\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <Brain className=\"w-5 h-5 text-purple-400 mr-2\" />\n                    AI Insights\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"p-4 bg-purple-500/20 border border-purple-500/30 rounded-lg\">\n                      <div className=\"flex items-start space-x-3\">\n                        <div className=\"w-8 h-8 bg-purple-500 rounded-full flex items-center justify-center flex-shrink-0\">\n                          <Brain className=\"w-4 h-4 text-white\" />\n                        </div>\n                        <div className=\"flex-1\">\n                          <p className=\"text-purple-300 font-semibold mb-1\">Market Opportunity</p>\n                          <p className=\"text-gray-300 text-sm mb-3\">\n                            Strong bullish momentum detected in BTC. Consider increasing allocation by 5-10%.\n                          </p>\n                          <div className=\"flex items-center justify-between\">\n                            <Badge className=\"bg-purple-500/30 text-purple-300 border-purple-500/50\">\n                              92% Confidence\n                            </Badge>\n                            <div className=\"flex space-x-2\">\n                              <Button \n                                size=\"sm\" \n                                onClick={() => window.open('/trading', '_blank')}\n                                className=\"bg-purple-600 hover:bg-purple-700 text-white text-xs px-3 py-1\"\n                              >\n                                Trade Now\n                              </Button>\n                              <Button \n                                size=\"sm\" \n                                variant=\"outline\"\n                                className={cn(\n                                  \"text-xs px-3 py-1\",\n                                  pendingTrades.includes('BTC') \n                                    ? \"border-yellow-500 bg-yellow-500/20 text-yellow-300\" \n                                    : \"border-purple-500/30 text-purple-300 hover:bg-purple-500/10\"\n                                )}\n                                onClick={() => {\n                                  if (!pendingTrades.includes('BTC')) {\n                                    setPendingTrades(prev => [...prev, 'BTC'])\n                                    setTimeout(() => {\n                                      alert('Auto-trade executed: BTC +7.5% allocation')\n                                      setPendingTrades(prev => prev.filter(t => t !== 'BTC'))\n                                    }, 3000)\n                                  }\n                                }}\n                                disabled={pendingTrades.includes('BTC')}\n                              >\n                                <Zap className={cn(\"w-3 h-3 mr-1\", pendingTrades.includes('BTC') && \"animate-pulse\")} />\n                                {pendingTrades.includes('BTC') ? 'Executing...' : 'Auto Execute'}\n                              </Button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"p-4 bg-blue-500/20 border border-blue-500/30 rounded-lg\">\n                      <div className=\"flex items-start space-x-3\">\n                        <div className=\"w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center flex-shrink-0\">\n                          <Shield className=\"w-4 h-4 text-white\" />\n                        </div>\n                        <div>\n                          <p className=\"text-blue-300 font-semibold mb-1\">Risk Alert</p>\n                          <p className=\"text-gray-300 text-sm\">\n                            Your portfolio concentration in tech stocks is above recommended levels.\n                          </p>\n                          <Badge className=\"mt-2 bg-blue-500/30 text-blue-300 border-blue-500/50\">\n                            Medium Risk\n                          </Badge>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n            \n            {/* Quick Actions Section */}\n            <Card className=\"bg-gray-800/50 border-gray-700 backdrop-blur-xl\">\n              <CardHeader>\n                <CardTitle className=\"flex items-center justify-between\">\n                   <div className=\"flex items-center\">\n                     <Zap className=\"w-5 h-5 text-yellow-400 mr-2\" />\n                     Quick Actions & Automation\n                   </div>\n                   {realTimeUpdates && lastUpdate && (\n                     <div className=\"flex items-center text-xs text-blue-400\">\n                       <div className=\"w-2 h-2 bg-blue-400 rounded-full animate-pulse mr-2\" />\n                       Last update: {lastUpdate.toLocaleTimeString()}\n                     </div>\n                   )}\n                 </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {/* Trading Links */}\n                  <div className=\"space-y-3\">\n                    <h4 className=\"text-sm font-semibold text-gray-300 mb-2\">Trading Platforms</h4>\n                    <Button \n                      className=\"w-full bg-gradient-to-r from-purple-500 to-blue-500 hover:from-purple-600 hover:to-blue-600\"\n                      onClick={() => window.open('/trading', '_blank')}\n                    >\n                      <BarChart3 className=\"w-4 h-4 mr-2\" />\n                      Spot Trading\n                    </Button>\n                    <Button \n                      variant=\"outline\" \n                      className=\"w-full border-gray-600 text-gray-300 hover:bg-gray-700\"\n                      onClick={() => window.open('/trading?tab=futures', '_blank')}\n                    >\n                      <TrendingUp className=\"w-4 h-4 mr-2\" />\n                      Futures Trading\n                    </Button>\n                    <Button \n                      variant=\"outline\" \n                      className=\"w-full border-gray-600 text-gray-300 hover:bg-gray-700\"\n                      onClick={() => window.open('/trading?tab=options', '_blank')}\n                    >\n                      <Target className=\"w-4 h-4 mr-2\" />\n                      Options Trading\n                    </Button>\n                  </div>\n                  \n                  {/* Automation Features */}\n                  <div className=\"space-y-3\">\n                    <h4 className=\"text-sm font-semibold text-gray-300 mb-2\">Automation</h4>\n                    <Button \n                       variant=\"outline\" \n                       className={cn(\n                         \"w-full\",\n                         isAutoRebalancing \n                           ? \"border-green-500 bg-green-500/20 text-green-300\" \n                           : \"border-green-500/30 text-green-400 hover:bg-green-500/10\"\n                       )}\n                       onClick={() => {\n                         setIsAutoRebalancing(!isAutoRebalancing)\n                         if (!isAutoRebalancing) {\n                           alert('Portfolio rebalancing initiated based on AI recommendations')\n                         }\n                       }}\n                       disabled={isAutoRebalancing}\n                     >\n                       <RefreshCw className={cn(\"w-4 h-4 mr-2\", isAutoRebalancing && \"animate-spin\")} />\n                       {isAutoRebalancing ? 'Rebalancing...' : 'Auto Rebalance'}\n                     </Button>\n                    <Button \n                       variant=\"outline\" \n                       className={cn(\n                         \"w-full\",\n                         autoTradeEnabled \n                           ? \"border-blue-500 bg-blue-500/20 text-blue-300\" \n                           : \"border-blue-500/30 text-blue-400 hover:bg-blue-500/10\"\n                       )}\n                       onClick={() => {\n                         setAutoTradeEnabled(!autoTradeEnabled)\n                         if (!autoTradeEnabled) {\n                           alert('Automated trade execution enabled for AI insights')\n                         } else {\n                           alert('Automated trade execution disabled')\n                         }\n                       }}\n                     >\n                       <Zap className={cn(\"w-4 h-4 mr-2\", autoTradeEnabled && \"animate-pulse\")} />\n                       {autoTradeEnabled ? 'Auto Trade ON' : 'Enable Auto Trade'}\n                     </Button>\n                     <Button \n                       variant=\"outline\" \n                       className={cn(\n                         \"w-full\",\n                         autoCopyTradeEnabled \n                           ? \"border-purple-500 bg-purple-500/20 text-purple-300\" \n                           : \"border-purple-500/30 text-purple-400 hover:bg-purple-500/10\"\n                       )}\n                       onClick={() => {\n                         setAutoCopyTradeEnabled(!autoCopyTradeEnabled)\n                         if (!autoCopyTradeEnabled) {\n                           alert('Auto copy trading enabled for top performers')\n                         } else {\n                           alert('Auto copy trading disabled')\n                         }\n                       }}\n                     >\n                       <Copy className={cn(\"w-4 h-4 mr-2\", autoCopyTradeEnabled && \"animate-pulse\")} />\n                       {autoCopyTradeEnabled ? 'Auto Copy ON' : 'Auto Copy Trade'}\n                     </Button>\n                    <Button \n                      variant=\"outline\" \n                      className={cn(\n                        \"w-full\",\n                        riskManagementEnabled \n                          ? \"border-orange-500 bg-orange-500/20 text-orange-300\" \n                          : \"border-orange-500/30 text-orange-400 hover:bg-orange-500/10\"\n                      )}\n                      onClick={() => {\n                        setRiskManagementEnabled(!riskManagementEnabled)\n                        if (!riskManagementEnabled) {\n                          alert('Risk management system activated')\n                        } else {\n                          alert('Risk management system disabled')\n                        }\n                      }}\n                    >\n                      <Shield className={cn(\"w-4 h-4 mr-2\", riskManagementEnabled && \"animate-pulse\")} />\n                      {riskManagementEnabled ? 'Risk Mgmt ON' : 'Risk Management'}\n                    </Button>\n                  </div>\n                  \n                  {/* AI & Analytics Features */}\n                  <div className=\"space-y-3\">\n                    <h4 className=\"text-sm font-semibold text-gray-300 mb-2\">AI & Analytics</h4>\n                    <Button \n                      variant=\"outline\" \n                      className={cn(\n                        \"w-full\",\n                        aiInsightsEnabled \n                          ? \"border-blue-500 bg-blue-500/20 text-blue-300\" \n                          : \"border-blue-500/30 text-blue-400 hover:bg-blue-500/10\"\n                      )}\n                      onClick={() => {\n                        setAiInsightsEnabled(!aiInsightsEnabled)\n                        if (!aiInsightsEnabled) {\n                          alert('AI insights and recommendations activated')\n                        } else {\n                          alert('AI insights disabled')\n                        }\n                      }}\n                    >\n                      <Brain className={cn(\"w-4 h-4 mr-2\", aiInsightsEnabled && \"animate-pulse\")} />\n                      {aiInsightsEnabled ? 'AI Insights ON' : 'Enable AI Insights'}\n                    </Button>\n                    <Button \n                      variant=\"outline\" \n                      className={cn(\n                        \"w-full\",\n                        smartAlertsEnabled \n                          ? \"border-yellow-500 bg-yellow-500/20 text-yellow-300\" \n                          : \"border-yellow-500/30 text-yellow-400 hover:bg-yellow-500/10\"\n                      )}\n                      onClick={() => {\n                        setSmartAlertsEnabled(!smartAlertsEnabled)\n                        if (!smartAlertsEnabled) {\n                          alert('Smart alerts and notifications enabled')\n                        } else {\n                          alert('Smart alerts disabled')\n                        }\n                      }}\n                    >\n                      <Bell className={cn(\"w-4 h-4 mr-2\", smartAlertsEnabled && \"animate-pulse\")} />\n                      {smartAlertsEnabled ? 'Smart Alerts ON' : 'Smart Alerts'}\n                    </Button>\n                    <Button \n                      variant=\"outline\" \n                      className={cn(\n                        \"w-full\",\n                        portfolioOptimizationEnabled \n                          ? \"border-green-500 bg-green-500/20 text-green-300\" \n                          : \"border-green-500/30 text-green-400 hover:bg-green-500/10\"\n                      )}\n                      onClick={() => {\n                        setPortfolioOptimizationEnabled(!portfolioOptimizationEnabled)\n                        if (!portfolioOptimizationEnabled) {\n                          alert('Portfolio optimization engine activated')\n                        } else {\n                          alert('Portfolio optimization disabled')\n                        }\n                      }}\n                    >\n                      <Target className={cn(\"w-4 h-4 mr-2\", portfolioOptimizationEnabled && \"animate-pulse\")} />\n                      {portfolioOptimizationEnabled ? 'Optimization ON' : 'Portfolio Optimizer'}\n                    </Button>\n                    <Button \n                      variant=\"outline\" \n                      className={cn(\n                        \"w-full\",\n                        advancedAnalyticsEnabled \n                          ? \"border-purple-500 bg-purple-500/20 text-purple-300\" \n                          : \"border-purple-500/30 text-purple-400 hover:bg-purple-500/10\"\n                      )}\n                      onClick={() => {\n                        setAdvancedAnalyticsEnabled(!advancedAnalyticsEnabled)\n                        if (!advancedAnalyticsEnabled) {\n                          alert('Advanced analytics and reporting enabled')\n                        } else {\n                          alert('Advanced analytics disabled')\n                        }\n                      }}\n                    >\n                      <BarChart3 className={cn(\"w-4 h-4 mr-2\", advancedAnalyticsEnabled && \"animate-pulse\")} />\n                      {advancedAnalyticsEnabled ? 'Analytics ON' : 'Advanced Analytics'}\n                    </Button>\n                  </div>\n                  \n                  {/* Data & Reports */}\n                  <div className=\"space-y-3\">\n                    <h4 className=\"text-sm font-semibold text-gray-300 mb-2\">Data & Reports</h4>\n                    <Button \n                      variant=\"outline\" \n                      className=\"w-full border-gray-600 text-gray-300 hover:bg-gray-700\"\n                      onClick={() => {\n                        alert('Generating automated portfolio report...')\n                      }}\n                    >\n                      <Download className=\"w-4 h-4 mr-2\" />\n                      Export Report\n                    </Button>\n                    <Button \n                       variant=\"outline\" \n                       className={cn(\n                         \"w-full\",\n                         realTimeUpdates \n                           ? \"border-blue-500 bg-blue-500/20 text-blue-300\" \n                           : \"border-gray-600 text-gray-300 hover:bg-gray-700\"\n                       )}\n                       onClick={() => {\n                         setRealTimeUpdates(!realTimeUpdates)\n                         if (!realTimeUpdates) {\n                           alert('Real-time data sync enabled')\n                         } else {\n                           alert('Real-time data sync disabled')\n                         }\n                       }}\n                     >\n                       <Activity className={cn(\"w-4 h-4 mr-2\", realTimeUpdates && \"animate-pulse\")} />\n                       {realTimeUpdates ? 'Live Sync ON' : 'Enable Sync'}\n                     </Button>\n                    <Button \n                      variant=\"outline\" \n                      className=\"w-full border-gray-600 text-gray-300 hover:bg-gray-700\"\n                      onClick={() => {\n                        alert('Automated alerts configured')\n                      }}\n                    >\n                      <Bell className=\"w-4 h-4 mr-2\" />\n                      Setup Alerts\n                    </Button>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Recent Trades Tab */}\n          <TabsContent value=\"trades\" className=\"space-y-6\">\n            <Card className=\"bg-gray-800/50 border-gray-700 backdrop-blur-xl\">\n              <CardHeader>\n                <div className=\"flex items-center justify-between\">\n                  <CardTitle>Recent Trades</CardTitle>\n                  <div className=\"flex items-center space-x-2\">\n                    <Button variant=\"ghost\" size=\"sm\" className=\"text-gray-400\">\n                      <Filter className=\"w-4 h-4 mr-2\" />\n                      Filter\n                    </Button>\n                    <Button variant=\"ghost\" size=\"sm\" className=\"text-gray-400\">\n                      <Download className=\"w-4 h-4 mr-2\" />\n                      Export\n                    </Button>\n                  </div>\n                </div>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {recentTrades.map((trade) => (\n                    <div key={trade.id} className=\"flex items-center justify-between p-4 bg-gray-900/50 rounded-lg\">\n                      <div className=\"flex items-center space-x-4\">\n                        <div className={cn(\n                          \"w-10 h-10 rounded-full flex items-center justify-center\",\n                          trade.type === 'buy' ? \"bg-green-500/20\" : \"bg-red-500/20\"\n                        )}>\n                          {trade.type === 'buy' ? (\n                            <TrendingUp className=\"w-5 h-5 text-green-400\" />\n                          ) : (\n                            <TrendingDown className=\"w-5 h-5 text-red-400\" />\n                          )}\n                        </div>\n                        <div>\n                          <p className=\"font-semibold text-white\">{trade.symbol}</p>\n                          <p className=\"text-gray-400 text-sm\">\n                            {trade.type.toUpperCase()} {trade.amount} @ {formatCurrency(trade.price)}\n                          </p>\n                        </div>\n                      </div>\n                      \n                      <div className=\"text-right\">\n                        <p className={cn(\n                          \"font-semibold\",\n                          trade.profit >= 0 ? \"text-green-400\" : \"text-red-400\"\n                        )}>\n                          {trade.profit >= 0 ? '+' : ''}{formatCurrency(trade.profit)}\n                        </p>\n                        <p className={cn(\n                          \"text-sm\",\n                          trade.profit >= 0 ? \"text-green-400\" : \"text-red-400\"\n                        )}>\n                          {formatPercent(trade.profitPercent)}\n                        </p>\n                      </div>\n                      \n                      <div className=\"text-right\">\n                        <Badge className={cn(\n                          trade.status === 'completed' && \"bg-green-500/20 text-green-400 border-green-500/30\",\n                          trade.status === 'pending' && \"bg-yellow-500/20 text-yellow-400 border-yellow-500/30\",\n                          trade.status === 'cancelled' && \"bg-red-500/20 text-red-400 border-red-500/30\"\n                        )}>\n                          {trade.status}\n                        </Badge>\n                        <p className=\"text-gray-400 text-sm mt-1\">\n                          {formatDate(trade.timestamp)}\n                        </p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Copy Trading Tab */}\n          <TabsContent value=\"copy-trading\" className=\"space-y-6\">\n            <Card className=\"bg-gray-800/50 border-gray-700 backdrop-blur-xl\">\n              <CardHeader>\n                <div className=\"flex items-center justify-between\">\n                  <CardTitle>Copy Trading Portfolio</CardTitle>\n                  <Button className=\"bg-gradient-to-r from-purple-500 to-blue-500 hover:from-purple-600 hover:to-blue-600\">\n                    <Plus className=\"w-4 h-4 mr-2\" />\n                    Find Traders\n                  </Button>\n                </div>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6\">\n                  {copyTraders.map((trader) => (\n                    <Card key={trader.id} className=\"bg-gray-900/50 border-gray-600\">\n                      <CardContent className=\"p-6\">\n                        <div className=\"flex items-center space-x-3 mb-4\">\n                          <div className=\"w-12 h-12 bg-gradient-to-r from-purple-500 to-blue-500 rounded-full flex items-center justify-center text-white font-bold\">\n                            {trader.avatar}\n                          </div>\n                          <div>\n                            <p className=\"font-semibold text-white\">{trader.name}</p>\n                            <p className=\"text-gray-400 text-sm\">{trader.followers.toLocaleString()} followers</p>\n                          </div>\n                        </div>\n                        \n                        <div className=\"grid grid-cols-2 gap-4 mb-4\">\n                          <div>\n                            <p className=\"text-gray-400 text-sm\">Monthly Return</p>\n                            <p className=\"text-green-400 font-semibold\">{formatPercent(trader.monthlyReturn)}</p>\n                          </div>\n                          <div>\n                            <p className=\"text-gray-400 text-sm\">Win Rate</p>\n                            <p className=\"text-white font-semibold\">{trader.winRate}%</p>\n                          </div>\n                          <div>\n                            <p className=\"text-gray-400 text-sm\">Total Return</p>\n                            <p className=\"text-green-400 font-semibold\">{formatPercent(trader.totalReturn)}</p>\n                          </div>\n                          <div>\n                            <p className=\"text-gray-400 text-sm\">Risk Score</p>\n                            <div className=\"flex items-center space-x-2\">\n                              <div className=\"flex space-x-1\">\n                                {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((i) => (\n                                  <div\n                                    key={i}\n                                    className={cn(\n                                      \"w-2 h-2 rounded-full\",\n                                      i <= trader.riskScore ? \"bg-orange-400\" : \"bg-gray-600\"\n                                    )}\n                                  />\n                                ))}\n                              </div>\n                              <span className=\"text-orange-400 text-sm\">{trader.riskScore}/10</span>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        {trader.isFollowing ? (\n                          <div className=\"space-y-3\">\n                            <div className=\"flex items-center justify-between\">\n                              <span className=\"text-gray-400 text-sm\">Copied Amount</span>\n                              <span className=\"text-white font-semibold\">{formatCurrency(trader.copiedAmount)}</span>\n                            </div>\n                            <div className=\"flex space-x-2\">\n                              <Button variant=\"outline\" size=\"sm\" className=\"flex-1 border-gray-600 text-gray-300\">\n                                <Settings className=\"w-4 h-4 mr-2\" />\n                                Settings\n                              </Button>\n                              <Button variant=\"outline\" size=\"sm\" className=\"border-red-500 text-red-400 hover:bg-red-500 hover:text-white\">\n                                Unfollow\n                              </Button>\n                            </div>\n                          </div>\n                        ) : (\n                          <Button className=\"w-full bg-gradient-to-r from-purple-500 to-blue-500 hover:from-purple-600 hover:to-blue-600\">\n                            <Plus className=\"w-4 h-4 mr-2\" />\n                            Follow Trader\n                          </Button>\n                        )}\n                      </CardContent>\n                    </Card>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Subscription Tab */}\n          <TabsContent value=\"subscription\" className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              {/* Current Plan */}\n              <Card className=\"bg-gray-800/50 border-gray-700 backdrop-blur-xl\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <Crown className=\"w-5 h-5 text-orange-400 mr-2\" />\n                    Current Plan\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-6\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <p className=\"text-2xl font-bold text-white\">{subscriptionData.plan}</p>\n                        <p className=\"text-gray-400\">{formatCurrency(subscriptionData.amount)}/year</p>\n                      </div>\n                      <Badge className=\"bg-green-500/20 text-green-400 border-green-500/30\">\n                        {subscriptionData.status}\n                      </Badge>\n                    </div>\n                    \n                    <div className=\"space-y-3\">\n                      <p className=\"font-semibold text-white\">Features Included:</p>\n                      {subscriptionData.features.map((feature, index) => (\n                        <div key={index} className=\"flex items-center space-x-2\">\n                          <CheckCircle className=\"w-4 h-4 text-green-400\" />\n                          <span className=\"text-gray-300\">{feature}</span>\n                        </div>\n                      ))}\n                    </div>\n                    \n                    <div className=\"pt-4 border-t border-gray-700\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <span className=\"text-gray-400\">Next billing date</span>\n                        <span className=\"text-white\">{formatDate(subscriptionData.nextBilling)}</span>\n                      </div>\n                      <div className=\"flex space-x-2\">\n                        <Button variant=\"outline\" className=\"flex-1 border-gray-600 text-gray-300\">\n                          <CreditCard className=\"w-4 h-4 mr-2\" />\n                          Update Payment\n                        </Button>\n                        <Button variant=\"outline\" className=\"border-red-500 text-red-400 hover:bg-red-500 hover:text-white\">\n                          Cancel Plan\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n              \n              {/* Usage Statistics */}\n              <Card className=\"bg-gray-800/50 border-gray-700 backdrop-blur-xl\">\n                <CardHeader>\n                  <CardTitle>Usage Statistics</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-6\">\n                    <div>\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <span className=\"text-gray-300\">Trades This Month</span>\n                        <span className=\"text-white font-semibold\">\n                          {subscriptionData.usage.trades.used.toLocaleString()}\n                          {subscriptionData.usage.trades.limit > 0 && ` / ${subscriptionData.usage.trades.limit.toLocaleString()}`}\n                        </span>\n                      </div>\n                      {subscriptionData.usage.trades.limit > 0 && (\n                        <Progress \n                          value={(subscriptionData.usage.trades.used / subscriptionData.usage.trades.limit) * 100} \n                          className=\"h-2\"\n                        />\n                      )}\n                      <p className=\"text-gray-400 text-sm mt-1\">\n                        {subscriptionData.usage.trades.limit === -1 ? 'Unlimited' : `${subscriptionData.usage.trades.limit - subscriptionData.usage.trades.used} remaining`}\n                      </p>\n                    </div>\n                    \n                    <div>\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <span className=\"text-gray-300\">Copy Traders</span>\n                        <span className=\"text-white font-semibold\">\n                          {subscriptionData.usage.copyTraders.used} / {subscriptionData.usage.copyTraders.limit}\n                        </span>\n                      </div>\n                      <Progress \n                        value={(subscriptionData.usage.copyTraders.used / subscriptionData.usage.copyTraders.limit) * 100} \n                        className=\"h-2\"\n                      />\n                      <p className=\"text-gray-400 text-sm mt-1\">\n                        {subscriptionData.usage.copyTraders.limit - subscriptionData.usage.copyTraders.used} slots available\n                      </p>\n                    </div>\n                    \n                    <div>\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <span className=\"text-gray-300\">AI Insights Used</span>\n                        <span className=\"text-white font-semibold\">\n                          {subscriptionData.usage.aiInsights.used}\n                        </span>\n                      </div>\n                      <p className=\"text-gray-400 text-sm\">\n                        Unlimited AI insights included\n                      </p>\n                    </div>\n                    \n                    <div className=\"pt-4 border-t border-gray-700\">\n                      <Button className=\"w-full bg-gradient-to-r from-purple-500 to-blue-500 hover:from-purple-600 hover:to-blue-600\">\n                        <Crown className=\"w-4 h-4 mr-2\" />\n                        Upgrade Plan\n                      </Button>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n\n          {/* Profile Tab */}\n          <TabsContent value=\"profile\" className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              {/* Profile Information */}\n              <Card className=\"bg-gray-800/50 border-gray-700 backdrop-blur-xl\">\n                <CardHeader>\n                  <div className=\"flex items-center justify-between\">\n                    <CardTitle>Profile Information</CardTitle>\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      onClick={() => setIsEditing(!isEditing)}\n                      className=\"text-gray-400 hover:text-white\"\n                    >\n                      {isEditing ? <X className=\"w-4 h-4\" /> : <Edit className=\"w-4 h-4\" />}\n                    </Button>\n                  </div>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-6\">\n                    <div className=\"flex items-center space-x-4\">\n                      <div className=\"w-20 h-20 bg-gradient-to-r from-purple-500 to-blue-500 rounded-full flex items-center justify-center text-2xl font-bold text-white\">\n                        {userProfile.name.split(' ').map(n => n[0]).join('')}\n                      </div>\n                      <div>\n                        <p className=\"text-xl font-bold text-white\">{userProfile.name}</p>\n                        <p className=\"text-gray-400\">Member since {formatDate(userProfile.joinDate)}</p>\n                        {userProfile.verified && (\n                          <Badge className=\"mt-1 bg-green-500/20 text-green-400 border-green-500/30\">\n                            <CheckCircle className=\"w-3 h-3 mr-1\" />\n                            Verified\n                          </Badge>\n                        )}\n                      </div>\n                    </div>\n                    \n                    <div className=\"space-y-4\">\n                      <div className=\"flex items-center space-x-3\">\n                        <Mail className=\"w-5 h-5 text-gray-400\" />\n                        <div className=\"flex-1\">\n                          <p className=\"text-gray-400 text-sm\">Email</p>\n                          <p className=\"text-white\">{userProfile.email}</p>\n                        </div>\n                      </div>\n                      \n                      <div className=\"flex items-center space-x-3\">\n                        <Phone className=\"w-5 h-5 text-gray-400\" />\n                        <div className=\"flex-1\">\n                          <p className=\"text-gray-400 text-sm\">Phone</p>\n                          <p className=\"text-white\">{userProfile.phone}</p>\n                        </div>\n                      </div>\n                      \n                      <div className=\"flex items-center space-x-3\">\n                        <MapPin className=\"w-5 h-5 text-gray-400\" />\n                        <div className=\"flex-1\">\n                          <p className=\"text-gray-400 text-sm\">Location</p>\n                          <p className=\"text-white\">{userProfile.location}</p>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    {isEditing && (\n                      <div className=\"flex space-x-2 pt-4 border-t border-gray-700\">\n                        <Button className=\"flex-1 bg-gradient-to-r from-purple-500 to-blue-500 hover:from-purple-600 hover:to-blue-600\">\n                          <Check className=\"w-4 h-4 mr-2\" />\n                          Save Changes\n                        </Button>\n                        <Button variant=\"outline\" onClick={() => setIsEditing(false)} className=\"border-gray-600 text-gray-300\">\n                          Cancel\n                        </Button>\n                      </div>\n                    )}\n                  </div>\n                </CardContent>\n              </Card>\n              \n              {/* Security Settings */}\n              <Card className=\"bg-gray-800/50 border-gray-700 backdrop-blur-xl\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <Shield className=\"w-5 h-5 text-green-400 mr-2\" />\n                    Security Settings\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-6\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <p className=\"text-white font-semibold\">Two-Factor Authentication</p>\n                        <p className=\"text-gray-400 text-sm\">Add an extra layer of security to your account</p>\n                      </div>\n                      <Badge className={cn(\n                        userProfile.twoFactorEnabled \n                          ? \"bg-green-500/20 text-green-400 border-green-500/30\" \n                          : \"bg-red-500/20 text-red-400 border-red-500/30\"\n                      )}>\n                        {userProfile.twoFactorEnabled ? 'Enabled' : 'Disabled'}\n                      </Badge>\n                    </div>\n                    \n                    <div className=\"space-y-3\">\n                      <Button variant=\"outline\" className=\"w-full border-gray-600 text-gray-300 hover:bg-gray-800\">\n                        <Key className=\"w-4 h-4 mr-2\" />\n                        Change Password\n                      </Button>\n                      \n                      <Button variant=\"outline\" className=\"w-full border-gray-600 text-gray-300 hover:bg-gray-800\">\n                        <Smartphone className=\"w-4 h-4 mr-2\" />\n                        Manage 2FA\n                      </Button>\n                      \n                      <Button variant=\"outline\" className=\"w-full border-gray-600 text-gray-300 hover:bg-gray-800\">\n                        <Download className=\"w-4 h-4 mr-2\" />\n                        Download Account Data\n                      </Button>\n                    </div>\n                    \n                    <div className=\"pt-4 border-t border-gray-700\">\n                      <div className=\"flex items-center space-x-2 mb-3\">\n                        <AlertTriangle className=\"w-5 h-5 text-orange-400\" />\n                        <span className=\"text-orange-400 font-semibold\">Danger Zone</span>\n                      </div>\n                      <Button variant=\"outline\" className=\"w-full border-red-500 text-red-400 hover:bg-red-500 hover:text-white\">\n                        Delete Account\n                      </Button>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n        </Tabs>\n      </div>\n    </div>\n  )\n}\n\nexport default UserDashboard"],"names":[],"mappings":"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","debugId":null}}]
}