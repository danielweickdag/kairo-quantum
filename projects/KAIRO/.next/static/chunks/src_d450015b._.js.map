{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function formatCurrency(amount: number): string {\n  if (typeof amount !== 'number' || isNaN(amount)) return '$0.00'\n  try {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(amount)\n  } catch (error) {\n    return '$0.00'\n  }\n}\n\nexport function formatPercent(value: number): string {\n  if (typeof value !== 'number' || isNaN(value)) return '0.00%'\n  try {\n    return `${value >= 0 ? '+' : ''}${value.toFixed(2)}%`\n  } catch (error) {\n    return '0.00%'\n  }\n}\n\nexport function formatNumber(value: number): string {\n  if (typeof value !== 'number' || isNaN(value)) return '0'\n  try {\n    return new Intl.NumberFormat('en-US').format(value)\n  } catch (error) {\n    return '0'\n  }\n}"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,IAAA,yKAAO,EAAC,IAAA,gJAAI,EAAC;AACtB;AAEO,SAAS,eAAe,MAAc;IAC3C,IAAI,OAAO,WAAW,YAAY,MAAM,SAAS,OAAO;IACxD,IAAI;QACF,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;YACpC,OAAO;YACP,UAAU;QACZ,GAAG,MAAM,CAAC;IACZ,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,SAAS,cAAc,KAAa;IACzC,IAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,OAAO;IACtD,IAAI;QACF,OAAO,AAAC,GAA0B,OAAxB,SAAS,IAAI,MAAM,IAAsB,OAAjB,MAAM,OAAO,CAAC,IAAG;IACrD,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,SAAS,aAAa,KAAa;IACxC,IAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,OAAO;IACtD,IAAI;QACF,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS,MAAM,CAAC;IAC/C,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/lib/logger.ts"],"sourcesContent":["'use client';\n\nimport { errorHandler, ErrorType, ErrorSeverity } from './errorHandler';\n\n// Logger utility to replace console usage with proper error handling\nexport class Logger {\n  private static isDevelopment = process.env.NODE_ENV === 'development';\n  private static isProduction = process.env.NODE_ENV === 'production';\n\n  // Error logging\n  static error(message: string, error?: Error | any, context?: string): void {\n    if (error instanceof Error) {\n      errorHandler.handle(error, context || 'Logger');\n    } else {\n      errorHandler.handle(new Error(message), context || 'Logger');\n    }\n\n    // Still log to console in development for debugging\n    if (this.isDevelopment) {\n      console.error(`[${context || 'Logger'}] ${message}`, error);\n    }\n  }\n\n  // Warning logging\n  static warn(message: string, context?: string, details?: any): void {\n    const warningError = new Error(message);\n    errorHandler.handle(warningError, context || 'Logger');\n\n    if (this.isDevelopment) {\n      console.warn(`[${context || 'Logger'}] ${message}`, details);\n    }\n  }\n\n  // Info logging (for important events)\n  static info(message: string, context?: string, details?: any): void {\n    // Only log to console in development, or to external service in production\n    if (this.isDevelopment) {\n      console.log(`[${context || 'Logger'}] ${message}`, details);\n    } else if (this.isProduction) {\n      // In production, you might want to log to an external service\n      // For now, we'll just store it internally\n      this.logToService('info', message, context, details);\n    }\n  }\n\n  // Debug logging (only in development)\n  static debug(message: string, context?: string, details?: any): void {\n    if (this.isDevelopment) {\n      console.log(`[DEBUG][${context || 'Logger'}] ${message}`, details);\n    }\n  }\n\n  // Trading-specific logging\n  static trading(message: string, details?: any, context?: string): void {\n    const tradingError = new Error(message);\n    errorHandler.handle(tradingError, context || 'Trading');\n\n    if (this.isDevelopment) {\n      console.log(`[TRADING][${context || 'Trading'}] ${message}`, details);\n    }\n  }\n\n  // Performance logging\n  static performance(operation: string, duration: number, context?: string): void {\n    const message = `${operation} completed in ${duration}ms`;\n    \n    if (duration > 1000) {\n      // Log slow operations as warnings\n      this.warn(`Slow operation: ${message}`, context || 'Performance');\n    } else {\n      this.info(message, context || 'Performance');\n    }\n  }\n\n  // User action logging\n  static userAction(action: string, userId?: string, details?: any): void {\n    const context = userId ? `User-${userId}` : 'User';\n    this.info(`User action: ${action}`, context, details);\n  }\n\n  // API call logging\n  static apiCall(method: string, url: string, status: number, duration: number): void {\n    const message = `${method} ${url} - ${status} (${duration}ms)`;\n    \n    if (status >= 400) {\n      this.error(`API Error: ${message}`, undefined, 'API');\n    } else if (duration > 2000) {\n      this.warn(`Slow API call: ${message}`, 'API');\n    } else {\n      this.debug(message, 'API');\n    }\n  }\n\n  // Private method to log to external service (placeholder)\n  private static logToService(level: string, message: string, context?: string, details?: any): void {\n    // In a real application, you would send this to your logging service\n    // For now, we'll just store it in memory or localStorage\n    try {\n      const logEntry = {\n        level,\n        message,\n        context,\n        details,\n        timestamp: new Date().toISOString(),\n        userAgent: typeof window !== 'undefined' ? window.navigator.userAgent : 'server',\n        url: typeof window !== 'undefined' ? window.location.href : 'server'\n      };\n\n      // Store in localStorage for now (in production, send to logging service)\n      if (typeof window !== 'undefined' && window.localStorage) {\n        const logs = JSON.parse(localStorage.getItem('app_logs') || '[]');\n        logs.push(logEntry);\n        \n        // Keep only last 100 logs to prevent storage overflow\n        if (logs.length > 100) {\n          logs.splice(0, logs.length - 100);\n        }\n        \n        localStorage.setItem('app_logs', JSON.stringify(logs));\n      }\n    } catch (error) {\n      // Fallback to console if logging service fails\n      if (this.isDevelopment) {\n        console.error('Failed to log to service:', error);\n      }\n    }\n  }\n\n  // Method to retrieve logs (useful for debugging)\n  static getLogs(): any[] {\n    try {\n      if (typeof window !== 'undefined' && window.localStorage) {\n        return JSON.parse(localStorage.getItem('app_logs') || '[]');\n      }\n    } catch (error) {\n      this.error('Failed to retrieve logs', error as Error, 'Logger');\n    }\n    return [];\n  }\n\n  // Method to clear logs\n  static clearLogs(): void {\n    try {\n      if (typeof window !== 'undefined' && window.localStorage) {\n        localStorage.removeItem('app_logs');\n      }\n    } catch (error) {\n      this.error('Failed to clear logs', error as Error, 'Logger');\n    }\n  }\n}\n\n// Convenience exports\nexport const logger = Logger;\nexport default Logger;\n\n// Hook for React components\nexport function useLogger() {\n  return {\n    error: Logger.error,\n    warn: Logger.warn,\n    info: Logger.info,\n    debug: Logger.debug,\n    trading: Logger.trading,\n    performance: Logger.performance,\n    userAction: Logger.userAction,\n    apiCall: Logger.apiCall,\n    getLogs: Logger.getLogs,\n    clearLogs: Logger.clearLogs\n  };\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/services/liveMarketService.ts"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { logger } from '@/lib/logger';\n\n// Live Market Data Service for TradingView-style functionality\n\nexport interface MarketTicker {\n  symbol: string;\n  price: number;\n  change: number;\n  changePercent: number;\n  volume: number;\n  high24h: number;\n  low24h: number;\n  marketCap?: number;\n  lastUpdate: number;\n}\n\nexport interface CandlestickData {\n  time: number;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n}\n\nexport interface OrderBookEntry {\n  price: number;\n  size: number;\n  total: number;\n}\n\nexport interface OrderBook {\n  symbol: string;\n  bids: OrderBookEntry[];\n  asks: OrderBookEntry[];\n  lastUpdate: number;\n}\n\nexport interface Trade {\n  id: string;\n  symbol: string;\n  price: number;\n  size: number;\n  side: 'buy' | 'sell';\n  timestamp: number;\n}\n\nexport interface MarketStats {\n  symbol: string;\n  volume24h: number;\n  volumeChange24h: number;\n  trades24h: number;\n  high24h: number;\n  low24h: number;\n  openPrice: number;\n  closePrice: number;\n  lastUpdate: number;\n}\n\nclass LiveMarketService {\n  private subscribers: Map<string, Set<(data: any) => void>> = new Map();\n  private marketData: Map<string, MarketTicker> = new Map();\n  private candlestickData: Map<string, CandlestickData[]> = new Map();\n  private orderBooks: Map<string, OrderBook> = new Map();\n  private recentTrades: Map<string, Trade[]> = new Map();\n  private updateIntervals: Map<string, NodeJS.Timeout> = new Map();\n  private isConnected = false;\n\n  // Supported trading pairs\n  private readonly SUPPORTED_SYMBOLS = [\n    // Cryptocurrencies\n    'BTCUSDT', 'ETHUSDT', 'ADAUSDT', 'SOLUSDT', 'DOTUSDT', 'LINKUSDT',\n    'MATICUSDT', 'AVAXUSDT', 'ATOMUSDT', 'NEARUSDT', 'FTMUSDT', 'SANDUSDT',\n    'MANAUSDT', 'CHZUSDT', 'ENJUSDT', 'GALAUSDT',\n    // Major Indices\n    'SPY', 'QQQ', 'DJI', 'IXIC', 'RUT', 'VTI', 'IWM'\n  ];\n\n  constructor() {\n    this.initializeMarketData();\n    this.startDataSimulation();\n  }\n\n  // Initialize mock market data\n  private initializeMarketData(): void {\n    const baseData = {\n      // Cryptocurrencies\n      BTCUSDT: { basePrice: 45000, volatility: 0.02 },\n      ETHUSDT: { basePrice: 2800, volatility: 0.025 },\n      ADAUSDT: { basePrice: 0.45, volatility: 0.03 },\n      SOLUSDT: { basePrice: 98, volatility: 0.035 },\n      DOTUSDT: { basePrice: 6.5, volatility: 0.03 },\n      LINKUSDT: { basePrice: 14.2, volatility: 0.028 },\n      MATICUSDT: { basePrice: 0.85, volatility: 0.032 },\n      AVAXUSDT: { basePrice: 35, volatility: 0.03 },\n      ATOMUSDT: { basePrice: 9.8, volatility: 0.029 },\n      NEARUSDT: { basePrice: 2.1, volatility: 0.034 },\n      FTMUSDT: { basePrice: 0.32, volatility: 0.036 },\n      SANDUSDT: { basePrice: 0.48, volatility: 0.038 },\n      MANAUSDT: { basePrice: 0.42, volatility: 0.037 },\n      CHZUSDT: { basePrice: 0.089, volatility: 0.04 },\n      ENJUSDT: { basePrice: 0.28, volatility: 0.035 },\n      GALAUSDT: { basePrice: 0.035, volatility: 0.042 },\n      // Major Indices\n      SPY: { basePrice: 428.50, volatility: 0.015 },\n      QQQ: { basePrice: 365.20, volatility: 0.018 },\n      DJI: { basePrice: 37689.54, volatility: 0.012 },\n      IXIC: { basePrice: 14845.73, volatility: 0.020 },\n      RUT: { basePrice: 2045.32, volatility: 0.025 },\n      VTI: { basePrice: 245.30, volatility: 0.014 },\n      IWM: { basePrice: 198.75, volatility: 0.022 }\n    };\n\n    this.SUPPORTED_SYMBOLS.forEach(symbol => {\n      const config = baseData[symbol as keyof typeof baseData];\n      if (config) {\n        const currentPrice = config.basePrice * (1 + (Math.random() - 0.5) * 0.1);\n        const change = (Math.random() - 0.5) * config.basePrice * 0.05;\n        const changePercent = (change / (currentPrice - change)) * 100;\n        \n        this.marketData.set(symbol, {\n          symbol,\n          price: currentPrice,\n          change,\n          changePercent,\n          volume: Math.random() * 10000000 + 1000000,\n          high24h: currentPrice * (1 + Math.random() * 0.05),\n          low24h: currentPrice * (1 - Math.random() * 0.05),\n          marketCap: currentPrice * (Math.random() * 1000000000 + 100000000),\n          lastUpdate: Date.now()\n        });\n\n        // Initialize candlestick data\n        this.initializeCandlestickData(symbol, currentPrice, config.volatility);\n        \n        // Initialize order book\n        this.initializeOrderBook(symbol, currentPrice);\n        \n        // Initialize recent trades\n        this.initializeRecentTrades(symbol, currentPrice);\n      }\n    });\n  }\n\n  private initializeCandlestickData(symbol: string, basePrice: number, volatility: number): void {\n    const candles: CandlestickData[] = [];\n    let currentPrice = basePrice;\n    const now = Date.now();\n    \n    // Generate 100 historical candles (1 minute each)\n    for (let i = 99; i >= 0; i--) {\n      const time = now - (i * 60 * 1000);\n      const open = currentPrice;\n      const priceChange = (Math.random() - 0.5) * basePrice * volatility;\n      const close = Math.max(0.01, open + priceChange);\n      const high = Math.max(open, close) * (1 + Math.random() * 0.01);\n      const low = Math.min(open, close) * (1 - Math.random() * 0.01);\n      const volume = Math.random() * 1000000 + 10000;\n      \n      candles.push({\n        time,\n        open,\n        high,\n        low,\n        close,\n        volume\n      });\n      \n      currentPrice = close;\n    }\n    \n    this.candlestickData.set(symbol, candles);\n  }\n\n  private initializeOrderBook(symbol: string, currentPrice: number): void {\n    const bids: OrderBookEntry[] = [];\n    const asks: OrderBookEntry[] = [];\n    \n    // Generate 20 bid levels\n    for (let i = 1; i <= 20; i++) {\n      const price = currentPrice - (i * currentPrice * 0.001);\n      const size = Math.random() * 10 + 0.1;\n      bids.push({\n        price,\n        size,\n        total: size * price\n      });\n    }\n    \n    // Generate 20 ask levels\n    for (let i = 1; i <= 20; i++) {\n      const price = currentPrice + (i * currentPrice * 0.001);\n      const size = Math.random() * 10 + 0.1;\n      asks.push({\n        price,\n        size,\n        total: size * price\n      });\n    }\n    \n    this.orderBooks.set(symbol, {\n      symbol,\n      bids,\n      asks,\n      lastUpdate: Date.now()\n    });\n  }\n\n  private initializeRecentTrades(symbol: string, currentPrice: number): void {\n    const trades: Trade[] = [];\n    const now = Date.now();\n    \n    // Generate 50 recent trades\n    for (let i = 0; i < 50; i++) {\n      trades.push({\n        id: `trade_${symbol}_${i}`,\n        symbol,\n        price: currentPrice * (1 + (Math.random() - 0.5) * 0.01),\n        size: Math.random() * 5 + 0.01,\n        side: Math.random() > 0.5 ? 'buy' : 'sell',\n        timestamp: now - (i * 1000)\n      });\n    }\n    \n    this.recentTrades.set(symbol, trades.reverse());\n  }\n\n  // Start real-time data simulation\n  private startDataSimulation(): void {\n    this.isConnected = true;\n    \n    // Update market data every 1 second\n    const marketUpdateInterval = setInterval(() => {\n      this.updateMarketData();\n    }, 1000);\n    \n    // Update candlestick data every 5 seconds\n    const candleUpdateInterval = setInterval(() => {\n      this.updateCandlestickData();\n    }, 5000);\n    \n    // Update order books every 500ms\n    const orderBookUpdateInterval = setInterval(() => {\n      this.updateOrderBooks();\n    }, 500);\n    \n    // Add new trades every 2 seconds\n    const tradesUpdateInterval = setInterval(() => {\n      this.updateRecentTrades();\n    }, 2000);\n    \n    this.updateIntervals.set('market', marketUpdateInterval);\n    this.updateIntervals.set('candles', candleUpdateInterval);\n    this.updateIntervals.set('orderbook', orderBookUpdateInterval);\n    this.updateIntervals.set('trades', tradesUpdateInterval);\n  }\n\n  private updateMarketData(): void {\n    this.marketData.forEach((ticker, symbol) => {\n      const volatility = this.getVolatilityForSymbol(symbol);\n      const priceChange = (Math.random() - 0.5) * ticker.price * volatility * 0.1;\n      const newPrice = Math.max(0.01, ticker.price + priceChange);\n      const change = newPrice - ticker.price;\n      const changePercent = (change / ticker.price) * 100;\n      \n      const updatedTicker: MarketTicker = {\n        ...ticker,\n        price: newPrice,\n        change: ticker.change + change,\n        changePercent: ticker.changePercent + changePercent,\n        volume: ticker.volume + Math.random() * 10000,\n        high24h: Math.max(ticker.high24h, newPrice),\n        low24h: Math.min(ticker.low24h, newPrice),\n        lastUpdate: Date.now()\n      };\n      \n      this.marketData.set(symbol, updatedTicker);\n      this.notifySubscribers(`ticker:${symbol}`, updatedTicker);\n    });\n  }\n\n  private updateCandlestickData(): void {\n    this.candlestickData.forEach((candles, symbol) => {\n      const ticker = this.marketData.get(symbol);\n      if (!ticker) return;\n      \n      const lastCandle = candles[candles.length - 1];\n      const now = Date.now();\n      \n      // If last candle is older than 1 minute, create a new one\n      if (now - lastCandle.time > 60000) {\n        const newCandle: CandlestickData = {\n          time: now,\n          open: lastCandle.close,\n          high: ticker.price,\n          low: ticker.price,\n          close: ticker.price,\n          volume: Math.random() * 100000 + 1000\n        };\n        \n        candles.push(newCandle);\n        \n        // Keep only last 200 candles\n        if (candles.length > 200) {\n          candles.shift();\n        }\n      } else {\n        // Update current candle\n        lastCandle.close = ticker.price;\n        lastCandle.high = Math.max(lastCandle.high, ticker.price);\n        lastCandle.low = Math.min(lastCandle.low, ticker.price);\n        lastCandle.volume += Math.random() * 1000;\n      }\n      \n      this.notifySubscribers(`candles:${symbol}`, candles.slice(-100));\n    });\n  }\n\n  private updateOrderBooks(): void {\n    this.orderBooks.forEach((orderBook, symbol) => {\n      const ticker = this.marketData.get(symbol);\n      if (!ticker) return;\n      \n      // Simulate order book changes\n      const updatedBids = orderBook.bids.map(bid => ({\n        ...bid,\n        size: Math.max(0.01, bid.size + (Math.random() - 0.5) * 0.5),\n        price: ticker.price * (1 - Math.random() * 0.01)\n      }));\n      \n      const updatedAsks = orderBook.asks.map(ask => ({\n        ...ask,\n        size: Math.max(0.01, ask.size + (Math.random() - 0.5) * 0.5),\n        price: ticker.price * (1 + Math.random() * 0.01)\n      }));\n      \n      const updatedOrderBook: OrderBook = {\n        symbol,\n        bids: updatedBids.sort((a, b) => b.price - a.price),\n        asks: updatedAsks.sort((a, b) => a.price - b.price),\n        lastUpdate: Date.now()\n      };\n      \n      this.orderBooks.set(symbol, updatedOrderBook);\n      this.notifySubscribers(`orderbook:${symbol}`, updatedOrderBook);\n    });\n  }\n\n  private updateRecentTrades(): void {\n    this.recentTrades.forEach((trades, symbol) => {\n      const ticker = this.marketData.get(symbol);\n      if (!ticker) return;\n      \n      // Add new trade\n      const newTrade: Trade = {\n        id: `trade_${symbol}_${Date.now()}`,\n        symbol,\n        price: ticker.price * (1 + (Math.random() - 0.5) * 0.005),\n        size: Math.random() * 2 + 0.01,\n        side: Math.random() > 0.5 ? 'buy' : 'sell',\n        timestamp: Date.now()\n      };\n      \n      trades.push(newTrade);\n      \n      // Keep only last 100 trades\n      if (trades.length > 100) {\n        trades.shift();\n      }\n      \n      this.notifySubscribers(`trades:${symbol}`, trades.slice(-20));\n    });\n  }\n\n  private getVolatilityForSymbol(symbol: string): number {\n    const volatilityMap: { [key: string]: number } = {\n      'BTCUSDT': 0.02,\n      'ETHUSDT': 0.025,\n      'ADAUSDT': 0.03,\n      'SOLUSDT': 0.035,\n      'DOTUSDT': 0.03,\n      'LINKUSDT': 0.028,\n      'MATICUSDT': 0.032,\n      'AVAXUSDT': 0.03,\n      'ATOMUSDT': 0.029,\n      'NEARUSDT': 0.034,\n      'FTMUSDT': 0.036,\n      'SANDUSDT': 0.038,\n      'MANAUSDT': 0.037,\n      'CHZUSDT': 0.04,\n      'ENJUSDT': 0.035,\n      'GALAUSDT': 0.042\n    };\n    \n    return volatilityMap[symbol] || 0.03;\n  }\n\n  private notifySubscribers(channel: string, data: any): void {\n    const subscribers = this.subscribers.get(channel);\n    if (subscribers) {\n      subscribers.forEach(callback => {\n        try {\n          callback(data);\n        } catch (error) {\n          logger.error('Failed to notify market data subscriber', error, 'LiveMarketService');\n        }\n      });\n    }\n  }\n\n  // Public API methods\n  public subscribe(channel: string, callback: (data: any) => void): () => void {\n    if (!this.subscribers.has(channel)) {\n      this.subscribers.set(channel, new Set());\n    }\n    \n    this.subscribers.get(channel)!.add(callback);\n    \n    // Return unsubscribe function\n    return () => {\n      const subscribers = this.subscribers.get(channel);\n      if (subscribers) {\n        subscribers.delete(callback);\n        if (subscribers.size === 0) {\n          this.subscribers.delete(channel);\n        }\n      }\n    };\n  }\n\n  public getMarketData(symbol?: string): MarketTicker | MarketTicker[] | null {\n    if (symbol) {\n      return this.marketData.get(symbol) || null;\n    }\n    return Array.from(this.marketData.values());\n  }\n\n  public getCandlestickData(symbol: string, limit = 100): CandlestickData[] {\n    const candles = this.candlestickData.get(symbol) || [];\n    return candles.slice(-limit);\n  }\n\n  public getOrderBook(symbol: string): OrderBook | null {\n    return this.orderBooks.get(symbol) || null;\n  }\n\n  public getRecentTrades(symbol: string, limit = 20): Trade[] {\n    const trades = this.recentTrades.get(symbol) || [];\n    return trades.slice(-limit);\n  }\n\n  public getSupportedSymbols(): string[] {\n    return [...this.SUPPORTED_SYMBOLS];\n  }\n\n  public isConnectedToMarket(): boolean {\n    return this.isConnected;\n  }\n\n  public disconnect(): void {\n    this.isConnected = false;\n    this.updateIntervals.forEach(interval => clearInterval(interval));\n    this.updateIntervals.clear();\n    this.subscribers.clear();\n  }\n\n  // Market analysis helpers\n  public getMarketStats(symbol: string): MarketStats | null {\n    const ticker = this.marketData.get(symbol);\n    const candles = this.candlestickData.get(symbol);\n    \n    if (!ticker || !candles || candles.length === 0) {\n      return null;\n    }\n    \n    const last24hCandles = candles.filter(c => Date.now() - c.time <= 24 * 60 * 60 * 1000);\n    const volume24h = last24hCandles.reduce((sum, c) => sum + c.volume, 0);\n    const trades24h = last24hCandles.length;\n    \n    return {\n      symbol,\n      volume24h,\n      volumeChange24h: Math.random() * 20 - 10, // Mock data\n      trades24h,\n      high24h: ticker.high24h,\n      low24h: ticker.low24h,\n      openPrice: last24hCandles[0]?.open || ticker.price,\n      closePrice: ticker.price,\n      lastUpdate: Date.now()\n    };\n  }\n\n  public calculateTechnicalIndicators(symbol: string): any {\n    const candles = this.getCandlestickData(symbol, 50);\n    if (candles.length < 20) return null;\n    \n    // Simple Moving Average (20 periods)\n    const sma20 = candles.slice(-20).reduce((sum, c) => sum + c.close, 0) / 20;\n    \n    // Exponential Moving Average (12 periods)\n    let ema12 = candles[0].close;\n    const multiplier = 2 / (12 + 1);\n    for (let i = 1; i < candles.length; i++) {\n      ema12 = (candles[i].close * multiplier) + (ema12 * (1 - multiplier));\n    }\n    \n    // RSI (14 periods)\n    const rsiPeriod = 14;\n    if (candles.length >= rsiPeriod + 1) {\n      let gains = 0;\n      let losses = 0;\n      \n      for (let i = candles.length - rsiPeriod; i < candles.length; i++) {\n        const change = candles[i].close - candles[i - 1].close;\n        if (change > 0) {\n          gains += change;\n        } else {\n          losses += Math.abs(change);\n        }\n      }\n      \n      const avgGain = gains / rsiPeriod;\n      const avgLoss = losses / rsiPeriod;\n      const rs = avgGain / avgLoss;\n      const rsi = 100 - (100 / (1 + rs));\n      \n      return {\n        sma20,\n        ema12,\n        rsi,\n        lastUpdate: Date.now()\n      };\n    }\n    \n    return {\n      sma20,\n      ema12,\n      rsi: null,\n      lastUpdate: Date.now()\n    };\n  }\n}\n\n// Export singleton instance\nexport const liveMarketService = new LiveMarketService();\nexport default liveMarketService;\n\n// React hook for easy integration\nexport function useMarketData(symbol?: string) {\n  const [data, setData] = React.useState<MarketTicker | MarketTicker[] | null>(null);\n  \n  React.useEffect(() => {\n    const updateData = () => {\n      setData(liveMarketService.getMarketData(symbol));\n    };\n    \n    updateData();\n    \n    const channel = symbol ? `ticker:${symbol}` : 'ticker:all';\n    const unsubscribe = liveMarketService.subscribe(channel, updateData);\n    \n    return unsubscribe;\n  }, [symbol]);\n  \n  return data;\n}\n\nexport function useCandlestickData(symbol: string, limit = 100) {\n  const [data, setData] = React.useState<CandlestickData[]>([]);\n  \n  React.useEffect(() => {\n    const updateData = (newData: CandlestickData[]) => {\n      setData(newData);\n    };\n    \n    setData(liveMarketService.getCandlestickData(symbol, limit));\n    \n    const unsubscribe = liveMarketService.subscribe(`candles:${symbol}`, updateData);\n    \n    return unsubscribe;\n  }, [symbol, limit]);\n  \n  return data;\n}\n\nexport function useOrderBook(symbol: string) {\n  const [data, setData] = React.useState<OrderBook | null>(null);\n  \n  React.useEffect(() => {\n    const updateData = (newData: OrderBook) => {\n      setData(newData);\n    };\n    \n    setData(liveMarketService.getOrderBook(symbol));\n    \n    const unsubscribe = liveMarketService.subscribe(`orderbook:${symbol}`, updateData);\n    \n    return unsubscribe;\n  }, [symbol]);\n  \n  return data;\n}\n\nexport function useRecentTrades(symbol: string, limit = 20) {\n  const [data, setData] = React.useState<Trade[]>([]);\n  \n  React.useEffect(() => {\n    const updateData = (newData: Trade[]) => {\n      setData(newData);\n    };\n    \n    setData(liveMarketService.getRecentTrades(symbol, limit));\n    \n    const unsubscribe = liveMarketService.subscribe(`trades:${symbol}`, updateData);\n    \n    return unsubscribe;\n  }, [symbol, limit]);\n  \n  return data;\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 846, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/app/dashboard/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useAuth } from '@/contexts/AuthContext';\nimport DashboardLayout from '@/components/dashboard/DashboardLayout';\nimport PortfolioOverview from '@/components/dashboard/PortfolioOverview';\nimport TradingPanel from '@/components/dashboard/TradingPanel';\nimport AutomatedStrategies from '@/components/dashboard/AutomatedStrategies';\nimport NotificationCenter from '@/components/dashboard/NotificationCenter';\nimport AISignalGenerator from '@/components/dashboard/AISignalGenerator';\nimport StrategyTemplates from '@/components/dashboard/StrategyTemplates';\nimport SignalDeliverySystem from '@/components/dashboard/SignalDeliverySystem';\nimport BacktestingEngine from '@/components/dashboard/BacktestingEngine';\nimport PerformanceAnalytics from '@/components/dashboard/PerformanceAnalytics';\nimport BrokerAccountSelector from '@/components/BrokerAccountSelector';\nimport { useBrokerAccount } from '@/contexts/BrokerAccountContext';\nimport {\n  TrendingUp,\n  TrendingDown,\n  DollarSign,\n  Users,\n  Bot,\n  Target,\n  Zap,\n  BarChart3,\n  Activity,\n  Bell,\n  Star,\n  Shield,\n  Brain,\n  BookOpen\n} from 'lucide-react';\n\nexport default function DashboardPage() {\n  const { user } = useAuth();\n  const { selectedAccount, setSelectedAccount } = useBrokerAccount();\n  const [activeView, setActiveView] = useState<'overview' | 'trading' | 'automation' | 'strategies' | 'ai-signals' | 'templates' | 'signals' | 'backtesting' | 'performance-analytics'>('overview');\n  const [showNotifications, setShowNotifications] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [gainzAlgoActive, setGainzAlgoActive] = useState(false);\n  const [copyTradingActive, setCopyTradingActive] = useState(false);\n  const [riskManagementActive, setRiskManagementActive] = useState(false);\n  const [workflowStatus, setWorkflowStatus] = useState('idle'); // idle, partial, active, optimized\n\n  useEffect(() => {\n    // Simulate loading\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  // Workflow automation effects\n  useEffect(() => {\n    if (gainzAlgoActive) {\n      alert('🚀 GainzAlgo V2 Pro Strategy Activated!\\n\\n✅ High-frequency momentum trading enabled\\n✅ 78% win rate target active\\n✅ 1.85x profit factor optimization\\n✅ Real-time signal generation started');\n    }\n  }, [gainzAlgoActive]);\n\n  useEffect(() => {\n    if (copyTradingActive) {\n      alert('👥 Copy Trading Enabled!\\n\\n✅ Following top traders\\n✅ Automatic trade copying active\\n✅ Portfolio synchronization started\\n✅ Risk management applied to copied trades');\n    }\n  }, [copyTradingActive]);\n\n  useEffect(() => {\n    if (riskManagementActive) {\n      alert('🛡️ Risk Management Controls Activated!\\n\\n✅ Automated stop-loss enabled\\n✅ Position sizing optimization\\n✅ Drawdown protection active\\n✅ Real-time risk monitoring started');\n    }\n  }, [riskManagementActive]);\n\n  // Workflow coordination - automatically update status based on active features\n  useEffect(() => {\n    const activeFeatures = [gainzAlgoActive, copyTradingActive, riskManagementActive].filter(Boolean).length;\n    \n    if (activeFeatures === 0) {\n      setWorkflowStatus('idle');\n    } else if (activeFeatures === 1) {\n      setWorkflowStatus('partial');\n    } else if (activeFeatures === 2) {\n      setWorkflowStatus('active');\n    } else if (activeFeatures === 3) {\n      setWorkflowStatus('optimized');\n      // Show comprehensive workflow activation message\n      setTimeout(() => {\n        alert('🎯 Complete Trading Workflow Activated!\\n\\n🚀 GainzAlgo V2 Pro: High-frequency momentum trading\\n👥 Copy Trading: Following top performers\\n🛡️ Risk Management: Advanced protection\\n\\n✨ All systems are now working together seamlessly!\\n📈 Maximum profit potential with optimal risk control');\n      }, 500);\n    }\n  }, [gainzAlgoActive, copyTradingActive, riskManagementActive]);\n\n  if (loading) {\n    return (\n      <DashboardLayout>\n        <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n        </div>\n      </DashboardLayout>\n    );\n  }\n\n  return (\n    <DashboardLayout>\n      <div className=\"p-6 space-y-6\">\n        {/* Welcome Header */}\n        <div className=\"bg-gradient-to-r from-blue-600 via-purple-600 to-blue-800 rounded-xl p-6 text-white\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-2xl font-bold mb-2\">\n                Welcome back, {user?.firstName}! 🚀\n              </h1>\n              <p className=\"text-blue-100\">\n                Your trading performance is looking strong today. Ready to make some moves?\n              </p>\n              {/* Broker Account Selector */}\n              <div className=\"mt-4 max-w-md\">\n                <label className=\"block text-sm font-medium text-blue-100 mb-2\">\n                  Active Broker Account\n                </label>\n                <BrokerAccountSelector\n                  selectedAccount={selectedAccount}\n                  onAccountSelect={setSelectedAccount}\n                  placeholder=\"Select your trading account\"\n                  className=\"text-gray-900\"\n                />\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <button\n                onClick={() => setShowNotifications(!showNotifications)}\n                className=\"relative p-2 rounded-lg bg-white/10 hover:bg-white/20 transition-colors\"\n              >\n                <Bell className=\"h-5 w-5\" />\n                <span className=\"absolute -top-1 -right-1 h-3 w-3 bg-red-500 rounded-full\"></span>\n              </button>\n              <div className=\"hidden md:flex items-center space-x-4\">\n                <div className=\"text-center\">\n                  <p className=\"text-2xl font-bold\">78.5%</p>\n                  <p className=\"text-sm text-blue-100\">Win Rate</p>\n                </div>\n                <div className=\"text-center\">\n                  <p className=\"text-2xl font-bold\">1.85x</p>\n                  <p className=\"text-sm text-blue-100\">Profit Factor</p>\n                </div>\n                <div className=\"text-center\">\n                  <p className=\"text-2xl font-bold\">#12</p>\n                  <p className=\"text-sm text-blue-100\">Global Rank</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Workflow Status Indicator */}\n        <div className={`rounded-lg p-4 border-2 transition-all duration-300 ${\n          workflowStatus === 'idle' ? 'bg-gray-50 border-gray-200' :\n          workflowStatus === 'partial' ? 'bg-yellow-50 border-yellow-300' :\n          workflowStatus === 'active' ? 'bg-blue-50 border-blue-300' :\n          'bg-green-50 border-green-300'\n        }`}>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <div className={`w-3 h-3 rounded-full ${\n                workflowStatus === 'idle' ? 'bg-gray-400' :\n                workflowStatus === 'partial' ? 'bg-yellow-500 animate-pulse' :\n                workflowStatus === 'active' ? 'bg-blue-500 animate-pulse' :\n                'bg-green-500 animate-pulse'\n              }`}></div>\n              <div>\n                <h3 className={`font-semibold ${\n                  workflowStatus === 'idle' ? 'text-gray-700' :\n                  workflowStatus === 'partial' ? 'text-yellow-700' :\n                  workflowStatus === 'active' ? 'text-blue-700' :\n                  'text-green-700'\n                }`}>\n                  Trading Workflow Status: {\n                    workflowStatus === 'idle' ? 'Standby' :\n                    workflowStatus === 'partial' ? 'Partially Active' :\n                    workflowStatus === 'active' ? 'Active' :\n                    'Fully Optimized'\n                  }\n                </h3>\n                <p className={`text-sm ${\n                  workflowStatus === 'idle' ? 'text-gray-600' :\n                  workflowStatus === 'partial' ? 'text-yellow-600' :\n                  workflowStatus === 'active' ? 'text-blue-600' :\n                  'text-green-600'\n                }`}>\n                  {\n                    workflowStatus === 'idle' ? 'Enable features below to start automated trading' :\n                    workflowStatus === 'partial' ? 'Some automation features are active' :\n                    workflowStatus === 'active' ? 'Multiple systems working together' :\n                    'All automation systems fully integrated and optimized'\n                  }\n                </p>\n              </div>\n            </div>\n            <div className=\"flex space-x-2\">\n              {gainzAlgoActive && <span className=\"px-2 py-1 bg-green-100 text-green-700 text-xs rounded-full\">GainzAlgo</span>}\n              {copyTradingActive && <span className=\"px-2 py-1 bg-purple-100 text-purple-700 text-xs rounded-full\">Copy Trading</span>}\n              {riskManagementActive && <span className=\"px-2 py-1 bg-blue-100 text-blue-700 text-xs rounded-full\">Risk Control</span>}\n            </div>\n          </div>\n        </div>\n\n        {/* Quick Stats */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Active Strategies</p>\n                <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">3</p>\n                <p className=\"text-sm text-green-600 dark:text-green-400\">2 profitable</p>\n              </div>\n              <div className=\"bg-green-100 dark:bg-green-900/20 p-3 rounded-lg\">\n                <Bot className=\"h-6 w-6 text-green-600 dark:text-green-400\" />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Open Positions</p>\n                <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">12</p>\n                <p className=\"text-sm text-blue-600 dark:text-blue-400\">8 in profit</p>\n              </div>\n              <div className=\"bg-blue-100 dark:bg-blue-900/20 p-3 rounded-lg\">\n                <Target className=\"h-6 w-6 text-blue-600 dark:text-blue-400\" />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Active Signals</p>\n                <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">5</p>\n                <p className=\"text-sm text-purple-600 dark:text-purple-400\">High confidence</p>\n              </div>\n              <div className=\"bg-purple-100 dark:bg-purple-900/20 p-3 rounded-lg\">\n                <Zap className=\"h-6 w-6 text-purple-600 dark:text-purple-400\" />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">Copiers</p>\n                <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">156</p>\n                <p className=\"text-sm text-orange-600 dark:text-orange-400\">+8 today</p>\n              </div>\n              <div className=\"bg-orange-100 dark:bg-orange-900/20 p-3 rounded-lg\">\n                <Users className=\"h-6 w-6 text-orange-600 dark:text-orange-400\" />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* View Toggle */}\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-1\">\n          <div className=\"flex space-x-1\">\n            <button\n              onClick={() => setActiveView('overview')}\n              className={`flex-1 flex items-center justify-center space-x-2 py-3 px-4 rounded-lg font-medium transition-colors ${\n                activeView === 'overview'\n                  ? 'bg-blue-600 text-white shadow-sm'\n                  : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white hover:bg-gray-50 dark:hover:bg-gray-700'\n              }`}\n            >\n              <BarChart3 className=\"h-5 w-5\" />\n              <span>Portfolio Overview</span>\n            </button>\n            <button\n              onClick={() => setActiveView('trading')}\n              className={`flex-1 flex items-center justify-center space-x-2 py-3 px-4 rounded-lg font-medium transition-colors ${\n                activeView === 'trading'\n                  ? 'bg-blue-600 text-white shadow-sm'\n                  : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white hover:bg-gray-50 dark:hover:bg-gray-700'\n              }`}\n            >\n              <Target className=\"h-5 w-5\" />\n              <span>Trading Panel</span>\n            </button>\n            <button\n              onClick={() => setActiveView('strategies')}\n              className={`flex-1 flex items-center justify-center space-x-2 py-3 px-4 rounded-lg font-medium transition-colors ${\n                activeView === 'strategies'\n                  ? 'bg-blue-600 text-white shadow-sm'\n                  : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white hover:bg-gray-50 dark:hover:bg-gray-700'\n              }`}\n            >\n              <Bot className=\"h-5 w-5\" />\n              <span>Strategies</span>\n            </button>\n            <button\n              onClick={() => setActiveView('automation')}\n              className={`flex-1 flex items-center justify-center space-x-2 py-3 px-4 rounded-lg font-medium transition-colors ${\n                activeView === 'automation'\n                  ? 'bg-blue-600 text-white shadow-sm'\n                  : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white hover:bg-gray-50 dark:hover:bg-gray-700'\n              }`}\n            >\n              <Bot className=\"h-5 w-5\" />\n              <span>Automation Hub</span>\n            </button>\n            <button\n              onClick={() => setActiveView('ai-signals')}\n              className={`flex-1 flex items-center justify-center space-x-2 py-3 px-4 rounded-lg font-medium transition-colors ${\n                activeView === 'ai-signals'\n                  ? 'bg-blue-600 text-white shadow-sm'\n                  : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white hover:bg-gray-50 dark:hover:bg-gray-700'\n              }`}\n            >\n              <Brain className=\"h-5 w-5\" />\n              <span>AI Signals</span>\n            </button>\n            <button\n               onClick={() => setActiveView('templates')}\n               className={`flex-1 flex items-center justify-center space-x-2 py-3 px-4 rounded-lg font-medium transition-colors ${\n                 activeView === 'templates'\n                   ? 'bg-blue-600 text-white shadow-sm'\n                   : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white hover:bg-gray-50 dark:hover:bg-gray-700'\n               }`}\n             >\n               <BookOpen className=\"h-5 w-5\" />\n               <span>Templates</span>\n             </button>\n             <button\n               onClick={() => setActiveView('signals')}\n               className={`flex-1 flex items-center justify-center space-x-2 py-3 px-4 rounded-lg font-medium transition-colors ${\n                 activeView === 'signals'\n                   ? 'bg-blue-600 text-white shadow-sm'\n                   : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white hover:bg-gray-50 dark:hover:bg-gray-700'\n               }`}\n             >\n               <Zap className=\"h-5 w-5\" />\n               <span>Signals</span>\n             </button>\n             <button\n               onClick={() => setActiveView('backtesting')}\n               className={`flex-1 flex items-center justify-center space-x-2 py-3 px-4 rounded-lg font-medium transition-colors ${\n                 activeView === 'backtesting'\n                   ? 'bg-blue-600 text-white shadow-sm'\n                   : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white hover:bg-gray-50 dark:hover:bg-gray-700'\n               }`}\n             >\n               <BarChart3 className=\"h-5 w-5\" />\n               <span>Backtesting</span>\n             </button>\n             <button\n               onClick={() => setActiveView('performance-analytics')}\n               className={`flex-1 flex items-center justify-center space-x-2 py-3 px-4 rounded-lg font-medium transition-colors ${\n                 activeView === 'performance-analytics'\n                   ? 'bg-blue-600 text-white shadow-sm'\n                   : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white hover:bg-gray-50 dark:hover:bg-gray-700'\n               }`}\n             >\n               <Activity className=\"h-5 w-5\" />\n               <span>Performance</span>\n             </button>\n          </div>\n        </div>\n\n        {/* Main Content */}\n        {activeView === 'overview' && <PortfolioOverview />}\n        {activeView === 'trading' && <TradingPanel />}\n        {activeView === 'strategies' && <AutomatedStrategies />}\n        {activeView === 'ai-signals' && <AISignalGenerator />}\n         {activeView === 'templates' && <StrategyTemplates />}\n         {activeView === 'signals' && <SignalDeliverySystem />}\n         {activeView === 'backtesting' && <BacktestingEngine />}\n         {activeView === 'performance-analytics' && <PerformanceAnalytics />}\n        {activeView === 'automation' && (\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-8\">\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-gradient-to-r from-purple-500 to-blue-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Bot className=\"h-8 w-8 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-2\">\n                Automation Hub Coming Soon\n              </h3>\n              <p className=\"text-gray-600 dark:text-gray-400 mb-6 max-w-md mx-auto\">\n                Advanced automation features including strategy builders, copy trading management, and AI-powered signals are being developed.\n              </p>\n              <div className=\"flex items-center justify-center space-x-4\">\n                <button className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-medium transition-colors\">\n                  Join Waitlist\n                </button>\n                <button className=\"bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 text-gray-900 dark:text-white px-6 py-3 rounded-lg font-medium transition-colors\">\n                  Learn More\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Quick Actions Footer */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          <div className=\"bg-gradient-to-r from-green-500 to-emerald-600 rounded-xl p-6 text-white\">\n            <div className=\"flex items-center space-x-3 mb-3\">\n              <TrendingUp className=\"h-6 w-6\" />\n              <h3 className=\"text-lg font-semibold\">GainzAlgo V2 Pro</h3>\n            </div>\n            <p className=\"text-green-100 text-sm mb-4\">\n              High-frequency momentum strategy with 78% win rate and 1.85x profit factor\n            </p>\n            <button \n              onClick={() => setGainzAlgoActive(!gainzAlgoActive)}\n              className={`py-2 px-4 rounded-lg font-medium transition-colors ${\n                gainzAlgoActive \n                  ? 'bg-green-200 text-green-800 hover:bg-green-300' \n                  : 'bg-white text-green-600 hover:bg-gray-100'\n              }`}\n            >\n              {gainzAlgoActive ? 'Deactivate Strategy' : 'Activate Strategy'}\n            </button>\n          </div>\n\n          <div className=\"bg-gradient-to-r from-purple-500 to-pink-600 rounded-xl p-6 text-white\">\n            <div className=\"flex items-center space-x-3 mb-3\">\n              <Users className=\"h-6 w-6\" />\n              <h3 className=\"text-lg font-semibold\">Copy Trading</h3>\n            </div>\n            <p className=\"text-purple-100 text-sm mb-4\">\n              Follow top traders and automatically copy their winning strategies\n            </p>\n            <button \n              onClick={() => setCopyTradingActive(!copyTradingActive)}\n              className={`py-2 px-4 rounded-lg font-medium transition-colors ${\n                copyTradingActive \n                  ? 'bg-purple-200 text-purple-800 hover:bg-purple-300' \n                  : 'bg-white text-purple-600 hover:bg-gray-100'\n              }`}\n            >\n              {copyTradingActive ? 'Disable Copy Trading' : 'Enable Copy Trading'}\n            </button>\n          </div>\n\n          <div className=\"bg-gradient-to-r from-blue-500 to-cyan-600 rounded-xl p-6 text-white\">\n            <div className=\"flex items-center space-x-3 mb-3\">\n              <Shield className=\"h-6 w-6\" />\n              <h3 className=\"text-lg font-semibold\">Risk Management</h3>\n            </div>\n            <p className=\"text-blue-100 text-sm mb-4\">\n              Advanced risk controls with automated stop-loss and position sizing\n            </p>\n            <button \n              onClick={() => setRiskManagementActive(!riskManagementActive)}\n              className={`py-2 px-4 rounded-lg font-medium transition-colors ${\n                riskManagementActive \n                  ? 'bg-blue-200 text-blue-800 hover:bg-blue-300' \n                  : 'bg-white text-blue-600 hover:bg-gray-100'\n              }`}\n            >\n              {riskManagementActive ? 'Risk Controls Active' : 'Enable Risk Controls'}\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      {/* Notification Center */}\n      <NotificationCenter \n        isOpen={showNotifications} \n        onClose={() => setShowNotifications(false)} \n      />\n    </DashboardLayout>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}