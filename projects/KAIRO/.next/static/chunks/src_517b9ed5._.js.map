{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function formatCurrency(amount: number): string {\n  if (typeof amount !== 'number' || isNaN(amount)) return '$0.00'\n  try {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(amount)\n  } catch (error) {\n    return '$0.00'\n  }\n}\n\nexport function formatPercent(value: number): string {\n  if (typeof value !== 'number' || isNaN(value)) return '0.00%'\n  try {\n    return `${value >= 0 ? '+' : ''}${value.toFixed(2)}%`\n  } catch (error) {\n    return '0.00%'\n  }\n}\n\nexport function formatNumber(value: number): string {\n  if (typeof value !== 'number' || isNaN(value)) return '0'\n  try {\n    return new Intl.NumberFormat('en-US').format(value)\n  } catch (error) {\n    return '0'\n  }\n}"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,IAAA,yKAAO,EAAC,IAAA,gJAAI,EAAC;AACtB;AAEO,SAAS,eAAe,MAAc;IAC3C,IAAI,OAAO,WAAW,YAAY,MAAM,SAAS,OAAO;IACxD,IAAI;QACF,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;YACpC,OAAO;YACP,UAAU;QACZ,GAAG,MAAM,CAAC;IACZ,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,SAAS,cAAc,KAAa;IACzC,IAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,OAAO;IACtD,IAAI;QACF,OAAO,AAAC,GAA0B,OAAxB,SAAS,IAAI,MAAM,IAAsB,OAAjB,MAAM,OAAO,CAAC,IAAG;IACrD,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,SAAS,aAAa,KAAa;IACxC,IAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,OAAO;IACtD,IAAI;QACF,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS,MAAM,CAAC;IAC/C,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;;;;AAEA,MAAM,qBAAO,2KAAgB,MAG3B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,4DACA;QAED,GAAG,KAAK;;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,2KAAgB,OAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,2KAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,2KAAgB,OAGtC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,KAAK;QAAK,WAAW,IAAA,4HAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,2KAAgB,QAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,MAAM,iBAAiB,IAAA,0KAAG,EACxB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,2KAAgB,MAC7B,QAA0D;QAAzD,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO;IACtD,MAAM,OAAO,UAAU,2KAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,IAAA,4HAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }"],"names":[],"mappings":";;;;;;;AACA;AACA;;;;AAEA,MAAM,gBAAgB,IAAA,0KAAG,EACvB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,KAA4C;QAA5C,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB,GAA5C;IACb,qBACE,6LAAC;QAAI,WAAW,IAAA,4HAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/switch.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\ninterface SwitchProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'type'> {\n  checked?: boolean\n  onCheckedChange?: (checked: boolean) => void\n}\n\nconst Switch = React.forwardRef<HTMLInputElement, SwitchProps>(\n  ({ className, checked, onCheckedChange, onChange, ...props }, ref) => {\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      onCheckedChange?.(event.target.checked)\n      onChange?.(event)\n    }\n\n    return (\n      <label className={cn(\"relative inline-flex items-center cursor-pointer\", className)}>\n        <input\n          type=\"checkbox\"\n          ref={ref}\n          checked={checked}\n          onChange={handleChange}\n          className=\"sr-only peer\"\n          {...props}\n        />\n        <div className=\"relative w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\n      </label>\n    )\n  }\n)\nSwitch.displayName = \"Switch\"\n\nexport { Switch }"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAOA,MAAM,uBAAS,2KAAgB,MAC7B,QAA8D;QAA7D,EAAE,SAAS,EAAE,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,GAAG,OAAO;IAC1D,MAAM,eAAe,CAAC;QACpB,4BAAA,sCAAA,gBAAkB,MAAM,MAAM,CAAC,OAAO;QACtC,qBAAA,+BAAA,SAAW;IACb;IAEA,qBACE,6LAAC;QAAM,WAAW,IAAA,4HAAE,EAAC,oDAAoD;;0BACvE,6LAAC;gBACC,MAAK;gBACL,KAAK;gBACL,SAAS;gBACT,UAAU;gBACV,WAAU;gBACT,GAAG,KAAK;;;;;;0BAEX,6LAAC;gBAAI,WAAU;;;;;;;;;;;;AAGrB;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 358, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/label.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Label = React.forwardRef<\n  HTMLLabelElement,\n  React.LabelHTMLAttributes<HTMLLabelElement>\n>(({ className, ...props }, ref) => (\n  <label\n    ref={ref}\n    className={cn(\n      \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n      className\n    )}\n    {...props}\n  />\n))\nLabel.displayName = \"Label\"\n\nexport { Label }"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAEA,MAAM,sBAAQ,2KAAgB,MAG5B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,8FACA;QAED,GAAG,KAAK;;;;;;;;AAGb,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/services/pricingWorkflowService.ts"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\n\ninterface UsageMetrics {\n  copyTradesCount: number\n  creatorsFollowed: number\n  portfolioValue: number\n  monthlyVolume: number\n  riskScore: number\n  performanceScore: number\n}\n\ninterface WorkflowTrigger {\n  id: string\n  name: string\n  condition: (metrics: UsageMetrics) => boolean\n  action: 'suggest_upgrade' | 'auto_upgrade' | 'send_notification'\n  targetPlan: string\n  message: string\n  priority: 'low' | 'medium' | 'high'\n}\n\ninterface PricingRecommendation {\n  planId: string\n  reason: string\n  savings: number\n  benefits: string[]\n  urgency: 'low' | 'medium' | 'high'\n  autoUpgrade?: boolean\n}\n\nclass PricingWorkflowService {\n  private triggers: WorkflowTrigger[] = [\n    {\n      id: 'high-volume-trader',\n      name: 'High Volume Trader Detection',\n      condition: (metrics) => metrics.monthlyVolume > 50000 && metrics.copyTradesCount > 20,\n      action: 'suggest_upgrade',\n      targetPlan: 'pro-annual',\n      message: 'Your trading volume qualifies you for our Pro Annual plan with 25% savings!',\n      priority: 'high'\n    },\n    {\n      id: 'multiple-creators',\n      name: 'Multiple Creators Follower',\n      condition: (metrics) => metrics.creatorsFollowed >= 3,\n      action: 'suggest_upgrade',\n      targetPlan: 'pro-monthly',\n      message: 'Unlock unlimited creator following with our Pro plan!',\n      priority: 'medium'\n    },\n    {\n      id: 'high-performer',\n      name: 'High Performance User',\n      condition: (metrics) => metrics.performanceScore > 85 && metrics.portfolioValue > 10000,\n      action: 'suggest_upgrade',\n      targetPlan: 'pro-annual',\n      message: 'Your excellent performance deserves our premium features and savings!',\n      priority: 'high'\n    },\n    {\n      id: 'risk-management-needed',\n      name: 'Risk Management Alert',\n      condition: (metrics) => metrics.riskScore > 70,\n      action: 'suggest_upgrade',\n      targetPlan: 'pro-monthly',\n      message: 'Advanced risk management tools can help optimize your portfolio safety.',\n      priority: 'medium'\n    },\n    {\n      id: 'trial-ending',\n      name: 'Trial Ending Soon',\n      condition: (metrics) => metrics.copyTradesCount > 0, // Active user\n      action: 'send_notification',\n      targetPlan: 'pro-monthly',\n      message: 'Your free trial is ending soon. Continue your trading journey with Pro!',\n      priority: 'high'\n    }\n  ]\n\n  private userMetrics: UsageMetrics = {\n    copyTradesCount: 0,\n    creatorsFollowed: 0,\n    portfolioValue: 0,\n    monthlyVolume: 0,\n    riskScore: 0,\n    performanceScore: 0\n  }\n\n  // Simulate real-time metrics updates\n  updateMetrics(newMetrics: Partial<UsageMetrics>) {\n    this.userMetrics = { ...this.userMetrics, ...newMetrics }\n    this.evaluateWorkflows()\n  }\n\n  // Evaluate all workflow triggers\n  private evaluateWorkflows(): PricingRecommendation[] {\n    const recommendations: PricingRecommendation[] = []\n\n    this.triggers.forEach(trigger => {\n      if (trigger.condition(this.userMetrics)) {\n        const recommendation = this.createRecommendation(trigger)\n        if (recommendation) {\n          recommendations.push(recommendation)\n        }\n      }\n    })\n\n    return recommendations.sort((a, b) => {\n      const urgencyOrder = { high: 3, medium: 2, low: 1 }\n      return urgencyOrder[b.urgency] - urgencyOrder[a.urgency]\n    })\n  }\n\n  private createRecommendation(trigger: WorkflowTrigger): PricingRecommendation | null {\n    const planBenefits = {\n      'pro-monthly': [\n        'Unlimited creator following',\n        'AI-powered market analysis',\n        'Advanced risk management',\n        'Real-time notifications'\n      ],\n      'pro-annual': [\n        'All Pro features',\n        '25% annual savings',\n        'Exclusive creator access',\n        'Dedicated account manager'\n      ]\n    }\n\n    const planSavings = {\n      'pro-monthly': 0,\n      'pro-annual': 29.89\n    }\n\n    return {\n      planId: trigger.targetPlan,\n      reason: trigger.message,\n      savings: planSavings[trigger.targetPlan as keyof typeof planSavings] || 0,\n      benefits: planBenefits[trigger.targetPlan as keyof typeof planBenefits] || [],\n      urgency: trigger.priority,\n      autoUpgrade: trigger.action === 'auto_upgrade'\n    }\n  }\n\n  // Get current recommendations\n  getRecommendations(): PricingRecommendation[] {\n    return this.evaluateWorkflows()\n  }\n\n  // Simulate user behavior for demo\n  simulateUserActivity() {\n    // Simulate increasing usage over time\n    setInterval(() => {\n      this.updateMetrics({\n        copyTradesCount: this.userMetrics.copyTradesCount + Math.floor(Math.random() * 3),\n        creatorsFollowed: Math.min(this.userMetrics.creatorsFollowed + (Math.random() > 0.8 ? 1 : 0), 5),\n        portfolioValue: this.userMetrics.portfolioValue + Math.random() * 1000,\n        monthlyVolume: this.userMetrics.monthlyVolume + Math.random() * 5000,\n        riskScore: Math.max(0, Math.min(100, this.userMetrics.riskScore + (Math.random() - 0.5) * 10)),\n        performanceScore: Math.max(0, Math.min(100, this.userMetrics.performanceScore + (Math.random() - 0.3) * 5))\n      })\n    }, 5000) // Update every 5 seconds for demo\n  }\n\n  // Get current user metrics\n  getMetrics(): UsageMetrics {\n    return { ...this.userMetrics }\n  }\n\n  // Initialize with sample data\n  initializeSampleData() {\n    this.updateMetrics({\n      copyTradesCount: 5,\n      creatorsFollowed: 2,\n      portfolioValue: 8500,\n      monthlyVolume: 25000,\n      riskScore: 45,\n      performanceScore: 78\n    })\n  }\n}\n\nexport const pricingWorkflowService = new PricingWorkflowService()\nexport type { UsageMetrics, PricingRecommendation, WorkflowTrigger }\n\n// React hook for using the pricing workflow service\nexport function usePricingWorkflow() {\n  const [recommendations, setRecommendations] = useState<PricingRecommendation[]>([])\n  const [metrics, setMetrics] = useState<UsageMetrics>(pricingWorkflowService.getMetrics())\n\n  useEffect(() => {\n    // Initialize sample data\n    pricingWorkflowService.initializeSampleData()\n    \n    // Start simulation for demo\n    pricingWorkflowService.simulateUserActivity()\n\n    // Update recommendations periodically\n    const interval = setInterval(() => {\n      setRecommendations(pricingWorkflowService.getRecommendations())\n      setMetrics(pricingWorkflowService.getMetrics())\n    }, 2000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return {\n    recommendations,\n    metrics,\n    updateMetrics: (newMetrics: Partial<UsageMetrics>) => {\n      pricingWorkflowService.updateMetrics(newMetrics)\n      setRecommendations(pricingWorkflowService.getRecommendations())\n      setMetrics(pricingWorkflowService.getMetrics())\n    }\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 596, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/services/onboardingWorkflowService.ts"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\n\nexport interface OnboardingStep {\n  id: string\n  title: string\n  description: string\n  completed: boolean\n  required: boolean\n  estimatedTime: string\n  category: 'setup' | 'verification' | 'trading' | 'learning'\n}\n\nexport interface OnboardingProgress {\n  currentStep: number\n  totalSteps: number\n  completedSteps: number\n  progressPercentage: number\n  estimatedTimeRemaining: string\n}\n\nexport interface UserOnboardingData {\n  planId: string\n  email: string\n  firstName: string\n  lastName: string\n  tradingExperience: 'beginner' | 'intermediate' | 'advanced'\n  riskTolerance: 'low' | 'medium' | 'high'\n  investmentGoals: string[]\n  preferredCreators: string[]\n}\n\nclass OnboardingWorkflowService {\n  private static instance: OnboardingWorkflowService\n  private onboardingSteps: OnboardingStep[] = []\n  private userProgress: OnboardingProgress = {\n    currentStep: 0,\n    totalSteps: 0,\n    completedSteps: 0,\n    progressPercentage: 0,\n    estimatedTimeRemaining: '0 min'\n  }\n\n  static getInstance(): OnboardingWorkflowService {\n    if (!OnboardingWorkflowService.instance) {\n      OnboardingWorkflowService.instance = new OnboardingWorkflowService()\n    }\n    return OnboardingWorkflowService.instance\n  }\n\n  initializeOnboarding(planId: string): OnboardingStep[] {\n    this.onboardingSteps = this.generateStepsForPlan(planId)\n    this.updateProgress()\n    return this.onboardingSteps\n  }\n\n  private generateStepsForPlan(planId: string): OnboardingStep[] {\n    const baseSteps: OnboardingStep[] = [\n      {\n        id: 'welcome',\n        title: 'Welcome to KAIRO',\n        description: 'Get familiar with the platform and your dashboard',\n        completed: false,\n        required: true,\n        estimatedTime: '2 min',\n        category: 'setup'\n      },\n      {\n        id: 'profile-setup',\n        title: 'Complete Your Profile',\n        description: 'Add your trading experience and investment preferences',\n        completed: false,\n        required: true,\n        estimatedTime: '3 min',\n        category: 'setup'\n      },\n      {\n        id: 'identity-verification',\n        title: 'Verify Your Identity',\n        description: 'Upload required documents for account verification',\n        completed: false,\n        required: true,\n        estimatedTime: '5 min',\n        category: 'verification'\n      },\n      {\n        id: 'fund-account',\n        title: 'Fund Your Account',\n        description: 'Add funds to start copy trading',\n        completed: false,\n        required: true,\n        estimatedTime: '3 min',\n        category: 'setup'\n      },\n      {\n        id: 'explore-creators',\n        title: 'Discover Top Creators',\n        description: 'Browse and learn about successful traders',\n        completed: false,\n        required: false,\n        estimatedTime: '10 min',\n        category: 'learning'\n      },\n      {\n        id: 'first-copy-trade',\n        title: 'Make Your First Copy Trade',\n        description: 'Follow a creator and start copying their trades',\n        completed: false,\n        required: false,\n        estimatedTime: '5 min',\n        category: 'trading'\n      }\n    ]\n\n    // Add alert setup step for all paid plans\n    if (planId !== 'free-trial') {\n      baseSteps.splice(4, 0, {\n        id: 'setup-alerts',\n        title: 'Configure Smart Alerts',\n        description: 'Set up personalized trading alerts and notifications',\n        completed: false,\n        required: false,\n        estimatedTime: '4 min',\n        category: 'setup'\n      })\n    }\n\n    // Add plan-specific steps\n    if (planId === 'pro-monthly' || planId === 'pro-annual') {\n      baseSteps.push(\n        {\n          id: 'advanced-analytics',\n          title: 'Explore Advanced Analytics',\n          description: 'Learn about risk management and performance tracking',\n          completed: false,\n          required: false,\n          estimatedTime: '8 min',\n          category: 'learning'\n        },\n        {\n          id: 'custom-strategies',\n          title: 'Set Up Custom Strategies',\n          description: 'Create personalized trading rules and filters',\n          completed: false,\n          required: false,\n          estimatedTime: '12 min',\n          category: 'trading'\n        }\n      )\n    }\n\n    if (planId === 'enterprise') {\n      baseSteps.push(\n        {\n          id: 'team-setup',\n          title: 'Configure Team Access',\n          description: 'Set up team members and permissions',\n          completed: false,\n          required: true,\n          estimatedTime: '15 min',\n          category: 'setup'\n        },\n        {\n          id: 'api-integration',\n          title: 'API Integration Setup',\n          description: 'Configure custom integrations and API access',\n          completed: false,\n          required: false,\n          estimatedTime: '20 min',\n          category: 'setup'\n        }\n      )\n    }\n\n    return baseSteps\n  }\n\n  completeStep(stepId: string): void {\n    const step = this.onboardingSteps.find(s => s.id === stepId)\n    if (step) {\n      step.completed = true\n      this.updateProgress()\n      this.triggerNextStepRecommendation()\n    }\n  }\n\n  skipStep(stepId: string): void {\n    const step = this.onboardingSteps.find(s => s.id === stepId)\n    if (step && !step.required) {\n      step.completed = true\n      this.updateProgress()\n    }\n  }\n\n  private updateProgress(): void {\n    const completedSteps = this.onboardingSteps.filter(s => s.completed).length\n    const totalSteps = this.onboardingSteps.length\n    const progressPercentage = totalSteps > 0 ? Math.round((completedSteps / totalSteps) * 100) : 0\n    \n    const remainingSteps = this.onboardingSteps.filter(s => !s.completed)\n    const estimatedMinutes = remainingSteps.reduce((total, step) => {\n      const minutes = parseInt(step.estimatedTime.split(' ')[0])\n      return total + minutes\n    }, 0)\n    \n    this.userProgress = {\n      currentStep: completedSteps,\n      totalSteps,\n      completedSteps,\n      progressPercentage,\n      estimatedTimeRemaining: `${estimatedMinutes} min`\n    }\n  }\n\n  private triggerNextStepRecommendation(): void {\n    const nextStep = this.onboardingSteps.find(s => !s.completed)\n    if (nextStep) {\n      // In a real app, this would trigger notifications or UI updates\n      console.log(`Next recommended step: ${nextStep.title}`)\n    }\n  }\n\n  getProgress(): OnboardingProgress {\n    return this.userProgress\n  }\n\n  getSteps(): OnboardingStep[] {\n    return this.onboardingSteps\n  }\n\n  getNextStep(): OnboardingStep | null {\n    return this.onboardingSteps.find(s => !s.completed) || null\n  }\n\n  getStepsByCategory(category: OnboardingStep['category']): OnboardingStep[] {\n    return this.onboardingSteps.filter(s => s.category === category)\n  }\n\n  isOnboardingComplete(): boolean {\n    const requiredSteps = this.onboardingSteps.filter(s => s.required)\n    return requiredSteps.every(s => s.completed)\n  }\n\n  generatePersonalizedRecommendations(userData: Partial<UserOnboardingData>): string[] {\n    const recommendations: string[] = []\n\n    if (userData.tradingExperience === 'beginner') {\n      recommendations.push(\n        'Start with conservative creators with consistent returns',\n        'Begin with small amounts to learn the platform',\n        'Complete the trading education modules'\n      )\n    }\n\n    if (userData.riskTolerance === 'low') {\n      recommendations.push(\n        'Focus on creators with low volatility strategies',\n        'Set up stop-loss limits for risk management'\n      )\n    }\n\n    if (userData.investmentGoals?.includes('retirement')) {\n      recommendations.push(\n        'Consider long-term growth creators',\n        'Set up automatic monthly investments'\n      )\n    }\n\n    return recommendations\n  }\n}\n\nexport const useOnboardingWorkflow = (planId?: string) => {\n  const [steps, setSteps] = useState<OnboardingStep[]>([])\n  const [progress, setProgress] = useState<OnboardingProgress>({\n    currentStep: 0,\n    totalSteps: 0,\n    completedSteps: 0,\n    progressPercentage: 0,\n    estimatedTimeRemaining: '0 min'\n  })\n  const [isLoading, setIsLoading] = useState(true)\n\n  const service = OnboardingWorkflowService.getInstance()\n\n  useEffect(() => {\n    if (planId) {\n      const initialSteps = service.initializeOnboarding(planId)\n      setSteps(initialSteps)\n      setProgress(service.getProgress())\n      setIsLoading(false)\n    }\n  }, [planId])\n\n  const completeStep = (stepId: string) => {\n    service.completeStep(stepId)\n    setSteps([...service.getSteps()])\n    setProgress(service.getProgress())\n  }\n\n  const skipStep = (stepId: string) => {\n    service.skipStep(stepId)\n    setSteps([...service.getSteps()])\n    setProgress(service.getProgress())\n  }\n\n  const getNextStep = () => {\n    return service.getNextStep()\n  }\n\n  const getStepsByCategory = (category: OnboardingStep['category']) => {\n    return service.getStepsByCategory(category)\n  }\n\n  const isComplete = () => {\n    return service.isOnboardingComplete()\n  }\n\n  const generateRecommendations = (userData: Partial<UserOnboardingData>) => {\n    return service.generatePersonalizedRecommendations(userData)\n  }\n\n  return {\n    steps,\n    progress,\n    isLoading,\n    completeStep,\n    skipStep,\n    getNextStep,\n    getStepsByCategory,\n    isComplete,\n    generateRecommendations\n  }\n}\n\nexport default OnboardingWorkflowService"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 882, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAKA,MAAM,sBAAQ,2KAAgB,MAC5B,QAAgC;QAA/B,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO;IAC5B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,IAAA,4HAAE,EACX,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 918, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/progress.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\ninterface ProgressProps extends React.HTMLAttributes<HTMLDivElement> {\n  value?: number\n}\n\nconst Progress = React.forwardRef<HTMLDivElement, ProgressProps>(\n  ({ className, value = 0, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative h-4 w-full overflow-hidden rounded-full bg-gray-200 dark:bg-gray-700\",\n        className\n      )}\n      {...props}\n    >\n      <div\n        className=\"h-full bg-blue-600 transition-all duration-300 ease-in-out\"\n        style={{ width: `${Math.min(100, Math.max(0, value))}%` }}\n      />\n    </div>\n  )\n)\nProgress.displayName = \"Progress\"\n\nexport { Progress }"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAMA,MAAM,yBAAW,2KAAgB,MAC/B,QAAqC;QAApC,EAAE,SAAS,EAAE,QAAQ,CAAC,EAAE,GAAG,OAAO;yBACjC,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,iFACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC;YACC,WAAU;YACV,OAAO;gBAAE,OAAO,AAAC,GAAoC,OAAlC,KAAK,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,GAAG,SAAQ;YAAG;;;;;;;;;;;;;AAKhE,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 963, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,6KAAoB;AAEnC,MAAM,cAAc,8KAAqB;AAEzC,MAAM,cAAc,8KAAqB;AAEzC,MAAM,8BAAgB,2KAAgB,MAGpC,QAAoC;QAAnC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;yBAClC,6LAAC,gLAAuB;QACtB,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,mTACA;QAED,GAAG,KAAK;;YAER;0BACD,6LAAC,6KAAoB;gBAAC,OAAO;0BAC3B,cAAA,6LAAC,sOAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;;;AAI7B,cAAc,WAAW,GAAG,gLAAuB,CAAC,WAAW;AAE/D,MAAM,qCAAuB,2KAAgB,CAG3C,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,uLAA8B;QAC7B,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,gOAAS;YAAC,WAAU;;;;;;;;;;;;MAZnB;AAeN,qBAAqB,WAAW,GAAG,uLAA8B,CAAC,WAAW;AAE7E,MAAM,uCAAyB,2KAAgB,CAG7C,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,yLAAgC;QAC/B,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,sOAAW;YAAC,WAAU;;;;;;;;;;;;MAZrB;AAeN,uBAAuB,WAAW,GAChC,yLAAgC,CAAC,WAAW;AAE9C,MAAM,8BAAgB,2KAAgB,OAGpC,QAAyD;QAAxD,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,QAAQ,EAAE,GAAG,OAAO;yBACvD,6LAAC,+KAAsB;kBACrB,cAAA,6LAAC,gLAAuB;YACtB,KAAK;YACL,WAAW,IAAA,4HAAE,EACX,ucACA,aAAa,YACX,mIACF;YAEF,UAAU;YACT,GAAG,KAAK;;8BAET,6LAAC;;;;;8BACD,6LAAC,iLAAwB;oBACvB,WAAW,IAAA,4HAAE,EACX,OACA,aAAa,YACX;8BAGH;;;;;;8BAEH,6LAAC;;;;;;;;;;;;;;;;;;AAIP,cAAc,WAAW,GAAG,gLAAuB,CAAC,WAAW;AAE/D,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,8KAAqB;QACpB,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,0CAA0C;QACvD,GAAG,KAAK;;;;;;;;AAGb,YAAY,WAAW,GAAG,8KAAqB,CAAC,WAAW;AAE3D,MAAM,2BAAa,2KAAgB,OAGjC,QAAoC;QAAnC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;yBAClC,6LAAC,6KAAoB;QACnB,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,6NACA;QAED,GAAG,KAAK;;0BAET,6LAAC;gBAAK,WAAU;0BACd,cAAA,6LAAC,sLAA6B;8BAC5B,cAAA,6LAAC,gNAAK;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAIrB,6LAAC,iLAAwB;0BAAE;;;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAoB,CAAC,WAAW;AAEzD,MAAM,gCAAkB,2KAAgB,QAGtC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,kLAAyB;QACxB,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,4BAA4B;QACzC,GAAG,KAAK;;;;;;;;AAGb,gBAAgB,WAAW,GAAG,kLAAyB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1207, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,6KAAoB;AAEnC,MAAM,gBAAgB,gLAAuB;AAE7C,MAAM,eAAe,+KAAsB;AAE3C,MAAM,cAAc,8KAAqB;AAEzC,MAAM,8BAAgB,2KAAgB,CAGpC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,gLAAuB;QACtB,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,gLACA;QAED,GAAG,KAAK;;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,gLAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,2KAAgB,OAGpC,QAAoC;QAAnC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;yBAClC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,gLAAuB;gBACtB,KAAK;gBACL,WAAW,IAAA,4HAAE,EACX,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,8KAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,oMAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,gLAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe;QAAC,EACpB,SAAS,EACT,GAAG,OACkC;yBACrC,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe;QAAC,EACpB,SAAS,EACT,GAAG,OACkC;yBACrC,6LAAC;QACC,WAAW,IAAA,4HAAE,EACX,iEACA;QAED,GAAG,KAAK;;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,8KAAqB;QACpB,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,qDACA;QAED,GAAG,KAAK;;;;;;;;AAGb,YAAY,WAAW,GAAG,8KAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,2KAAgB,OAGxC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,oLAA2B;QAC1B,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,kBAAkB,WAAW,GAAG,oLAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1384, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/onboarding/OnboardingQuestionnaire.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Progress } from '@/components/ui/progress';\n// Using available UI components instead of missing radio-group and checkbox\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport {\n  User,\n  Shield,\n  CreditCard,\n  Target,\n  TrendingUp,\n  CheckCircle,\n  ArrowRight,\n  ArrowLeft,\n  Upload,\n  FileText,\n  DollarSign,\n  Users,\n  Brain,\n  Settings,\n  Zap,\n  Award,\n  Clock,\n  AlertCircle,\n  Camera\n} from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\ninterface QuestionnaireStep {\n  id: string;\n  title: string;\n  description: string;\n  icon: React.ReactNode;\n  category: 'personal' | 'verification' | 'financial' | 'trading' | 'preferences';\n  required: boolean;\n  estimatedTime: string;\n}\n\ninterface FormData {\n  // Personal Information\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  dateOfBirth: string;\n  country: string;\n  \n  // Trading Experience\n  tradingExperience: 'beginner' | 'intermediate' | 'advanced' | '';\n  previousPlatforms: string[];\n  tradingGoals: string[];\n  riskTolerance: 'low' | 'medium' | 'high' | '';\n  \n  // Financial Information\n  annualIncome: string;\n  investmentAmount: string;\n  fundingMethod: string;\n  \n  // Verification Documents\n  idDocument: File | null;\n  proofOfAddress: File | null;\n  \n  // Preferences\n  preferredCreators: string[];\n  notificationPreferences: string[];\n  tradingHours: string;\n  autoTradingEnabled: boolean;\n}\n\ninterface OnboardingQuestionnaireProps {\n  isOpen: boolean;\n  onClose: () => void;\n  selectedPlan?: string;\n  onComplete: (data: FormData) => void;\n}\n\nconst OnboardingQuestionnaire: React.FC<OnboardingQuestionnaireProps> = ({\n  isOpen,\n  onClose,\n  selectedPlan,\n  onComplete\n}) => {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [formData, setFormData] = useState<FormData>({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    dateOfBirth: '',\n    country: '',\n    tradingExperience: '',\n    previousPlatforms: [],\n    tradingGoals: [],\n    riskTolerance: '',\n    annualIncome: '',\n    investmentAmount: '',\n    fundingMethod: '',\n    idDocument: null,\n    proofOfAddress: null,\n    preferredCreators: [],\n    notificationPreferences: [],\n    tradingHours: '',\n    autoTradingEnabled: false\n  });\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const questionnaireSteps: QuestionnaireStep[] = [\n    {\n      id: 'personal-info',\n      title: 'Personal Information',\n      description: 'Tell us about yourself to personalize your experience',\n      icon: <User className=\"w-6 h-6\" />,\n      category: 'personal',\n      required: true,\n      estimatedTime: '3 min'\n    },\n    {\n      id: 'trading-experience',\n      title: 'Trading Background',\n      description: 'Help us understand your trading experience and goals',\n      icon: <TrendingUp className=\"w-6 h-6\" />,\n      category: 'trading',\n      required: true,\n      estimatedTime: '4 min'\n    },\n    {\n      id: 'financial-profile',\n      title: 'Financial Profile',\n      description: 'Set up your investment parameters and funding',\n      icon: <DollarSign className=\"w-6 h-6\" />,\n      category: 'financial',\n      required: true,\n      estimatedTime: '3 min'\n    },\n    {\n      id: 'verification',\n      title: 'Identity Verification',\n      description: 'Upload documents to verify your identity',\n      icon: <Shield className=\"w-6 h-6\" />,\n      category: 'verification',\n      required: true,\n      estimatedTime: '5 min'\n    },\n    {\n      id: 'preferences',\n      title: 'Trading Preferences',\n      description: 'Customize your trading experience and notifications',\n      icon: <Settings className=\"w-6 h-6\" />,\n      category: 'preferences',\n      required: false,\n      estimatedTime: '4 min'\n    }\n  ];\n\n  const tradingGoalOptions = [\n    'Generate passive income',\n    'Learn trading strategies',\n    'Diversify portfolio',\n    'Follow expert traders',\n    'Build long-term wealth',\n    'Test new strategies'\n  ];\n\n  const creatorOptions = [\n    'Conservative traders',\n    'Growth-focused traders',\n    'Forex specialists',\n    'Crypto experts',\n    'Stock market pros',\n    'Day traders'\n  ];\n\n  const notificationOptions = [\n    'Trade notifications',\n    'Performance updates',\n    'Market alerts',\n    'Creator updates',\n    'Risk warnings',\n    'Weekly summaries'\n  ];\n\n  const updateFormData = (field: keyof FormData, value: any) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    // Clear error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: '' }));\n    }\n  };\n\n  const validateStep = (stepIndex: number): boolean => {\n    const step = questionnaireSteps[stepIndex];\n    const newErrors: Record<string, string> = {};\n\n    switch (step.id) {\n      case 'personal-info':\n        if (!formData.firstName.trim()) newErrors.firstName = 'First name is required';\n        if (!formData.lastName.trim()) newErrors.lastName = 'Last name is required';\n        if (!formData.email.trim()) newErrors.email = 'Email is required';\n        if (!formData.country) newErrors.country = 'Country is required';\n        break;\n      \n      case 'trading-experience':\n        if (!formData.tradingExperience) newErrors.tradingExperience = 'Trading experience is required';\n        if (!formData.riskTolerance) newErrors.riskTolerance = 'Risk tolerance is required';\n        if (formData.tradingGoals.length === 0) newErrors.tradingGoals = 'Please select at least one trading goal';\n        break;\n      \n      case 'financial-profile':\n        if (!formData.annualIncome) newErrors.annualIncome = 'Annual income is required';\n        if (!formData.investmentAmount) newErrors.investmentAmount = 'Investment amount is required';\n        if (!formData.fundingMethod) newErrors.fundingMethod = 'Funding method is required';\n        break;\n      \n      case 'verification':\n        if (!formData.idDocument) newErrors.idDocument = 'ID document is required';\n        if (!formData.proofOfAddress) newErrors.proofOfAddress = 'Proof of address is required';\n        break;\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleNext = () => {\n    if (validateStep(currentStep)) {\n      if (currentStep < questionnaireSteps.length - 1) {\n        setCurrentStep(currentStep + 1);\n      } else {\n        handleSubmit();\n      }\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentStep > 0) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  const handleSubmit = async () => {\n    setIsSubmitting(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      onComplete(formData);\n      onClose();\n    } catch (error) {\n      console.error('Submission error:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleFileUpload = (field: 'idDocument' | 'proofOfAddress', file: File) => {\n    updateFormData(field, file);\n  };\n\n  const progressPercentage = ((currentStep + 1) / questionnaireSteps.length) * 100;\n  const currentStepData = questionnaireSteps[currentStep];\n\n  const renderStepContent = () => {\n    switch (currentStepData.id) {\n      case 'personal-info':\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"firstName\">First Name *</Label>\n                <Input\n                  id=\"firstName\"\n                  value={formData.firstName}\n                  onChange={(e) => updateFormData('firstName', e.target.value)}\n                  className={errors.firstName ? 'border-red-500' : ''}\n                />\n                {errors.firstName && <p className=\"text-sm text-red-500\">{errors.firstName}</p>}\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"lastName\">Last Name *</Label>\n                <Input\n                  id=\"lastName\"\n                  value={formData.lastName}\n                  onChange={(e) => updateFormData('lastName', e.target.value)}\n                  className={errors.lastName ? 'border-red-500' : ''}\n                />\n                {errors.lastName && <p className=\"text-sm text-red-500\">{errors.lastName}</p>}\n              </div>\n            </div>\n            \n            <div className=\"space-y-2\">\n              <Label htmlFor=\"email\">Email Address *</Label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                value={formData.email}\n                onChange={(e) => updateFormData('email', e.target.value)}\n                className={errors.email ? 'border-red-500' : ''}\n              />\n              {errors.email && <p className=\"text-sm text-red-500\">{errors.email}</p>}\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"phone\">Phone Number</Label>\n                <Input\n                  id=\"phone\"\n                  value={formData.phone}\n                  onChange={(e) => updateFormData('phone', e.target.value)}\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"dateOfBirth\">Date of Birth</Label>\n                <Input\n                  id=\"dateOfBirth\"\n                  type=\"date\"\n                  value={formData.dateOfBirth}\n                  onChange={(e) => updateFormData('dateOfBirth', e.target.value)}\n                />\n              </div>\n            </div>\n            \n            <div className=\"space-y-2\">\n              <Label htmlFor=\"country\">Country *</Label>\n              <Select value={formData.country} onValueChange={(value) => updateFormData('country', value)}>\n                <SelectTrigger className={errors.country ? 'border-red-500' : ''}>\n                  <SelectValue placeholder=\"Select your country\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"us\">United States</SelectItem>\n                  <SelectItem value=\"uk\">United Kingdom</SelectItem>\n                  <SelectItem value=\"ca\">Canada</SelectItem>\n                  <SelectItem value=\"au\">Australia</SelectItem>\n                  <SelectItem value=\"de\">Germany</SelectItem>\n                  <SelectItem value=\"fr\">France</SelectItem>\n                  <SelectItem value=\"other\">Other</SelectItem>\n                </SelectContent>\n              </Select>\n              {errors.country && <p className=\"text-sm text-red-500\">{errors.country}</p>}\n            </div>\n          </div>\n        );\n\n      case 'trading-experience':\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"space-y-4\">\n              <Label>Trading Experience *</Label>\n              <Select\n                value={formData.tradingExperience}\n                onValueChange={(value) => updateFormData('tradingExperience', value)}\n              >\n                <SelectTrigger className={errors.tradingExperience ? 'border-red-500' : ''}>\n                  <SelectValue placeholder=\"Select your trading experience\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"beginner\">Beginner - New to trading</SelectItem>\n                  <SelectItem value=\"intermediate\">Intermediate - Some trading experience</SelectItem>\n                  <SelectItem value=\"advanced\">Advanced - Experienced trader</SelectItem>\n                </SelectContent>\n              </Select>\n              {errors.tradingExperience && <p className=\"text-sm text-red-500\">{errors.tradingExperience}</p>}\n            </div>\n            \n            <div className=\"space-y-4\">\n              <Label>Risk Tolerance *</Label>\n              <Select\n                value={formData.riskTolerance}\n                onValueChange={(value) => updateFormData('riskTolerance', value)}\n              >\n                <SelectTrigger className={errors.riskTolerance ? 'border-red-500' : ''}>\n                  <SelectValue placeholder=\"Select your risk tolerance\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"low\">Low - Conservative approach</SelectItem>\n                  <SelectItem value=\"medium\">Medium - Balanced approach</SelectItem>\n                  <SelectItem value=\"high\">High - Aggressive approach</SelectItem>\n                </SelectContent>\n              </Select>\n              {errors.riskTolerance && <p className=\"text-sm text-red-500\">{errors.riskTolerance}</p>}\n            </div>\n            \n            <div className=\"space-y-4\">\n              <Label>Trading Goals * (Select all that apply)</Label>\n              <div className={cn(\"grid grid-cols-1 md:grid-cols-2 gap-3\", errors.tradingGoals && \"border border-red-500 rounded-lg p-4\")}>\n                {tradingGoalOptions.map((goal) => (\n                  <Button\n                    key={goal}\n                    type=\"button\"\n                    variant={formData.tradingGoals.includes(goal) ? \"default\" : \"outline\"}\n                    className=\"justify-start h-auto p-3 text-left\"\n                    onClick={() => {\n                      if (formData.tradingGoals.includes(goal)) {\n                        updateFormData('tradingGoals', formData.tradingGoals.filter(g => g !== goal));\n                      } else {\n                        updateFormData('tradingGoals', [...formData.tradingGoals, goal]);\n                      }\n                    }}\n                  >\n                    <span className=\"text-sm\">{goal}</span>\n                  </Button>\n                ))}\n              </div>\n              {errors.tradingGoals && <p className=\"text-sm text-red-500\">{errors.tradingGoals}</p>}\n            </div>\n          </div>\n        );\n\n      case 'financial-profile':\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"annualIncome\">Annual Income *</Label>\n              <Select value={formData.annualIncome} onValueChange={(value) => updateFormData('annualIncome', value)}>\n                <SelectTrigger className={errors.annualIncome ? 'border-red-500' : ''}>\n                  <SelectValue placeholder=\"Select your annual income range\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"under-25k\">Under $25,000</SelectItem>\n                  <SelectItem value=\"25k-50k\">$25,000 - $50,000</SelectItem>\n                  <SelectItem value=\"50k-100k\">$50,000 - $100,000</SelectItem>\n                  <SelectItem value=\"100k-250k\">$100,000 - $250,000</SelectItem>\n                  <SelectItem value=\"250k-500k\">$250,000 - $500,000</SelectItem>\n                  <SelectItem value=\"over-500k\">Over $500,000</SelectItem>\n                </SelectContent>\n              </Select>\n              {errors.annualIncome && <p className=\"text-sm text-red-500\">{errors.annualIncome}</p>}\n            </div>\n            \n            <div className=\"space-y-2\">\n              <Label htmlFor=\"investmentAmount\">Initial Investment Amount *</Label>\n              <Select value={formData.investmentAmount} onValueChange={(value) => updateFormData('investmentAmount', value)}>\n                <SelectTrigger className={errors.investmentAmount ? 'border-red-500' : ''}>\n                  <SelectValue placeholder=\"Select your initial investment\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"500-1k\">$500 - $1,000</SelectItem>\n                  <SelectItem value=\"1k-5k\">$1,000 - $5,000</SelectItem>\n                  <SelectItem value=\"5k-10k\">$5,000 - $10,000</SelectItem>\n                  <SelectItem value=\"10k-25k\">$10,000 - $25,000</SelectItem>\n                  <SelectItem value=\"25k-50k\">$25,000 - $50,000</SelectItem>\n                  <SelectItem value=\"over-50k\">Over $50,000</SelectItem>\n                </SelectContent>\n              </Select>\n              {errors.investmentAmount && <p className=\"text-sm text-red-500\">{errors.investmentAmount}</p>}\n            </div>\n            \n            <div className=\"space-y-2\">\n              <Label htmlFor=\"fundingMethod\">Preferred Funding Method *</Label>\n              <Select value={formData.fundingMethod} onValueChange={(value) => updateFormData('fundingMethod', value)}>\n                <SelectTrigger className={errors.fundingMethod ? 'border-red-500' : ''}>\n                  <SelectValue placeholder=\"Select funding method\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"bank-transfer\">Bank Transfer</SelectItem>\n                  <SelectItem value=\"credit-card\">Credit Card</SelectItem>\n                  <SelectItem value=\"debit-card\">Debit Card</SelectItem>\n                  <SelectItem value=\"paypal\">PayPal</SelectItem>\n                  <SelectItem value=\"crypto\">Cryptocurrency</SelectItem>\n                </SelectContent>\n              </Select>\n              {errors.fundingMethod && <p className=\"text-sm text-red-500\">{errors.fundingMethod}</p>}\n            </div>\n          </div>\n        );\n\n      case 'verification':\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"space-y-4\">\n              <Label>Identity Document *</Label>\n              <div className={cn(\"border-2 border-dashed rounded-lg p-6 text-center\", errors.idDocument ? 'border-red-500' : 'border-gray-300')}>\n                <Upload className=\"w-8 h-8 mx-auto mb-2 text-gray-400\" />\n                <p className=\"text-sm text-gray-600 mb-2\">Upload your government-issued ID</p>\n                <input\n                  type=\"file\"\n                  accept=\".jpg,.jpeg,.png,.pdf\"\n                  onChange={(e) => {\n                    const file = e.target.files?.[0];\n                    if (file) handleFileUpload('idDocument', file);\n                  }}\n                  className=\"hidden\"\n                  id=\"id-upload\"\n                />\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  onClick={() => document.getElementById('id-upload')?.click()}\n                >\n                  Choose File\n                </Button>\n                {formData.idDocument && (\n                  <p className=\"text-sm text-green-600 mt-2\">\n                    ✓ {formData.idDocument.name}\n                  </p>\n                )}\n              </div>\n              {errors.idDocument && <p className=\"text-sm text-red-500\">{errors.idDocument}</p>}\n            </div>\n            \n            <div className=\"space-y-4\">\n              <Label>Proof of Address *</Label>\n              <div className={cn(\"border-2 border-dashed rounded-lg p-6 text-center\", errors.proofOfAddress ? 'border-red-500' : 'border-gray-300')}>\n                <FileText className=\"w-8 h-8 mx-auto mb-2 text-gray-400\" />\n                <p className=\"text-sm text-gray-600 mb-2\">Upload a utility bill or bank statement</p>\n                <input\n                  type=\"file\"\n                  accept=\".jpg,.jpeg,.png,.pdf\"\n                  onChange={(e) => {\n                    const file = e.target.files?.[0];\n                    if (file) handleFileUpload('proofOfAddress', file);\n                  }}\n                  className=\"hidden\"\n                  id=\"address-upload\"\n                />\n                <Button\n                  type=\"button\"\n                  variant=\"outline\"\n                  onClick={() => document.getElementById('address-upload')?.click()}\n                >\n                  Choose File\n                </Button>\n                {formData.proofOfAddress && (\n                  <p className=\"text-sm text-green-600 mt-2\">\n                    ✓ {formData.proofOfAddress.name}\n                  </p>\n                )}\n              </div>\n              {errors.proofOfAddress && <p className=\"text-sm text-red-500\">{errors.proofOfAddress}</p>}\n            </div>\n            \n            <div className=\"bg-blue-50 p-4 rounded-lg\">\n              <div className=\"flex items-start space-x-3\">\n                <AlertCircle className=\"w-5 h-5 text-blue-600 mt-0.5\" />\n                <div>\n                  <h4 className=\"font-medium text-blue-900\">Verification Requirements</h4>\n                  <ul className=\"text-sm text-blue-700 mt-1 space-y-1\">\n                    <li>• Documents must be clear and readable</li>\n                    <li>• ID must be government-issued and valid</li>\n                    <li>• Address document must be dated within 3 months</li>\n                    <li>• Verification typically takes 1-2 business days</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'preferences':\n        return (\n          <div className=\"space-y-6\">\n            <div className=\"space-y-4\">\n              <Label>Preferred Creator Types (Optional)</Label>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                {creatorOptions.map((creator) => (\n                  <Button\n                    key={creator}\n                    type=\"button\"\n                    variant={formData.preferredCreators.includes(creator) ? \"default\" : \"outline\"}\n                    className=\"justify-start h-auto p-3 text-left\"\n                    onClick={() => {\n                      if (formData.preferredCreators.includes(creator)) {\n                        updateFormData('preferredCreators', formData.preferredCreators.filter(c => c !== creator));\n                      } else {\n                        updateFormData('preferredCreators', [...formData.preferredCreators, creator]);\n                      }\n                    }}\n                  >\n                    <span className=\"text-sm\">{creator}</span>\n                  </Button>\n                ))}\n              </div>\n            </div>\n            \n            <div className=\"space-y-4\">\n              <Label>Notification Preferences</Label>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                {notificationOptions.map((notification) => (\n                  <Button\n                    key={notification}\n                    type=\"button\"\n                    variant={formData.notificationPreferences.includes(notification) ? \"default\" : \"outline\"}\n                    className=\"justify-start h-auto p-3 text-left\"\n                    onClick={() => {\n                      if (formData.notificationPreferences.includes(notification)) {\n                        updateFormData('notificationPreferences', formData.notificationPreferences.filter(n => n !== notification));\n                      } else {\n                        updateFormData('notificationPreferences', [...formData.notificationPreferences, notification]);\n                      }\n                    }}\n                  >\n                    <span className=\"text-sm\">{notification}</span>\n                  </Button>\n                ))}\n              </div>\n            </div>\n            \n            <div className=\"space-y-2\">\n              <Label htmlFor=\"tradingHours\">Preferred Trading Hours</Label>\n              <Select value={formData.tradingHours} onValueChange={(value) => updateFormData('tradingHours', value)}>\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select your preferred trading hours\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"market-hours\">Market Hours Only</SelectItem>\n                  <SelectItem value=\"extended-hours\">Extended Hours</SelectItem>\n                  <SelectItem value=\"24-7\">24/7 (All Markets)</SelectItem>\n                  <SelectItem value=\"custom\">Custom Schedule</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n            \n            <div className=\"flex items-center space-x-2\">\n              <Button\n                type=\"button\"\n                variant={formData.autoTradingEnabled ? \"default\" : \"outline\"}\n                size=\"sm\"\n                onClick={() => updateFormData('autoTradingEnabled', !formData.autoTradingEnabled)}\n              >\n                {formData.autoTradingEnabled ? '✓' : ''} Enable automatic trading (recommended)\n              </Button>\n            </div>\n          </div>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center space-x-2\">\n            <Award className=\"w-6 h-6 text-purple-600\" />\n            <span>Complete Your KAIRO Setup</span>\n          </DialogTitle>\n          <DialogDescription>\n            Let&apos;s get you set up with a personalized trading experience in just a few steps.\n          </DialogDescription>\n        </DialogHeader>\n        \n        {/* Progress Bar */}\n        <div className=\"space-y-4\">\n          <div className=\"flex justify-between text-sm\">\n            <span className=\"font-medium\">Step {currentStep + 1} of {questionnaireSteps.length}</span>\n            <span className=\"text-gray-600\">\n              {currentStepData.estimatedTime} remaining\n            </span>\n          </div>\n          <Progress value={progressPercentage} className=\"h-2\" />\n          \n          {/* Step Indicators */}\n          <div className=\"flex justify-between\">\n            {questionnaireSteps.map((step, index) => (\n              <div key={step.id} className=\"flex flex-col items-center space-y-2\">\n                <div className={cn(\n                  \"w-10 h-10 rounded-full flex items-center justify-center transition-all duration-200\",\n                  index < currentStep ? \"bg-green-500 text-white\" :\n                  index === currentStep ? \"bg-purple-500 text-white\" :\n                  \"bg-gray-200 text-gray-500\"\n                )}>\n                  {index < currentStep ? (\n                    <CheckCircle className=\"w-5 h-5\" />\n                  ) : (\n                    step.icon\n                  )}\n                </div>\n                <span className={cn(\n                  \"text-xs text-center max-w-20\",\n                  index === currentStep ? \"font-medium text-purple-700\" : \"text-gray-500\"\n                )}>\n                  {step.title}\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n        \n        {/* Current Step Content */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              {currentStepData.icon}\n              <span>{currentStepData.title}</span>\n              {currentStepData.required && (\n                <Badge variant=\"outline\" className=\"text-xs\">\n                  Required\n                </Badge>\n              )}\n            </CardTitle>\n            <CardDescription>{currentStepData.description}</CardDescription>\n          </CardHeader>\n          <CardContent>\n            {renderStepContent()}\n          </CardContent>\n        </Card>\n        \n        {/* Navigation Buttons */}\n        <div className=\"flex justify-between pt-4\">\n          <Button\n            variant=\"outline\"\n            onClick={handlePrevious}\n            disabled={currentStep === 0}\n          >\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\n            Previous\n          </Button>\n          \n          <Button\n            onClick={handleNext}\n            disabled={isSubmitting}\n            className=\"min-w-32\"\n          >\n            {isSubmitting ? (\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n                <span>Setting up...</span>\n              </div>\n            ) : currentStep === questionnaireSteps.length - 1 ? (\n              <>\n                Complete Setup\n                <CheckCircle className=\"w-4 h-4 ml-2\" />\n              </>\n            ) : (\n              <>\n                Next\n                <ArrowRight className=\"w-4 h-4 ml-2\" />\n              </>\n            )}\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default OnboardingQuestionnaire;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3243, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/pricing/PricingPlans.tsx"],"sourcesContent":["'use client'\n\nimport React, { useState } from 'react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Switch } from '@/components/ui/switch'\nimport { Label } from '@/components/ui/label'\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog'\nimport { Progress } from '@/components/ui/progress'\nimport {\n  Check,\n  Star,\n  Zap,\n  Shield,\n  Users,\n  TrendingUp,\n  BarChart3,\n  Brain,\n  Bell,\n  Lock,\n  Smartphone,\n  Globe,\n  Award,\n  Crown,\n  Sparkles,\n  ArrowRight,\n  DollarSign,\n  Calendar,\n  Clock,\n  Target,\n  Activity,\n  Eye,\n  MessageSquare,\n  Settings,\n  Download,\n  Headphones,\n  Lightbulb,\n  TrendingDown,\n  AlertTriangle,\n  CheckCircle,\n  X,\n  Play,\n  ChevronRight,\n  BookOpen,\n  UserCheck,\n  CreditCard,\n  Rocket\n} from 'lucide-react'\nimport { cn } from '@/lib/utils'\nimport { usePricingWorkflow, type PricingRecommendation } from '@/services/pricingWorkflowService'\nimport { useOnboardingWorkflow, type OnboardingStep } from '@/services/onboardingWorkflowService'\nimport OnboardingQuestionnaire from '@/components/onboarding/OnboardingQuestionnaire'\nimport { alertService } from '@/services/alertService'\n\ninterface PricingTier {\n  id: string\n  name: string\n  description: string\n  price: {\n    monthly: number\n    annual: number\n  }\n  originalPrice?: {\n    monthly: number\n    annual: number\n  }\n  features: string[]\n  highlighted?: boolean\n  popular?: boolean\n  trialDays?: number\n  buttonText: string\n  buttonVariant: 'default' | 'outline' | 'secondary'\n  icon: React.ReactNode\n  color: string\n  benefits: {\n    title: string\n    description: string\n    icon: React.ReactNode\n  }[]\n}\n\nconst PricingPlans: React.FC = () => {\n  const [selectedPlan, setSelectedPlan] = useState<string | null>(null)\n  const [isAnnual, setIsAnnual] = useState(false)\n  const [hoveredPlan, setHoveredPlan] = useState<string | null>(null)\n  const [comparisonMode, setComparisonMode] = useState(false)\n  const [selectedPlans, setSelectedPlans] = useState<string[]>([])\n  const [showTooltip, setShowTooltip] = useState<string | null>(null)\n  const { recommendations, metrics } = usePricingWorkflow()\n  const [dismissedRecommendations, setDismissedRecommendations] = useState<string[]>([])\n  const [showOnboarding, setShowOnboarding] = useState(false)\n  const { steps: onboardingSteps, progress: onboardingProgress, completeStep } = useOnboardingWorkflow(selectedPlan || undefined)\n  \n  const handleOnboardingComplete = (formData: any) => {\n    console.log('Onboarding completed with data:', formData)\n    // Here you would typically save the data to your backend\n    // and redirect the user to their dashboard\n    setShowOnboarding(false)\n    // You could also trigger a success notification here\n  }\n\n  const pricingTiers: PricingTier[] = [\n    {\n      id: 'free-trial',\n      name: 'Free Trial',\n      description: 'Perfect for getting started',\n      price: { monthly: 0, annual: 0 },\n      features: [\n        'Basic Copy Trading',\n        'Up to 3 Creators',\n        'Basic Analytics',\n        'Email Support',\n        'Mobile App Access'\n      ],\n      trialDays: 14,\n      buttonText: 'Start Free Trial',\n      buttonVariant: 'outline',\n      icon: <Star className=\"w-6 h-6\" />,\n      color: 'blue',\n      benefits: [\n        {\n          title: 'Risk-Free Start',\n          description: 'Try all features without commitment',\n          icon: <Shield className=\"w-5 h-5\" />\n        }\n      ]\n    },\n    {\n      id: 'pro-monthly',\n      name: 'Pro',\n      description: 'Most popular for active traders',\n      price: { monthly: 49, annual: 490 },\n      originalPrice: { monthly: 59, annual: 590 },\n      features: [\n        'Unlimited Copy Trading',\n        'Follow 50+ Creators',\n        'Advanced Analytics',\n        'Priority Support',\n        'API Access',\n        'Custom Strategies',\n        'Risk Management Tools'\n      ],\n      highlighted: false,\n      popular: true,\n      buttonText: 'Get Pro',\n      buttonVariant: 'default',\n      icon: <Crown className=\"w-6 h-6\" />,\n      color: 'purple',\n      benefits: [\n        {\n          title: 'Advanced Trading',\n          description: 'Professional-grade tools and analytics',\n          icon: <TrendingUp className=\"w-5 h-5\" />\n        }\n      ]\n    },\n    {\n      id: 'pro-annual',\n      name: 'Pro Annual',\n      description: 'Best value for committed traders',\n      price: { monthly: 49, annual: 490 },\n      originalPrice: { monthly: 59, annual: 590 },\n      features: [\n        'Unlimited Copy Trading',\n        'Follow 50+ Creators',\n        'Advanced Analytics',\n        'Priority Support',\n        'API Access',\n        'Custom Strategies',\n        'Risk Management Tools',\n        '25% Annual Savings'\n      ],\n      highlighted: true,\n      buttonText: 'Get Pro Annual',\n      buttonVariant: 'default',\n      icon: <Crown className=\"w-6 h-6\" />,\n      color: 'purple',\n      benefits: [\n        {\n          title: 'Maximum Savings',\n          description: 'Best value with annual commitment',\n          icon: <TrendingUp className=\"w-5 h-5\" />\n        }\n      ]\n    },\n    {\n      id: 'enterprise',\n      name: 'Enterprise',\n      description: 'For institutions and large teams',\n      price: { monthly: 199, annual: 1990 },\n      originalPrice: { monthly: 249, annual: 2490 },\n      features: [\n        'Everything in Pro',\n        'White-label Solution',\n        'Dedicated Account Manager',\n        'Custom Integrations',\n        'Advanced Security',\n        'Team Management',\n        'Custom Reporting'\n      ],\n      buttonText: 'Contact Sales',\n      buttonVariant: 'secondary',\n      icon: <Award className=\"w-6 h-6\" />,\n      color: 'orange',\n      benefits: [\n        {\n          title: 'Enterprise Scale',\n          description: 'Built for large organizations',\n          icon: <Users className=\"w-5 h-5\" />\n        }\n      ]\n    }\n  ]\n\n  const handlePlanSelect = async (planId: string) => {\n    setSelectedPlan(planId)\n    setShowOnboarding(true)\n    console.log('Selected plan:', planId)\n    \n    // Automatically enable alerts for users who select a plan\n    try {\n      await alertService.enableAlerts();\n      console.log('Alerts automatically enabled for plan selection:', planId);\n    } catch (error) {\n      console.warn('Failed to auto-enable alerts for plan selection:', error);\n    }\n    \n    // In a real app, this would redirect to payment processing\n    // For demo purposes, we'll show the onboarding workflow\n  }\n\n  const getDisplayPrice = (tier: PricingTier) => {\n    const price = isAnnual ? tier.price.annual : tier.price.monthly\n    const period = isAnnual ? '/year' : '/month'\n    \n    if (tier.id === 'free-trial') {\n      return { price: 'Free', period: '14 days' }\n    }\n    \n    return {\n      price: `$${price}`,\n      period\n    }\n  }\n\n  const getSavings = (tier: PricingTier) => {\n    if (tier.originalPrice && isAnnual) {\n      const savings = tier.originalPrice.annual - tier.price.annual\n      return `Save $${savings.toFixed(2)}`\n    }\n    return null\n  }\n\n  const getAnnualSavingsPercentage = (tier: PricingTier) => {\n    if (tier.originalPrice && isAnnual) {\n      const monthlyTotal = tier.originalPrice.monthly * 12\n      const annualPrice = tier.price.annual\n      const savingsPercentage = ((monthlyTotal - annualPrice) / monthlyTotal) * 100\n      return Math.round(savingsPercentage)\n    }\n    return 0\n  }\n\n  const formatPrice = (price: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 2\n    }).format(price)\n  }\n\n  const getRealTimeSavings = () => {\n    if (!isAnnual) return 0\n    return pricingTiers.reduce((total, tier) => {\n      if (tier.originalPrice) {\n        const monthlyTotal = tier.originalPrice.monthly * 12\n        const savings = monthlyTotal - tier.price.annual\n        return total + savings\n      }\n      return total\n    }, 0)\n  }\n\n  const dismissRecommendation = (planId: string) => {\n    setDismissedRecommendations(prev => [...prev, planId])\n  }\n\n  const getRecommendationIcon = (urgency: string) => {\n    switch (urgency) {\n      case 'high': return <AlertTriangle className=\"w-5 h-5 text-red-500\" />\n      case 'medium': return <Lightbulb className=\"w-5 h-5 text-yellow-500\" />\n      default: return <CheckCircle className=\"w-5 h-5 text-blue-500\" />\n    }\n  }\n\n  const activeRecommendations = recommendations.filter(\n    rec => !dismissedRecommendations.includes(rec.planId)\n  )\n\n  const togglePlanComparison = (planId: string) => {\n    setSelectedPlans(prev => {\n      if (prev.includes(planId)) {\n        return prev.filter(id => id !== planId)\n      } else if (prev.length < 3) {\n        return [...prev, planId]\n      }\n      return prev\n    })\n  }\n\n  const getFeatureTooltip = (feature: string) => {\n    const tooltips: Record<string, string> = {\n      'Copy Trading': 'Automatically replicate trades from successful traders in real-time',\n      'Advanced Analytics': 'Comprehensive performance metrics, risk analysis, and portfolio insights',\n      'Priority Support': '24/7 dedicated support with faster response times',\n      'Custom Strategies': 'Create and backtest your own trading algorithms',\n      'API Access': 'Full REST and WebSocket API access for custom integrations',\n      'White-label Solution': 'Fully customizable platform with your branding',\n      'Dedicated Account Manager': 'Personal relationship manager for enterprise clients',\n      'Custom Integrations': 'Tailored integrations with your existing systems'\n    }\n    return tooltips[feature] || 'Learn more about this feature'\n  }\n\n  const clearComparison = () => {\n    setSelectedPlans([])\n    setComparisonMode(false)\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-white to-blue-50\">\n      <div className=\"max-w-7xl mx-auto px-4 py-16\">\n        {/* Enhanced Header */}\n        <div className=\"text-center mb-20\">\n          <div className=\"inline-flex items-center px-4 py-2 rounded-full bg-gradient-to-r from-purple-100 to-blue-100 text-purple-700 text-sm font-medium mb-6\">\n            <Sparkles className=\"w-4 h-4 mr-2\" />\n            Trusted by 10,000+ traders worldwide\n          </div>\n          <h1 className=\"text-4xl sm:text-5xl lg:text-7xl font-black mb-6 sm:mb-8 leading-tight px-4\">\n            <span className=\"bg-gradient-to-r from-purple-600 via-blue-600 to-cyan-600 bg-clip-text text-transparent\">\n              Choose Your\n            </span>\n            <br />\n            <span className=\"bg-gradient-to-r from-cyan-600 via-blue-600 to-purple-600 bg-clip-text text-transparent\">\n              Trading Plan\n            </span>\n          </h1>\n          <p className=\"text-lg sm:text-xl lg:text-2xl text-gray-600 max-w-4xl mx-auto leading-relaxed mb-6 sm:mb-8 px-4\">\n            Unlock the power of copy trading with our flexible pricing plans designed for every trader.\n            <span className=\"block mt-2 text-base sm:text-lg text-gray-500\">\n              Start your journey to financial freedom today.\n            </span>\n          </p>\n          <div className=\"flex flex-col sm:flex-row items-center justify-center gap-3 sm:gap-4 mb-6 sm:mb-8 px-4\">\n            <div className=\"flex items-center text-green-600 font-medium\">\n              <CheckCircle className=\"w-5 h-5 mr-2\" />\n              14-day free trial\n            </div>\n            <div className=\"flex items-center text-green-600 font-medium\">\n              <CheckCircle className=\"w-5 h-5 mr-2\" />\n              No credit card required\n            </div>\n            <div className=\"flex items-center text-green-600 font-medium\">\n              <CheckCircle className=\"w-5 h-5 mr-2\" />\n              Cancel anytime\n            </div>\n          </div>\n        </div>\n\n      {/* Enhanced Toggle */}\n      <div className=\"flex justify-center mb-12 lg:mb-16 px-4\">\n        <div className=\"flex items-center space-x-3 lg:space-x-6 bg-gradient-to-r from-gray-50 to-white rounded-2xl p-2 lg:p-3 shadow-lg border border-gray-200 w-full max-w-md\">\n          <Label htmlFor=\"billing-toggle\" className={cn(\n            \"px-3 lg:px-6 py-2 lg:py-3 rounded-xl transition-all duration-500 cursor-pointer font-semibold text-base lg:text-lg flex-1 text-center\",\n            \"hover:scale-105 transform\",\n            !isAnnual && \"bg-gradient-to-r from-blue-500 to-purple-600 shadow-lg text-white\",\n            isAnnual && \"text-gray-600 hover:text-gray-800 hover:bg-gray-100\"\n          )}>\n            Monthly\n          </Label>\n          <Switch\n            id=\"billing-toggle\"\n            checked={isAnnual}\n            onCheckedChange={setIsAnnual}\n            className=\"data-[state=checked]:bg-gradient-to-r data-[state=checked]:from-purple-600 data-[state=checked]:to-blue-600 scale-110 lg:scale-125 flex-shrink-0\"\n          />\n          <div className=\"flex-1\">\n            <Label htmlFor=\"billing-toggle\" className={cn(\n              \"px-3 lg:px-6 py-2 lg:py-3 rounded-xl transition-all duration-500 cursor-pointer flex flex-col items-center font-semibold text-base lg:text-lg w-full\",\n              \"hover:scale-105 transform\",\n              isAnnual && \"bg-gradient-to-r from-purple-600 to-blue-600 shadow-lg text-white\",\n              !isAnnual && \"text-gray-600 hover:text-gray-800 hover:bg-gray-100\"\n            )}>\n              <span>Annual</span>\n              <Badge className=\"mt-1 bg-gradient-to-r from-green-400 to-emerald-500 text-white text-xs lg:text-sm font-bold animate-bounce px-2 lg:px-3 py-1 shadow-md\">\n                Save 20%\n              </Badge>\n            </Label>\n          </div>\n        </div>\n      </div>\n\n      {/* Enhanced Real-time Savings Calculator */}\n      {isAnnual && getRealTimeSavings() > 0 && (\n        <div className=\"mb-8 lg:mb-12 px-4\">\n          <Card className=\"max-w-3xl mx-auto bg-gradient-to-br from-emerald-50 via-green-50 to-teal-50 border-0 shadow-xl relative overflow-hidden\">\n            <div className=\"absolute inset-0 bg-gradient-to-br from-emerald-400/10 via-green-400/10 to-teal-400/10\"></div>\n            <CardContent className=\"p-6 lg:p-8 text-center relative z-10\">\n              <div className=\"flex flex-col sm:flex-row items-center justify-center mb-4 lg:mb-6\">\n                <div className=\"p-2 lg:p-3 rounded-full bg-gradient-to-r from-emerald-500 to-green-600 shadow-lg mb-3 sm:mb-0\">\n                  <DollarSign className=\"w-6 h-6 lg:w-8 lg:h-8 text-white\" />\n                </div>\n                <h3 className=\"text-xl lg:text-2xl font-black text-gray-800 sm:ml-4 text-center sm:text-left\">Annual Savings Calculator</h3>\n              </div>\n              <div className=\"text-3xl lg:text-5xl font-black bg-gradient-to-r from-emerald-600 via-green-600 to-teal-600 bg-clip-text text-transparent mb-3 lg:mb-4\">\n                {formatPrice(getRealTimeSavings())}\n              </div>\n              <p className=\"text-gray-700 text-base lg:text-lg font-medium mb-4 lg:mb-6 px-2\">\n                Total savings when choosing annual billing across all plans\n              </p>\n              <div className=\"flex flex-col sm:flex-row justify-center space-y-2 sm:space-y-0 sm:space-x-4 lg:space-x-8 text-sm\">\n                <div className=\"flex items-center bg-white/60 px-3 lg:px-4 py-2 rounded-full shadow-md justify-center\">\n                  <TrendingUp className=\"w-4 lg:w-5 h-4 lg:h-5 mr-2 text-emerald-600\" />\n                  <span className=\"font-semibold text-gray-700\">Smart Investment</span>\n                </div>\n                <div className=\"flex items-center bg-white/60 px-3 lg:px-4 py-2 rounded-full shadow-md justify-center\">\n                  <Shield className=\"w-4 lg:w-5 h-4 lg:h-5 mr-2 text-emerald-600\" />\n                  <span className=\"font-semibold text-gray-700\">Price Lock Guarantee</span>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      )}\n\n      {/* Enhanced Workflow Recommendations */}\n      {activeRecommendations.length > 0 && (\n        <div className=\"mb-8 lg:mb-12 px-4\">\n          <div className=\"max-w-5xl mx-auto\">\n            <div className=\"text-center mb-6 lg:mb-8\">\n              <div className=\"flex flex-col sm:flex-row items-center justify-center mb-3 lg:mb-4\">\n                <div className=\"p-2 lg:p-3 rounded-full bg-gradient-to-r from-purple-500 to-blue-600 shadow-lg mb-3 sm:mb-0\">\n                  <Brain className=\"w-6 h-6 lg:w-8 lg:h-8 text-white\" />\n                </div>\n                <h3 className=\"text-2xl lg:text-3xl font-bold bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent sm:ml-4 text-center sm:text-left\">\n                  Smart Recommendations\n                </h3>\n              </div>\n              <p className=\"text-base lg:text-lg text-gray-600 max-w-2xl mx-auto px-4\">\n                AI-powered suggestions based on your trading activity and goals\n              </p>\n            </div>\n            <div className=\"grid gap-4 lg:gap-6\">\n              {activeRecommendations.slice(0, 2).map((rec, index) => (\n                <Card key={`${rec.planId}-${index}`} className={cn(\n                  \"border-0 transition-all duration-500 hover:shadow-2xl hover:-translate-y-1 relative overflow-hidden\",\n                  rec.urgency === 'high' && \"bg-gradient-to-br from-red-50 via-pink-50 to-orange-50 shadow-red-100\",\n                  rec.urgency === 'medium' && \"bg-gradient-to-br from-yellow-50 via-amber-50 to-orange-50 shadow-yellow-100\",\n                  rec.urgency === 'low' && \"bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 shadow-blue-100\"\n                )}>\n                  <div className=\"absolute inset-0 bg-gradient-to-br opacity-10\" style={{\n                    background: rec.urgency === 'high' ? 'linear-gradient(135deg, #ef4444, #f97316)' :\n                               rec.urgency === 'medium' ? 'linear-gradient(135deg, #eab308, #f59e0b)' :\n                               'linear-gradient(135deg, #3b82f6, #8b5cf6)'\n                  }}></div>\n                  <CardContent className=\"p-6 lg:p-8 relative z-10\">\n                    <div className=\"flex flex-col lg:flex-row items-start justify-between gap-4\">\n                      <div className=\"flex items-start space-x-3 lg:space-x-4 flex-1\">\n                        <div className=\"p-2 lg:p-3 rounded-full bg-white shadow-lg\">\n                          {getRecommendationIcon(rec.urgency)}\n                        </div>\n                        <div className=\"flex-1\">\n                          <h4 className=\"text-lg lg:text-xl font-bold text-gray-900 mb-2\">\n                            Recommended: {rec.planId === 'pro-annual' ? 'Pro Annual' : 'Pro Monthly'}\n                          </h4>\n                          <p className=\"text-sm lg:text-base text-gray-600 mb-3 leading-relaxed\">{rec.reason}</p>\n                          {rec.savings > 0 && (\n                            <Badge className=\"bg-gradient-to-r from-green-500 to-emerald-500 text-white mb-3 px-3 py-1 text-sm font-bold shadow-md\">\n                              💰 Save ${rec.savings} annually\n                            </Badge>\n                          )}\n                          <div className=\"flex flex-wrap gap-2\">\n                            {rec.benefits.slice(0, 3).map((benefit, idx) => (\n                              <Badge key={idx} variant=\"outline\" className=\"text-xs lg:text-sm bg-white/80 border-gray-300 hover:bg-white transition-colors\">\n                                ✨ {benefit}\n                              </Badge>\n                            ))}\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"flex flex-col sm:flex-row items-stretch sm:items-center space-y-2 sm:space-y-0 sm:space-x-3 w-full lg:w-auto\">\n                        <Button\n                          size=\"sm\"\n                          className=\"bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105 px-6 py-2 font-semibold\"\n                          onClick={() => handlePlanSelect(rec.planId)}\n                        >\n                          <Rocket className=\"w-4 h-4 mr-2\" />\n                          Upgrade Now\n                        </Button>\n                        <Button\n                          size=\"sm\"\n                          variant=\"ghost\"\n                          onClick={() => dismissRecommendation(rec.planId)}\n                          className=\"hover:bg-white/60 transition-colors\"\n                        >\n                          <X className=\"w-4 h-4\" />\n                        </Button>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Enhanced Usage Metrics Display */}\n      <div className=\"mb-8 lg:mb-12 px-4\">\n        <div className=\"max-w-5xl mx-auto\">\n          <Card className=\"bg-gradient-to-br from-slate-50 via-white to-blue-50 border-0 shadow-xl relative overflow-hidden\">\n            <div className=\"absolute inset-0 bg-gradient-to-br from-blue-400/5 via-purple-400/5 to-cyan-400/5\"></div>\n            <CardContent className=\"p-6 lg:p-8 relative z-10\">\n              <h3 className=\"text-xl lg:text-2xl font-black text-center mb-6 lg:mb-8 flex flex-col sm:flex-row items-center justify-center text-gray-800\">\n                <div className=\"p-2 rounded-full bg-gradient-to-r from-blue-500 to-purple-600 shadow-lg mb-2 sm:mb-0 sm:mr-3\">\n                  <Activity className=\"w-5 h-5 lg:w-6 lg:h-6 text-white\" />\n                </div>\n                Your Trading Activity\n              </h3>\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 lg:gap-6\">\n                <div className=\"text-center bg-white/60 rounded-2xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1\">\n                  <div className=\"text-4xl font-black bg-gradient-to-r from-blue-600 to-cyan-600 bg-clip-text text-transparent mb-2\">{metrics.copyTradesCount}</div>\n                  <div className=\"text-sm font-semibold text-gray-700\">Copy Trades</div>\n                </div>\n                <div className=\"text-center bg-white/60 rounded-2xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1\">\n                  <div className=\"text-4xl font-black bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent mb-2\">{metrics.creatorsFollowed}</div>\n                  <div className=\"text-sm font-semibold text-gray-700\">Creators Followed</div>\n                </div>\n                <div className=\"text-center bg-white/60 rounded-2xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1\">\n                  <div className=\"text-4xl font-black bg-gradient-to-r from-green-600 to-emerald-600 bg-clip-text text-transparent mb-2\">${metrics.portfolioValue.toLocaleString()}</div>\n                  <div className=\"text-sm font-semibold text-gray-700\">Portfolio Value</div>\n                </div>\n                <div className=\"text-center bg-white/60 rounded-2xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1\">\n                  <div className=\"text-4xl font-black bg-gradient-to-r from-orange-600 to-red-600 bg-clip-text text-transparent mb-2\">{metrics.performanceScore.toFixed(0)}%</div>\n                  <div className=\"text-sm font-semibold text-gray-700\">Performance Score</div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n\n      {/* Plan Comparison Toggle */}\n      <div className=\"flex justify-center mb-8\">\n        <Button\n          variant={comparisonMode ? \"default\" : \"outline\"}\n          onClick={() => setComparisonMode(!comparisonMode)}\n          className=\"flex items-center space-x-2\"\n        >\n          <Eye className=\"w-4 h-4\" />\n          <span>{comparisonMode ? 'Exit Comparison' : 'Compare Plans'}</span>\n          {selectedPlans.length > 0 && (\n            <Badge className=\"ml-2 bg-blue-100 text-blue-800\">\n              {selectedPlans.length}\n            </Badge>\n          )}\n        </Button>\n        {selectedPlans.length > 0 && (\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={clearComparison}\n            className=\"ml-2\"\n          >\n            Clear All\n          </Button>\n        )}\n      </div>\n\n      {/* Comparison Table */}\n      {comparisonMode && selectedPlans.length > 0 && (\n        <div className=\"mb-8\">\n          <Card className=\"max-w-6xl mx-auto\">\n            <CardHeader>\n              <CardTitle className=\"text-center flex items-center justify-center\">\n                <BarChart3 className=\"w-6 h-6 mr-2\" />\n                Plan Comparison\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full\">\n                  <thead>\n                    <tr className=\"border-b\">\n                      <th className=\"text-left p-4 font-semibold\">Features</th>\n                      {selectedPlans.map(planId => {\n                        const plan = pricingTiers.find(t => t.id === planId)\n                        return (\n                          <th key={planId} className=\"text-center p-4\">\n                            <div className=\"flex flex-col items-center\">\n                              <div className=\"text-lg font-bold\">{plan?.name}</div>\n                              <div className=\"text-sm text-gray-600\">\n                                {formatPrice(isAnnual ? plan?.price.annual || 0 : plan?.price.monthly || 0)}\n                                <span className=\"text-xs\">/{isAnnual ? 'year' : 'month'}</span>\n                              </div>\n                            </div>\n                          </th>\n                        )\n                      })}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {Array.from(new Set(\n                      selectedPlans.flatMap(planId => \n                        pricingTiers.find(t => t.id === planId)?.features || []\n                      )\n                    )).map(feature => (\n                      <tr key={feature} className=\"border-b hover:bg-gray-50\">\n                        <td className=\"p-4 font-medium\">\n                          <div \n                            className=\"flex items-center cursor-help\"\n                            onMouseEnter={() => setShowTooltip(feature)}\n                            onMouseLeave={() => setShowTooltip(null)}\n                          >\n                            {feature}\n                            <div className=\"ml-2 relative\">\n                              <div className=\"w-4 h-4 rounded-full bg-gray-200 flex items-center justify-center text-xs\">?</div>\n                              {showTooltip === feature && (\n                                <div className=\"absolute bottom-full left-0 mb-2 w-64 p-2 bg-black text-white text-xs rounded shadow-lg z-10\">\n                                  {getFeatureTooltip(feature)}\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        </td>\n                        {selectedPlans.map(planId => {\n                          const plan = pricingTiers.find(t => t.id === planId)\n                          const hasFeature = plan?.features.includes(feature)\n                          return (\n                            <td key={`${planId}-${feature}`} className=\"p-4 text-center\">\n                              {hasFeature ? (\n                                <CheckCircle className=\"w-5 h-5 text-green-500 mx-auto\" />\n                              ) : (\n                                <X className=\"w-5 h-5 text-gray-300 mx-auto\" />\n                              )}\n                            </td>\n                          )\n                        })}\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      )}\n\n      {/* Enhanced Pricing Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 lg:gap-8 xl:gap-12 mb-12 lg:mb-20 relative px-4\">\n        {pricingTiers.map((tier) => {\n          const displayPrice = getDisplayPrice(tier)\n          const savings = getSavings(tier)\n          const isSelected = selectedPlan === tier.id\n          const isHovered = hoveredPlan === tier.id\n          const isInComparison = selectedPlans.includes(tier.id)\n\n          return (\n            <Card\n              key={tier.id}\n              className={cn(\n                \"relative transition-all duration-500 cursor-pointer group overflow-hidden\",\n                \"bg-white/80 backdrop-blur-sm border-0 shadow-lg hover:shadow-2xl\",\n                \"hover:-translate-y-4 hover:scale-[1.02] transform-gpu\",\n                \"before:absolute before:inset-0 before:bg-gradient-to-br before:from-white/20 before:to-transparent before:opacity-0 hover:before:opacity-100 before:transition-opacity before:duration-500\",\n                tier.highlighted && \"ring-2 ring-purple-400 ring-offset-4 shadow-purple-200/50\",\n                tier.popular && \"ring-2 ring-blue-400 ring-offset-4 shadow-blue-200/50\",\n                isSelected && \"ring-2 ring-emerald-400 ring-offset-2 shadow-emerald-200/50\",\n                isInComparison && \"ring-2 ring-orange-400 ring-offset-2 shadow-orange-200/50\"\n              )}\n              onMouseEnter={() => setHoveredPlan(tier.id)}\n              onMouseLeave={() => setHoveredPlan(null)}\n            >\n              {tier.popular && (\n                <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2\">\n                  <Badge className=\"bg-gradient-to-r from-purple-600 to-pink-600 text-white px-4 py-1 text-sm font-semibold animate-pulse\">\n                    <Sparkles className=\"w-4 h-4 mr-1\" />\n                    Most Popular\n                  </Badge>\n                </div>\n              )}\n\n              {tier.highlighted && (\n                <div className=\"absolute -top-4 right-4\">\n                  <Badge className=\"bg-gradient-to-r from-orange-500 to-red-500 text-white px-3 py-1 text-xs font-semibold animate-bounce\">\n                    <Crown className=\"w-3 h-3 mr-1\" />\n                    Best Value\n                  </Badge>\n                </div>\n              )}\n\n              <CardHeader className=\"text-center pb-6 pt-8 relative z-10\">\n                <div className=\"flex justify-center mb-6\">\n                  <div className={cn(\n                    \"p-4 rounded-2xl transition-all duration-500 shadow-lg\",\n                    \"group-hover:shadow-xl group-hover:scale-110 group-hover:rotate-6\",\n                    tier.color === 'blue' && \"bg-gradient-to-br from-blue-100 to-blue-200 text-blue-600\",\n                    tier.color === 'purple' && \"bg-gradient-to-br from-purple-100 to-purple-200 text-purple-600\",\n                    tier.color === 'orange' && \"bg-gradient-to-br from-orange-100 to-orange-200 text-orange-600\"\n                  )}>\n                    {tier.icon}\n                  </div>\n                </div>\n                <CardTitle className=\"text-4xl font-black mb-4 text-gray-900 drop-shadow-sm\">{tier.name}</CardTitle>\n                <p className=\"text-gray-700 text-lg leading-relaxed px-2 font-medium\">{tier.description}</p>\n              </CardHeader>\n\n              <CardContent className=\"text-center px-8 pb-8 relative z-10\">\n                <div className=\"mb-8\">\n                  <div className=\"flex items-baseline justify-center mb-4\">\n                    <span className={cn(\n                      \"text-6xl font-black transition-all duration-500 relative\",\n                      \"group-hover:scale-105 drop-shadow-sm\",\n                      tier.id === 'free-trial' && \"text-blue-700\",\n                      tier.id === 'pro-monthly' && \"text-purple-700\",\n                      tier.id === 'pro-annual' && \"text-purple-700\",\n                      tier.id === 'enterprise' && \"text-orange-700\"\n                    )}>\n                      {displayPrice.price}\n                      {tier.originalPrice && isAnnual && (\n                        <div className=\"absolute -top-8 -right-4\">\n                          <Badge className=\"bg-gradient-to-r from-red-500 to-pink-500 text-white text-xs font-bold animate-pulse shadow-lg\">\n                            -{getAnnualSavingsPercentage(tier)}% OFF\n                          </Badge>\n                        </div>\n                      )}\n                    </span>\n                    <div className=\"text-gray-600 ml-3 text-2xl font-bold flex flex-col items-start\">\n                      <span>{displayPrice.period}</span>\n                      {tier.originalPrice && isAnnual && (\n                        <div className=\"mt-1 text-base text-gray-500 line-through font-medium\">\n                          ${(tier.originalPrice.monthly * 12).toFixed(2)}/year\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  \n                  {savings && (\n                    <Badge className=\"bg-gradient-to-r from-green-500 to-emerald-500 text-white text-sm font-semibold animate-pulse shadow-lg px-4 py-2\">\n                      <DollarSign className=\"w-4 h-4 mr-1\" />\n                      {savings}\n                    </Badge>\n                  )}\n                  \n                  {tier.trialDays && (\n                    <div className=\"mt-3\">\n                      <Badge variant=\"outline\" className=\"text-blue-600 border-blue-300 bg-blue-50 px-4 py-2 font-semibold\">\n                        <Clock className=\"w-4 h-4 mr-1\" />\n                        {tier.trialDays} days free\n                      </Badge>\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"space-y-5 mb-10\">\n                  {tier.features.map((feature, index) => (\n                    <div key={index} className=\"flex items-start text-lg group/feature\">\n                      <div className=\"flex-shrink-0 w-7 h-7 rounded-full bg-gradient-to-r from-green-400 to-emerald-500 flex items-center justify-center mr-4 mt-1\">\n                        <Check className=\"w-4 h-4 text-white font-bold\" />\n                      </div>\n                      <span className=\"text-gray-800 leading-relaxed font-medium group-hover/feature:text-gray-900 transition-colors duration-200\">{feature}</span>\n                    </div>\n                  ))}\n                </div>\n\n                <div className=\"space-y-4\">\n                  <Button\n                    className={cn(\n                      \"w-full py-5 text-xl font-bold transition-all duration-500 relative overflow-hidden\",\n                      \"hover:shadow-2xl transform hover:-translate-y-1 hover:scale-[1.02]\",\n                      \"before:absolute before:inset-0 before:bg-gradient-to-r before:from-white/20 before:to-transparent before:opacity-0 hover:before:opacity-100 before:transition-opacity before:duration-300\",\n                      tier.buttonVariant === 'default' && \"bg-gradient-to-r from-purple-600 via-blue-600 to-purple-600 hover:from-purple-700 hover:via-blue-700 hover:to-purple-700 text-white shadow-lg\",\n                      tier.buttonVariant === 'outline' && \"border-2 border-gray-400 hover:border-purple-500 hover:bg-purple-50 text-gray-800 hover:text-purple-700 font-bold\",\n                      tier.highlighted && \"ring-2 ring-purple-300 ring-offset-2 shadow-purple-200/50\"\n                    )}\n                    variant={tier.buttonVariant}\n                    onClick={() => {\n                      setSelectedPlan(tier.id)\n                      setShowOnboarding(true)\n                    }}\n                  >\n                    <span className=\"relative z-10 flex items-center justify-center\">\n                      {tier.buttonText}\n                      <ArrowRight className={cn(\n                        \"w-5 h-5 ml-2 transition-transform duration-300\",\n                        \"group-hover:translate-x-1\"\n                      )} />\n                    </span>\n                  </Button>\n                  \n                  {comparisonMode && (\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => togglePlanComparison(tier.id)}\n                      className={cn(\n                        \"w-full\",\n                        isInComparison && \"bg-green-50 border-green-500 text-green-700\"\n                      )}\n                    >\n                      {isInComparison ? 'Remove from Comparison' : 'Add to Comparison'}\n                    </Button>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          )\n       })}\n       </div>\n\n       {/* Onboarding Questionnaire Modal */}\n        <OnboardingQuestionnaire\n          isOpen={showOnboarding}\n          onClose={() => setShowOnboarding(false)}\n          selectedPlan={selectedPlan || undefined}\n          onComplete={handleOnboardingComplete}\n        />\n       </div>\n     </div>\n   )\n }\n\n export default PricingPlans"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5006, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/DemoModeIndicator.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\nimport { Badge } from '@/components/ui/badge'\nimport { AlertTriangle, Play } from 'lucide-react'\nimport { useTradingMode } from '@/contexts/TradingModeContext'\nimport { cn } from '@/lib/utils'\n\ninterface DemoModeIndicatorProps {\n  className?: string\n  variant?: 'badge' | 'banner'\n}\n\nexport function DemoModeIndicator({ className, variant = 'badge' }: DemoModeIndicatorProps) {\n  const { isPaperTrading, tradingMode } = useTradingMode()\n\n  if (!isPaperTrading) {\n    return null\n  }\n\n  if (variant === 'banner') {\n    return (\n      <div className={cn(\n        'bg-orange-100 dark:bg-orange-900/20 border border-orange-200 dark:border-orange-800 rounded-lg p-3 mb-4',\n        className\n      )}>\n        <div className=\"flex items-center gap-2\">\n          <Play className=\"h-4 w-4 text-orange-600 dark:text-orange-400\" />\n          <span className=\"text-sm font-medium text-orange-800 dark:text-orange-200\">\n            Demo Mode Active\n          </span>\n          <span className=\"text-xs text-orange-600 dark:text-orange-400\">\n            • All trades are simulated • No real money involved\n          </span>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <Badge \n      variant=\"outline\" \n      className={cn(\n        'bg-orange-50 dark:bg-orange-900/20 border-orange-200 dark:border-orange-800 text-orange-700 dark:text-orange-300 font-medium',\n        className\n      )}\n    >\n      <Play className=\"h-3 w-3 mr-1\" />\n      Demo Mode\n    </Badge>\n  )\n}\n\nexport default DemoModeIndicator"],"names":[],"mappings":";;;;;;;AAGA;AACA;AACA;AACA;;;AANA;;;;;AAaO,SAAS,kBAAkB,KAAwD;QAAxD,EAAE,SAAS,EAAE,UAAU,OAAO,EAA0B,GAAxD;;IAChC,MAAM,EAAE,cAAc,EAAE,WAAW,EAAE,GAAG,IAAA,2JAAc;IAEtD,IAAI,CAAC,gBAAgB;QACnB,OAAO;IACT;IAEA,IAAI,YAAY,UAAU;QACxB,qBACE,6LAAC;YAAI,WAAW,IAAA,4HAAE,EAChB,2GACA;sBAEA,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,6MAAI;wBAAC,WAAU;;;;;;kCAChB,6LAAC;wBAAK,WAAU;kCAA2D;;;;;;kCAG3E,6LAAC;wBAAK,WAAU;kCAA+C;;;;;;;;;;;;;;;;;IAMvE;IAEA,qBACE,6LAAC,6IAAK;QACJ,SAAQ;QACR,WAAW,IAAA,4HAAE,EACX,gIACA;;0BAGF,6LAAC,6MAAI;gBAAC,WAAU;;;;;;YAAiB;;;;;;;AAIvC;GAtCgB;;QAC0B,2JAAc;;;KADxC;uCAwCD","debugId":null}},
    {"offset": {"line": 5107, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/services/BalanceTrackingService.ts"],"sourcesContent":["'use client'\n\ninterface BalanceData {\n  totalBalance: number\n  availableBalance: number\n  investedAmount: number\n  pendingDeposits: number\n  pendingWithdrawals: number\n  lastUpdated: Date\n}\n\ninterface BalanceUpdateListener {\n  (balance: BalanceData): void\n}\n\nclass BalanceTrackingService {\n  private balance: BalanceData = {\n    totalBalance: 125000,\n    availableBalance: 45000,\n    investedAmount: 80000,\n    pendingDeposits: 0,\n    pendingWithdrawals: 0,\n    lastUpdated: new Date()\n  }\n\n  private listeners: Set<BalanceUpdateListener> = new Set()\n  private updateInterval: NodeJS.Timeout | null = null\n\n  constructor() {\n    // Start real-time updates\n    this.startRealTimeUpdates()\n  }\n\n  /**\n   * Subscribe to balance updates\n   */\n  subscribe(listener: BalanceUpdateListener): () => void {\n    this.listeners.add(listener)\n    \n    // Immediately send current balance\n    listener(this.balance)\n    \n    // Return unsubscribe function\n    return () => {\n      this.listeners.delete(listener)\n    }\n  }\n\n  /**\n   * Get current balance\n   */\n  getCurrentBalance(): BalanceData {\n    return { ...this.balance }\n  }\n\n  /**\n   * Update balance after deposit\n   */\n  async processDeposit(amount: number): Promise<void> {\n    // Add to pending deposits first\n    this.balance.pendingDeposits += amount\n    this.notifyListeners()\n\n    // Simulate processing time\n    await new Promise(resolve => setTimeout(resolve, 2000))\n\n    // Move from pending to available balance\n    this.balance.pendingDeposits -= amount\n    this.balance.availableBalance += amount\n    this.balance.totalBalance += amount\n    this.balance.lastUpdated = new Date()\n    \n    this.notifyListeners()\n  }\n\n  /**\n   * Update balance after withdrawal\n   */\n  async processWithdrawal(amount: number): Promise<void> {\n    // Check if sufficient funds\n    if (this.balance.availableBalance < amount) {\n      throw new Error('Insufficient funds for withdrawal')\n    }\n\n    // Add to pending withdrawals\n    this.balance.pendingWithdrawals += amount\n    this.balance.availableBalance -= amount\n    this.notifyListeners()\n\n    // Simulate processing time\n    await new Promise(resolve => setTimeout(resolve, 2000))\n\n    // Complete withdrawal\n    this.balance.pendingWithdrawals -= amount\n    this.balance.totalBalance -= amount\n    this.balance.lastUpdated = new Date()\n    \n    this.notifyListeners()\n  }\n\n  /**\n   * Update invested amount\n   */\n  updateInvestedAmount(amount: number): void {\n    const difference = amount - this.balance.investedAmount\n    \n    // Adjust available balance\n    this.balance.availableBalance -= difference\n    this.balance.investedAmount = amount\n    this.balance.lastUpdated = new Date()\n    \n    this.notifyListeners()\n  }\n\n  /**\n   * Add profit from trading\n   */\n  addTradingProfit(profit: number): void {\n    this.balance.availableBalance += profit\n    this.balance.totalBalance += profit\n    this.balance.lastUpdated = new Date()\n    \n    this.notifyListeners()\n  }\n\n  /**\n   * Start real-time balance updates (simulate market changes)\n   */\n  private startRealTimeUpdates(): void {\n    this.updateInterval = setInterval(() => {\n      // Simulate small market fluctuations in invested amount\n      const fluctuation = (Math.random() - 0.5) * 100 // ±$50\n      const newInvestedValue = Math.max(0, this.balance.investedAmount + fluctuation)\n      const difference = newInvestedValue - this.balance.investedAmount\n      \n      this.balance.investedAmount = newInvestedValue\n      this.balance.totalBalance += difference\n      this.balance.lastUpdated = new Date()\n      \n      this.notifyListeners()\n    }, 5000) // Update every 5 seconds\n  }\n\n  /**\n   * Stop real-time updates\n   */\n  stopRealTimeUpdates(): void {\n    if (this.updateInterval) {\n      clearInterval(this.updateInterval)\n      this.updateInterval = null\n    }\n  }\n\n  /**\n   * Notify all listeners of balance changes\n   */\n  private notifyListeners(): void {\n    const balanceCopy = { ...this.balance }\n    this.listeners.forEach(listener => {\n      try {\n        listener(balanceCopy)\n      } catch (error) {\n        console.error('Error in balance listener:', error)\n      }\n    })\n  }\n\n  /**\n   * Format currency for display\n   */\n  formatCurrency(amount: number): string {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(amount)\n  }\n\n  /**\n   * Get balance summary for display\n   */\n  getBalanceSummary(): {\n    total: string\n    available: string\n    invested: string\n    pending: string\n  } {\n    return {\n      total: this.formatCurrency(this.balance.totalBalance),\n      available: this.formatCurrency(this.balance.availableBalance),\n      invested: this.formatCurrency(this.balance.investedAmount),\n      pending: this.formatCurrency(this.balance.pendingDeposits + this.balance.pendingWithdrawals)\n    }\n  }\n}\n\n// Create singleton instance\nconst balanceTrackingService = new BalanceTrackingService()\n\nexport default balanceTrackingService\nexport type { BalanceData, BalanceUpdateListener }"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5267, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/services/AutomatedWorkflowService.ts"],"sourcesContent":["'use client';\n\nimport { toast } from 'react-hot-toast';\nimport balanceTrackingService from './BalanceTrackingService';\n\n// Types for the automated workflow\nexport interface WorkflowConfig {\n  autoDeposit: {\n    enabled: boolean;\n    amount: number;\n    frequency: 'daily' | 'weekly' | 'monthly';\n    source: 'bank' | 'card' | 'crypto';\n  };\n  autoInvest: {\n    enabled: boolean;\n    strategy: 'conservative' | 'moderate' | 'aggressive' | 'custom';\n    allocation: {\n      stocks: number;\n      crypto: number;\n      forex: number;\n      commodities: number;\n    };\n    minBalance: number;\n  };\n  autoWithdraw: {\n    enabled: boolean;\n    profitThreshold: number;\n    withdrawPercentage: number;\n    destination: 'bank' | 'card' | 'crypto';\n  };\n}\n\nexport interface WorkflowStatus {\n  isRunning: boolean;\n  lastExecution: Date | null;\n  nextExecution: Date | null;\n  totalDeposited: number;\n  totalInvested: number;\n  totalWithdrawn: number;\n  currentBalance: number;\n  totalProfit: number;\n}\n\nexport interface Transaction {\n  id: string;\n  type: 'deposit' | 'invest' | 'withdraw';\n  amount: number;\n  status: 'pending' | 'completed' | 'failed';\n  timestamp: Date;\n  description: string;\n}\n\nclass AutomatedWorkflowService {\n  private config: WorkflowConfig;\n  private status: WorkflowStatus;\n  private transactions: Transaction[];\n  private intervalId: NodeJS.Timeout | null = null;\n\n  constructor() {\n    // Load configuration from localStorage or use defaults\n    this.config = this.loadConfig();\n    this.status = this.loadStatus();\n    this.transactions = this.loadTransactions();\n    \n    // Start the workflow if enabled\n    if (this.isAnyWorkflowEnabled()) {\n      this.startWorkflow();\n    }\n  }\n\n  private loadConfig(): WorkflowConfig {\n    if (typeof window === 'undefined') {\n      return this.getDefaultConfig();\n    }\n    \n    const saved = localStorage.getItem('automatedWorkflowConfig');\n    return saved ? JSON.parse(saved) : this.getDefaultConfig();\n  }\n\n  private loadStatus(): WorkflowStatus {\n    if (typeof window === 'undefined') {\n      return this.getDefaultStatus();\n    }\n    \n    const saved = localStorage.getItem('automatedWorkflowStatus');\n    return saved ? JSON.parse(saved) : this.getDefaultStatus();\n  }\n\n  private loadTransactions(): Transaction[] {\n    if (typeof window === 'undefined') {\n      return [];\n    }\n    \n    const saved = localStorage.getItem('automatedWorkflowTransactions');\n    return saved ? JSON.parse(saved) : [];\n  }\n\n  private getDefaultConfig(): WorkflowConfig {\n    return {\n      autoDeposit: {\n        enabled: false,\n        amount: 100,\n        frequency: 'weekly',\n        source: 'bank'\n      },\n      autoInvest: {\n        enabled: false,\n        strategy: 'moderate',\n        allocation: {\n          stocks: 40,\n          crypto: 30,\n          forex: 20,\n          commodities: 10\n        },\n        minBalance: 50\n      },\n      autoWithdraw: {\n        enabled: false,\n        profitThreshold: 500,\n        withdrawPercentage: 50,\n        destination: 'bank'\n      }\n    };\n  }\n\n  private getDefaultStatus(): WorkflowStatus {\n    return {\n      isRunning: false,\n      lastExecution: null,\n      nextExecution: null,\n      totalDeposited: 0,\n      totalInvested: 0,\n      totalWithdrawn: 0,\n      currentBalance: 1250.75, // Mock current balance\n      totalProfit: 250.75 // Mock profit\n    };\n  }\n\n  private saveConfig(): void {\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('automatedWorkflowConfig', JSON.stringify(this.config));\n    }\n  }\n\n  private saveStatus(): void {\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('automatedWorkflowStatus', JSON.stringify(this.status));\n    }\n  }\n\n  private saveTransactions(): void {\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('automatedWorkflowTransactions', JSON.stringify(this.transactions));\n    }\n  }\n\n  private isAnyWorkflowEnabled(): boolean {\n    return this.config.autoDeposit.enabled || \n           this.config.autoInvest.enabled || \n           this.config.autoWithdraw.enabled;\n  }\n\n  public updateConfig(newConfig: Partial<WorkflowConfig>): void {\n    this.config = { ...this.config, ...newConfig };\n    this.saveConfig();\n    \n    // Restart workflow with new config\n    this.stopWorkflow();\n    if (this.isAnyWorkflowEnabled()) {\n      this.startWorkflow();\n    }\n    \n    toast.success('Automated workflow configuration updated');\n  }\n\n  public getConfig(): WorkflowConfig {\n    return { ...this.config };\n  }\n\n  public getStatus(): WorkflowStatus {\n    return { ...this.status };\n  }\n\n  public getTransactions(): Transaction[] {\n    return [...this.transactions];\n  }\n\n  public startWorkflow(): void {\n    if (this.intervalId) {\n      this.stopWorkflow();\n    }\n\n    this.status.isRunning = true;\n    this.status.nextExecution = this.calculateNextExecution();\n    this.saveStatus();\n\n    // Run workflow every minute (in production, this would be less frequent)\n    this.intervalId = setInterval(() => {\n      this.executeWorkflow();\n    }, 60000); // 1 minute\n\n    toast.success('Automated workflow started');\n  }\n\n  public stopWorkflow(): void {\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n      this.intervalId = null;\n    }\n\n    this.status.isRunning = false;\n    this.status.nextExecution = null;\n    this.saveStatus();\n\n    toast.success('Automated workflow stopped');\n  }\n\n  private calculateNextExecution(): Date {\n    const now = new Date();\n    const next = new Date(now);\n    \n    // For demo purposes, set next execution to 1 minute from now\n    next.setMinutes(next.getMinutes() + 1);\n    \n    return next;\n  }\n\n  private async executeWorkflow(): Promise<void> {\n    try {\n      this.status.lastExecution = new Date();\n      \n      // Execute auto deposit\n      if (this.config.autoDeposit.enabled) {\n        await this.executeAutoDeposit();\n      }\n\n      // Execute auto invest\n      if (this.config.autoInvest.enabled && this.status.currentBalance >= this.config.autoInvest.minBalance) {\n        await this.executeAutoInvest();\n      }\n\n      // Execute auto withdraw\n      if (this.config.autoWithdraw.enabled && this.status.totalProfit >= this.config.autoWithdraw.profitThreshold) {\n        await this.executeAutoWithdraw();\n      }\n\n      this.status.nextExecution = this.calculateNextExecution();\n      this.saveStatus();\n      \n    } catch (error) {\n      console.error('Workflow execution failed:', error);\n      toast.error('Automated workflow execution failed');\n    }\n  }\n\n  private async executeAutoDeposit(): Promise<void> {\n    const transaction: Transaction = {\n      id: `dep_${Date.now()}`,\n      type: 'deposit',\n      amount: this.config.autoDeposit.amount,\n      status: 'pending',\n      timestamp: new Date(),\n      description: `Auto deposit from ${this.config.autoDeposit.source}`\n    };\n\n    this.transactions.unshift(transaction);\n    this.saveTransactions();\n\n    // Simulate deposit processing\n    setTimeout(() => {\n      transaction.status = 'completed';\n      this.status.totalDeposited += transaction.amount;\n      this.status.currentBalance += transaction.amount;\n      this.saveStatus();\n      this.saveTransactions();\n      \n      toast.success(`Auto deposit of $${transaction.amount} completed`);\n    }, 2000);\n  }\n\n  private async executeAutoInvest(): Promise<void> {\n    const investAmount = Math.min(\n      this.status.currentBalance - this.config.autoInvest.minBalance,\n      this.status.currentBalance * 0.8 // Invest max 80% of available balance\n    );\n\n    if (investAmount <= 0) return;\n\n    const transaction: Transaction = {\n      id: `inv_${Date.now()}`,\n      type: 'invest',\n      amount: investAmount,\n      status: 'pending',\n      timestamp: new Date(),\n      description: `Auto investment using ${this.config.autoInvest.strategy} strategy`\n    };\n\n    this.transactions.unshift(transaction);\n    this.saveTransactions();\n\n    // Simulate investment processing\n    setTimeout(() => {\n      transaction.status = 'completed';\n      this.status.totalInvested += transaction.amount;\n      this.status.currentBalance -= transaction.amount;\n      \n      // Simulate profit generation (random between 1-5%)\n      const profitRate = (Math.random() * 4 + 1) / 100;\n      const profit = transaction.amount * profitRate;\n      this.status.totalProfit += profit;\n      this.status.currentBalance += profit;\n      \n      this.saveStatus();\n      this.saveTransactions();\n      \n      toast.success(`Auto investment of $${transaction.amount.toFixed(2)} completed`);\n    }, 3000);\n  }\n\n  private async executeAutoWithdraw(): Promise<void> {\n    const withdrawAmount = (this.status.totalProfit * this.config.autoWithdraw.withdrawPercentage) / 100;\n\n    if (withdrawAmount <= 0) return;\n\n    const transaction: Transaction = {\n      id: `wit_${Date.now()}`,\n      type: 'withdraw',\n      amount: withdrawAmount,\n      status: 'pending',\n      timestamp: new Date(),\n      description: `Auto withdrawal to ${this.config.autoWithdraw.destination}`\n    };\n\n    this.transactions.unshift(transaction);\n    this.saveTransactions();\n\n    // Simulate withdrawal processing\n    setTimeout(() => {\n      transaction.status = 'completed';\n      this.status.totalWithdrawn += transaction.amount;\n      this.status.currentBalance -= transaction.amount;\n      this.status.totalProfit -= transaction.amount;\n      this.saveStatus();\n      this.saveTransactions();\n      \n      toast.success(`Auto withdrawal of $${transaction.amount.toFixed(2)} completed`);\n    }, 4000);\n  }\n\n  public async manualDeposit(amount: number, source: string): Promise<void> {\n    try {\n      const transaction: Transaction = {\n        id: `man_dep_${Date.now()}`,\n        type: 'deposit',\n        amount,\n        status: 'pending',\n        timestamp: new Date(),\n        description: `Manual deposit from ${source}`\n      };\n\n      this.transactions.unshift(transaction);\n      this.saveTransactions();\n\n      // Process deposit with balance tracking\n      await balanceTrackingService.processDeposit(amount);\n      \n      transaction.status = 'completed';\n      this.status.totalDeposited += amount;\n      this.status.currentBalance += amount;\n      this.saveStatus();\n      this.saveTransactions();\n      \n      toast.success(`Deposit of $${amount} completed`);\n    } catch (error) {\n      toast.error('Deposit failed. Please try again.');\n      throw error;\n    }\n  }\n\n  public async manualWithdraw(amount: number, destination: string): Promise<void> {\n    try {\n      if (amount > this.status.currentBalance) {\n        toast.error('Insufficient balance for withdrawal');\n        throw new Error('Insufficient balance');\n      }\n\n      const transaction: Transaction = {\n        id: `man_wit_${Date.now()}`,\n        type: 'withdraw',\n        amount,\n        status: 'pending',\n        timestamp: new Date(),\n        description: `Manual withdrawal to ${destination}`\n      };\n\n      this.transactions.unshift(transaction);\n      this.saveTransactions();\n\n      // Process withdrawal with balance tracking\n      await balanceTrackingService.processWithdrawal(amount);\n      \n      transaction.status = 'completed';\n      this.status.totalWithdrawn += amount;\n      this.status.currentBalance -= amount;\n      this.saveStatus();\n      this.saveTransactions();\n      \n      toast.success(`Withdrawal of $${amount} completed`);\n    } catch (error) {\n      toast.error('Withdrawal failed. Please try again.');\n      throw error;\n    }\n  }\n}\n\n// Export singleton instance\nexport const automatedWorkflowService = new AutomatedWorkflowService();\nexport default automatedWorkflowService;"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAHA;;;;AAoDA,MAAM;IAkBI,aAA6B;QACnC;;QAIA,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,OAAO,QAAQ,KAAK,KAAK,CAAC,SAAS,IAAI,CAAC,gBAAgB;IAC1D;IAEQ,aAA6B;QACnC;;QAIA,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,OAAO,QAAQ,KAAK,KAAK,CAAC,SAAS,IAAI,CAAC,gBAAgB;IAC1D;IAEQ,mBAAkC;QACxC;;QAIA,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,OAAO,QAAQ,KAAK,KAAK,CAAC,SAAS,EAAE;IACvC;IAEQ,mBAAmC;QACzC,OAAO;YACL,aAAa;gBACX,SAAS;gBACT,QAAQ;gBACR,WAAW;gBACX,QAAQ;YACV;YACA,YAAY;gBACV,SAAS;gBACT,UAAU;gBACV,YAAY;oBACV,QAAQ;oBACR,QAAQ;oBACR,OAAO;oBACP,aAAa;gBACf;gBACA,YAAY;YACd;YACA,cAAc;gBACZ,SAAS;gBACT,iBAAiB;gBACjB,oBAAoB;gBACpB,aAAa;YACf;QACF;IACF;IAEQ,mBAAmC;QACzC,OAAO;YACL,WAAW;YACX,eAAe;YACf,eAAe;YACf,gBAAgB;YAChB,eAAe;YACf,gBAAgB;YAChB,gBAAgB;YAChB,aAAa,OAAO,cAAc;QACpC;IACF;IAEQ,aAAmB;QACzB,wCAAmC;YACjC,aAAa,OAAO,CAAC,2BAA2B,KAAK,SAAS,CAAC,IAAI,CAAC,MAAM;QAC5E;IACF;IAEQ,aAAmB;QACzB,wCAAmC;YACjC,aAAa,OAAO,CAAC,2BAA2B,KAAK,SAAS,CAAC,IAAI,CAAC,MAAM;QAC5E;IACF;IAEQ,mBAAyB;QAC/B,wCAAmC;YACjC,aAAa,OAAO,CAAC,iCAAiC,KAAK,SAAS,CAAC,IAAI,CAAC,YAAY;QACxF;IACF;IAEQ,uBAAgC;QACtC,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,IAC/B,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,IAC9B,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO;IACzC;IAEO,aAAa,SAAkC,EAAQ;QAC5D,IAAI,CAAC,MAAM,GAAG;YAAE,GAAG,IAAI,CAAC,MAAM;YAAE,GAAG,SAAS;QAAC;QAC7C,IAAI,CAAC,UAAU;QAEf,mCAAmC;QACnC,IAAI,CAAC,YAAY;QACjB,IAAI,IAAI,CAAC,oBAAoB,IAAI;YAC/B,IAAI,CAAC,aAAa;QACpB;QAEA,mKAAK,CAAC,OAAO,CAAC;IAChB;IAEO,YAA4B;QACjC,OAAO;YAAE,GAAG,IAAI,CAAC,MAAM;QAAC;IAC1B;IAEO,YAA4B;QACjC,OAAO;YAAE,GAAG,IAAI,CAAC,MAAM;QAAC;IAC1B;IAEO,kBAAiC;QACtC,OAAO;eAAI,IAAI,CAAC,YAAY;SAAC;IAC/B;IAEO,gBAAsB;QAC3B,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,YAAY;QACnB;QAEA,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG;QACxB,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC,sBAAsB;QACvD,IAAI,CAAC,UAAU;QAEf,yEAAyE;QACzE,IAAI,CAAC,UAAU,GAAG,YAAY;YAC5B,IAAI,CAAC,eAAe;QACtB,GAAG,QAAQ,WAAW;QAEtB,mKAAK,CAAC,OAAO,CAAC;IAChB;IAEO,eAAqB;QAC1B,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,cAAc,IAAI,CAAC,UAAU;YAC7B,IAAI,CAAC,UAAU,GAAG;QACpB;QAEA,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG;QACxB,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG;QAC5B,IAAI,CAAC,UAAU;QAEf,mKAAK,CAAC,OAAO,CAAC;IAChB;IAEQ,yBAA+B;QACrC,MAAM,MAAM,IAAI;QAChB,MAAM,OAAO,IAAI,KAAK;QAEtB,6DAA6D;QAC7D,KAAK,UAAU,CAAC,KAAK,UAAU,KAAK;QAEpC,OAAO;IACT;IAEA,MAAc,kBAAiC;QAC7C,IAAI;YACF,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,IAAI;YAEhC,uBAAuB;YACvB,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE;gBACnC,MAAM,IAAI,CAAC,kBAAkB;YAC/B;YAEA,sBAAsB;YACtB,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,EAAE;gBACrG,MAAM,IAAI,CAAC,iBAAiB;YAC9B;YAEA,wBAAwB;YACxB,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,eAAe,EAAE;gBAC3G,MAAM,IAAI,CAAC,mBAAmB;YAChC;YAEA,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC,sBAAsB;YACvD,IAAI,CAAC,UAAU;QAEjB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA8B;YAC5C,mKAAK,CAAC,KAAK,CAAC;QACd;IACF;IAEA,MAAc,qBAAoC;QAChD,MAAM,cAA2B;YAC/B,IAAI,AAAC,OAAiB,OAAX,KAAK,GAAG;YACnB,MAAM;YACN,QAAQ,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM;YACtC,QAAQ;YACR,WAAW,IAAI;YACf,aAAa,AAAC,qBAAmD,OAA/B,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM;QAClE;QAEA,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;QAC1B,IAAI,CAAC,gBAAgB;QAErB,8BAA8B;QAC9B,WAAW;YACT,YAAY,MAAM,GAAG;YACrB,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,YAAY,MAAM;YAChD,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,YAAY,MAAM;YAChD,IAAI,CAAC,UAAU;YACf,IAAI,CAAC,gBAAgB;YAErB,mKAAK,CAAC,OAAO,CAAC,AAAC,oBAAsC,OAAnB,YAAY,MAAM,EAAC;QACvD,GAAG;IACL;IAEA,MAAc,oBAAmC;QAC/C,MAAM,eAAe,KAAK,GAAG,CAC3B,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,EAC9D,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,IAAI,sCAAsC;;QAGzE,IAAI,gBAAgB,GAAG;QAEvB,MAAM,cAA2B;YAC/B,IAAI,AAAC,OAAiB,OAAX,KAAK,GAAG;YACnB,MAAM;YACN,QAAQ;YACR,QAAQ;YACR,WAAW,IAAI;YACf,aAAa,AAAC,yBAAwD,OAAhC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAC;QACxE;QAEA,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;QAC1B,IAAI,CAAC,gBAAgB;QAErB,iCAAiC;QACjC,WAAW;YACT,YAAY,MAAM,GAAG;YACrB,IAAI,CAAC,MAAM,CAAC,aAAa,IAAI,YAAY,MAAM;YAC/C,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,YAAY,MAAM;YAEhD,mDAAmD;YACnD,MAAM,aAAa,CAAC,KAAK,MAAM,KAAK,IAAI,CAAC,IAAI;YAC7C,MAAM,SAAS,YAAY,MAAM,GAAG;YACpC,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI;YAC3B,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI;YAE9B,IAAI,CAAC,UAAU;YACf,IAAI,CAAC,gBAAgB;YAErB,mKAAK,CAAC,OAAO,CAAC,AAAC,uBAAoD,OAA9B,YAAY,MAAM,CAAC,OAAO,CAAC,IAAG;QACrE,GAAG;IACL;IAEA,MAAc,sBAAqC;QACjD,MAAM,iBAAiB,AAAC,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,kBAAkB,GAAI;QAEjG,IAAI,kBAAkB,GAAG;QAEzB,MAAM,cAA2B;YAC/B,IAAI,AAAC,OAAiB,OAAX,KAAK,GAAG;YACnB,MAAM;YACN,QAAQ;YACR,QAAQ;YACR,WAAW,IAAI;YACf,aAAa,AAAC,sBAA0D,OAArC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,WAAW;QACzE;QAEA,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;QAC1B,IAAI,CAAC,gBAAgB;QAErB,iCAAiC;QACjC,WAAW;YACT,YAAY,MAAM,GAAG;YACrB,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,YAAY,MAAM;YAChD,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,YAAY,MAAM;YAChD,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,YAAY,MAAM;YAC7C,IAAI,CAAC,UAAU;YACf,IAAI,CAAC,gBAAgB;YAErB,mKAAK,CAAC,OAAO,CAAC,AAAC,uBAAoD,OAA9B,YAAY,MAAM,CAAC,OAAO,CAAC,IAAG;QACrE,GAAG;IACL;IAEA,MAAa,cAAc,MAAc,EAAE,MAAc,EAAiB;QACxE,IAAI;YACF,MAAM,cAA2B;gBAC/B,IAAI,AAAC,WAAqB,OAAX,KAAK,GAAG;gBACvB,MAAM;gBACN;gBACA,QAAQ;gBACR,WAAW,IAAI;gBACf,aAAa,AAAC,uBAA6B,OAAP;YACtC;YAEA,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;YAC1B,IAAI,CAAC,gBAAgB;YAErB,wCAAwC;YACxC,MAAM,uJAAsB,CAAC,cAAc,CAAC;YAE5C,YAAY,MAAM,GAAG;YACrB,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI;YAC9B,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI;YAC9B,IAAI,CAAC,UAAU;YACf,IAAI,CAAC,gBAAgB;YAErB,mKAAK,CAAC,OAAO,CAAC,AAAC,eAAqB,OAAP,QAAO;QACtC,EAAE,OAAO,OAAO;YACd,mKAAK,CAAC,KAAK,CAAC;YACZ,MAAM;QACR;IACF;IAEA,MAAa,eAAe,MAAc,EAAE,WAAmB,EAAiB;QAC9E,IAAI;YACF,IAAI,SAAS,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;gBACvC,mKAAK,CAAC,KAAK,CAAC;gBACZ,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,cAA2B;gBAC/B,IAAI,AAAC,WAAqB,OAAX,KAAK,GAAG;gBACvB,MAAM;gBACN;gBACA,QAAQ;gBACR,WAAW,IAAI;gBACf,aAAa,AAAC,wBAAmC,OAAZ;YACvC;YAEA,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC;YAC1B,IAAI,CAAC,gBAAgB;YAErB,2CAA2C;YAC3C,MAAM,uJAAsB,CAAC,iBAAiB,CAAC;YAE/C,YAAY,MAAM,GAAG;YACrB,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI;YAC9B,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI;YAC9B,IAAI,CAAC,UAAU;YACf,IAAI,CAAC,gBAAgB;YAErB,mKAAK,CAAC,OAAO,CAAC,AAAC,kBAAwB,OAAP,QAAO;QACzC,EAAE,OAAO,OAAO;YACd,mKAAK,CAAC,KAAK,CAAC;YACZ,MAAM;QACR;IACF;IAlWA,aAAc;QALd,+KAAQ,UAAR,KAAA;QACA,+KAAQ,UAAR,KAAA;QACA,+KAAQ,gBAAR,KAAA;QACA,+KAAQ,cAAoC;QAG1C,uDAAuD;QACvD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU;QAC7B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU;QAC7B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB;QAEzC,gCAAgC;QAChC,IAAI,IAAI,CAAC,oBAAoB,IAAI;YAC/B,IAAI,CAAC,aAAa;QACpB;IACF;AAyVF;AAGO,MAAM,2BAA2B,IAAI;uCAC7B","debugId":null}},
    {"offset": {"line": 5588, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/modals/DepositWithdrawModal.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { X, CreditCard, Banknote, Smartphone, ArrowUpRight, ArrowDownLeft, DollarSign, Clock, Shield, CheckCircle } from 'lucide-react';\nimport automatedWorkflowService from '@/services/AutomatedWorkflowService';\n\ninterface DepositWithdrawModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  mode: 'deposit' | 'withdraw';\n  currentBalance?: number;\n  onSuccess?: (amount: number, method: string) => void;\n}\n\ninterface PaymentMethod {\n  id: string;\n  name: string;\n  icon: React.ReactNode;\n  description: string;\n  processingTime: string;\n  fees: string;\n  minAmount: number;\n  maxAmount: number;\n}\n\nconst DepositWithdrawModal: React.FC<DepositWithdrawModalProps> = ({\n  isOpen,\n  onClose,\n  mode,\n  currentBalance = 0,\n  onSuccess\n}) => {\n  const [selectedMethod, setSelectedMethod] = useState<string>('');\n  const [amount, setAmount] = useState<string>('');\n  const [step, setStep] = useState<'method' | 'amount' | 'confirmation' | 'processing' | 'success'>('method');\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const depositMethods: PaymentMethod[] = [\n    {\n      id: 'bank-transfer',\n      name: 'Bank Transfer',\n      icon: <Banknote className=\"h-6 w-6\" />,\n      description: 'Direct transfer from your bank account',\n      processingTime: '1-3 business days',\n      fees: 'Free',\n      minAmount: 10,\n      maxAmount: 50000\n    },\n    {\n      id: 'debit-card',\n      name: 'Debit Card',\n      icon: <CreditCard className=\"h-6 w-6\" />,\n      description: 'Instant deposit with your debit card',\n      processingTime: 'Instant',\n      fees: '2.9% + $0.30',\n      minAmount: 1,\n      maxAmount: 10000\n    },\n    {\n      id: 'mobile-payment',\n      name: 'Mobile Payment',\n      icon: <Smartphone className=\"h-6 w-6\" />,\n      description: 'Apple Pay, Google Pay, Samsung Pay',\n      processingTime: 'Instant',\n      fees: '2.9% + $0.30',\n      minAmount: 1,\n      maxAmount: 5000\n    }\n  ];\n\n  const withdrawMethods: PaymentMethod[] = [\n    {\n      id: 'bank-transfer',\n      name: 'Bank Transfer',\n      icon: <Banknote className=\"h-6 w-6\" />,\n      description: 'Transfer to your linked bank account',\n      processingTime: '1-3 business days',\n      fees: 'Free',\n      minAmount: 10,\n      maxAmount: currentBalance\n    },\n    {\n      id: 'instant-withdrawal',\n      name: 'Instant Withdrawal',\n      icon: <CreditCard className=\"h-6 w-6\" />,\n      description: 'Instant transfer to your debit card',\n      processingTime: 'Instant',\n      fees: '1.5%',\n      minAmount: 1,\n      maxAmount: Math.min(currentBalance, 25000)\n    }\n  ];\n\n  const methods = mode === 'deposit' ? depositMethods : withdrawMethods;\n  const selectedMethodData = methods.find(m => m.id === selectedMethod);\n\n  const handleMethodSelect = (methodId: string) => {\n    setSelectedMethod(methodId);\n    setStep('amount');\n  };\n\n  const handleAmountSubmit = () => {\n    if (!amount || parseFloat(amount) < (selectedMethodData?.minAmount || 0)) return;\n    setStep('confirmation');\n  };\n\n  const handleConfirm = async () => {\n    setStep('processing');\n    setIsProcessing(true);\n    \n    try {\n      const amountValue = parseFloat(amount);\n      const methodName = selectedMethodData?.name || '';\n      \n      if (mode === 'deposit') {\n        await automatedWorkflowService.manualDeposit(amountValue, methodName);\n      } else {\n        await automatedWorkflowService.manualWithdraw(amountValue, methodName);\n      }\n      \n      setIsProcessing(false);\n      setStep('success');\n      onSuccess?.(amountValue, methodName);\n    } catch (error) {\n      setIsProcessing(false);\n      // Handle error - could add error step or show error message\n      console.error('Transaction failed:', error);\n    }\n  };\n\n  const resetModal = () => {\n    setSelectedMethod('');\n    setAmount('');\n    setStep('method');\n    setIsProcessing(false);\n  };\n\n  const handleClose = () => {\n    resetModal();\n    onClose();\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-2xl w-full max-w-md max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex items-center gap-3\">\n            {mode === 'deposit' ? (\n              <ArrowUpRight className=\"h-6 w-6 text-green-600\" />\n            ) : (\n              <ArrowDownLeft className=\"h-6 w-6 text-blue-600\" />\n            )}\n            <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n              {mode === 'deposit' ? 'Deposit Funds' : 'Withdraw Funds'}\n            </h2>\n          </div>\n          <button\n            onClick={handleClose}\n            className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\n          >\n            <X className=\"h-5 w-5 text-gray-500\" />\n          </button>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6\">\n          {step === 'method' && (\n            <div className=\"space-y-4\">\n              <div className=\"text-center mb-6\">\n                <p className=\"text-gray-600 dark:text-gray-400\">\n                  {mode === 'deposit' \n                    ? 'Choose how you\\'d like to add funds to your account'\n                    : `Available balance: $${currentBalance.toFixed(2)}`\n                  }\n                </p>\n              </div>\n              \n              <div className=\"space-y-3\">\n                {methods.map((method) => (\n                  <button\n                    key={method.id}\n                    onClick={() => handleMethodSelect(method.id)}\n                    className=\"w-full p-4 border border-gray-200 dark:border-gray-700 rounded-lg hover:border-blue-500 dark:hover:border-blue-400 transition-colors text-left\"\n                  >\n                    <div className=\"flex items-start gap-3\">\n                      <div className=\"text-blue-600 dark:text-blue-400 mt-1\">\n                        {method.icon}\n                      </div>\n                      <div className=\"flex-1\">\n                        <h3 className=\"font-medium text-gray-900 dark:text-white\">\n                          {method.name}\n                        </h3>\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n                          {method.description}\n                        </p>\n                        <div className=\"flex items-center gap-4 mt-2 text-xs text-gray-500 dark:text-gray-400\">\n                          <span className=\"flex items-center gap-1\">\n                            <Clock className=\"h-3 w-3\" />\n                            {method.processingTime}\n                          </span>\n                          <span>Fee: {method.fees}</span>\n                        </div>\n                      </div>\n                    </div>\n                  </button>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {step === 'amount' && selectedMethodData && (\n            <div className=\"space-y-6\">\n              <button\n                onClick={() => setStep('method')}\n                className=\"text-blue-600 dark:text-blue-400 text-sm hover:underline\"\n              >\n                ← Back to payment methods\n              </button>\n              \n              <div className=\"text-center\">\n                <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n                  {selectedMethodData.name}\n                </h3>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                  {selectedMethodData.description}\n                </p>\n              </div>\n\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Amount\n                  </label>\n                  <div className=\"relative\">\n                    <DollarSign className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                    <input\n                      type=\"number\"\n                      value={amount}\n                      onChange={(e) => setAmount(e.target.value)}\n                      placeholder=\"0.00\"\n                      min={selectedMethodData.minAmount}\n                      max={selectedMethodData.maxAmount}\n                      className=\"w-full pl-10 pr-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                    />\n                  </div>\n                  <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                    Min: ${selectedMethodData.minAmount} • Max: ${selectedMethodData.maxAmount.toLocaleString()}\n                  </p>\n                </div>\n\n                <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\n                  <div className=\"flex justify-between text-sm\">\n                    <span className=\"text-gray-600 dark:text-gray-400\">Processing time:</span>\n                    <span className=\"text-gray-900 dark:text-white\">{selectedMethodData.processingTime}</span>\n                  </div>\n                  <div className=\"flex justify-between text-sm mt-1\">\n                    <span className=\"text-gray-600 dark:text-gray-400\">Fee:</span>\n                    <span className=\"text-gray-900 dark:text-white\">{selectedMethodData.fees}</span>\n                  </div>\n                </div>\n\n                <button\n                  onClick={handleAmountSubmit}\n                  disabled={!amount || parseFloat(amount) < selectedMethodData.minAmount || parseFloat(amount) > selectedMethodData.maxAmount}\n                  className=\"w-full py-3 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed text-white font-medium rounded-lg transition-colors\"\n                >\n                  Continue\n                </button>\n              </div>\n            </div>\n          )}\n\n          {step === 'confirmation' && selectedMethodData && (\n            <div className=\"space-y-6\">\n              <button\n                onClick={() => setStep('amount')}\n                className=\"text-blue-600 dark:text-blue-400 text-sm hover:underline\"\n              >\n                ← Back to amount\n              </button>\n              \n              <div className=\"text-center\">\n                <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n                  Confirm {mode === 'deposit' ? 'Deposit' : 'Withdrawal'}\n                </h3>\n              </div>\n\n              <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-6 space-y-4\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600 dark:text-gray-400\">Amount:</span>\n                  <span className=\"font-semibold text-gray-900 dark:text-white\">${parseFloat(amount).toFixed(2)}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600 dark:text-gray-400\">Method:</span>\n                  <span className=\"text-gray-900 dark:text-white\">{selectedMethodData.name}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600 dark:text-gray-400\">Processing time:</span>\n                  <span className=\"text-gray-900 dark:text-white\">{selectedMethodData.processingTime}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600 dark:text-gray-400\">Fee:</span>\n                  <span className=\"text-gray-900 dark:text-white\">{selectedMethodData.fees}</span>\n                </div>\n              </div>\n\n              <div className=\"flex items-start gap-3 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n                <Shield className=\"h-5 w-5 text-blue-600 dark:text-blue-400 mt-0.5\" />\n                <div className=\"text-sm\">\n                  <p className=\"text-blue-800 dark:text-blue-200 font-medium\">\n                    Secure Transaction\n                  </p>\n                  <p className=\"text-blue-700 dark:text-blue-300 mt-1\">\n                    Your transaction is protected by bank-level encryption and security measures.\n                  </p>\n                </div>\n              </div>\n\n              <button\n                onClick={handleConfirm}\n                className=\"w-full py-3 bg-green-600 hover:bg-green-700 text-white font-medium rounded-lg transition-colors\"\n              >\n                Confirm {mode === 'deposit' ? 'Deposit' : 'Withdrawal'}\n              </button>\n            </div>\n          )}\n\n          {step === 'processing' && (\n            <div className=\"text-center py-8\">\n              <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n              <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n                Processing {mode === 'deposit' ? 'Deposit' : 'Withdrawal'}\n              </h3>\n              <p className=\"text-gray-600 dark:text-gray-400\">\n                Please wait while we process your transaction...\n              </p>\n            </div>\n          )}\n\n          {step === 'success' && (\n            <div className=\"text-center py-8\">\n              <CheckCircle className=\"h-16 w-16 text-green-600 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n                {mode === 'deposit' ? 'Deposit' : 'Withdrawal'} Successful!\n              </h3>\n              <p className=\"text-gray-600 dark:text-gray-400 mb-6\">\n                ${parseFloat(amount).toFixed(2)} has been {mode === 'deposit' ? 'added to' : 'withdrawn from'} your account.\n              </p>\n              <button\n                onClick={handleClose}\n                className=\"px-6 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors\"\n              >\n                Done\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DepositWithdrawModal;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6417, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/Navigation.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter, usePathname } from 'next/navigation';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { useTheme } from '@/contexts/ThemeContext';\nimport { useTradingMode } from '@/contexts/TradingModeContext';\nimport DemoModeIndicator from '@/components/ui/DemoModeIndicator';\nimport { toast } from 'react-hot-toast';\nimport {\n  Menu,\n  X,\n  Home,\n  TrendingUp,\n  BarChart3,\n  Users,\n  Copy,\n  Bell,\n  Settings,\n  LogOut,\n  Sun,\n  Moon,\n  User,\n  ChevronDown,\n  Search,\n  Wallet,\n  Activity,\n  Shield,\n  HelpCircle,\n  Zap,\n  Radio,\n  CreditCard,\n  Crown,\n  Award,\n  Bot,\n  Link,\n  ArrowUpRight,\n  ArrowDownLeft,\n  Plus\n} from 'lucide-react';\nimport DepositWithdrawModal from '@/components/modals/DepositWithdrawModal';\n\ninterface NavigationItem {\n  name: string;\n  href: string;\n  icon: any;\n  badge?: number;\n  description?: string;\n}\n\n// All navigation items (available in user profile)\nconst allNavigationItems: NavigationItem[] = [\n  {\n    name: 'Dashboard',\n    href: '/dashboard',\n    icon: Home,\n    description: 'Overview and portfolio summary'\n  },\n  {\n    name: 'User Dashboard',\n    href: '/user-dashboard',\n    icon: User,\n    description: 'Personal account and subscription management'\n  },\n  {\n    name: 'Trading',\n    href: '/trading',\n    icon: TrendingUp,\n    description: 'Execute trades and view market data'\n  },\n  {\n    name: 'Live Trading',\n    href: '/trading/live',\n    icon: Radio,\n    description: 'Real-time trading dashboard'\n  },\n  {\n    name: 'Trading Panel',\n    href: '/trading/panel',\n    icon: TrendingUp,\n    description: 'Advanced trading interface with live market data'\n  },\n  {\n    name: 'Futures Trading',\n    href: '/trading/futures',\n    icon: TrendingUp,\n    description: 'Futures contracts trading'\n  },\n  {\n    name: 'Options Trading',\n    href: '/trading/options',\n    icon: BarChart3,\n    description: 'Options contracts trading'\n  },\n  {\n    name: 'Market Updates',\n    href: '/trading/market-updates',\n    icon: Bell,\n    description: 'Real-time market news and updates'\n  },\n  {\n    name: 'Pine Editor',\n    href: '/trading/pine-editor',\n    icon: Settings,\n    description: 'Pine Script editor for custom indicators'\n  },\n  {\n    name: 'Profit Targets',\n    href: '/trading/profit-targets',\n    icon: Award,\n    description: 'Set and manage profit targets'\n  },\n  {\n    name: 'Portfolio',\n    href: '/portfolio',\n    icon: BarChart3,\n    description: 'Manage your investments'\n  },\n  {\n    name: 'Copy Trade',\n    href: '/copy-trade',\n    icon: Copy,\n    description: 'Follow and copy successful traders'\n  },\n  {\n    name: 'Creators',\n    href: '/creators',\n    icon: Award,\n    description: 'Discover top trading creators and investors'\n  },\n  {\n    name: 'Social',\n    href: '/social',\n    icon: Users,\n    badge: 3,\n    description: 'Connect with the trading community'\n  },\n  {\n    name: 'Pricing',\n    href: '/pricing',\n    icon: Crown,\n    description: 'View subscription plans and pricing'\n  },\n  {\n    name: 'Payment',\n    href: '/payment',\n    icon: CreditCard,\n    description: 'Manage payment methods and billing'\n  },\n  {\n    name: 'Security',\n    href: '/security',\n    icon: Shield,\n    description: 'Security settings and compliance'\n  },\n  {\n    name: 'Automation',\n    href: '/automation',\n    icon: Bot,\n    description: 'Automated trading and system management'\n  },\n  {\n    name: 'Trading Bot',\n    href: '/automation/trading-bot',\n    icon: Bot,\n    description: 'Configure and manage trading bots'\n  },\n  {\n    name: 'Copy Trading Auto',\n    href: '/automation/copy-trading',\n    icon: Copy,\n    description: 'Automated copy trading settings'\n  },\n  {\n    name: 'Risk Management',\n    href: '/automation/risk-management',\n    icon: Shield,\n    description: 'Automated risk management rules'\n  },\n  {\n    name: 'Data Pipeline',\n    href: '/automation/data-pipeline',\n    icon: Activity,\n    description: 'Automated data processing and analysis'\n  },\n  {\n    name: 'Auto Notifications',\n    href: '/automation/notifications',\n    icon: Bell,\n    description: 'Automated notification settings'\n  },\n  {\n    name: 'Auto Payments',\n    href: '/automation/payments',\n    icon: CreditCard,\n    description: 'Automated payment processing'\n  },\n  {\n    name: 'Auto Reporting',\n    href: '/automation/reporting',\n    icon: BarChart3,\n    description: 'Automated report generation'\n  },\n  {\n    name: 'Auto Onboarding',\n    href: '/automation/onboarding',\n    icon: User,\n    description: 'Automated user onboarding process'\n  },\n  {\n    name: 'Brokers',\n    href: '/brokers',\n    icon: Link,\n    description: 'Connect and manage broker accounts'\n  },\n  {\n    name: 'Demo',\n    href: '/demo',\n    icon: Activity,\n    description: 'Practice trading with demo account'\n  },\n  {\n    name: 'Settings',\n    href: '/settings',\n    icon: Settings,\n    description: 'Application settings and preferences'\n  },\n  {\n    name: 'Profile',\n    href: '/profile',\n    icon: User,\n    description: 'Manage your profile and account details'\n  },\n  {\n    name: 'Help',\n    href: '/help',\n    icon: HelpCircle,\n    description: 'Get help and support'\n  }\n];\n\n// Items to hide from main navigation but keep in profile\nconst hiddenFromMainNav = ['Dashboard', 'User Dashboard', 'Trading', 'Live Trading', 'Futures Trading'];\n\n// Filtered navigation items for main navigation (excludes specified items)\nconst navigationItems = allNavigationItems.filter(item => !hiddenFromMainNav.includes(item.name));\n\nexport default function Navigation() {\n  const { user, logout } = useAuth();\n  const { theme, setTheme } = useTheme();\n  const { isPaperTrading } = useTradingMode();\n  const router = useRouter();\n  const pathname = usePathname();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [isProfileMenuOpen, setIsProfileMenuOpen] = useState(false);\n  const [mounted, setMounted] = useState(false);\n  const [focusedItemIndex, setFocusedItemIndex] = useState(-1);\n  const [isDepositWithdrawModalOpen, setIsDepositWithdrawModalOpen] = useState(false);\n  const [depositWithdrawMode, setDepositWithdrawMode] = useState<'deposit' | 'withdraw'>('deposit');\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  const handleLogout = async () => {\n    try {\n      await logout();\n      router.push('/login');\n      toast.success('Logged out successfully');\n    } catch (error) {\n      toast.error('Failed to logout. Please try again.');\n    }\n  };\n\n  const toggleTheme = () => {\n    setTheme(theme === 'dark' ? 'light' : 'dark');\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent, action: () => void) => {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      action();\n    }\n  };\n\n  const handleNavigationKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === 'ArrowDown') {\n      event.preventDefault();\n      setFocusedItemIndex(prev => (prev + 1) % allNavigationItems.length);\n    } else if (event.key === 'ArrowUp') {\n      event.preventDefault();\n      setFocusedItemIndex(prev => prev <= 0 ? allNavigationItems.length - 1 : prev - 1);\n    } else if (event.key === 'Enter' && focusedItemIndex >= 0) {\n      event.preventDefault();\n      router.push(allNavigationItems[focusedItemIndex].href);\n    } else if (event.key === 'Escape') {\n      setIsProfileMenuOpen(false);\n      setIsMobileMenuOpen(false);\n    }\n  };\n\n  const isActive = (href: string) => {\n    return pathname === href;\n  };\n\n  if (!mounted) {\n    return null;\n  }\n\n  return (\n    <>\n      {/* Desktop Top Navigation Bar */}\n      <div className=\"hidden lg:block lg:fixed lg:top-0 lg:left-64 lg:right-0 lg:h-16 lg:bg-white lg:dark:bg-gray-800 lg:border-b lg:border-gray-200 lg:dark:border-gray-700 lg:shadow-sm lg:z-40\">\n        <div className=\"flex items-center justify-between h-full px-6\">\n          <div className=\"flex items-center space-x-6\">\n            <div className=\"relative\">\n              <button\n                onClick={() => setIsProfileMenuOpen(!isProfileMenuOpen)}\n                className=\"flex items-center space-x-2 px-3 py-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\"\n                aria-expanded={isProfileMenuOpen}\n                aria-haspopup=\"menu\"\n                aria-label=\"Quick navigation menu\"\n              >\n                <Menu className=\"h-4 w-4 text-gray-500 dark:text-gray-400\" />\n                <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Quick Menu</span>\n                <ChevronDown className={`h-4 w-4 text-gray-400 transition-transform ${\n                  isProfileMenuOpen ? 'rotate-180' : ''\n                }`} />\n              </button>\n              \n              {/* Quick Access Dropdown */}\n              {isProfileMenuOpen && (\n                <div className=\"absolute top-full left-0 mt-2 w-64 bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 py-2 max-h-96 overflow-y-auto z-50\">\n                  <div className=\"px-2 py-2\">\n                    <p className=\"px-2 py-1 text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Quick Access</p>\n                    {navigationItems.slice(0, 8).map((item) => {\n                      const active = isActive(item.href);\n                      return (\n                        <button\n                          key={item.href}\n                          onClick={() => {\n                            router.push(item.href);\n                            setIsProfileMenuOpen(false);\n                          }}\n                          className={`w-full flex items-center space-x-3 px-3 py-2 mb-1 rounded-lg transition-all duration-200 group text-sm ${\n                            active\n                              ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-sm'\n                              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 hover:text-gray-900 dark:hover:text-white'\n                          }`}\n                          title={item.description}\n                        >\n                          <item.icon className={`h-4 w-4 transition-colors ${\n                            active ? 'text-white' : 'text-gray-500 dark:text-gray-400 group-hover:text-gray-700 dark:group-hover:text-gray-300'\n                          }`} aria-hidden=\"true\" />\n                          <span className=\"flex-1 text-left\">{item.name}</span>\n                        </button>\n                      );\n                    })}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n          \n          <div className=\"flex items-center space-x-4\">\n            <button\n              onClick={toggleTheme}\n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n              aria-label={`Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`}\n            >\n              {theme === 'dark' ? <Sun className=\"h-4 w-4\" /> : <Moon className=\"h-4 w-4\" />}\n            </button>\n            <button className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors relative\">\n              <Bell className=\"h-4 w-4\" />\n              <span className=\"absolute -top-1 -right-1 h-2 w-2 bg-red-500 rounded-full\"></span>\n            </button>\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"h-8 w-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full flex items-center justify-center\">\n                <span className=\"text-white font-semibold text-xs\">\n                  {user ? `${user.firstName?.[0] || ''}${user.lastName?.[0] || ''}` || 'U' : 'U'}\n                </span>\n              </div>\n              <div className=\"text-left\">\n                <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                  {user ? `${user.firstName || ''} ${user.lastName || ''}`.trim() || 'User' : 'User'}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Desktop Navigation */}\n      <nav className=\"hidden lg:flex lg:flex-col lg:w-64 lg:fixed lg:inset-y-0 lg:border-r lg:border-gray-200 lg:dark:border-gray-700 lg:bg-white lg:dark:bg-gray-800 lg:shadow-sm\">\n        {/* Logo */}\n        <div className=\"flex items-center justify-center h-16 px-6 border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex flex-col items-center space-y-1\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"h-8 w-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center\">\n                <Zap className=\"h-5 w-5 text-white\" />\n              </div>\n              <span className=\"text-xl font-bold text-gray-900 dark:text-white\">KAIRO</span>\n            </div>\n            {isPaperTrading && <DemoModeIndicator className=\"text-xs\" />}\n          </div>\n        </div>\n\n        {/* Simplified Navigation - Only Logo Area */}\n        <div className=\"flex-1 flex items-center justify-center px-4 py-6\">\n          <div className=\"text-center text-gray-500 dark:text-gray-400\">\n            <p className=\"text-sm\">Navigation Menu</p>\n            <p className=\"text-xs mt-1\">Available in Profile</p>\n          </div>\n        </div>\n\n        {/* User Profile Section */}\n        <div className=\"border-t border-gray-200 dark:border-gray-700 p-4\">\n          <div className=\"relative\">\n            <button\n              onClick={() => setIsProfileMenuOpen(!isProfileMenuOpen)}\n              className=\"w-full flex items-center space-x-3 p-3 rounded-xl hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\"\n              aria-expanded={isProfileMenuOpen}\n              aria-haspopup=\"menu\"\n              aria-label=\"User profile menu\"\n            >\n              <div className=\"h-10 w-10 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full flex items-center justify-center\">\n                <span className=\"text-white font-semibold text-sm\">\n                  {user ? `${user.firstName?.[0] || ''}${user.lastName?.[0] || ''}` || 'U' : 'U'}\n                </span>\n              </div>\n              <div className=\"flex-1 text-left\">\n                <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                  {user ? `${user.firstName || ''} ${user.lastName || ''}`.trim() || 'User' : 'User'}\n                </p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  {user?.email || 'user@example.com'}\n                </p>\n              </div>\n              <ChevronDown className={`h-4 w-4 text-gray-400 transition-transform ${\n                isProfileMenuOpen ? 'rotate-180' : ''\n              }`} />\n            </button>\n\n            {/* Profile Dropdown with Navigation Menu */}\n            {isProfileMenuOpen && (\n              <div \n                className=\"absolute bottom-full left-0 right-0 mb-2 bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 py-2 max-h-96 overflow-y-auto\"\n                role=\"menu\"\n                aria-label=\"User profile and navigation menu\"\n              >\n                {/* Navigation Items */}\n                <div className=\"px-2 py-2\">\n                    <p className=\"px-2 py-1 text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Navigation</p>\n                    <div onKeyDown={handleNavigationKeyDown}>\n                      {allNavigationItems.map((item, index) => {\n                      const active = isActive(item.href);\n                      const isFocused = focusedItemIndex === index;\n                      const isPortfolio = item.name === 'Portfolio';\n                      \n                      return (\n                        <div key={item.href} className=\"mb-1\">\n                          <button\n                            onClick={() => {\n                              router.push(item.href);\n                              setIsProfileMenuOpen(false);\n                            }}\n                            onKeyDown={(e) => handleKeyDown(e, () => {\n                              router.push(item.href);\n                              setIsProfileMenuOpen(false);\n                            })}\n                            className={`w-full flex items-center space-x-3 px-3 py-2 rounded-lg transition-all duration-200 group text-sm ${\n                              active\n                                ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-sm'\n                                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 hover:text-gray-900 dark:hover:text-white'\n                            } ${\n                              isFocused ? 'ring-2 ring-blue-500 ring-offset-2 dark:ring-offset-gray-800' : ''\n                            }`}\n                            aria-current={active ? 'page' : undefined}\n                            title={item.description}\n                          >\n                            <item.icon className={`h-4 w-4 transition-colors ${\n                              active ? 'text-white' : 'text-gray-500 dark:text-gray-400 group-hover:text-gray-700 dark:group-hover:text-gray-300'\n                            }`} aria-hidden=\"true\" />\n                            <span className=\"flex-1 text-left\">{item.name}</span>\n                            {item.badge && (\n                              <span className={`ml-2 inline-flex items-center justify-center px-1.5 py-0.5 text-xs font-bold rounded-full ${\n                                active \n                                  ? 'bg-white/20 text-white' \n                                  : 'bg-blue-100 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400'\n                              }`} aria-label={`${item.badge} notifications`}>\n                                {item.badge}\n                              </span>\n                            )}\n                          </button>\n                          \n                          {/* Quick Action Buttons for Portfolio */}\n                          {isPortfolio && (\n                            <div className=\"flex space-x-1 mt-1 px-3\">\n                              <button\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  setDepositWithdrawMode('deposit');\n                                  setIsDepositWithdrawModalOpen(true);\n                                  setIsProfileMenuOpen(false);\n                                }}\n                                className=\"flex-1 flex items-center justify-center space-x-1 px-2 py-1 text-xs bg-green-100 dark:bg-green-900/20 text-green-700 dark:text-green-400 rounded-md hover:bg-green-200 dark:hover:bg-green-900/30 transition-colors\"\n                                title=\"Quick Deposit\"\n                              >\n                                <ArrowUpRight className=\"h-3 w-3\" />\n                                <span>Deposit</span>\n                              </button>\n                              <button\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  setDepositWithdrawMode('withdraw');\n                                  setIsDepositWithdrawModalOpen(true);\n                                  setIsProfileMenuOpen(false);\n                                }}\n                                className=\"flex-1 flex items-center justify-center space-x-1 px-2 py-1 text-xs bg-blue-100 dark:bg-blue-900/20 text-blue-700 dark:text-blue-400 rounded-md hover:bg-blue-200 dark:hover:bg-blue-900/30 transition-colors\"\n                                title=\"Quick Withdraw\"\n                              >\n                                <ArrowDownLeft className=\"h-3 w-3\" />\n                                <span>Withdraw</span>\n                              </button>\n                            </div>\n                          )}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n                \n                {/* Profile Actions */}\n                <div className=\"border-t border-gray-200 dark:border-gray-700 mt-2 pt-2\">\n                  <p className=\"px-4 py-1 text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Account</p>\n                  <button\n                    onClick={() => {\n                      router.push('/profile');\n                      setIsProfileMenuOpen(false);\n                    }}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                    role=\"menuitem\"\n                    aria-label=\"Go to profile page\"\n                  >\n                    <User className=\"h-4 w-4\" aria-hidden=\"true\" />\n                    <span>Profile</span>\n                  </button>\n                  <button\n                    onClick={() => {\n                      router.push('/settings');\n                      setIsProfileMenuOpen(false);\n                    }}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                  >\n                    <Settings className=\"h-4 w-4\" />\n                    <span>Settings</span>\n                  </button>\n                  <button\n                    onClick={toggleTheme}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                  >\n                    {theme === 'dark' ? <Sun className=\"h-4 w-4\" /> : <Moon className=\"h-4 w-4\" />}\n                    <span>{theme === 'dark' ? 'Light Mode' : 'Dark Mode'}</span>\n                  </button>\n                  <div className=\"border-t border-gray-200 dark:border-gray-700 my-2\"></div>\n                  <button\n                    onClick={handleLogout}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20\"\n                  >\n                    <LogOut className=\"h-4 w-4\" />\n                    <span>Sign Out</span>\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </nav>\n\n      {/* Mobile Navigation */}\n      <div className=\"lg:hidden\">\n        {/* Mobile Header */}\n        <div className=\"flex items-center justify-between h-16 px-4 bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 shadow-sm\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"h-8 w-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center\" role=\"img\" aria-label=\"KAIRO logo\">\n                <Zap className=\"h-5 w-5 text-white\" aria-hidden=\"true\" />\n              </div>\n              <span className=\"text-xl font-bold text-gray-900 dark:text-white\">KAIRO</span>\n            </div>\n            {isPaperTrading && <DemoModeIndicator className=\"text-xs\" />}\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={toggleTheme}\n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n              aria-label={`Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`}\n              title={`Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`}\n            >\n              {theme === 'dark' ? <Sun className=\"h-5 w-5\" aria-hidden=\"true\" /> : <Moon className=\"h-5 w-5\" aria-hidden=\"true\" />}\n            </button>\n            <button \n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors relative\"\n              aria-label=\"Notifications\"\n              title=\"View notifications\"\n            >\n              <Bell className=\"h-5 w-5\" />\n              <span className=\"absolute -top-1 -right-1 h-3 w-3 bg-red-500 rounded-full\"></span>\n            </button>\n            <button\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n              aria-label=\"Open navigation menu\"\n              title=\"Open navigation menu\"\n            >\n              <Menu className=\"h-5 w-5\" aria-hidden=\"true\" />\n            </button>\n          </div>\n        </div>\n\n        {/* Mobile Menu Overlay */}\n        {isMobileMenuOpen && (\n          <div className=\"fixed inset-0 z-50 lg:hidden\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"mobile-menu-title\">\n            <div className=\"fixed inset-0 bg-black bg-opacity-25\" onClick={() => setIsMobileMenuOpen(false)} aria-hidden=\"true\"></div>\n            <div className=\"fixed top-0 right-0 bottom-0 w-full max-w-sm bg-white dark:bg-gray-800 shadow-xl\">\n              {/* Mobile Menu Header */}\n              <div className=\"flex items-center justify-between h-16 px-4 border-b border-gray-200 dark:border-gray-700\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"h-10 w-10 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full flex items-center justify-center\">\n                    <span className=\"text-white font-semibold text-sm\">\n                      {user ? `${user.firstName?.[0] || ''}${user.lastName?.[0] || ''}` || 'U' : 'U'}\n                    </span>\n                  </div>\n                  <div>\n                    <h2 id=\"mobile-menu-title\" className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      {user ? `${user.firstName || ''} ${user.lastName || ''}`.trim() || 'User' : 'User'}\n                    </h2>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      {user?.email || 'user@example.com'}\n                    </p>\n                  </div>\n                </div>\n                <button\n                  onClick={() => setIsMobileMenuOpen(false)}\n                  className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 rounded-lg\"\n                  aria-label=\"Close navigation menu\"\n                  title=\"Close navigation menu\"\n                >\n                  <X className=\"h-6 w-6\" aria-hidden=\"true\" />\n                </button>\n              </div>\n\n              {/* Mobile Navigation Items */}\n              <div className=\"px-4 py-6 space-y-2\" onKeyDown={handleNavigationKeyDown} role=\"navigation\" aria-label=\"Mobile navigation menu\">\n                {allNavigationItems.map((item, index) => {\n                  const Icon = item.icon;\n                  const active = isActive(item.href);\n                  const isFocused = focusedItemIndex === index;\n                  \n                  return (\n                    <button\n                      key={item.name}\n                      onClick={() => {\n                        router.push(item.href);\n                        setIsMobileMenuOpen(false);\n                      }}\n                      onKeyDown={(e) => handleKeyDown(e, () => {\n                        router.push(item.href);\n                        setIsMobileMenuOpen(false);\n                      })}\n                      className={`w-full group flex items-center px-4 py-3 text-sm font-medium rounded-xl transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 ${\n                        active\n                          ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-lg'\n                          : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n                      } ${\n                        isFocused ? 'ring-2 ring-blue-500 ring-offset-2 dark:ring-offset-gray-800' : ''\n                      }`}\n                      aria-current={active ? 'page' : undefined}\n                      aria-describedby={item.description ? `${item.href}-mobile-desc` : undefined}\n                      title={item.description}\n                    >\n                      <Icon className={`mr-3 h-5 w-5 ${\n                        active ? 'text-white' : 'text-gray-400'\n                      }`} aria-hidden=\"true\" />\n                      <div className=\"flex-1 text-left\">\n                        <div className=\"font-medium\">{item.name}</div>\n                        {item.description && (\n                          <div className={`text-xs mt-1 ${\n                            active ? 'text-white/80' : 'text-gray-500 dark:text-gray-400'\n                          }`} id={`${item.href}-mobile-desc`}>\n                            {item.description}\n                          </div>\n                        )}\n                      </div>\n                      {item.badge && (\n                        <span className={`ml-2 inline-flex items-center justify-center px-2 py-1 text-xs font-bold rounded-full ${\n                          active \n                            ? 'bg-white/20 text-white' \n                            : 'bg-blue-100 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400'\n                        }`} aria-label={`${item.badge} notifications`}>\n                          {item.badge}\n                        </span>\n                      )}\n                    </button>\n                  );\n                })}\n              </div>\n\n              {/* Mobile Menu Footer */}\n              <div className=\"border-t border-gray-200 dark:border-gray-700 px-4 py-4 space-y-2\">\n                <button\n                  onClick={() => {\n                    router.push('/profile');\n                    setIsMobileMenuOpen(false);\n                  }}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-xl transition-colors\"\n                >\n                  <User className=\"h-5 w-5 text-gray-400\" />\n                  <span>Profile</span>\n                </button>\n                <button\n                  onClick={() => {\n                    router.push('/settings');\n                    setIsMobileMenuOpen(false);\n                  }}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-xl transition-colors\"\n                >\n                  <Settings className=\"h-5 w-5 text-gray-400\" />\n                  <span>Settings</span>\n                </button>\n                <button\n                  onClick={() => {\n                    router.push('/help');\n                    setIsMobileMenuOpen(false);\n                  }}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-xl transition-colors\"\n                >\n                  <HelpCircle className=\"h-5 w-5 text-gray-400\" />\n                  <span>Help & Support</span>\n                </button>\n                <button\n                  onClick={handleLogout}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20 rounded-xl transition-colors\"\n                >\n                  <LogOut className=\"h-5 w-5\" />\n                  <span>Sign Out</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Mobile Bottom Navigation */}\n      <div className=\"lg:hidden fixed bottom-0 left-0 right-0 bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700 shadow-lg\">\n        <div className=\"grid grid-cols-5 h-16\">\n          {/* Show only the 5 most important navigation items in bottom bar (filtered) */}\n          {navigationItems.slice(0, 5).map((item) => {\n            const Icon = item.icon;\n            const active = isActive(item.href);\n            \n            return (\n              <button\n                key={item.name}\n                onClick={() => router.push(item.href)}\n                className={`flex flex-col items-center justify-center space-y-1 transition-colors ${\n                  active\n                    ? 'text-blue-600 dark:text-blue-400'\n                    : 'text-gray-400 hover:text-gray-600 dark:hover:text-gray-300'\n                }`}\n              >\n                <div className=\"relative\">\n                  <Icon className=\"h-5 w-5\" />\n                  {item.badge && (\n                    <span className=\"absolute -top-2 -right-2 h-4 w-4 bg-red-500 text-white text-xs rounded-full flex items-center justify-center\">\n                      {item.badge}\n                    </span>\n                  )}\n                </div>\n                <span className=\"text-xs font-medium truncate\">{item.name}</span>\n              </button>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Deposit/Withdraw Modal */}\n      <DepositWithdrawModal\n        isOpen={isDepositWithdrawModalOpen}\n        onClose={() => setIsDepositWithdrawModalOpen(false)}\n        mode={depositWithdrawMode}\n      />\n    </>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+BA;;;AAxCA;;;;;;;;;;AAkDA,mDAAmD;AACnD,MAAM,qBAAuC;IAC3C;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,mOAAU;QAChB,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gNAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,mOAAU;QAChB,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,mOAAU;QAChB,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,oOAAS;QACf,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,yNAAQ;QACd,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gNAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,oOAAS;QACf,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gNAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gNAAK;QACX,OAAO;QACP,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gNAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,mOAAU;QAChB,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,mNAAM;QACZ,aAAa;IACf;IACA;QACE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","debugId":null}},
    {"offset": {"line": 7947, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/layouts/AppLayout.tsx"],"sourcesContent":["'use client';\n\nimport { ReactNode } from 'react';\nimport Navigation from '@/components/Navigation';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { useRouter, usePathname } from 'next/navigation';\nimport { useEffect } from 'react';\n\ninterface AppLayoutProps {\n  children: ReactNode;\n  requireAuth?: boolean;\n}\n\nexport default function AppLayout({ children, requireAuth = true }: AppLayoutProps) {\n  const { user, loading } = useAuth();\n  const router = useRouter();\n  const pathname = usePathname();\n\n  // Public routes that don't require authentication\n  const publicRoutes = ['/login', '/register', '/demo', '/'];\n  const isPublicRoute = publicRoutes.includes(pathname);\n\n  useEffect(() => {\n    if (!loading && requireAuth && !user && !isPublicRoute) {\n      router.push('/login');\n    }\n  }, [user, loading, requireAuth, isPublicRoute, router]);\n\n  // Show loading spinner while checking authentication\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  // For public routes or when auth is not required, show content without navigation\n  if (!requireAuth || isPublicRoute) {\n    return <>{children}</>;\n  }\n\n  // For authenticated routes, show navigation + content\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      <Navigation />\n      \n      {/* Main content area with proper spacing for navigation */}\n      <div className=\"lg:pl-64 lg:pt-16\">\n        {/* Content wrapper with padding */}\n        <main className=\"min-h-screen\">\n          {children}\n        </main>\n      </div>\n      \n      {/* Bottom spacing for mobile navigation */}\n      <div className=\"h-16 lg:hidden\"></div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AACA;;;AANA;;;;;AAae,SAAS,UAAU,KAAgD;QAAhD,EAAE,QAAQ,EAAE,cAAc,IAAI,EAAkB,GAAhD;;IAChC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,IAAA,6IAAO;IACjC,MAAM,SAAS,IAAA,kJAAS;IACxB,MAAM,WAAW,IAAA,oJAAW;IAE5B,kDAAkD;IAClD,MAAM,eAAe;QAAC;QAAU;QAAa;QAAS;KAAI;IAC1D,MAAM,gBAAgB,aAAa,QAAQ,CAAC;IAE5C,IAAA,0KAAS;+BAAC;YACR,IAAI,CAAC,WAAW,eAAe,CAAC,QAAQ,CAAC,eAAe;gBACtD,OAAO,IAAI,CAAC;YACd;QACF;8BAAG;QAAC;QAAM;QAAS;QAAa;QAAe;KAAO;IAEtD,qDAAqD;IACrD,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,kFAAkF;IAClF,IAAI,CAAC,eAAe,eAAe;QACjC,qBAAO;sBAAG;;IACZ;IAEA,sDAAsD;IACtD,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,8IAAU;;;;;0BAGX,6LAAC;gBAAI,WAAU;0BAEb,cAAA,6LAAC;oBAAK,WAAU;8BACb;;;;;;;;;;;0BAKL,6LAAC;gBAAI,WAAU;;;;;;;;;;;;AAGrB;GA9CwB;;QACI,6IAAO;QAClB,kJAAS;QACP,oJAAW;;;KAHN","debugId":null}}]
}