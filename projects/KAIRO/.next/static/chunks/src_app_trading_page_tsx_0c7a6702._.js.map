{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/app/trading/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, Suspense } from 'react';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { useWorkflow } from '@/contexts/WorkflowContext';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport AppLayout from '@/components/layouts/AppLayout';\nimport {\n  TrendingUp,\n  TrendingDown,\n  DollarSign,\n  BarChart3,\n  LineChart,\n  Activity,\n  Search,\n  Filter,\n  Star,\n  Clock,\n  Volume2,\n  ArrowUpRight,\n  ArrowDownRight,\n  Plus,\n  Minus,\n  RefreshCw,\n  Eye,\n  Settings,\n  Zap,\n  Code,\n  Target,\n  ArrowRight,\n  Bot,\n  Shield,\n  Play,\n  Pause,\n  CheckCircle,\n  AlertTriangle\n} from 'lucide-react';\nimport Link from 'next/link';\nimport { tradingService, CreateTradeRequest } from '@/services/tradingService';\nimport { toast } from 'react-hot-toast';\nimport BrokerAccountSelector from '@/components/BrokerAccountSelector';\nimport { useBrokerAccount } from '@/contexts/BrokerAccountContext';\nimport { liveMarketService, useMarketData } from '@/services/liveMarketService';\nimport LiveChart from '@/components/trading/LiveChart';\nimport TradingPanel from '@/components/trading/TradingPanel';\n\ninterface MarketData {\n  symbol: string;\n  name: string;\n  price: number;\n  change: number;\n  changePercent: number;\n  volume: number;\n  marketCap: number;\n  high24h: number;\n  low24h: number;\n  sector: string;\n  type: 'stock' | 'crypto' | 'forex' | 'commodity';\n}\n\ninterface OrderBookEntry {\n  price: number;\n  quantity: number;\n  total: number;\n}\n\ninterface Trade {\n  id: string;\n  symbol: string;\n  type: 'buy' | 'sell';\n  quantity: number;\n  price: number;\n  timestamp: string;\n  status: 'pending' | 'filled' | 'cancelled';\n}\n\nfunction TradingContent() {\n  const { user } = useAuth();\n  const { selectedAccount: selectedBrokerAccount, setSelectedAccount: setSelectedBrokerAccount } = useBrokerAccount();\n  const { workflowState, executeWorkflow, receiveFromDashboard, updateWorkflowStatus, handleDeepLink, navigateToDashboard } = useWorkflow();\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  const [activeTab, setActiveTab] = useState<'market' | 'watchlist' | 'orders' | 'chart'>('market');\n  const [selectedAsset, setSelectedAsset] = useState<string>('AAPL');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [orderType, setOrderType] = useState<'market' | 'limit' | 'stop'>('market');\n  const [orderSide, setOrderSide] = useState<'buy' | 'sell'>('buy');\n  const [orderQuantity, setOrderQuantity] = useState('');\n  const [orderPrice, setOrderPrice] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [portfolioId, setPortfolioId] = useState('');\n  const [isPlacingOrder, setIsPlacingOrder] = useState(false);\n  const [selectedTimeframe, setSelectedTimeframe] = useState('1D');\n  const [isLiveDataEnabled, setIsLiveDataEnabled] = useState(false);\n  const [workflowNotification, setWorkflowNotification] = useState<string | null>(null);\n  const [isTradingPanelOpen, setIsTradingPanelOpen] = useState(false);\n  \n  // Get live market data\n  const liveMarketData = useMarketData();\n\n  // Initialize market data (will be updated with live data)\n  const [marketData, setMarketData] = useState<MarketData[]>([\n    {\n      symbol: 'AAPL',\n      name: 'Apple Inc.',\n      price: 175.80,\n      change: 2.45,\n      changePercent: 1.41,\n      volume: 45678900,\n      marketCap: 2800000000000,\n      high24h: 177.20,\n      low24h: 173.50,\n      sector: 'Technology',\n      type: 'stock'\n    },\n    {\n      symbol: 'TSLA',\n      name: 'Tesla Inc.',\n      price: 245.30,\n      change: -3.20,\n      changePercent: -1.29,\n      volume: 32456780,\n      marketCap: 780000000000,\n      high24h: 250.80,\n      low24h: 243.10,\n      sector: 'Automotive',\n      type: 'stock'\n    },\n    {\n      symbol: 'BTC',\n      name: 'Bitcoin',\n      price: 52000.00,\n      change: 1200.00,\n      changePercent: 2.36,\n      volume: 28000000000,\n      marketCap: 1020000000000,\n      high24h: 53500.00,\n      low24h: 50800.00,\n      sector: 'Cryptocurrency',\n      type: 'crypto'\n    },\n    {\n      symbol: 'ETH',\n      name: 'Ethereum',\n      price: 3200.50,\n      change: 85.30,\n      changePercent: 2.74,\n      volume: 15000000000,\n      marketCap: 385000000000,\n      high24h: 3250.00,\n      low24h: 3100.00,\n      sector: 'Cryptocurrency',\n      type: 'crypto'\n    },\n    {\n      symbol: 'EURUSD',\n      name: 'Euro/US Dollar',\n      price: 1.0875,\n      change: 0.0025,\n      changePercent: 0.23,\n      volume: 125000000,\n      marketCap: 0,\n      high24h: 1.0890,\n      low24h: 1.0850,\n      sector: 'Forex',\n      type: 'forex'\n    }\n  ]);\n\n  // Mock order book data\n  const [orderBook, setOrderBook] = useState({\n    bids: [\n      { price: 175.75, quantity: 1500, total: 263625 },\n      { price: 175.70, quantity: 2300, total: 404110 },\n      { price: 175.65, quantity: 1800, total: 316170 },\n      { price: 175.60, quantity: 2100, total: 368760 },\n      { price: 175.55, quantity: 1200, total: 210660 }\n    ],\n    asks: [\n      { price: 175.85, quantity: 1200, total: 211020 },\n      { price: 175.90, quantity: 1800, total: 316620 },\n      { price: 175.95, quantity: 2200, total: 387090 },\n      { price: 176.00, quantity: 1500, total: 264000 },\n      { price: 176.05, quantity: 1900, total: 334495 }\n    ]\n  });\n\n  // Mock recent trades\n  const [recentTrades, setRecentTrades] = useState<Trade[]>([\n    {\n      id: '1',\n      symbol: 'AAPL',\n      type: 'buy',\n      quantity: 100,\n      price: 175.80,\n      timestamp: '2024-03-15T10:30:00Z',\n      status: 'filled'\n    },\n    {\n      id: '2',\n      symbol: 'TSLA',\n      type: 'sell',\n      quantity: 50,\n      price: 245.30,\n      timestamp: '2024-03-15T10:25:00Z',\n      status: 'filled'\n    },\n    {\n      id: '3',\n      symbol: 'BTC',\n      type: 'buy',\n      quantity: 0.1,\n      price: 52000.00,\n      timestamp: '2024-03-15T10:20:00Z',\n      status: 'pending'\n    }\n  ]);\n\n  const [watchlist, setWatchlist] = useState<string[]>(['AAPL', 'TSLA', 'BTC']);\n\n  useEffect(() => {\n    if (user) {\n      setLoading(false);\n      // In a real app, you'd fetch the user's portfolio ID\n      setPortfolioId('default-portfolio');\n      \n      // Enable live market data\n      setIsLiveDataEnabled(true);\n      \n      // Ensure live market service is connected\n      if (!liveMarketService.isConnectedToMarket()) {\n        liveMarketService.connect();\n      }\n    }\n    \n    return () => {\n      // Cleanup handled by liveMarketService internally\n      if (isLiveDataEnabled) {\n        liveMarketService.disconnect();\n      }\n    };\n  }, [user]);\n\n  // Handle workflow automation from dashboard\n  useEffect(() => {\n    if (!workflowState?.workflows) return;\n    \n    const workflowId = searchParams.get('workflow');\n    const trigger = searchParams.get('trigger');\n    \n    if (workflowId && trigger === 'dashboard') {\n      const workflow = workflowState.workflows.find((w: any) => w.id === workflowId);\n      if (workflow) {\n        setWorkflowNotification(`Workflow \"${workflow.name}\" activated from dashboard`);\n        \n        // Auto-configure trading parameters based on workflow\n        if (workflow.id === 'auto-stop-loss') {\n          setOrderType('stop');\n          setOrderSide('sell');\n          setWorkflowNotification('Auto Stop Loss workflow activated - Configure your stop loss parameters');\n        } else if (workflow.id === 'profit-taking') {\n          setOrderType('limit');\n          setOrderSide('sell');\n          setWorkflowNotification('Profit Taking workflow activated - Set your target profit price');\n        }\n        \n        // Update workflow status\n        updateWorkflowStatus(workflowId, 'active');\n        \n        // Clear notification after 5 seconds\n        setTimeout(() => setWorkflowNotification(null), 5000);\n      }\n    }\n  }, [searchParams, workflowState?.workflows, updateWorkflowStatus]);\n\n  // Get selected asset data with fallback\n  const selectedAssetData = marketData.find(asset => asset.symbol === selectedAsset) || \n    // Fallback to ensure we always have data for the selected asset\n    {\n      symbol: selectedAsset,\n      name: selectedAsset,\n      price: 0,\n      change: 0,\n      changePercent: 0,\n      volume: 0,\n      marketCap: 0,\n      high24h: 0,\n      low24h: 0,\n      sector: 'Unknown',\n      type: 'stock' as const\n    };\n\n  // Listen for workflow triggers from dashboard\n  useEffect(() => {\n    if (!workflowState?.workflows) return;\n    \n    const handleWorkflowTrigger = (event: any) => {\n      if (event.source === 'dashboard') {\n        const workflow = workflowState.workflows.find((w: any) => w.id === event.workflowId);\n        if (workflow) {\n          receiveFromDashboard(event.workflowId, event.data);\n          setWorkflowNotification(`Executing workflow: ${workflow.name}`);\n          \n          // Auto-execute workflow if configured\n          if ((workflow as any).config?.autoExecute) {\n            executeWorkflow(event.workflowId, {\n              symbol: selectedAsset,\n              price: selectedAssetData.price,\n              timestamp: new Date().toISOString()\n            });\n          }\n        }\n      }\n    };\n\n    // Listen for workflow events\n    window.addEventListener('workflow-trigger', handleWorkflowTrigger);\n    \n    return () => {\n      window.removeEventListener('workflow-trigger', handleWorkflowTrigger);\n    };\n  }, [workflowState?.workflows, receiveFromDashboard, executeWorkflow, selectedAsset, selectedAssetData?.price]);\n  \n  // Handle deep linking from dashboard\n  useEffect(() => {\n    handleDeepLink(searchParams);\n  }, [searchParams, handleDeepLink]);\n  \n  // Update market data with live data\n  useEffect(() => {\n    if (liveMarketData && Array.isArray(liveMarketData)) {\n      const getAssetName = (symbol: string) => {\n        const assetNames: { [key: string]: string } = {\n          'AAPL': 'Apple Inc.',\n          'TSLA': 'Tesla Inc.',\n          'BTC': 'Bitcoin',\n          'ETH': 'Ethereum',\n          'EURUSD': 'Euro/US Dollar'\n        };\n        return assetNames[symbol] || symbol;\n      };\n      \n      const getAssetSector = (symbol: string) => {\n        const sectors: { [key: string]: string } = {\n          'AAPL': 'Technology',\n          'TSLA': 'Automotive',\n          'BTC': 'Cryptocurrency',\n          'ETH': 'Cryptocurrency',\n          'EURUSD': 'Forex'\n        };\n        return sectors[symbol] || 'Unknown';\n      };\n      \n      const getAssetType = (symbol: string): 'stock' | 'crypto' | 'forex' | 'commodity' => {\n        if (['BTC', 'ETH'].includes(symbol)) return 'crypto';\n        if (['EURUSD'].includes(symbol)) return 'forex';\n        return 'stock';\n      };\n      \n      const updatedMarketData = liveMarketData.map(ticker => ({\n        symbol: ticker.symbol,\n        name: getAssetName(ticker.symbol),\n        price: ticker.price,\n        change: ticker.change,\n        changePercent: ticker.changePercent,\n        volume: ticker.volume,\n        marketCap: ticker.marketCap || 0,\n        high24h: ticker.high24h,\n        low24h: ticker.low24h,\n        sector: getAssetSector(ticker.symbol),\n        type: getAssetType(ticker.symbol)\n      }));\n      setMarketData(updatedMarketData);\n    }\n  }, [liveMarketData]);\n\n  const filteredMarketData = marketData.filter(asset => \n    asset.symbol.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    asset.name.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const formatCurrency = (amount: number, decimals = 2) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: decimals,\n      maximumFractionDigits: decimals\n    }).format(amount);\n  };\n\n  const formatNumber = (num: number) => {\n    if (num >= 1e12) return (num / 1e12).toFixed(2) + 'T';\n    if (num >= 1e9) return (num / 1e9).toFixed(2) + 'B';\n    if (num >= 1e6) return (num / 1e6).toFixed(2) + 'M';\n    if (num >= 1e3) return (num / 1e3).toFixed(2) + 'K';\n    return num.toLocaleString();\n  };\n\n  const handleAddToWatchlist = (symbol: string) => {\n    if (!watchlist.includes(symbol)) {\n      setWatchlist([...watchlist, symbol]);\n    }\n  };\n\n  const handleRemoveFromWatchlist = (symbol: string) => {\n    setWatchlist(watchlist.filter(s => s !== symbol));\n  };\n\n  const handlePlaceOrder = async () => {\n    if (!selectedAsset || !orderQuantity || !portfolioId || !selectedBrokerAccount) {\n      toast.error('Please fill in all required fields including broker account');\n      return;\n    }\n\n    const tradeData: CreateTradeRequest = {\n      portfolioId,\n      symbol: selectedAsset,\n      marketType: 'STOCKS', // Default to stocks, can be enhanced to detect market type\n      side: orderSide.toUpperCase() as 'BUY' | 'SELL',\n      quantity: parseFloat(orderQuantity),\n      price: orderType === 'market' ? 0 : parseFloat(orderPrice || '0'),\n      orderType: orderType.toUpperCase() as 'MARKET' | 'LIMIT',\n      brokerAccountId: selectedBrokerAccount?.id,\n      brokerConnectionId: selectedBrokerAccount?.brokerConnection?.id\n    };\n\n    // Validate trade data\n    const validation = tradingService.validateTradeData(tradeData);\n    if (!validation.isValid) {\n      validation.errors.forEach(error => toast.error(error));\n      return;\n    }\n\n    setIsPlacingOrder(true);\n    try {\n      await tradingService.createTrade(tradeData);\n      \n      // Reset form on success\n      setOrderQuantity('');\n      setOrderPrice('');\n      setPortfolioId('');\n    } catch (error) {\n      // Error handling is done in the service\n    } finally {\n      setIsPlacingOrder(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <AppLayout>\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 p-6\">\n        {/* Header */}\n      <div className=\"bg-white dark:bg-gray-800 shadow-sm border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"py-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">\n                  Trading\n                </h1>\n                <p className=\"text-gray-600 dark:text-gray-400\">\n                  Trade stocks, crypto, forex, and commodities\n                </p>\n              </div>\n              <div className=\"flex items-center space-x-3\">\n                <button className=\"p-2 text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white transition-colors\">\n                  <RefreshCw className=\"h-5 w-5\" />\n                </button>\n                <button className=\"p-2 text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white transition-colors\">\n                  <Settings className=\"h-5 w-5\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Trading Features Navigation */}\n      <div className=\"bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"py-4\">\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <Link\n                href=\"/trading/pine-editor\"\n                className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors group\"\n              >\n                <div className=\"flex items-center space-x-3\">\n                  <Code className=\"h-5 w-5 text-blue-600\" />\n                  <div>\n                    <div className=\"text-sm font-medium text-gray-900 dark:text-white\">Pine Editor</div>\n                    <div className=\"text-xs text-gray-500 dark:text-gray-400\">Script strategies</div>\n                  </div>\n                </div>\n                <ArrowRight className=\"h-4 w-4 text-gray-400 group-hover:text-gray-600 dark:group-hover:text-gray-300\" />\n              </Link>\n              \n              <Link\n                href=\"/trading/profit-targets\"\n                className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors group\"\n              >\n                <div className=\"flex items-center space-x-3\">\n                  <Target className=\"h-5 w-5 text-green-600\" />\n                  <div>\n                    <div className=\"text-sm font-medium text-gray-900 dark:text-white\">Profit Targets</div>\n                    <div className=\"text-xs text-gray-500 dark:text-gray-400\">Daily goals</div>\n                  </div>\n                </div>\n                <ArrowRight className=\"h-4 w-4 text-gray-400 group-hover:text-gray-600 dark:group-hover:text-gray-300\" />\n              </Link>\n              \n              <Link\n                href=\"/trading/market-updates\"\n                className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors group\"\n              >\n                <div className=\"flex items-center space-x-3\">\n                  <Activity className=\"h-5 w-5 text-green-600\" />\n                  <div>\n                    <div className=\"text-sm font-medium text-gray-900 dark:text-white\">Market Updates</div>\n                    <div className=\"text-xs text-gray-500 dark:text-gray-400\">Live data</div>\n                  </div>\n                </div>\n                <ArrowRight className=\"h-4 w-4 text-gray-400 group-hover:text-gray-600 dark:group-hover:text-gray-300\" />\n              </Link>\n              \n              <Link\n                href=\"/trading/futures\"\n                className=\"flex items-center justify-between p-4 bg-gray-50 dark:bg-gray-700 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors group\"\n              >\n                <div className=\"flex items-center space-x-3\">\n                  <BarChart3 className=\"h-5 w-5 text-blue-600\" />\n                  <div>\n                    <div className=\"text-sm font-medium text-gray-900 dark:text-white\">Futures</div>\n                    <div className=\"text-xs text-gray-500 dark:text-gray-400\">Contracts</div>\n                  </div>\n                </div>\n                <ArrowRight className=\"h-4 w-4 text-gray-400 group-hover:text-gray-600 dark:group-hover:text-gray-300\" />\n              </Link>\n            </div>\n            \n            <div className=\"mt-4\">\n              <Link\n                href=\"/trading/options\"\n                className=\"flex items-center justify-between p-4 bg-gradient-to-r from-purple-50 to-blue-50 dark:from-purple-900/20 dark:to-blue-900/20 rounded-lg hover:from-purple-100 hover:to-blue-100 dark:hover:from-purple-900/30 dark:hover:to-blue-900/30 transition-colors group border border-purple-200 dark:border-purple-700\"\n              >\n                <div className=\"flex items-center space-x-3\">\n                  <Target className=\"h-5 w-5 text-purple-600\" />\n                  <div>\n                    <div className=\"text-sm font-medium text-gray-900 dark:text-white\">Options Trading</div>\n                    <div className=\"text-xs text-gray-500 dark:text-gray-400\">Advanced strategies with Greeks calculation</div>\n                  </div>\n                </div>\n                <ArrowRight className=\"h-4 w-4 text-gray-400 group-hover:text-gray-600 dark:group-hover:text-gray-300\" />\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n          {/* Market Data / Watchlist */}\n          <div className=\"lg:col-span-1\">\n            <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n              {/* Tabs */}\n              <div className=\"flex border-b border-gray-200 dark:border-gray-700\">\n                <button\n                  onClick={() => setActiveTab('market')}\n                  className={`flex-1 px-4 py-3 text-sm font-medium ${\n                    activeTab === 'market'\n                      ? 'text-blue-600 dark:text-blue-400 border-b-2 border-blue-600 dark:border-blue-400'\n                      : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white'\n                  }`}\n                >\n                  Market\n                </button>\n                <button\n                  onClick={() => setActiveTab('watchlist')}\n                  className={`flex-1 px-4 py-3 text-sm font-medium ${\n                    activeTab === 'watchlist'\n                      ? 'text-blue-600 dark:text-blue-400 border-b-2 border-blue-600 dark:border-blue-400'\n                      : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white'\n                  }`}\n                >\n                  Watchlist\n                </button>\n              </div>\n\n              {/* Search */}\n              <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\n                <div className=\"relative\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search assets...\"\n                    value={searchQuery}\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                    className=\"w-full pl-10 pr-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-sm\"\n                  />\n                </div>\n              </div>\n\n              {/* Asset List */}\n              <div className=\"max-h-96 overflow-y-auto\">\n                {(activeTab === 'market' ? filteredMarketData : marketData.filter(asset => watchlist.includes(asset.symbol))).map((asset) => (\n                  <div\n                    key={asset.symbol}\n                    onClick={() => setSelectedAsset(asset.symbol)}\n                    className={`p-4 border-b border-gray-200 dark:border-gray-700 cursor-pointer hover:bg-gray-50 dark:hover:bg-gray-700 ${\n                      selectedAsset === asset.symbol ? 'bg-blue-50 dark:bg-blue-900/20' : ''\n                    }`}\n                  >\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"font-semibold text-gray-900 dark:text-white\">{asset.symbol}</span>\n                        <button\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            if (watchlist.includes(asset.symbol)) {\n                              handleRemoveFromWatchlist(asset.symbol);\n                            } else {\n                              handleAddToWatchlist(asset.symbol);\n                            }\n                          }}\n                          className={`p-1 rounded ${\n                            watchlist.includes(asset.symbol)\n                              ? 'text-yellow-500 hover:text-yellow-600'\n                              : 'text-gray-400 hover:text-yellow-500'\n                          }`}\n                        >\n                          <Star className={`h-3 w-3 ${watchlist.includes(asset.symbol) ? 'fill-current' : ''}`} />\n                        </button>\n                      </div>\n                      <span className={`text-sm font-medium ${\n                        asset.change >= 0 ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'\n                      }`}>\n                        {asset.change >= 0 ? '+' : ''}{asset.changePercent.toFixed(2)}%\n                      </span>\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm text-gray-600 dark:text-gray-400\">{asset.name}</span>\n                      <span className=\"font-medium text-gray-900 dark:text-white\">\n                        {formatCurrency(asset.price, asset.type === 'forex' ? 4 : 2)}\n                      </span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Chart and Trading Interface */}\n          <div className=\"lg:col-span-3\">\n            <div className=\"grid grid-cols-1 xl:grid-cols-3 gap-6\">\n              {/* Chart */}\n              <div className=\"xl:col-span-2\">\n                <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n                  <div className=\"flex items-center justify-between mb-6\">\n                    <div>\n                      <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">\n                        {selectedAssetData?.symbol} - {selectedAssetData?.name}\n                      </h2>\n                      <div className=\"flex items-center space-x-4 mt-2\">\n                        <span className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                          {selectedAssetData && formatCurrency(selectedAssetData.price, selectedAssetData.type === 'forex' ? 4 : 2)}\n                        </span>\n                        <span className={`flex items-center text-sm font-medium ${\n                          selectedAssetData && selectedAssetData.change >= 0 ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'\n                        }`}>\n                          {selectedAssetData && selectedAssetData.change >= 0 ? <ArrowUpRight className=\"h-4 w-4 mr-1\" /> : <ArrowDownRight className=\"h-4 w-4 mr-1\" />}\n                          {selectedAssetData && formatCurrency(Math.abs(selectedAssetData.change), 2)} ({selectedAssetData && selectedAssetData.changePercent.toFixed(2)}%)\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"flex space-x-1\">\n                      {['1D', '1W', '1M', '3M', '1Y'].map((period) => (\n                        <button\n                          key={period}\n                          onClick={() => setSelectedTimeframe(period)}\n                          className={`px-3 py-1 text-xs font-medium rounded ${\n                            selectedTimeframe === period\n                              ? 'bg-blue-600 text-white'\n                              : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white hover:bg-gray-100 dark:hover:bg-gray-700'\n                          }`}\n                        >\n                          {period}\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n                  \n                  {/* Live Chart */}\n                   <div className=\"h-80 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 overflow-hidden\">\n                     {selectedAssetData ? (\n                       <LiveChart \n                         symbol={selectedAsset}\n                         timeframe={selectedTimeframe}\n                         data={selectedAssetData}\n                         isLive={isLiveDataEnabled}\n                       />\n                     ) : (\n                       <div className=\"h-full flex items-center justify-center\">\n                         <div className=\"text-center\">\n                           <LineChart className=\"h-16 w-16 text-gray-400 mx-auto mb-4\" />\n                           <p className=\"text-gray-500 dark:text-gray-400\">\n                             {isLiveDataEnabled && liveMarketService.isConnectedToMarket() \n                               ? 'Loading market data for selected asset...' \n                               : 'Connecting to live market data...'}\n                           </p>\n                           <p className=\"text-sm text-gray-400 dark:text-gray-500 mt-2\">\n                             Real-time price data and technical indicators\n                           </p>\n                         </div>\n                       </div>\n                     )}\n                   </div>\n\n                  {/* Asset Stats */}\n                  {selectedAssetData && (\n                    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mt-6 pt-6 border-t border-gray-200 dark:border-gray-700\">\n                      <div>\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400\">24h High</p>\n                        <p className=\"font-semibold text-gray-900 dark:text-white\">\n                          {formatCurrency(selectedAssetData.high24h, selectedAssetData.type === 'forex' ? 4 : 2)}\n                        </p>\n                      </div>\n                      <div>\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400\">24h Low</p>\n                        <p className=\"font-semibold text-gray-900 dark:text-white\">\n                          {formatCurrency(selectedAssetData.low24h, selectedAssetData.type === 'forex' ? 4 : 2)}\n                        </p>\n                      </div>\n                      <div>\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400\">Volume</p>\n                        <p className=\"font-semibold text-gray-900 dark:text-white\">\n                          {formatNumber(selectedAssetData.volume)}\n                        </p>\n                      </div>\n                      {selectedAssetData.marketCap > 0 && (\n                        <div>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">Market Cap</p>\n                          <p className=\"font-semibold text-gray-900 dark:text-white\">\n                            {formatNumber(selectedAssetData.marketCap)}\n                          </p>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              {/* Trading Interface */}\n              <div className=\"xl:col-span-1\">\n                <div className=\"space-y-6\">\n                  {/* New Trade Button */}\n                  <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n                    <button\n                      onClick={() => {\n                        setIsTradingPanelOpen(true);\n                        toast.success('Opening advanced trading panel...');\n                      }}\n                      className=\"w-full inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2 bg-gradient-to-r from-purple-500 to-blue-500 hover:from-purple-600 hover:to-blue-600\"\n                    >\n                      <Plus className=\"w-4 h-4 mr-2\" />\n                      New Trade\n                    </button>\n                  </div>\n                  \n                  {/* Workflow Automation Panel */}\n                  <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <div className=\"flex items-center space-x-2\">\n                        <Bot className=\"w-5 h-5 text-blue-500\" />\n                        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Workflow Automation</h3>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        {(workflowState?.activeWorkflows?.length || 0) > 0 && (\n                          <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200\">\n                            <CheckCircle className=\"w-3 h-3 mr-1\" />\n                            {workflowState?.activeWorkflows?.length || 0} Active\n                          </span>\n                        )}\n                      </div>\n                    </div>\n\n                    {/* Workflow Notification */}\n                    {workflowNotification && (\n                      <div className=\"mb-4 p-3 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Bot className=\"w-4 h-4 text-blue-500\" />\n                          <p className=\"text-sm text-blue-700 dark:text-blue-300\">{workflowNotification}</p>\n                        </div>\n                      </div>\n                    )}\n\n                    {/* Active Workflows */}\n                    {(workflowState?.activeWorkflows?.length || 0) > 0 && (\n                      <div className=\"mb-4\">\n                        <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">Active Workflows</h4>\n                        <div className=\"space-y-2\">\n                          {workflowState?.activeWorkflows?.map((workflow: any) => (\n                            <div key={workflow.id} className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                              <div className=\"flex items-center space-x-3\">\n                                <div className=\"flex items-center space-x-2\">\n                                  {workflow.type === 'auto-stop-loss' && <Shield className=\"w-4 h-4 text-red-500\" />}\n                                  {workflow.type === 'profit-taking' && <Target className=\"w-4 h-4 text-green-500\" />}\n                                  <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                                    {workflow.name}\n                                  </span>\n                                </div>\n                                <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${\n                                  workflow.status === 'active' \n                                    ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200'\n                                    : workflow.status === 'paused'\n                                    ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'\n                                    : 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200'\n                                }`}>\n                                  {workflow.status}\n                                </span>\n                              </div>\n                              <div className=\"flex items-center space-x-2\">\n                                <button\n                                  onClick={() => {\n                                    updateWorkflowStatus(workflow.id, workflow.status === 'active' ? 'paused' : 'active');\n                                    toast.success(`Workflow ${workflow.status === 'active' ? 'paused' : 'resumed'}`);\n                                  }}\n                                  className=\"p-1 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200\"\n                                >\n                                  {workflow.status === 'active' ? <Pause className=\"w-4 h-4\" /> : <Play className=\"w-4 h-4\" />}\n                                </button>\n                                <button\n                                  onClick={() => {\n                                    updateWorkflowStatus(workflow.id, 'stopped');\n                                    toast.success('Workflow stopped');\n                                  }}\n                                  className=\"p-1 text-red-500 hover:text-red-700\"\n                                >\n                                  <AlertTriangle className=\"w-4 h-4\" />\n                                </button>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n\n                    {/* Quick Workflow Actions */}\n                    <div className=\"space-y-3\">\n                      <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Quick Actions</h4>\n                      <div className=\"grid grid-cols-2 gap-3\">\n                        <button\n                          onClick={() => {\n                            executeWorkflow('auto-stop-loss', {\n                              symbol: selectedAsset,\n                              stopLossPercentage: 5,\n                              autoExecute: true\n                            });\n                            toast.success('Auto Stop Loss activated');\n                          }}\n                          className=\"flex items-center justify-center space-x-2 p-3 bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg hover:bg-red-100 dark:hover:bg-red-900/30 transition-colors\"\n                        >\n                          <Shield className=\"w-4 h-4 text-red-500\" />\n                          <span className=\"text-sm font-medium text-red-700 dark:text-red-300\">Stop Loss</span>\n                        </button>\n                        <button\n                          onClick={() => {\n                            executeWorkflow('profit-taking', {\n                              symbol: selectedAsset,\n                              profitPercentage: 10,\n                              autoExecute: true\n                            });\n                            toast.success('Profit Taking activated');\n                          }}\n                          className=\"flex items-center justify-center space-x-2 p-3 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg hover:bg-green-100 dark:hover:bg-green-900/30 transition-colors\"\n                        >\n                          <Target className=\"w-4 h-4 text-green-500\" />\n                          <span className=\"text-sm font-medium text-green-700 dark:text-green-300\">Take Profit</span>\n                        </button>\n                      </div>\n                    </div>\n\n                    {/* Workflow Status */}\n                    <div className=\"mt-4 pt-4 border-t border-gray-200 dark:border-gray-700\">\n                      <div className=\"flex items-center justify-between text-sm mb-3\">\n                        <span className=\"text-gray-600 dark:text-gray-400\">Automation Status</span>\n                        <span className={`font-medium ${\n                          (workflowState?.activeWorkflows?.length || 0) > 0\n                            ? 'text-green-600 dark:text-green-400'\n                            : 'text-gray-500 dark:text-gray-400'\n                        }`}>\n                          {(workflowState?.activeWorkflows?.length || 0) > 0 ? 'Active' : 'Inactive'}\n                        </span>\n                      </div>\n                      \n                      {/* Dashboard Navigation */}\n                      <button\n                        onClick={() => navigateToDashboard(undefined, {\n                          source: 'trading',\n                          currentAsset: selectedAsset,\n                          timestamp: Date.now()\n                        })}\n                        className=\"w-full flex items-center justify-center space-x-2 p-2 bg-purple-50 dark:bg-purple-900/20 border border-purple-200 dark:border-purple-800 rounded-lg hover:bg-purple-100 dark:hover:bg-purple-900/30 transition-colors\"\n                      >\n                        <Bot className=\"w-4 h-4 text-purple-500\" />\n                        <span className=\"text-sm font-medium text-purple-700 dark:text-purple-300\">Manage Workflows</span>\n                        <ArrowRight className=\"w-4 h-4 text-purple-500\" />\n                      </button>\n                    </div>\n                  </div>\n                  \n                  {/* Order Form */}\n                  <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Place Order</h3>\n                    \n                    {/* Order Type */}\n                    <div className=\"mb-4\">\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                        Order Type\n                      </label>\n                      <div className=\"grid grid-cols-3 gap-2 mb-2\">\n                        {[\n                          { value: 'market', label: 'Market', icon: '⚡' },\n                          { value: 'limit', label: 'Limit', icon: '🎯' },\n                          { value: 'stop', label: 'Stop', icon: '🛑' }\n                        ].map((type) => (\n                          <button\n                            key={type.value}\n                            onClick={() => setOrderType(type.value as any)}\n                            className={`py-2 px-3 text-xs font-medium rounded-lg transition-colors flex items-center justify-center ${\n                              orderType === type.value\n                                ? 'bg-blue-600 text-white shadow-lg'\n                                : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\n                            }`}\n                          >\n                            <span className=\"mr-1\">{type.icon}</span>\n                            {type.label}\n                          </button>\n                        ))}\n                      </div>\n                      {orderType === 'market' && selectedAssetData && (\n                        <div className=\"text-xs text-gray-500 dark:text-gray-400 bg-gray-50 dark:bg-gray-700 p-2 rounded\">\n                          Market Price: {formatCurrency(selectedAssetData.price, selectedAssetData.type === 'forex' ? 4 : 2)}\n                        </div>\n                      )}\n                    </div>\n\n                    {/* Buy/Sell Toggle */}\n                    <div className=\"flex space-x-1 mb-4\">\n                      <button\n                        onClick={() => setOrderSide('buy')}\n                        className={`flex-1 py-3 px-3 font-medium rounded transition-colors flex items-center justify-center ${\n                          orderSide === 'buy'\n                            ? 'bg-green-600 text-white shadow-lg'\n                            : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\n                        }`}\n                      >\n                        <TrendingUp className=\"w-4 h-4 mr-2\" />\n                        Buy\n                      </button>\n                      <button\n                        onClick={() => setOrderSide('sell')}\n                        className={`flex-1 py-3 px-3 font-medium rounded transition-colors flex items-center justify-center ${\n                          orderSide === 'sell'\n                            ? 'bg-red-600 text-white shadow-lg'\n                            : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\n                        }`}\n                      >\n                        <TrendingDown className=\"w-4 h-4 mr-2\" />\n                        Sell\n                      </button>\n                    </div>\n\n                    {/* Broker Account */}\n                    <div className=\"mb-4\">\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                        Broker Account\n                      </label>\n                      <BrokerAccountSelector\n                        selectedAccount={selectedBrokerAccount}\n                        onAccountSelect={setSelectedBrokerAccount}\n                        placeholder=\"Select a broker account for trading\"\n                      />\n                    </div>\n\n                    {/* Portfolio */}\n                    <div className=\"mb-4\">\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                        Portfolio\n                      </label>\n                      <select\n                        value={portfolioId}\n                        onChange={(e) => setPortfolioId(e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                      >\n                        <option value=\"\">Select portfolio</option>\n                        <option value=\"portfolio-1\">Main Portfolio</option>\n                        <option value=\"portfolio-2\">Growth Portfolio</option>\n                        <option value=\"portfolio-3\">Conservative Portfolio</option>\n                      </select>\n                    </div>\n\n                    {/* Quantity */}\n                    <div className=\"mb-4\">\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                        Quantity\n                      </label>\n                      <input\n                        type=\"number\"\n                        value={orderQuantity}\n                        onChange={(e) => setOrderQuantity(e.target.value)}\n                        placeholder=\"0.00\"\n                        className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent mb-2\"\n                      />\n                      {/* Quick Quantity Buttons */}\n                      <div className=\"grid grid-cols-4 gap-2\">\n                        {[1, 10, 50, 100].map((qty) => (\n                          <button\n                            key={qty}\n                            onClick={() => setOrderQuantity(qty.toString())}\n                            className=\"py-1 px-2 text-xs font-medium bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\"\n                          >\n                            {qty}\n                          </button>\n                        ))}\n                      </div>\n                    </div>\n\n                    {/* Price (for limit orders) */}\n                    {orderType !== 'market' && (\n                      <div className=\"mb-4\">\n                        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                          Price\n                        </label>\n                        <input\n                          type=\"number\"\n                          value={orderPrice}\n                          onChange={(e) => setOrderPrice(e.target.value)}\n                          placeholder=\"0.00\"\n                          className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                        />\n                      </div>\n                    )}\n\n                    {/* Order Total */}\n                    <div className=\"mb-4 p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                      <div className=\"flex justify-between text-sm\">\n                        <span className=\"text-gray-600 dark:text-gray-400\">Estimated Total:</span>\n                        <span className=\"font-medium text-gray-900 dark:text-white\">\n                          {orderQuantity && selectedAssetData ? \n                            formatCurrency(parseFloat(orderQuantity) * (orderType === 'market' ? selectedAssetData.price : parseFloat(orderPrice || '0')))\n                            : '$0.00'\n                          }\n                        </span>\n                      </div>\n                    </div>\n\n                    {/* Place Order Button */}\n                    <button\n                      onClick={handlePlaceOrder}\n                      disabled={!orderQuantity || !portfolioId || !selectedBrokerAccount || (orderType !== 'market' && !orderPrice) || isPlacingOrder}\n                      className={`w-full py-4 px-4 rounded-lg font-bold text-lg transition-all transform hover:scale-105 disabled:transform-none disabled:hover:scale-100 flex items-center justify-center ${\n                        orderSide === 'buy'\n                          ? 'bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 disabled:bg-gray-400 text-white shadow-lg'\n                          : 'bg-gradient-to-r from-red-500 to-red-600 hover:from-red-600 hover:to-red-700 disabled:bg-gray-400 text-white shadow-lg'\n                      }`}\n                    >\n                      {isPlacingOrder ? (\n                        <>\n                          <RefreshCw className=\"w-5 h-5 mr-2 animate-spin\" />\n                          Placing Order...\n                        </>\n                      ) : (\n                        <>\n                          {orderSide === 'buy' ? <TrendingUp className=\"w-5 h-5 mr-2\" /> : <TrendingDown className=\"w-5 h-5 mr-2\" />}\n                          {orderSide === 'buy' ? 'Buy' : 'Sell'} {selectedAsset}\n                        </>\n                      )}\n                    </button>\n                    \n                    {/* Quick Actions */}\n                    <div className=\"grid grid-cols-2 gap-2 mt-3\">\n                      <button\n                        onClick={() => {\n                          setOrderQuantity('');\n                           setOrderPrice('');\n                           toast.success('Order form cleared');\n                        }}\n                        className=\"py-2 px-3 text-sm font-medium bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors flex items-center justify-center\"\n                      >\n                        <Minus className=\"w-4 h-4 mr-1\" />\n                        Clear\n                      </button>\n                      <button\n                        onClick={() => {\n                          if (selectedAssetData) {\n                             setOrderPrice(selectedAssetData.price.toString());\n                             toast.success('Price set to market price');\n                           }\n                        }}\n                        className=\"py-2 px-3 text-sm font-medium bg-blue-100 dark:bg-blue-900/20 text-blue-700 dark:text-blue-400 rounded-lg hover:bg-blue-200 dark:hover:bg-blue-900/30 transition-colors flex items-center justify-center\"\n                      >\n                        <Target className=\"w-4 h-4 mr-1\" />\n                        Market\n                      </button>\n                    </div>\n                  </div>\n\n                  {/* Order Book */}\n                  <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Order Book</h3>\n                    \n                    {/* Asks */}\n                    <div className=\"mb-4\">\n                      <h4 className=\"text-sm font-medium text-red-600 dark:text-red-400 mb-2\">Asks</h4>\n                      <div className=\"space-y-1\">\n                        {orderBook.asks.slice().reverse().map((ask, index) => (\n                          <div key={index} className=\"flex justify-between text-xs\">\n                            <span className=\"text-red-600 dark:text-red-400\">{formatCurrency(ask.price, 2)}</span>\n                            <span className=\"text-gray-600 dark:text-gray-400\">{ask.quantity}</span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n\n                    {/* Spread */}\n                    <div className=\"py-2 border-y border-gray-200 dark:border-gray-700 mb-4\">\n                      <div className=\"text-center text-sm font-medium text-gray-900 dark:text-white\">\n                        Spread: {formatCurrency(orderBook.asks[0].price - orderBook.bids[0].price, 2)}\n                      </div>\n                    </div>\n\n                    {/* Bids */}\n                    <div>\n                      <h4 className=\"text-sm font-medium text-green-600 dark:text-green-400 mb-2\">Bids</h4>\n                      <div className=\"space-y-1\">\n                        {orderBook.bids.map((bid, index) => (\n                          <div key={index} className=\"flex justify-between text-xs\">\n                            <span className=\"text-green-600 dark:text-green-400\">{formatCurrency(bid.price, 2)}</span>\n                            <span className=\"text-gray-600 dark:text-gray-400\">{bid.quantity}</span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Recent Trades */}\n                  <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Recent Trades</h3>\n                    <div className=\"space-y-3\">\n                      {recentTrades.map((trade) => (\n                        <div key={trade.id} className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center space-x-2\">\n                            <div className={`h-2 w-2 rounded-full ${\n                              trade.type === 'buy' ? 'bg-green-500' : 'bg-red-500'\n                            }`}></div>\n                            <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                              {trade.symbol}\n                            </span>\n                            <span className={`text-xs px-2 py-1 rounded-full ${\n                              trade.status === 'filled' ? 'bg-green-100 dark:bg-green-900/20 text-green-700 dark:text-green-400' :\n                              trade.status === 'pending' ? 'bg-yellow-100 dark:bg-yellow-900/20 text-yellow-700 dark:text-yellow-400' :\n                              'bg-red-100 dark:bg-red-900/20 text-red-700 dark:text-red-400'\n                            }`}>\n                              {trade.status}\n                            </span>\n                          </div>\n                          <div className=\"text-right\">\n                            <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                              {formatCurrency(trade.price, 2)}\n                            </p>\n                            <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                              {trade.quantity} shares\n                            </p>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>\n      \n      {/* Trading Panel Modal */}\n      <TradingPanel \n        isOpen={isTradingPanelOpen}\n        onClose={() => setIsTradingPanelOpen(false)}\n        defaultSymbol={selectedAsset}\n        isModal={true}\n      />\n    </AppLayout>\n  );\n}\n\nexport default function TradingPage() {\n  return (\n    <Suspense fallback={<div className=\"flex items-center justify-center min-h-screen\">Loading...</div>}>\n      <TradingContent />\n    </Suspense>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}