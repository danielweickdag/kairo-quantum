{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/services/alertService.ts"],"sourcesContent":["'use client';\n\nexport interface AlertPreferences {\n  id: string;\n  userId: string;\n  emailNotifications: boolean;\n  pushNotifications: boolean;\n  smsNotifications: boolean;\n  tradingAlerts: boolean;\n  priceAlerts: boolean;\n  portfolioAlerts: boolean;\n  newsAlerts: boolean;\n  systemAlerts: boolean;\n  soundEnabled: boolean;\n  alertFrequency: 'immediate' | 'hourly' | 'daily';\n  quietHours: {\n    enabled: boolean;\n    startTime: string;\n    endTime: string;\n  };\n}\n\nexport type AlertCategory = 'price' | 'portfolio' | 'news' | 'technical' | 'risk' | 'trading';\n\nexport interface Alert {\n  id: string;\n  type: 'price' | 'portfolio' | 'trading' | 'news' | 'system' | 'risk';\n  category?: AlertCategory;\n  priority: 'low' | 'medium' | 'high' | 'critical';\n  title: string;\n  message: string;\n  symbol?: string;\n  targetPrice?: number;\n  currentPrice?: number;\n  threshold?: number;\n  isActive: boolean;\n  createdAt: Date;\n  triggeredAt?: Date;\n  userId: string;\n  conditions: AlertCondition[];\n  recurring?: boolean;\n  cooldownMinutes?: number;\n}\n\nexport interface AlertCondition {\n  id: string;\n  type: 'price_above' | 'price_below' | 'volume_spike' | 'percentage_change' | 'portfolio_value' | 'profit_loss' | 'rsi' | 'macd';\n  value: number;\n  operator: '>' | '<' | '>=' | '<=' | '==';\n  timeframe?: '1m' | '5m' | '15m' | '1h' | '4h' | '1d';\n  symbol?: string;\n}\n\nexport interface AlertTemplate {\n  id: string;\n  name: string;\n  description: string;\n  type: Alert['type'];\n  category?: AlertCategory;\n  defaultConditions: Omit<AlertCondition, 'id'>[];\n  isCustom: boolean;\n  priority?: 'low' | 'medium' | 'high' | 'critical';\n  isPopular?: boolean;\n}\n\nclass AlertService {\n  private alerts: Alert[] = [];\n  private preferences: AlertPreferences | null = null;\n  private templates: AlertTemplate[] = [];\n  private listeners: ((alerts: Alert[]) => void)[] = [];\n\n  constructor() {\n    this.initializeDefaultTemplates();\n    this.loadUserPreferences();\n  }\n\n  // Initialize default alert templates\n  private initializeDefaultTemplates() {\n    this.templates = [\n      // Price Alerts\n      {\n        id: 'price-breakout',\n        name: 'Price Breakout Alert',\n        description: 'Alert when price breaks above or below a key level',\n        type: 'price',\n        category: 'price',\n        defaultConditions: [\n          { type: 'price_above', value: 0, operator: '>', timeframe: '1m' }\n        ],\n        isCustom: false,\n        priority: 'medium',\n        isPopular: true\n      },\n      {\n        id: 'price-below-target',\n        name: 'Price Below Target',\n        description: 'Alert when price goes below a specific value',\n        type: 'price',\n        category: 'price',\n        defaultConditions: [\n          { type: 'price_below', value: 0, operator: '<', timeframe: '1m' }\n        ],\n        isCustom: false,\n        priority: 'high',\n        isPopular: true\n      },\n      {\n        id: 'price-change-percent',\n        name: 'Price Change %',\n        description: 'Alert when price changes by a percentage',\n        type: 'price',\n        category: 'price',\n        defaultConditions: [\n          { type: 'percentage_change', value: 5, operator: '>', timeframe: '5m' }\n        ],\n        isCustom: false,\n        priority: 'medium'\n      },\n      \n      // Portfolio Alerts\n      {\n        id: 'portfolio-loss',\n        name: 'Portfolio Loss Alert',\n        description: 'Alert when portfolio value drops by a certain percentage',\n        type: 'portfolio',\n        category: 'portfolio',\n        defaultConditions: [\n          { type: 'percentage_change', value: -5, operator: '<=', timeframe: '1d' }\n        ],\n        isCustom: false,\n        priority: 'critical',\n        isPopular: true\n      },\n      {\n        id: 'profit-loss-threshold',\n        name: 'Profit/Loss Threshold',\n        description: 'Alert when profit or loss reaches a threshold',\n        type: 'portfolio',\n        category: 'portfolio',\n        defaultConditions: [\n          { type: 'profit_loss', value: -500, operator: '<', timeframe: '1h' }\n        ],\n        isCustom: false,\n        priority: 'critical'\n      },\n      \n      // Technical Analysis Alerts\n      {\n        id: 'rsi-overbought',\n        name: 'RSI Overbought',\n        description: 'Alert when RSI indicates overbought conditions',\n        type: 'trading',\n        category: 'technical',\n        defaultConditions: [\n          { type: 'rsi', value: 70, operator: '>', timeframe: '1h' }\n        ],\n        isCustom: false,\n        priority: 'medium'\n      },\n      {\n        id: 'rsi-oversold',\n        name: 'RSI Oversold',\n        description: 'Alert when RSI indicates oversold conditions',\n        type: 'trading',\n        category: 'technical',\n        defaultConditions: [\n          { type: 'rsi', value: 30, operator: '<', timeframe: '1h' }\n        ],\n        isCustom: false,\n        priority: 'medium'\n      },\n      \n      // Volume and Trading Alerts\n      {\n        id: 'volume-spike',\n        name: 'Volume Spike Alert',\n        description: 'Alert when trading volume increases significantly',\n        type: 'trading',\n        category: 'trading',\n        defaultConditions: [\n          { type: 'volume_spike', value: 200, operator: '>', timeframe: '5m' }\n        ],\n        isCustom: false,\n        priority: 'medium',\n        isPopular: true\n      },\n      \n      // Risk Management Alerts\n      {\n        id: 'risk-threshold',\n        name: 'Risk Threshold Alert',\n        description: 'Alert when risk exposure exceeds safe limits',\n        type: 'risk',\n        category: 'risk',\n        defaultConditions: [\n          { type: 'portfolio_value', value: 10000, operator: '>', timeframe: '1h' }\n        ],\n        isCustom: false,\n        priority: 'critical'\n      },\n      {\n        id: 'stop-loss-trigger',\n        name: 'Stop Loss Trigger',\n        description: 'Alert when stop loss conditions are met',\n        type: 'risk',\n        category: 'risk',\n        defaultConditions: [\n          { type: 'price_below', value: 0, operator: '<', timeframe: '1m' }\n        ],\n        isCustom: false,\n        priority: 'critical'\n      },\n      \n      // News Alerts\n      {\n        id: 'market-news',\n        name: 'Market News Alert',\n        description: 'Alert for important market news',\n        type: 'news',\n        category: 'news',\n        defaultConditions: [\n          { type: 'percentage_change', value: 0, operator: '>', timeframe: '1d' }\n        ],\n        isCustom: false,\n        priority: 'low'\n      }\n    ];\n  }\n\n  // Load user preferences from storage\n  private loadUserPreferences() {\n    try {\n      const stored = localStorage.getItem('alertPreferences');\n      if (stored) {\n        this.preferences = JSON.parse(stored);\n      } else {\n        this.preferences = this.getDefaultPreferences();\n        this.savePreferences();\n      }\n    } catch (error) {\n      console.error('Failed to load alert preferences:', error);\n      this.preferences = this.getDefaultPreferences();\n    }\n  }\n\n  // Get default preferences\n  private getDefaultPreferences(): AlertPreferences {\n    return {\n      id: 'default',\n      userId: 'current-user',\n      emailNotifications: true,\n      pushNotifications: true,\n      smsNotifications: false,\n      tradingAlerts: true,\n      priceAlerts: true,\n      portfolioAlerts: true,\n      newsAlerts: false,\n      systemAlerts: true,\n      soundEnabled: true,\n      alertFrequency: 'immediate',\n      quietHours: {\n        enabled: false,\n        startTime: '22:00',\n        endTime: '08:00'\n      }\n    };\n  }\n\n  // Save preferences to storage\n  private savePreferences() {\n    if (this.preferences) {\n      localStorage.setItem('alertPreferences', JSON.stringify(this.preferences));\n    }\n  }\n\n  // Subscribe to alert updates\n  subscribe(callback: (alerts: Alert[]) => void) {\n    this.listeners.push(callback);\n    return () => {\n      this.listeners = this.listeners.filter(listener => listener !== callback);\n    };\n  }\n\n  // Notify all listeners\n  private notifyListeners() {\n    this.listeners.forEach(listener => listener(this.alerts));\n  }\n\n  // Get user preferences\n  getPreferences(): AlertPreferences | null {\n    return this.preferences;\n  }\n\n  // Update user preferences\n  updatePreferences(updates: Partial<AlertPreferences>) {\n    if (this.preferences) {\n      this.preferences = { ...this.preferences, ...updates };\n      this.savePreferences();\n    }\n  }\n\n  // Create a new alert\n  createAlert(alertData: Omit<Alert, 'id' | 'createdAt' | 'isActive'>): Alert {\n    const alert: Alert = {\n      ...alertData,\n      id: `alert_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      createdAt: new Date(),\n      isActive: true,\n      category: alertData.category || 'trading', // Default category\n      recurring: alertData.recurring || false,\n      cooldownMinutes: alertData.cooldownMinutes || 0\n    };\n\n    this.alerts.push(alert);\n    this.notifyListeners();\n    return alert;\n  }\n\n  // Get all alerts\n  getAlerts(): Alert[] {\n    return this.alerts;\n  }\n\n  // Get active alerts\n  getActiveAlerts(): Alert[] {\n    return this.alerts.filter(alert => alert.isActive);\n  }\n\n  // Get alerts by type\n  getAlertsByType(type: Alert['type']): Alert[] {\n    return this.alerts.filter(alert => alert.type === type);\n  }\n\n  // Update alert\n  updateAlert(id: string, updates: Partial<Alert>) {\n    const index = this.alerts.findIndex(alert => alert.id === id);\n    if (index !== -1) {\n      this.alerts[index] = { ...this.alerts[index], ...updates };\n      this.notifyListeners();\n    }\n  }\n\n  // Delete alert\n  deleteAlert(id: string) {\n    this.alerts = this.alerts.filter(alert => alert.id !== id);\n    this.notifyListeners();\n  }\n\n  // Toggle alert active state\n  toggleAlert(id: string) {\n    const alert = this.alerts.find(alert => alert.id === id);\n    if (alert) {\n      alert.isActive = !alert.isActive;\n      this.notifyListeners();\n    }\n  }\n\n  // Check if alerts should be triggered (mock implementation)\n  checkAlertConditions(marketData: { symbol: string; price: number; volume: number }) {\n    const activeAlerts = this.getActiveAlerts();\n    \n    activeAlerts.forEach(alert => {\n      if (alert.symbol === marketData.symbol) {\n        alert.conditions.forEach(condition => {\n          let shouldTrigger = false;\n\n          switch (condition.type) {\n            case 'price_above':\n              shouldTrigger = marketData.price > condition.value;\n              break;\n            case 'price_below':\n              shouldTrigger = marketData.price < condition.value;\n              break;\n            case 'volume_spike':\n              shouldTrigger = marketData.volume > condition.value;\n              break;\n          }\n\n          if (shouldTrigger && !alert.triggeredAt) {\n            this.triggerAlert(alert);\n          }\n        });\n      }\n    });\n  }\n\n  // Trigger an alert\n  private triggerAlert(alert: Alert) {\n    if (!alert.isActive) return;\n    \n    // Check cooldown period\n    if (alert.triggeredAt && alert.cooldownMinutes) {\n      const timeSinceLastTrigger = Date.now() - alert.triggeredAt.getTime();\n      const cooldownMs = alert.cooldownMinutes * 60 * 1000;\n      if (timeSinceLastTrigger < cooldownMs) {\n        return; // Still in cooldown period\n      }\n    }\n    \n    alert.triggeredAt = new Date();\n    \n    // Send notification based on user preferences and alert priority\n    if (this.preferences) {\n      if (this.preferences.pushNotifications) {\n        this.sendPushNotification(alert);\n      }\n      \n      if (this.preferences.emailNotifications && (alert.priority === 'high' || alert.priority === 'critical')) {\n        this.sendEmailNotification(alert);\n      }\n      \n      if (this.preferences.soundEnabled) {\n        this.playAlertSound(alert.priority);\n      }\n    }\n\n    // Deactivate non-recurring alerts after triggering\n    if (!alert.recurring) {\n      alert.isActive = false;\n    }\n\n    this.notifyListeners();\n  }\n\n  // Send push notification\n  private sendPushNotification(alert: Alert) {\n    if ('Notification' in window && Notification.permission === 'granted') {\n      new Notification(alert.title, {\n        body: alert.message,\n        icon: '/favicon.ico',\n        tag: alert.id\n      });\n    }\n  }\n\n  // Send email notification (mock)\n  private sendEmailNotification(alert: Alert) {\n    console.log('Email notification sent:', alert.title);\n    // In a real implementation, this would call an API endpoint\n  }\n\n  // Play alert sound\n  private playAlertSound(priority: Alert['priority']) {\n    try {\n      const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n      const oscillator = audioContext.createOscillator();\n      const gainNode = audioContext.createGain();\n\n      oscillator.connect(gainNode);\n      gainNode.connect(audioContext.destination);\n\n      // Different frequencies for different priorities\n      const frequencies = {\n        low: 440,\n        medium: 554,\n        high: 659,\n        critical: 880\n      };\n\n      oscillator.frequency.setValueAtTime(frequencies[priority], audioContext.currentTime);\n      oscillator.type = 'sine';\n      \n      gainNode.gain.setValueAtTime(0.1, audioContext.currentTime);\n      gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.5);\n\n      oscillator.start(audioContext.currentTime);\n      oscillator.stop(audioContext.currentTime + 0.5);\n    } catch (error) {\n      console.error('Failed to play alert sound:', error);\n    }\n  }\n\n  // Get alert templates\n  getTemplates(): AlertTemplate[] {\n    return this.templates;\n  }\n\n  getTemplatesByCategory(category: Alert['type']): AlertTemplate[] {\n    return this.templates.filter(template => template.type === category);\n  }\n\n  getTemplatesByAlertCategory(category: AlertCategory): AlertTemplate[] {\n    return this.templates.filter(template => template.category === category);\n  }\n\n  getPopularTemplates(): AlertTemplate[] {\n    return this.templates.filter(template => template.isPopular === true);\n  }\n\n  getAlertsByCategory(category: AlertCategory): Alert[] {\n    return this.alerts.filter(alert => alert.category === category);\n  }\n\n  getAlertsByPriority(priority: Alert['priority']): Alert[] {\n    return this.alerts.filter(alert => alert.priority === priority);\n  }\n\n  getCriticalAlerts(): Alert[] {\n    return this.getAlertsByPriority('critical').filter(alert => alert.isActive);\n  }\n\n  // Create alert from template\n  createAlertFromTemplate(templateId: string, symbol: string, customValues: Record<string, number>): Alert | null {\n    const template = this.templates.find(t => t.id === templateId);\n    if (!template) return null;\n\n    const conditions: AlertCondition[] = template.defaultConditions.map(condition => ({\n      ...condition,\n      id: `condition_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      value: customValues[condition.type] || condition.value\n    }));\n\n    return this.createAlert({\n      type: template.type,\n      priority: 'medium',\n      title: `${template.name} - ${symbol}`,\n      message: `${template.description} for ${symbol}`,\n      symbol,\n      userId: 'current-user',\n      conditions\n    });\n  }\n\n  // Request notification permission\n  async requestNotificationPermission(): Promise<boolean> {\n    if ('Notification' in window) {\n      const permission = await Notification.requestPermission();\n      return permission === 'granted';\n    }\n    return false;\n  }\n\n  // Enable alerts (main function for the button)\n  async enableAlerts(): Promise<boolean> {\n    try {\n      // Request notification permission\n      const hasPermission = await this.requestNotificationPermission();\n      \n      if (hasPermission) {\n        // Update preferences to enable notifications\n        this.updatePreferences({\n          pushNotifications: true,\n          tradingAlerts: true,\n          priceAlerts: true,\n          portfolioAlerts: true,\n          systemAlerts: true\n        });\n\n        // Show success notification\n        this.sendPushNotification({\n          id: 'welcome',\n          type: 'system',\n          priority: 'medium',\n          title: 'Alerts Enabled!',\n          message: 'You will now receive real-time trading alerts and notifications.',\n          userId: 'current-user',\n          conditions: [],\n          isActive: true,\n          createdAt: new Date()\n        });\n\n        return true;\n      } else {\n        console.warn('Notification permission denied');\n        return false;\n      }\n    } catch (error) {\n      console.error('Failed to enable alerts:', error);\n      return false;\n    }\n  }\n}\n\n// Export singleton instance\nexport const alertService = new AlertService();\nexport default alertService;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 533, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/contexts/AuthContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-hot-toast';\nimport { alertService } from '@/services/alertService';\n\ninterface User {\n  id: string;\n  username: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  avatar?: string;\n  bio?: string;\n  accountType: 'INDIVIDUAL' | 'HEDGE_FUND' | 'CELEBRITY' | 'INFLUENCER';\n  isVerified: boolean;\n  isPublic: boolean;\n  createdAt: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  register: (data: RegisterData) => Promise<void>;\n  logout: () => void;\n  updateProfile: (data: Partial<User>) => Promise<void>;\n  refreshToken: () => Promise<void>;\n}\n\ninterface RegisterData {\n  username: string;\n  email: string;\n  password: string;\n  firstName: string;\n  lastName: string;\n  accountType: 'INDIVIDUAL' | 'HEDGE_FUND' | 'CELEBRITY' | 'INFLUENCER';\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Configure axios defaults - use frontend API routes\naxios.defaults.baseURL = '/api';\n\n// Add request interceptor to include auth token\naxios.interceptors.request.use(\n  (config) => {\n    const token = typeof window !== 'undefined' ? localStorage.getItem('token') : null;\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor to handle token refresh\naxios.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n    \n    if (error.response?.status === 401 && !originalRequest._retry && typeof window !== 'undefined') {\n      originalRequest._retry = true;\n      \n      try {\n        const refreshToken = localStorage.getItem('refreshToken');\n        if (refreshToken) {\n          const response = await axios.post('/auth/refresh', {\n            refreshToken,\n          });\n          \n          const { token } = response.data.data;\n          localStorage.setItem('token', token);\n          \n          // Retry the original request\n          originalRequest.headers.Authorization = `Bearer ${token}`;\n          return axios(originalRequest);\n        }\n      } catch (refreshError) {\n        // Refresh failed, redirect to login\n        localStorage.removeItem('token');\n        localStorage.removeItem('refreshToken');\n        if (typeof window !== 'undefined') {\n          window.location.href = '/login';\n        }\n      }\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      if (typeof window === 'undefined') {\n        setLoading(false);\n        return;\n      }\n      \n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await axios.get('/auth/me');\n          setUser(response.data.data.user);\n        } catch (error) {\n          localStorage.removeItem('token');\n          localStorage.removeItem('refreshToken');\n        }\n      }\n      setLoading(false);\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await axios.post('/auth/login', {\n        email,\n        password,\n      });\n\n      const { user, accessToken, refreshToken } = response.data.data;\n      \n      if (typeof window !== 'undefined') {\n        localStorage.setItem('token', accessToken);\n        localStorage.setItem('refreshToken', refreshToken);\n      }\n      setUser(user);\n      \n      // Ensure alerts are enabled for all users\n      try {\n        await alertService.enableAlerts();\n        console.log('Alerts enabled for user login');\n      } catch (error) {\n        console.warn('Failed to enable alerts for user:', error);\n      }\n      \n      toast.success('Login successful!');\n    } catch (error: any) {\n      const message = error.response?.data?.message || 'Login failed';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  const register = async (data: RegisterData) => {\n    try {\n      const response = await axios.post('/auth/register', data);\n      \n      const { user, accessToken, refreshToken } = response.data.data;\n      \n      if (typeof window !== 'undefined') {\n        localStorage.setItem('token', accessToken);\n        localStorage.setItem('refreshToken', refreshToken);\n      }\n      setUser(user);\n      \n      // Automatically enable alerts for new users\n      try {\n        await alertService.enableAlerts();\n        console.log('Alerts automatically enabled for new user');\n      } catch (error) {\n        console.warn('Failed to auto-enable alerts for new user:', error);\n      }\n      \n      toast.success('Registration successful!');\n    } catch (error: any) {\n      const message = error.response?.data?.message || 'Registration failed';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    if (typeof window !== 'undefined') {\n      localStorage.removeItem('token');\n      localStorage.removeItem('refreshToken');\n    }\n    setUser(null);\n    toast.success('Logged out successfully');\n  };\n\n  const updateProfile = async (data: Partial<User>) => {\n    try {\n      const response = await axios.put('/auth/profile', data);\n      setUser(response.data.data.user);\n      toast.success('Profile updated successfully!');\n    } catch (error: any) {\n      const message = error.response?.data?.message || 'Profile update failed';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  const refreshToken = async () => {\n    try {\n      if (typeof window === 'undefined') {\n        throw new Error('Cannot refresh token on server side');\n      }\n      \n      const refreshToken = localStorage.getItem('refreshToken');\n      if (!refreshToken) throw new Error('No refresh token');\n      \n      const response = await axios.post('/auth/refresh', {\n        refreshToken,\n      });\n      \n      const { token } = response.data.data;\n      localStorage.setItem('token', token);\n    } catch (error) {\n      logout();\n      throw error;\n    }\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile,\n    refreshToken,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 748, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/contexts/ThemeContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';\n\ntype Theme = 'light' | 'dark';\n\ninterface ThemeContextType {\n  theme: Theme;\n  toggleTheme: () => void;\n  setTheme: (theme: Theme) => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const ThemeProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [theme, setThemeState] = useState<Theme>('light');\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n    \n    // Check for saved theme preference or default to 'light'\n    const savedTheme = typeof window !== 'undefined' ? localStorage.getItem('theme') as Theme : null;\n    const prefersDark = typeof window !== 'undefined' ? window.matchMedia('(prefers-color-scheme: dark)').matches : false;\n    \n    const initialTheme = savedTheme || (prefersDark ? 'dark' : 'light');\n    setThemeState(initialTheme);\n    \n    // Apply theme to document\n    if (typeof document !== 'undefined') {\n      document.documentElement.classList.toggle('dark', initialTheme === 'dark');\n    }\n  }, []);\n\n  // Prevent hydration mismatch by not rendering theme-dependent content until mounted\n  if (!mounted) {\n    return <>{children}</>;\n  }\n\n  const setTheme = (newTheme: Theme) => {\n    setThemeState(newTheme);\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('theme', newTheme);\n    }\n    if (typeof document !== 'undefined') {\n      document.documentElement.classList.toggle('dark', newTheme === 'dark');\n    }\n  };\n\n  const toggleTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme);\n  };\n\n  const value = {\n    theme,\n    toggleTheme,\n    setTheme,\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    // Return default values during mounting phase to prevent hydration errors\n    return {\n      theme: 'light' as Theme,\n      toggleTheme: () => {},\n      setTheme: () => {}\n    };\n  }\n  return context;\n};\n\nexport default ThemeContext;"],"names":[],"mappings":";;;;;;;;;AAEA;;;AAFA;;AAYA,MAAM,6BAAe,IAAA,8KAAa,EAA+B;AAE1D,MAAM,gBAAmD;QAAC,EAAE,QAAQ,EAAE;;IAC3E,MAAM,CAAC,OAAO,cAAc,GAAG,IAAA,yKAAQ,EAAQ;IAC/C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,yKAAQ,EAAC;IAEvC,IAAA,0KAAS;mCAAC;YACR,WAAW;YAEX,yDAAyD;YACzD,MAAM,aAAa,uCAAgC,aAAa,OAAO,CAAC,WAAoB;YAC5F,MAAM,cAAc,uCAAgC,OAAO,UAAU,CAAC,gCAAgC,OAAO,GAAG;YAEhH,MAAM,eAAe,cAAc,CAAC,cAAc,SAAS,OAAO;YAClE,cAAc;YAEd,0BAA0B;YAC1B,IAAI,OAAO,aAAa,aAAa;gBACnC,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,iBAAiB;YACrE;QACF;kCAAG,EAAE;IAEL,oFAAoF;IACpF,IAAI,CAAC,SAAS;QACZ,qBAAO;sBAAG;;IACZ;IAEA,MAAM,WAAW,CAAC;QAChB,cAAc;QACd,wCAAmC;YACjC,aAAa,OAAO,CAAC,SAAS;QAChC;QACA,IAAI,OAAO,aAAa,aAAa;YACnC,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,aAAa;QACjE;IACF;IAEA,MAAM,cAAc;QAClB,MAAM,WAAW,UAAU,UAAU,SAAS;QAC9C,SAAS;IACX;IAEA,MAAM,QAAQ;QACZ;QACA;QACA;IACF;IAEA,qBACE,6LAAC,aAAa,QAAQ;QAAC,OAAO;kBAC3B;;;;;;AAGP;GAnDa;KAAA;AAqDN,MAAM,WAAW;;IACtB,MAAM,UAAU,IAAA,2KAAU,EAAC;IAC3B,IAAI,YAAY,WAAW;QACzB,0EAA0E;QAC1E,OAAO;YACL,OAAO;YACP,aAAa,KAAO;YACpB,UAAU,KAAO;QACnB;IACF;IACA,OAAO;AACT;IAXa;uCAaE","debugId":null}},
    {"offset": {"line": 841, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/contexts/BrokerAccountContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, useEffect, useCallback, ReactNode } from 'react';\n\ninterface BrokerAccount {\n  id: string;\n  accountNumber: string;\n  accountType: string;\n  status: string;\n  buyingPower: number;\n  cashBalance: number;\n  portfolioValue: number;\n  currency: string;\n  brokerConnection: {\n    id: string;\n    accountName: string;\n    brokerType: string;\n    environment: string;\n  };\n}\n\ninterface BrokerAccountContextType {\n  selectedAccount: BrokerAccount | null;\n  setSelectedAccount: (account: BrokerAccount | null) => void;\n  accounts: BrokerAccount[];\n  loading: boolean;\n  error: string | null;\n  refreshAccounts: () => Promise<void>;\n}\n\nconst BrokerAccountContext = createContext<BrokerAccountContextType | undefined>(undefined);\n\ninterface BrokerAccountProviderProps {\n  children: ReactNode;\n}\n\nexport function BrokerAccountProvider({ children }: BrokerAccountProviderProps) {\n  const [selectedAccount, setSelectedAccount] = useState<BrokerAccount | null>(null);\n  const [accounts, setAccounts] = useState<BrokerAccount[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchBrokerAccounts = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const token = localStorage.getItem('token');\n      if (!token) {\n        // User is not authenticated, set empty accounts and return\n        setAccounts([]);\n        setSelectedAccount(null);\n        setLoading(false);\n        return;\n      }\n\n      const response = await fetch('/api/brokers/accounts', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch broker accounts');\n      }\n\n      const data = await response.json();\n      if (data.success) {\n        setAccounts(data.data || []);\n        \n        // If there's a previously selected account, try to maintain it\n        if (selectedAccount) {\n          const stillExists = data.data.find((acc: BrokerAccount) => acc.id === selectedAccount.id);\n          if (!stillExists) {\n            setSelectedAccount(null);\n          }\n        }\n        \n        // Auto-select the first account if none is selected and accounts are available\n        if (!selectedAccount && data.data.length > 0) {\n          setSelectedAccount(data.data[0]);\n        }\n      } else {\n        throw new Error(data.message || 'Failed to fetch accounts');\n      }\n    } catch (err) {\n      console.error('Error fetching broker accounts:', err);\n      setError(err instanceof Error ? err.message : 'Failed to load accounts');\n      setAccounts([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedAccount]);\n\n  const refreshAccounts = async () => {\n    await fetchBrokerAccounts();\n  };\n\n  useEffect(() => {\n    fetchBrokerAccounts();\n  }, []);\n\n  // Save selected account to localStorage\n  useEffect(() => {\n    if (selectedAccount) {\n      localStorage.setItem('selectedBrokerAccount', JSON.stringify(selectedAccount));\n    } else {\n      localStorage.removeItem('selectedBrokerAccount');\n    }\n  }, [selectedAccount]);\n\n  // Load selected account from localStorage on mount\n  useEffect(() => {\n    const savedAccount = localStorage.getItem('selectedBrokerAccount');\n    if (savedAccount) {\n      try {\n        const parsedAccount = JSON.parse(savedAccount);\n        setSelectedAccount(parsedAccount);\n      } catch (err) {\n        console.error('Error parsing saved broker account:', err);\n        localStorage.removeItem('selectedBrokerAccount');\n      }\n    }\n  }, []);\n\n  const value: BrokerAccountContextType = {\n    selectedAccount,\n    setSelectedAccount,\n    accounts,\n    loading,\n    error,\n    refreshAccounts\n  };\n\n  return (\n    <BrokerAccountContext.Provider value={value}>\n      {children}\n    </BrokerAccountContext.Provider>\n  );\n}\n\nexport function useBrokerAccount() {\n  const context = useContext(BrokerAccountContext);\n  if (context === undefined) {\n    throw new Error('useBrokerAccount must be used within a BrokerAccountProvider');\n  }\n  return context;\n}\n\nexport type { BrokerAccount, BrokerAccountContextType };"],"names":[],"mappings":";;;;;;;AAEA;;;AAFA;;AA8BA,MAAM,qCAAuB,IAAA,8KAAa,EAAuC;AAM1E,SAAS,sBAAsB,KAAwC;QAAxC,EAAE,QAAQ,EAA8B,GAAxC;;IACpC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,yKAAQ,EAAuB;IAC7E,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EAAkB,EAAE;IAC5D,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,yKAAQ,EAAC;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,yKAAQ,EAAgB;IAElD,MAAM,sBAAsB,IAAA,4KAAW;kEAAC;YACtC,IAAI;gBACF,WAAW;gBACX,SAAS;gBAET,MAAM,QAAQ,aAAa,OAAO,CAAC;gBACnC,IAAI,CAAC,OAAO;oBACV,2DAA2D;oBAC3D,YAAY,EAAE;oBACd,mBAAmB;oBACnB,WAAW;oBACX;gBACF;gBAEA,MAAM,WAAW,MAAM,MAAM,yBAAyB;oBACpD,SAAS;wBACP,iBAAiB,AAAC,UAAe,OAAN;wBAC3B,gBAAgB;oBAClB;gBACF;gBAEA,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,IAAI,MAAM;gBAClB;gBAEA,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,IAAI,KAAK,OAAO,EAAE;oBAChB,YAAY,KAAK,IAAI,IAAI,EAAE;oBAE3B,+DAA+D;oBAC/D,IAAI,iBAAiB;wBACnB,MAAM,cAAc,KAAK,IAAI,CAAC,IAAI;kGAAC,CAAC,MAAuB,IAAI,EAAE,KAAK,gBAAgB,EAAE;;wBACxF,IAAI,CAAC,aAAa;4BAChB,mBAAmB;wBACrB;oBACF;oBAEA,+EAA+E;oBAC/E,IAAI,CAAC,mBAAmB,KAAK,IAAI,CAAC,MAAM,GAAG,GAAG;wBAC5C,mBAAmB,KAAK,IAAI,CAAC,EAAE;oBACjC;gBACF,OAAO;oBACL,MAAM,IAAI,MAAM,KAAK,OAAO,IAAI;gBAClC;YACF,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,mCAAmC;gBACjD,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;gBAC9C,YAAY,EAAE;YAChB,SAAU;gBACR,WAAW;YACb;QACF;iEAAG;QAAC;KAAgB;IAEpB,MAAM,kBAAkB;QACtB,MAAM;IACR;IAEA,IAAA,0KAAS;2CAAC;YACR;QACF;0CAAG,EAAE;IAEL,wCAAwC;IACxC,IAAA,0KAAS;2CAAC;YACR,IAAI,iBAAiB;gBACnB,aAAa,OAAO,CAAC,yBAAyB,KAAK,SAAS,CAAC;YAC/D,OAAO;gBACL,aAAa,UAAU,CAAC;YAC1B;QACF;0CAAG;QAAC;KAAgB;IAEpB,mDAAmD;IACnD,IAAA,0KAAS;2CAAC;YACR,MAAM,eAAe,aAAa,OAAO,CAAC;YAC1C,IAAI,cAAc;gBAChB,IAAI;oBACF,MAAM,gBAAgB,KAAK,KAAK,CAAC;oBACjC,mBAAmB;gBACrB,EAAE,OAAO,KAAK;oBACZ,QAAQ,KAAK,CAAC,uCAAuC;oBACrD,aAAa,UAAU,CAAC;gBAC1B;YACF;QACF;0CAAG,EAAE;IAEL,MAAM,QAAkC;QACtC;QACA;QACA;QACA;QACA;QACA;IACF;IAEA,qBACE,6LAAC,qBAAqB,QAAQ;QAAC,OAAO;kBACnC;;;;;;AAGP;GAxGgB;KAAA;AA0GT,SAAS;;IACd,MAAM,UAAU,IAAA,2KAAU,EAAC;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANgB","debugId":null}},
    {"offset": {"line": 985, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/contexts/TradingModeContext.tsx"],"sourcesContent":["'use client'\n\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\n\ninterface TradingModeContextType {\n  isPaperTrading: boolean;\n  setIsPaperTrading: (value: boolean) => void;\n  tradingMode: 'paper' | 'live';\n  toggleTradingMode: () => void;\n}\n\nconst TradingModeContext = createContext<TradingModeContextType | undefined>(undefined);\n\ninterface TradingModeProviderProps {\n  children: ReactNode;\n}\n\nexport function TradingModeProvider({ children }: TradingModeProviderProps) {\n  const [isPaperTrading, setIsPaperTrading] = useState(true); // Default to paper trading (demo mode)\n\n  // Load trading mode from localStorage on mount\n  useEffect(() => {\n    const savedMode = localStorage.getItem('tradingMode');\n    if (savedMode) {\n      setIsPaperTrading(savedMode === 'paper');\n    }\n  }, []);\n\n  // Save trading mode to localStorage when it changes\n  useEffect(() => {\n    localStorage.setItem('tradingMode', isPaperTrading ? 'paper' : 'live');\n  }, [isPaperTrading]);\n\n  const tradingMode = isPaperTrading ? 'paper' : 'live';\n\n  const toggleTradingMode = () => {\n    setIsPaperTrading(!isPaperTrading);\n  };\n\n  return (\n    <TradingModeContext.Provider\n      value={{\n        isPaperTrading,\n        setIsPaperTrading,\n        tradingMode,\n        toggleTradingMode,\n      }}\n    >\n      {children}\n    </TradingModeContext.Provider>\n  );\n}\n\nexport function useTradingMode() {\n  const context = useContext(TradingModeContext);\n  if (context === undefined) {\n    throw new Error('useTradingMode must be used within a TradingModeProvider');\n  }\n  return context;\n}\n\nexport { TradingModeContext };"],"names":[],"mappings":";;;;;;;;;AAEA;;;AAFA;;AAWA,MAAM,mCAAqB,IAAA,8KAAa,EAAqC;AAMtE,SAAS,oBAAoB,KAAsC;QAAtC,EAAE,QAAQ,EAA4B,GAAtC;;IAClC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,IAAA,yKAAQ,EAAC,OAAO,uCAAuC;IAEnG,+CAA+C;IAC/C,IAAA,0KAAS;yCAAC;YACR,MAAM,YAAY,aAAa,OAAO,CAAC;YACvC,IAAI,WAAW;gBACb,kBAAkB,cAAc;YAClC;QACF;wCAAG,EAAE;IAEL,oDAAoD;IACpD,IAAA,0KAAS;yCAAC;YACR,aAAa,OAAO,CAAC,eAAe,iBAAiB,UAAU;QACjE;wCAAG;QAAC;KAAe;IAEnB,MAAM,cAAc,iBAAiB,UAAU;IAE/C,MAAM,oBAAoB;QACxB,kBAAkB,CAAC;IACrB;IAEA,qBACE,6LAAC,mBAAmB,QAAQ;QAC1B,OAAO;YACL;YACA;YACA;YACA;QACF;kBAEC;;;;;;AAGP;GAlCgB;KAAA;AAoCT,SAAS;;IACd,MAAM,UAAU,IAAA,2KAAU,EAAC;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;IANgB","debugId":null}},
    {"offset": {"line": 1060, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/lib/errorHandler.ts"],"sourcesContent":["'use client';\n\nimport { toast } from 'react-hot-toast';\n\n// Error types for better categorization\nexport enum ErrorType {\n  VALIDATION = 'validation',\n  NETWORK = 'network',\n  AUTHENTICATION = 'authentication',\n  TRADING = 'trading',\n  COMPILATION = 'compilation',\n  SYSTEM = 'system',\n  USER_INPUT = 'user_input'\n}\n\n// Error severity levels\nexport enum ErrorSeverity {\n  LOW = 'low',\n  MEDIUM = 'medium',\n  HIGH = 'high',\n  CRITICAL = 'critical'\n}\n\n// Standardized error interface\nexport interface AppError {\n  type: ErrorType;\n  severity: ErrorSeverity;\n  message: string;\n  code?: string;\n  details?: any;\n  timestamp: Date;\n  userId?: string;\n  context?: string;\n}\n\n// Error handler configuration\ninterface ErrorHandlerConfig {\n  showToast: boolean;\n  logToConsole: boolean;\n  logToService: boolean;\n  retryable: boolean;\n}\n\n// Default configurations for different error types\nconst DEFAULT_CONFIGS: Record<ErrorType, ErrorHandlerConfig> = {\n  [ErrorType.VALIDATION]: {\n    showToast: true,\n    logToConsole: false,\n    logToService: false,\n    retryable: false\n  },\n  [ErrorType.NETWORK]: {\n    showToast: true,\n    logToConsole: true,\n    logToService: true,\n    retryable: true\n  },\n  [ErrorType.AUTHENTICATION]: {\n    showToast: true,\n    logToConsole: true,\n    logToService: true,\n    retryable: false\n  },\n  [ErrorType.TRADING]: {\n    showToast: true,\n    logToConsole: true,\n    logToService: true,\n    retryable: true\n  },\n  [ErrorType.COMPILATION]: {\n    showToast: false,\n    logToConsole: true,\n    logToService: false,\n    retryable: false\n  },\n  [ErrorType.SYSTEM]: {\n    showToast: true,\n    logToConsole: true,\n    logToService: true,\n    retryable: false\n  },\n  [ErrorType.USER_INPUT]: {\n    showToast: true,\n    logToConsole: false,\n    logToService: false,\n    retryable: false\n  }\n};\n\n// Centralized error handler class\nclass ErrorHandler {\n  private static instance: ErrorHandler;\n  private errorQueue: AppError[] = [];\n  private maxQueueSize = 100;\n\n  private constructor() {}\n\n  static getInstance(): ErrorHandler {\n    if (!ErrorHandler.instance) {\n      ErrorHandler.instance = new ErrorHandler();\n    }\n    return ErrorHandler.instance;\n  }\n\n  // Main error handling method\n  handle(error: Error | AppError | string, context?: string, config?: Partial<ErrorHandlerConfig>): AppError {\n    const appError = this.normalizeError(error, context);\n    const finalConfig = { ...DEFAULT_CONFIGS[appError.type], ...config };\n\n    // Add to error queue\n    this.addToQueue(appError);\n\n    // Handle based on configuration\n    if (finalConfig.showToast) {\n      this.showToast(appError);\n    }\n\n    if (finalConfig.logToConsole) {\n      this.logToConsole(appError);\n    }\n\n    if (finalConfig.logToService) {\n      this.logToService(appError);\n    }\n\n    return appError;\n  }\n\n  // Normalize different error types to AppError\n  private normalizeError(error: Error | AppError | string, context?: string): AppError {\n    if (typeof error === 'string') {\n      return {\n        type: ErrorType.SYSTEM,\n        severity: ErrorSeverity.MEDIUM,\n        message: error,\n        timestamp: new Date(),\n        context\n      };\n    }\n\n    if (error instanceof Error) {\n      return {\n        type: this.inferErrorType(error),\n        severity: this.inferSeverity(error),\n        message: error.message,\n        details: {\n          name: error.name,\n          stack: error.stack\n        },\n        timestamp: new Date(),\n        context\n      };\n    }\n\n    // Already an AppError\n    return {\n      ...error,\n      context: context || error.context\n    };\n  }\n\n  // Infer error type from Error object\n  private inferErrorType(error: Error): ErrorType {\n    const message = error.message.toLowerCase();\n    const name = error.name.toLowerCase();\n\n    if (message.includes('validation') || message.includes('required') || message.includes('invalid')) {\n      return ErrorType.VALIDATION;\n    }\n    if (message.includes('network') || message.includes('fetch') || name.includes('network')) {\n      return ErrorType.NETWORK;\n    }\n    if (message.includes('auth') || message.includes('token') || message.includes('unauthorized')) {\n      return ErrorType.AUTHENTICATION;\n    }\n    if (message.includes('trade') || message.includes('order') || message.includes('position')) {\n      return ErrorType.TRADING;\n    }\n    if (message.includes('compile') || message.includes('syntax') || message.includes('parse')) {\n      return ErrorType.COMPILATION;\n    }\n\n    return ErrorType.SYSTEM;\n  }\n\n  // Infer severity from Error object\n  private inferSeverity(error: Error): ErrorSeverity {\n    const message = error.message.toLowerCase();\n\n    if (message.includes('critical') || message.includes('fatal')) {\n      return ErrorSeverity.CRITICAL;\n    }\n    if (message.includes('failed') || message.includes('error')) {\n      return ErrorSeverity.HIGH;\n    }\n    if (message.includes('warning') || message.includes('deprecated')) {\n      return ErrorSeverity.MEDIUM;\n    }\n\n    return ErrorSeverity.LOW;\n  }\n\n  // Show appropriate toast based on error severity\n  private showToast(error: AppError): void {\n    const message = this.formatUserMessage(error);\n\n    switch (error.severity) {\n      case ErrorSeverity.CRITICAL:\n        toast.error(message, { duration: 8000 });\n        break;\n      case ErrorSeverity.HIGH:\n        toast.error(message, { duration: 6000 });\n        break;\n      case ErrorSeverity.MEDIUM:\n        toast(message, { icon: '⚠️', duration: 4000 });\n        break;\n      case ErrorSeverity.LOW:\n        toast(message, { icon: 'ℹ️', duration: 3000 });\n        break;\n    }\n  }\n\n  // Format user-friendly error messages\n  private formatUserMessage(error: AppError): string {\n    switch (error.type) {\n      case ErrorType.VALIDATION:\n        return error.message;\n      case ErrorType.NETWORK:\n        return 'Network error. Please check your connection and try again.';\n      case ErrorType.AUTHENTICATION:\n        return 'Authentication failed. Please log in again.';\n      case ErrorType.TRADING:\n        return `Trading error: ${error.message}`;\n      case ErrorType.COMPILATION:\n        return `Compilation error: ${error.message}`;\n      default:\n        return 'An unexpected error occurred. Please try again.';\n    }\n  }\n\n  // Log to console with proper formatting\n  private logToConsole(error: AppError): void {\n    const logMethod = error.severity === ErrorSeverity.CRITICAL || error.severity === ErrorSeverity.HIGH \n      ? console.error \n      : console.warn;\n\n    logMethod(`[${error.type.toUpperCase()}] ${error.message}`, {\n      severity: error.severity,\n      timestamp: error.timestamp,\n      context: error.context,\n      details: error.details\n    });\n  }\n\n  // Log to external service (placeholder for future implementation)\n  private logToService(error: AppError): void {\n    // In production, this would send to error tracking service like Sentry\n    if (process.env.NODE_ENV === 'production') {\n      // Example: Sentry.captureException(error);\n      console.log('Would log to external service:', error);\n    }\n  }\n\n  // Add error to queue for analysis\n  private addToQueue(error: AppError): void {\n    this.errorQueue.push(error);\n    if (this.errorQueue.length > this.maxQueueSize) {\n      this.errorQueue.shift(); // Remove oldest error\n    }\n  }\n\n  // Get recent errors for debugging\n  getRecentErrors(count: number = 10): AppError[] {\n    return this.errorQueue.slice(-count);\n  }\n\n  // Clear error queue\n  clearErrors(): void {\n    this.errorQueue = [];\n  }\n\n  // Get error statistics\n  getErrorStats(): { total: number; byType: Record<ErrorType, number>; bySeverity: Record<ErrorSeverity, number> } {\n    const stats = {\n      total: this.errorQueue.length,\n      byType: {} as Record<ErrorType, number>,\n      bySeverity: {} as Record<ErrorSeverity, number>\n    };\n\n    // Initialize counters\n    Object.values(ErrorType).forEach(type => {\n      stats.byType[type] = 0;\n    });\n    Object.values(ErrorSeverity).forEach(severity => {\n      stats.bySeverity[severity] = 0;\n    });\n\n    // Count errors\n    this.errorQueue.forEach(error => {\n      stats.byType[error.type]++;\n      stats.bySeverity[error.severity]++;\n    });\n\n    return stats;\n  }\n}\n\n// Export singleton instance\nexport const errorHandler = ErrorHandler.getInstance();\n\n// Convenience functions for common error types\nexport const handleValidationError = (message: string, context?: string) => {\n  return errorHandler.handle({\n    type: ErrorType.VALIDATION,\n    severity: ErrorSeverity.MEDIUM,\n    message,\n    timestamp: new Date()\n  }, context);\n};\n\nexport const handleNetworkError = (error: Error, context?: string) => {\n  return errorHandler.handle(error, context, {\n    showToast: true,\n    logToConsole: true,\n    logToService: true\n  });\n};\n\nexport const handleTradingError = (message: string, details?: any, context?: string) => {\n  return errorHandler.handle({\n    type: ErrorType.TRADING,\n    severity: ErrorSeverity.HIGH,\n    message,\n    details,\n    timestamp: new Date()\n  }, context);\n};\n\nexport const handleCompilationError = (line: number, message: string, type: 'error' | 'warning' = 'error') => {\n  return errorHandler.handle({\n    type: ErrorType.COMPILATION,\n    severity: type === 'error' ? ErrorSeverity.HIGH : ErrorSeverity.MEDIUM,\n    message: `Line ${line}: ${message}`,\n    details: { line, type },\n    timestamp: new Date()\n  }, 'Pine Script Compilation');\n};\n\n// React hook for error handling\nexport const useErrorHandler = () => {\n  return {\n    handleError: (error: Error | string, context?: string) => errorHandler.handle(error, context),\n    handleValidationError,\n    handleNetworkError,\n    handleTradingError,\n    handleCompilationError,\n    getRecentErrors: () => errorHandler.getRecentErrors(),\n    getErrorStats: () => errorHandler.getErrorStats(),\n    clearErrors: () => errorHandler.clearErrors()\n  };\n};\n\nexport default errorHandler;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1404, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/lib/logger.ts"],"sourcesContent":["'use client';\n\nimport { errorHandler, ErrorType, ErrorSeverity } from './errorHandler';\n\n// Logger utility to replace console usage with proper error handling\nexport class Logger {\n  private static isDevelopment = process.env.NODE_ENV === 'development';\n  private static isProduction = process.env.NODE_ENV === 'production';\n\n  // Error logging\n  static error(message: string, error?: Error | any, context?: string): void {\n    if (error instanceof Error) {\n      errorHandler.handle(error, context || 'Logger');\n    } else {\n      errorHandler.handle(new Error(message), context || 'Logger');\n    }\n\n    // Still log to console in development for debugging\n    if (this.isDevelopment) {\n      console.error(`[${context || 'Logger'}] ${message}`, error);\n    }\n  }\n\n  // Warning logging\n  static warn(message: string, context?: string, details?: any): void {\n    const warningError = new Error(message);\n    errorHandler.handle(warningError, context || 'Logger');\n\n    if (this.isDevelopment) {\n      console.warn(`[${context || 'Logger'}] ${message}`, details);\n    }\n  }\n\n  // Info logging (for important events)\n  static info(message: string, context?: string, details?: any): void {\n    // Only log to console in development, or to external service in production\n    if (this.isDevelopment) {\n      console.log(`[${context || 'Logger'}] ${message}`, details);\n    } else if (this.isProduction) {\n      // In production, you might want to log to an external service\n      // For now, we'll just store it internally\n      this.logToService('info', message, context, details);\n    }\n  }\n\n  // Debug logging (only in development)\n  static debug(message: string, context?: string, details?: any): void {\n    if (this.isDevelopment) {\n      console.log(`[DEBUG][${context || 'Logger'}] ${message}`, details);\n    }\n  }\n\n  // Trading-specific logging\n  static trading(message: string, details?: any, context?: string): void {\n    const tradingError = new Error(message);\n    errorHandler.handle(tradingError, context || 'Trading');\n\n    if (this.isDevelopment) {\n      console.log(`[TRADING][${context || 'Trading'}] ${message}`, details);\n    }\n  }\n\n  // Performance logging\n  static performance(operation: string, duration: number, context?: string): void {\n    const message = `${operation} completed in ${duration}ms`;\n    \n    if (duration > 1000) {\n      // Log slow operations as warnings\n      this.warn(`Slow operation: ${message}`, context || 'Performance');\n    } else {\n      this.info(message, context || 'Performance');\n    }\n  }\n\n  // User action logging\n  static userAction(action: string, userId?: string, details?: any): void {\n    const context = userId ? `User-${userId}` : 'User';\n    this.info(`User action: ${action}`, context, details);\n  }\n\n  // API call logging\n  static apiCall(method: string, url: string, status: number, duration: number): void {\n    const message = `${method} ${url} - ${status} (${duration}ms)`;\n    \n    if (status >= 400) {\n      this.error(`API Error: ${message}`, undefined, 'API');\n    } else if (duration > 2000) {\n      this.warn(`Slow API call: ${message}`, 'API');\n    } else {\n      this.debug(message, 'API');\n    }\n  }\n\n  // Private method to log to external service (placeholder)\n  private static logToService(level: string, message: string, context?: string, details?: any): void {\n    // In a real application, you would send this to your logging service\n    // For now, we'll just store it in memory or localStorage\n    try {\n      const logEntry = {\n        level,\n        message,\n        context,\n        details,\n        timestamp: new Date().toISOString(),\n        userAgent: typeof window !== 'undefined' ? window.navigator.userAgent : 'server',\n        url: typeof window !== 'undefined' ? window.location.href : 'server'\n      };\n\n      // Store in localStorage for now (in production, send to logging service)\n      if (typeof window !== 'undefined' && window.localStorage) {\n        const logs = JSON.parse(localStorage.getItem('app_logs') || '[]');\n        logs.push(logEntry);\n        \n        // Keep only last 100 logs to prevent storage overflow\n        if (logs.length > 100) {\n          logs.splice(0, logs.length - 100);\n        }\n        \n        localStorage.setItem('app_logs', JSON.stringify(logs));\n      }\n    } catch (error) {\n      // Fallback to console if logging service fails\n      if (this.isDevelopment) {\n        console.error('Failed to log to service:', error);\n      }\n    }\n  }\n\n  // Method to retrieve logs (useful for debugging)\n  static getLogs(): any[] {\n    try {\n      if (typeof window !== 'undefined' && window.localStorage) {\n        return JSON.parse(localStorage.getItem('app_logs') || '[]');\n      }\n    } catch (error) {\n      this.error('Failed to retrieve logs', error as Error, 'Logger');\n    }\n    return [];\n  }\n\n  // Method to clear logs\n  static clearLogs(): void {\n    try {\n      if (typeof window !== 'undefined' && window.localStorage) {\n        localStorage.removeItem('app_logs');\n      }\n    } catch (error) {\n      this.error('Failed to clear logs', error as Error, 'Logger');\n    }\n  }\n}\n\n// Convenience exports\nexport const logger = Logger;\nexport default Logger;\n\n// Hook for React components\nexport function useLogger() {\n  return {\n    error: Logger.error,\n    warn: Logger.warn,\n    info: Logger.info,\n    debug: Logger.debug,\n    trading: Logger.trading,\n    performance: Logger.performance,\n    userAction: Logger.userAction,\n    apiCall: Logger.apiCall,\n    getLogs: Logger.getLogs,\n    clearLogs: Logger.clearLogs\n  };\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1570, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/lib/services/workflowAutomationService.ts"],"sourcesContent":["import { EventEmitter } from 'events';\nimport { logger } from '../../src/lib/logger';\n\nexport interface WorkflowStep {\n  id: string;\n  type: 'trigger' | 'condition' | 'action';\n  name: string;\n  config: Record<string, any>;\n  status: 'pending' | 'running' | 'completed' | 'failed';\n  result?: any;\n}\n\nexport interface AutomatedWorkflow {\n  id: string;\n  name: string;\n  description: string;\n  isActive: boolean;\n  steps: WorkflowStep[];\n  createdAt: Date;\n  lastExecuted?: Date;\n  executionCount: number;\n  successRate: number;\n}\n\nexport interface WorkflowExecution {\n  id: string;\n  workflowId: string;\n  status: 'running' | 'completed' | 'failed';\n  startTime: Date;\n  endTime?: Date;\n  steps: WorkflowStep[];\n  error?: string;\n}\n\nexport interface WorkflowTriggerEvent {\n  type: 'price_change' | 'time_based' | 'manual' | 'dashboard_action';\n  data: Record<string, any>;\n  timestamp: Date;\n}\n\nclass WorkflowAutomationService extends EventEmitter {\n  private workflows: Map<string, AutomatedWorkflow> = new Map();\n  private executions: Map<string, WorkflowExecution> = new Map();\n  private isInitialized = false;\n\n  constructor() {\n    super();\n    this.initializeDefaultWorkflows();\n  }\n\n  async initialize(): Promise<void> {\n    if (this.isInitialized) return;\n\n    logger.info('Initializing Workflow Automation Service');\n    \n    // Set up event listeners for cross-page communication\n    this.setupEventListeners();\n    \n    this.isInitialized = true;\n    this.emit('service:initialized');\n  }\n\n  private setupEventListeners(): void {\n    // Listen for dashboard events\n    this.on('dashboard:workflow:trigger', this.handleDashboardTrigger.bind(this));\n    this.on('trading:order:placed', this.handleTradingEvent.bind(this));\n    this.on('market:price:change', this.handleMarketEvent.bind(this));\n  }\n\n  private initializeDefaultWorkflows(): void {\n    const defaultWorkflows: AutomatedWorkflow[] = [\n      {\n        id: 'auto-stop-loss',\n        name: 'Automatic Stop Loss',\n        description: 'Automatically place stop loss orders when positions are opened',\n        isActive: true,\n        steps: [\n          {\n            id: 'trigger-position-open',\n            type: 'trigger',\n            name: 'Position Opened',\n            config: { eventType: 'position:opened' },\n            status: 'pending'\n          },\n          {\n            id: 'calculate-stop-loss',\n            type: 'action',\n            name: 'Calculate Stop Loss Price',\n            config: { riskPercentage: 2 },\n            status: 'pending'\n          },\n          {\n            id: 'place-stop-loss',\n            type: 'action',\n            name: 'Place Stop Loss Order',\n            config: { orderType: 'stop_loss' },\n            status: 'pending'\n          }\n        ],\n        createdAt: new Date(),\n        executionCount: 0,\n        successRate: 100\n      },\n      {\n        id: 'profit-taking',\n        name: 'Automated Profit Taking',\n        description: 'Take profits at predefined levels',\n        isActive: false,\n        steps: [\n          {\n            id: 'trigger-profit-target',\n            type: 'trigger',\n            name: 'Profit Target Reached',\n            config: { profitPercentage: 5 },\n            status: 'pending'\n          },\n          {\n            id: 'partial-close',\n            type: 'action',\n            name: 'Close Partial Position',\n            config: { closePercentage: 50 },\n            status: 'pending'\n          }\n        ],\n        createdAt: new Date(),\n        executionCount: 0,\n        successRate: 95\n      }\n    ];\n\n    defaultWorkflows.forEach(workflow => {\n      this.workflows.set(workflow.id, workflow);\n    });\n  }\n\n  // Workflow Management\n  createWorkflow(workflow: Omit<AutomatedWorkflow, 'id' | 'createdAt' | 'executionCount' | 'successRate'>): string {\n    const id = `workflow-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n    const newWorkflow: AutomatedWorkflow = {\n      ...workflow,\n      id,\n      createdAt: new Date(),\n      executionCount: 0,\n      successRate: 100\n    };\n\n    this.workflows.set(id, newWorkflow);\n    this.emit('workflow:created', newWorkflow);\n    logger.info(`Created workflow: ${newWorkflow.name}`);\n    \n    return id;\n  }\n\n  getWorkflow(id: string): AutomatedWorkflow | undefined {\n    return this.workflows.get(id);\n  }\n\n  getAllWorkflows(): AutomatedWorkflow[] {\n    return Array.from(this.workflows.values());\n  }\n\n  getActiveWorkflows(): AutomatedWorkflow[] {\n    return this.getAllWorkflows().filter(w => w.isActive);\n  }\n\n  updateWorkflow(id: string, updates: Partial<AutomatedWorkflow>): boolean {\n    const workflow = this.workflows.get(id);\n    if (!workflow) return false;\n\n    const updatedWorkflow = { ...workflow, ...updates };\n    this.workflows.set(id, updatedWorkflow);\n    this.emit('workflow:updated', updatedWorkflow);\n    \n    return true;\n  }\n\n  deleteWorkflow(id: string): boolean {\n    const deleted = this.workflows.delete(id);\n    if (deleted) {\n      this.emit('workflow:deleted', id);\n      logger.info(`Deleted workflow: ${id}`);\n    }\n    return deleted;\n  }\n\n  // Workflow Execution\n  async executeWorkflow(workflowId: string, triggerData?: Record<string, any>): Promise<string> {\n    const workflow = this.workflows.get(workflowId);\n    if (!workflow) {\n      throw new Error(`Workflow not found: ${workflowId}`);\n    }\n\n    if (!workflow.isActive) {\n      throw new Error(`Workflow is not active: ${workflowId}`);\n    }\n\n    const executionId = `exec-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n    const execution: WorkflowExecution = {\n      id: executionId,\n      workflowId,\n      status: 'running',\n      startTime: new Date(),\n      steps: workflow.steps.map(step => ({ ...step, status: 'pending' }))\n    };\n\n    this.executions.set(executionId, execution);\n    this.emit('workflow:execution:started', execution);\n    logger.info(`Started workflow execution: ${workflowId}`);\n\n    try {\n      await this.runWorkflowSteps(execution, triggerData);\n      \n      execution.status = 'completed';\n      execution.endTime = new Date();\n      \n      // Update workflow statistics\n      workflow.executionCount++;\n      workflow.lastExecuted = new Date();\n      \n      this.emit('workflow:execution:completed', execution);\n      logger.info(`Completed workflow execution: ${executionId}`);\n      \n    } catch (error) {\n      execution.status = 'failed';\n      execution.endTime = new Date();\n      execution.error = error instanceof Error ? error.message : 'Unknown error';\n      \n      workflow.executionCount++;\n      workflow.successRate = Math.max(0, workflow.successRate - 5);\n      \n      this.emit('workflow:execution:failed', execution);\n      logger.error(`Failed workflow execution: ${executionId}`, error);\n    }\n\n    return executionId;\n  }\n\n  private async runWorkflowSteps(execution: WorkflowExecution, triggerData?: Record<string, any>): Promise<void> {\n    for (const step of execution.steps) {\n      step.status = 'running';\n      this.emit('workflow:step:started', { execution, step });\n\n      try {\n        const result = await this.executeStep(step, triggerData);\n        step.result = result;\n        step.status = 'completed';\n        this.emit('workflow:step:completed', { execution, step });\n      } catch (error) {\n        step.status = 'failed';\n        this.emit('workflow:step:failed', { execution, step, error });\n        throw error;\n      }\n    }\n  }\n\n  private async executeStep(step: WorkflowStep, triggerData?: Record<string, any>): Promise<any> {\n    switch (step.type) {\n      case 'trigger':\n        return this.executeTriggerStep(step, triggerData);\n      case 'condition':\n        return this.executeConditionStep(step, triggerData);\n      case 'action':\n        return this.executeActionStep(step, triggerData);\n      default:\n        throw new Error(`Unknown step type: ${step.type}`);\n    }\n  }\n\n  private async executeTriggerStep(step: WorkflowStep, triggerData?: Record<string, any>): Promise<any> {\n    // Trigger steps are usually already satisfied when workflow is executed\n    return { triggered: true, data: triggerData };\n  }\n\n  private async executeConditionStep(step: WorkflowStep, triggerData?: Record<string, any>): Promise<any> {\n    // Implement condition logic based on step.config\n    return { conditionMet: true };\n  }\n\n  private async executeActionStep(step: WorkflowStep, triggerData?: Record<string, any>): Promise<any> {\n    // Implement action logic based on step.config\n    switch (step.config.orderType) {\n      case 'stop_loss':\n        return this.placeStopLossOrder(step.config, triggerData);\n      case 'take_profit':\n        return this.takeProfitOrder(step.config, triggerData);\n      default:\n        return { actionExecuted: true };\n    }\n  }\n\n  private async placeStopLossOrder(config: Record<string, any>, triggerData?: Record<string, any>): Promise<any> {\n    // Simulate placing a stop loss order\n    const stopLossPrice = triggerData?.entryPrice * (1 - (config.riskPercentage || 2) / 100);\n    \n    this.emit('trading:order:place', {\n      type: 'stop_loss',\n      price: stopLossPrice,\n      symbol: triggerData?.symbol,\n      quantity: triggerData?.quantity\n    });\n\n    return { orderPlaced: true, stopLossPrice };\n  }\n\n  private async takeProfitOrder(config: Record<string, any>, triggerData?: Record<string, any>): Promise<any> {\n    // Simulate taking profit\n    const closeQuantity = (triggerData?.quantity || 0) * (config.closePercentage || 100) / 100;\n    \n    this.emit('trading:order:place', {\n      type: 'market',\n      side: 'sell',\n      symbol: triggerData?.symbol,\n      quantity: closeQuantity\n    });\n\n    return { orderPlaced: true, closedQuantity: closeQuantity };\n  }\n\n  // Event Handlers\n  private async handleDashboardTrigger(event: WorkflowTriggerEvent): Promise<void> {\n    logger.info(`Dashboard workflow trigger received: ${JSON.stringify(event)}`);\n    \n    // Find workflows that should be triggered by this event\n    const activeWorkflows = this.getActiveWorkflows();\n    \n    for (const workflow of activeWorkflows) {\n      const triggerStep = workflow.steps.find(step => step.type === 'trigger');\n      if (triggerStep && this.shouldTriggerWorkflow(triggerStep, event)) {\n        await this.executeWorkflow(workflow.id, event.data);\n      }\n    }\n  }\n\n  private async handleTradingEvent(event: any): Promise<void> {\n    logger.info('Trading event received', event);\n    \n    // Trigger relevant workflows based on trading events\n    if (event.type === 'position:opened') {\n      const triggerEvent: WorkflowTriggerEvent = {\n        type: 'manual',\n        data: event,\n        timestamp: new Date()\n      };\n      await this.handleDashboardTrigger(triggerEvent);\n    }\n  }\n\n  private async handleMarketEvent(event: any): Promise<void> {\n    // Handle market-based triggers\n    const triggerEvent: WorkflowTriggerEvent = {\n      type: 'price_change',\n      data: event,\n      timestamp: new Date()\n    };\n    await this.handleDashboardTrigger(triggerEvent);\n  }\n\n  private shouldTriggerWorkflow(triggerStep: WorkflowStep, event: WorkflowTriggerEvent): boolean {\n    // Implement trigger matching logic\n    return triggerStep.config.eventType === event.type || \n           triggerStep.config.eventType === 'position:opened';\n  }\n\n  // Cross-page Communication\n  triggerFromDashboard(workflowId: string, data?: Record<string, any>): void {\n    const event: WorkflowTriggerEvent = {\n      type: 'dashboard_action',\n      data: { workflowId, ...data },\n      timestamp: new Date()\n    };\n    \n    this.emit('dashboard:workflow:trigger', event);\n    this.emit('page:navigate', { to: '/trading', workflow: workflowId });\n  }\n\n  connectPages(): void {\n    // Establish connection between dashboard and trading pages\n    this.emit('pages:connected');\n    logger.info('Pages connected for workflow automation');\n  }\n\n  // Execution Queries\n  getExecution(id: string): WorkflowExecution | undefined {\n    return this.executions.get(id);\n  }\n\n  getWorkflowExecutions(workflowId: string): WorkflowExecution[] {\n    return Array.from(this.executions.values())\n      .filter(exec => exec.workflowId === workflowId);\n  }\n\n  getRecentExecutions(limit: number = 10): WorkflowExecution[] {\n    return Array.from(this.executions.values())\n      .sort((a, b) => b.startTime.getTime() - a.startTime.getTime())\n      .slice(0, limit);\n  }\n\n  // Statistics\n  getWorkflowStats(workflowId: string): { executionCount: number; successRate: number; lastExecuted?: Date } {\n    const workflow = this.workflows.get(workflowId);\n    if (!workflow) {\n      return { executionCount: 0, successRate: 0 };\n    }\n\n    return {\n      executionCount: workflow.executionCount,\n      successRate: workflow.successRate,\n      lastExecuted: workflow.lastExecuted\n    };\n  }\n}\n\n// Create singleton instance\nexport const workflowAutomationService = new WorkflowAutomationService();\n\n// Initialize on import\nworkflowAutomationService.initialize().catch(error => {\n  logger.error('Failed to initialize workflow automation service', error);\n});\n\nexport default workflowAutomationService;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1951, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/contexts/WorkflowContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useReducer, useEffect, useCallback, ReactNode } from 'react';\nimport { workflowAutomationService, AutomatedWorkflow, WorkflowExecution, WorkflowTriggerEvent } from '../../lib/services/workflowAutomationService';\nimport { logger } from '../lib/logger';\nimport { useRouter } from 'next/navigation';\n\ninterface WorkflowState {\n  workflows: AutomatedWorkflow[];\n  activeWorkflows: AutomatedWorkflow[];\n  currentExecution?: WorkflowExecution;\n  recentExecutions: WorkflowExecution[];\n  isConnected: boolean;\n  isLoading: boolean;\n  error?: string;\n  selectedWorkflowId?: string;\n  crossPageData?: Record<string, any>;\n}\n\ntype WorkflowAction =\n  | { type: 'SET_LOADING'; payload: boolean }\n  | { type: 'SET_ERROR'; payload: string }\n  | { type: 'CLEAR_ERROR' }\n  | { type: 'SET_WORKFLOWS'; payload: AutomatedWorkflow[] }\n  | { type: 'ADD_WORKFLOW'; payload: AutomatedWorkflow }\n  | { type: 'UPDATE_WORKFLOW'; payload: AutomatedWorkflow }\n  | { type: 'DELETE_WORKFLOW'; payload: string }\n  | { type: 'SET_CURRENT_EXECUTION'; payload: WorkflowExecution }\n  | { type: 'ADD_EXECUTION'; payload: WorkflowExecution }\n  | { type: 'SET_RECENT_EXECUTIONS'; payload: WorkflowExecution[] }\n  | { type: 'SET_CONNECTED'; payload: boolean }\n  | { type: 'SELECT_WORKFLOW'; payload: string }\n  | { type: 'SET_CROSS_PAGE_DATA'; payload: Record<string, any> }\n  | { type: 'CLEAR_CROSS_PAGE_DATA' }\n  | { type: 'SYNC_STATE'; payload: WorkflowState }\n  | { type: 'UPDATE_WORKFLOW_STATUS'; payload: { workflowId: string; status: string } };\n\nconst initialState: WorkflowState = {\n  workflows: [],\n  activeWorkflows: [],\n  recentExecutions: [],\n  isConnected: false,\n  isLoading: false,\n  crossPageData: {}\n};\n\nfunction workflowReducer(state: WorkflowState, action: WorkflowAction): WorkflowState {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return { ...state, isLoading: action.payload };\n    \n    case 'SET_ERROR':\n      return { ...state, error: action.payload, isLoading: false };\n    \n    case 'CLEAR_ERROR':\n      return { ...state, error: undefined };\n    \n    case 'SET_WORKFLOWS':\n      return {\n        ...state,\n        workflows: action.payload,\n        activeWorkflows: action.payload.filter(w => w.isActive)\n      };\n    \n    case 'ADD_WORKFLOW':\n      const newWorkflows = [...state.workflows, action.payload];\n      return {\n        ...state,\n        workflows: newWorkflows,\n        activeWorkflows: newWorkflows.filter(w => w.isActive)\n      };\n    \n    case 'UPDATE_WORKFLOW':\n      const updatedWorkflows = state.workflows.map(w => \n        w.id === action.payload.id ? action.payload : w\n      );\n      return {\n        ...state,\n        workflows: updatedWorkflows,\n        activeWorkflows: updatedWorkflows.filter(w => w.isActive)\n      };\n    \n    case 'DELETE_WORKFLOW':\n      const filteredWorkflows = state.workflows.filter(w => w.id !== action.payload);\n      return {\n        ...state,\n        workflows: filteredWorkflows,\n        activeWorkflows: filteredWorkflows.filter(w => w.isActive)\n      };\n    \n    case 'SET_CURRENT_EXECUTION':\n      return { ...state, currentExecution: action.payload };\n    \n    case 'ADD_EXECUTION':\n      return {\n        ...state,\n        recentExecutions: [action.payload, ...state.recentExecutions.slice(0, 9)]\n      };\n    \n    case 'SET_RECENT_EXECUTIONS':\n      return { ...state, recentExecutions: action.payload };\n    \n    case 'SET_CONNECTED':\n      return { ...state, isConnected: action.payload };\n    \n    case 'SELECT_WORKFLOW':\n      return { ...state, selectedWorkflowId: action.payload };\n    \n    case 'SET_CROSS_PAGE_DATA':\n      return { ...state, crossPageData: { ...state.crossPageData, ...action.payload } };\n    \n    case 'CLEAR_CROSS_PAGE_DATA':\n      return { ...state, crossPageData: {} };\n    \n    case 'SYNC_STATE':\n      return { ...action.payload };\n    \n    case 'UPDATE_WORKFLOW_STATUS':\n      const statusUpdatedWorkflows = state.workflows.map(w => \n        w.id === action.payload.workflowId \n          ? { ...w, status: action.payload.status }\n          : w\n      );\n      return {\n        ...state,\n        workflows: statusUpdatedWorkflows,\n        activeWorkflows: statusUpdatedWorkflows.filter(w => w.isActive)\n      };\n    \n    default:\n      return state;\n  }\n}\n\ninterface WorkflowContextType {\n  workflowState: WorkflowState;\n  \n  // Workflow Management\n  createWorkflow: (workflow: Omit<AutomatedWorkflow, 'id' | 'createdAt' | 'executionCount' | 'successRate'>) => Promise<string>;\n  updateWorkflow: (id: string, updates: Partial<AutomatedWorkflow>) => Promise<boolean>;\n  deleteWorkflow: (id: string) => Promise<boolean>;\n  toggleWorkflow: (id: string) => Promise<boolean>;\n  \n  // Workflow Execution\n  executeWorkflow: (workflowId: string, triggerData?: Record<string, any>) => Promise<string>;\n  stopExecution: (executionId: string) => Promise<boolean>;\n  updateWorkflowStatus: (workflowId: string, status: string) => Promise<void>;\n  \n  // Cross-page Communication\n  triggerFromDashboard: (workflowId: string, data?: Record<string, any>) => void;\n  receiveFromDashboard: (workflowId: string, data?: Record<string, any>) => void;\n  navigateToTrading: (workflowId?: string, config?: Record<string, any>) => void;\n  navigateToDashboard: (workflowId?: string, config?: Record<string, any>) => void;\n  handleDeepLink: (searchParams: URLSearchParams) => void;\n  setCrossPageData: (data: Record<string, any>) => void;\n  clearCrossPageData: () => void;\n  \n  // State Management\n  selectWorkflow: (workflowId: string) => void;\n  refreshWorkflows: () => Promise<void>;\n  clearError: () => void;\n}\n\nconst WorkflowContext = createContext<WorkflowContextType | undefined>(undefined);\n\nexport function WorkflowProvider({ children }: { children: ReactNode }) {\n  const [state, dispatch] = useReducer(workflowReducer, initialState);\n  const router = useRouter();\n\n  // Initialize from localStorage on mount\n  useEffect(() => {\n    try {\n      const savedState = localStorage.getItem('workflowState');\n      if (savedState) {\n        const parsedState = JSON.parse(savedState);\n        dispatch({ type: 'SYNC_STATE', payload: parsedState });\n      }\n    } catch (error) {\n      logger.error('Failed to load workflow state from localStorage', error as Error);\n    }\n  }, []);\n\n  // Real-time status broadcasting\n  const broadcastStatusUpdate = useCallback((workflowId: string, status: string) => {\n    const updateEvent = new CustomEvent('workflow-status-update', {\n      detail: { workflowId, status, timestamp: Date.now() }\n    });\n    window.dispatchEvent(updateEvent);\n    \n    // Cross-tab communication\n    localStorage.setItem('workflow-status-update', JSON.stringify({\n      workflowId,\n      status,\n      timestamp: Date.now()\n    }));\n  }, []);\n\n  // Listen for real-time status updates\n  useEffect(() => {\n    const handleStatusUpdate = (event: CustomEvent) => {\n      const { workflowId, status } = event.detail;\n      dispatch({ type: 'UPDATE_WORKFLOW_STATUS', payload: { workflowId, status } });\n    };\n\n    const handleStorageStatusUpdate = (event: StorageEvent) => {\n      if (event.key === 'workflow-status-update' && event.newValue) {\n        try {\n          const { workflowId, status } = JSON.parse(event.newValue);\n          dispatch({ type: 'UPDATE_WORKFLOW_STATUS', payload: { workflowId, status } });\n        } catch (error) {\n          console.error('Failed to parse workflow status update:', error);\n        }\n      }\n    };\n\n    window.addEventListener('workflow-status-update', handleStatusUpdate as EventListener);\n    window.addEventListener('storage', handleStorageStatusUpdate);\n\n    return () => {\n      window.removeEventListener('workflow-status-update', handleStatusUpdate as EventListener);\n      window.removeEventListener('storage', handleStorageStatusUpdate);\n    };\n  }, []);\n\n  // Real-time synchronization\n  useEffect(() => {\n    // Save state to localStorage whenever it changes\n    localStorage.setItem('workflowState', JSON.stringify(state));\n    \n    // Broadcast state changes to other tabs/windows\n    const event = new CustomEvent('workflow-state-update', {\n      detail: { state, timestamp: Date.now() }\n    });\n    window.dispatchEvent(event);\n  }, [state]);\n\n  useEffect(() => {\n    // Listen for state updates from other tabs/windows\n    const handleStateUpdate = (event: CustomEvent) => {\n      const { state: newState } = event.detail;\n      if (newState && JSON.stringify(newState) !== JSON.stringify(state)) {\n        dispatch({ type: 'SYNC_STATE', payload: newState });\n      }\n    };\n\n    // Listen for localStorage changes (cross-tab communication)\n    const handleStorageChange = (event: StorageEvent) => {\n      if (event.key === 'workflowState' && event.newValue) {\n        try {\n          const newState = JSON.parse(event.newValue);\n          if (JSON.stringify(newState) !== JSON.stringify(state)) {\n            dispatch({ type: 'SYNC_STATE', payload: newState });\n          }\n        } catch (error) {\n          console.error('Failed to parse workflow state from localStorage:', error);\n        }\n      }\n    };\n\n    window.addEventListener('workflow-state-update', handleStateUpdate as EventListener);\n    window.addEventListener('storage', handleStorageChange);\n\n    return () => {\n      window.removeEventListener('workflow-state-update', handleStateUpdate as EventListener);\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, [state]);\n\n  // Initialize workflow service and set up event listeners\n  useEffect(() => {\n    const initializeWorkflows = async () => {\n      try {\n        dispatch({ type: 'SET_LOADING', payload: true });\n        \n        // Initialize the service\n        await workflowAutomationService.initialize();\n        \n        // Load existing workflows\n        const workflows = workflowAutomationService.getAllWorkflows();\n        dispatch({ type: 'SET_WORKFLOWS', payload: workflows });\n        \n        // Load recent executions\n        const recentExecutions = workflowAutomationService.getRecentExecutions(10);\n        dispatch({ type: 'SET_RECENT_EXECUTIONS', payload: recentExecutions });\n        \n        dispatch({ type: 'SET_CONNECTED', payload: true });\n        logger.info('Workflow context initialized successfully');\n        \n      } catch (error) {\n        logger.error('Failed to initialize workflow context', error as Error);\n        dispatch({ type: 'SET_ERROR', payload: 'Failed to initialize workflows' });\n      } finally {\n        dispatch({ type: 'SET_LOADING', payload: false });\n      }\n    };\n\n    initializeWorkflows();\n  }, []);\n\n  // Set up event listeners for workflow service events\n  useEffect(() => {\n    const handleWorkflowCreated = (workflow: AutomatedWorkflow) => {\n      dispatch({ type: 'ADD_WORKFLOW', payload: workflow });\n      logger.info(`Workflow created: ${workflow.name}`);\n    };\n\n    const handleWorkflowUpdated = (workflow: AutomatedWorkflow) => {\n      dispatch({ type: 'UPDATE_WORKFLOW', payload: workflow });\n      logger.info(`Workflow updated: ${workflow.name}`);\n    };\n\n    const handleWorkflowDeleted = (workflowId: string) => {\n      dispatch({ type: 'DELETE_WORKFLOW', payload: workflowId });\n      logger.info(`Workflow deleted: ${workflowId}`);\n    };\n\n    const handleExecutionStarted = (execution: WorkflowExecution) => {\n      dispatch({ type: 'SET_CURRENT_EXECUTION', payload: execution });\n      dispatch({ type: 'ADD_EXECUTION', payload: execution });\n      logger.info(`Workflow execution started: ${execution.id}`);\n    };\n\n    const handleExecutionCompleted = (execution: WorkflowExecution) => {\n      dispatch({ type: 'SET_CURRENT_EXECUTION', payload: execution });\n      logger.info(`Workflow execution completed: ${execution.id}`);\n    };\n\n    const handleExecutionFailed = (execution: WorkflowExecution) => {\n      dispatch({ type: 'SET_CURRENT_EXECUTION', payload: execution });\n      logger.error(`Workflow execution failed: ${execution.id}`, new Error(execution.error));\n    };\n\n    const handlePageNavigation = (data: { to: string; workflow?: string }) => {\n      if (data.workflow) {\n        dispatch({ type: 'SELECT_WORKFLOW', payload: data.workflow });\n        dispatch({ type: 'SET_CROSS_PAGE_DATA', payload: { selectedWorkflow: data.workflow } });\n      }\n      router.push(data.to);\n    };\n\n    // Register event listeners\n    workflowAutomationService.on('workflow:created', handleWorkflowCreated);\n    workflowAutomationService.on('workflow:updated', handleWorkflowUpdated);\n    workflowAutomationService.on('workflow:deleted', handleWorkflowDeleted);\n    workflowAutomationService.on('workflow:execution:started', handleExecutionStarted);\n    workflowAutomationService.on('workflow:execution:completed', handleExecutionCompleted);\n    workflowAutomationService.on('workflow:execution:failed', handleExecutionFailed);\n    workflowAutomationService.on('page:navigate', handlePageNavigation);\n\n    // Cleanup event listeners\n    return () => {\n      workflowAutomationService.off('workflow:created', handleWorkflowCreated);\n      workflowAutomationService.off('workflow:updated', handleWorkflowUpdated);\n      workflowAutomationService.off('workflow:deleted', handleWorkflowDeleted);\n      workflowAutomationService.off('workflow:execution:started', handleExecutionStarted);\n      workflowAutomationService.off('workflow:execution:completed', handleExecutionCompleted);\n      workflowAutomationService.off('workflow:execution:failed', handleExecutionFailed);\n      workflowAutomationService.off('page:navigate', handlePageNavigation);\n    };\n  }, [router]);\n\n  // Context methods\n  const createWorkflow = async (workflow: Omit<AutomatedWorkflow, 'id' | 'createdAt' | 'executionCount' | 'successRate'>): Promise<string> => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      const workflowId = workflowAutomationService.createWorkflow(workflow);\n      return workflowId;\n    } catch (error) {\n      logger.error('Failed to create workflow', error as Error);\n      dispatch({ type: 'SET_ERROR', payload: 'Failed to create workflow' });\n      throw error;\n    } finally {\n      dispatch({ type: 'SET_LOADING', payload: false });\n    }\n  };\n\n  const updateWorkflow = async (id: string, updates: Partial<AutomatedWorkflow>): Promise<boolean> => {\n    try {\n      const success = workflowAutomationService.updateWorkflow(id, updates);\n      if (!success) {\n        dispatch({ type: 'SET_ERROR', payload: 'Workflow not found' });\n      }\n      return success;\n    } catch (error) {\n      logger.error('Failed to update workflow', error as Error);\n      dispatch({ type: 'SET_ERROR', payload: 'Failed to update workflow' });\n      return false;\n    }\n  };\n\n  const deleteWorkflow = async (id: string): Promise<boolean> => {\n    try {\n      const success = workflowAutomationService.deleteWorkflow(id);\n      if (!success) {\n        dispatch({ type: 'SET_ERROR', payload: 'Workflow not found' });\n      }\n      return success;\n    } catch (error) {\n      logger.error('Failed to delete workflow', error as Error);\n      dispatch({ type: 'SET_ERROR', payload: 'Failed to delete workflow' });\n      return false;\n    }\n  };\n\n  const toggleWorkflow = async (id: string): Promise<boolean> => {\n    const workflow = workflowAutomationService.getWorkflow(id);\n    if (!workflow) {\n      dispatch({ type: 'SET_ERROR', payload: 'Workflow not found' });\n      return false;\n    }\n    \n    return updateWorkflow(id, { isActive: !workflow.isActive });\n  };\n\n  const executeWorkflow = async (workflowId: string, triggerData?: Record<string, any>): Promise<string> => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      const executionId = await workflowAutomationService.executeWorkflow(workflowId, triggerData);\n      return executionId;\n    } catch (error) {\n      logger.error('Failed to execute workflow', error as Error);\n      dispatch({ type: 'SET_ERROR', payload: 'Failed to execute workflow' });\n      throw error;\n    } finally {\n      dispatch({ type: 'SET_LOADING', payload: false });\n    }\n  };\n\n  const stopExecution = async (executionId: string): Promise<boolean> => {\n    try {\n      // Implementation would depend on workflow service capabilities\n      logger.info(`Stopping execution: ${executionId}`);\n      return true;\n    } catch (error) {\n      logger.error('Failed to stop execution', error as Error);\n      dispatch({ type: 'SET_ERROR', payload: 'Failed to stop execution' });\n      return false;\n    }\n  };\n\n  const triggerFromDashboard = (workflowId: string, data?: Record<string, any>) => {\n    try {\n      workflowAutomationService.triggerFromDashboard(workflowId, data);\n      dispatch({ type: 'SELECT_WORKFLOW', payload: workflowId });\n      dispatch({ type: 'SET_CROSS_PAGE_DATA', payload: { triggerSource: 'dashboard', workflowId, ...data } });\n      \n      // Broadcast trigger event to other tabs\n      const event = new CustomEvent('workflow-trigger', {\n        detail: { workflowId, data, timestamp: Date.now() }\n      });\n      window.dispatchEvent(event);\n      \n      // Also save to localStorage for cross-tab communication\n      localStorage.setItem('workflow-trigger', JSON.stringify({\n        workflowId,\n        data,\n        timestamp: Date.now()\n      }));\n    } catch (error) {\n      logger.error('Failed to trigger workflow from dashboard', error as Error);\n      dispatch({ type: 'SET_ERROR', payload: 'Failed to trigger workflow' });\n    }\n  };\n\n  const receiveFromDashboard = (workflowId: string, data?: Record<string, any>) => {\n    // Process received data from dashboard\n    const workflow = workflowAutomationService.getWorkflow(workflowId);\n    if (workflow) {\n      dispatch({ type: 'SELECT_WORKFLOW', payload: workflowId });\n      if (data) {\n        setCrossPageData({ [`workflow_${workflowId}`]: data });\n      }\n      logger.info(`Received workflow data from dashboard for ${workflowId}: ${JSON.stringify(data)}`);\n    }\n  };\n\n  const navigateToTrading = (workflowId?: string, config?: Record<string, any>) => {\n    const params = new URLSearchParams();\n    \n    if (workflowId) {\n      params.set('workflow', workflowId);\n      params.set('source', 'dashboard');\n      \n      if (config) {\n        // Encode configuration as URL parameters\n        Object.entries(config).forEach(([key, value]) => {\n          if (value !== undefined && value !== null) {\n            params.set(key, typeof value === 'object' ? JSON.stringify(value) : String(value));\n          }\n        });\n      }\n      \n      dispatch({ type: 'SELECT_WORKFLOW', payload: workflowId });\n      dispatch({ type: 'SET_CROSS_PAGE_DATA', payload: { source: 'dashboard', workflowId, config } });\n    }\n    \n    const url = params.toString() ? `/trading?${params.toString()}` : '/trading';\n    router.push(url);\n  };\n\n  const navigateToDashboard = (workflowId?: string, config?: Record<string, any>) => {\n    const params = new URLSearchParams();\n    \n    if (workflowId) {\n      params.set('workflow', workflowId);\n      params.set('source', 'trading');\n      \n      if (config) {\n        Object.entries(config).forEach(([key, value]) => {\n          if (value !== undefined && value !== null) {\n            params.set(key, typeof value === 'object' ? JSON.stringify(value) : String(value));\n          }\n        });\n      }\n      \n      dispatch({ type: 'SELECT_WORKFLOW', payload: workflowId });\n      dispatch({ type: 'SET_CROSS_PAGE_DATA', payload: { source: 'trading', workflowId, config } });\n    }\n    \n    const url = params.toString() ? `/dashboard?${params.toString()}` : '/dashboard';\n    router.push(url);\n  };\n\n  // Deep link handler for URL parameters\n  const handleDeepLink = useCallback((searchParams: URLSearchParams) => {\n    const workflowId = searchParams.get('workflow');\n    const source = searchParams.get('source');\n    \n    if (workflowId) {\n      // Extract configuration from URL parameters\n      const config: Record<string, any> = {};\n      searchParams.forEach((value, key) => {\n        if (key !== 'workflow' && key !== 'source') {\n          try {\n            // Try to parse as JSON first, fallback to string\n            config[key] = value.startsWith('{') || value.startsWith('[') ? JSON.parse(value) : value;\n          } catch {\n            config[key] = value;\n          }\n        }\n      });\n      \n      dispatch({ type: 'SELECT_WORKFLOW', payload: workflowId });\n      dispatch({ type: 'SET_CROSS_PAGE_DATA', payload: { source, workflowId, config } });\n      \n      // Auto-execute workflow if specified\n      if (config.autoExecute === 'true' || config.autoExecute === true) {\n        setTimeout(() => {\n          executeWorkflow(workflowId, config);\n        }, 1000); // Small delay to ensure page is loaded\n      }\n    }\n  }, [executeWorkflow]);\n\n  const setCrossPageData = (data: Record<string, any>) => {\n    dispatch({ type: 'SET_CROSS_PAGE_DATA', payload: data });\n  };\n\n  const clearCrossPageData = () => {\n    dispatch({ type: 'CLEAR_CROSS_PAGE_DATA' });\n  };\n\n  const selectWorkflow = (workflowId: string) => {\n    dispatch({ type: 'SELECT_WORKFLOW', payload: workflowId });\n  };\n\n  const refreshWorkflows = async () => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      const workflows = workflowAutomationService.getAllWorkflows();\n      dispatch({ type: 'SET_WORKFLOWS', payload: workflows });\n      \n      const recentExecutions = workflowAutomationService.getRecentExecutions(10);\n      dispatch({ type: 'SET_RECENT_EXECUTIONS', payload: recentExecutions });\n    } catch (error) {\n      logger.error('Failed to refresh workflows', error as Error);\n      dispatch({ type: 'SET_ERROR', payload: 'Failed to refresh workflows' });\n    } finally {\n      dispatch({ type: 'SET_LOADING', payload: false });\n    }\n  };\n\n  const clearError = () => {\n    dispatch({ type: 'CLEAR_ERROR' });\n  };\n\n  const updateWorkflowStatus = async (workflowId: string, status: string) => {\n    try {\n      // Use updateWorkflow method with isActive status\n      const isActive = status === 'active';\n      const success = workflowAutomationService.updateWorkflow(workflowId, { isActive });\n      \n      if (success) {\n        dispatch({ type: 'UPDATE_WORKFLOW_STATUS', payload: { workflowId, status } });\n        \n        // Broadcast status update in real-time\n        broadcastStatusUpdate(workflowId, status);\n        \n        logger.info(`Workflow ${workflowId} status updated to ${status}`);\n      } else {\n        throw new Error('Failed to update workflow');\n      }\n    } catch (error) {\n      logger.error('Failed to update workflow status', error as Error);\n      throw error;\n    }\n  };\n\n  const contextValue: WorkflowContextType = {\n    workflowState: state,\n    createWorkflow,\n    updateWorkflow,\n    deleteWorkflow,\n    toggleWorkflow,\n    executeWorkflow,\n    stopExecution,\n    updateWorkflowStatus,\n    triggerFromDashboard,\n    receiveFromDashboard,\n    navigateToTrading,\n    navigateToDashboard,\n    handleDeepLink,\n    setCrossPageData,\n    clearCrossPageData,\n    selectWorkflow,\n    refreshWorkflows,\n    clearError\n  };\n\n  return (\n    <WorkflowContext.Provider value={contextValue}>\n      {children}\n    </WorkflowContext.Provider>\n  );\n}\n\nexport function useWorkflow(): WorkflowContextType {\n  const context = useContext(WorkflowContext);\n  if (context === undefined) {\n    throw new Error('useWorkflow must be used within a WorkflowProvider');\n  }\n  return context;\n}\n\nexport default WorkflowContext;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2779, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/app/providers.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { AuthProvider } from '@/contexts/AuthContext';\nimport { ThemeProvider } from '@/contexts/ThemeContext';\nimport { BrokerAccountProvider } from '@/contexts/BrokerAccountContext';\nimport { TradingModeProvider } from '@/contexts/TradingModeContext';\nimport { WorkflowProvider } from '@/contexts/WorkflowContext';\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      retry: 1,\n      staleTime: 5 * 60 * 1000, // 5 minutes\n    },\n  },\n});\n\ninterface ProvidersProps {\n  children: React.ReactNode;\n}\n\nexport function Providers({ children }: ProvidersProps) {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider>\n        <AuthProvider>\n          <BrokerAccountProvider>\n            <TradingModeProvider>\n              <WorkflowProvider>\n                {children}\n              </WorkflowProvider>\n            </TradingModeProvider>\n          </BrokerAccountProvider>\n        </AuthProvider>\n      </ThemeProvider>\n    </QueryClientProvider>\n  );\n}"],"names":[],"mappings":";;;;;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AARA;;;;;;;;AAUA,MAAM,cAAc,IAAI,+LAAW,CAAC;IAClC,gBAAgB;QACd,SAAS;YACP,sBAAsB;YACtB,OAAO;YACP,WAAW,IAAI,KAAK;QACtB;IACF;AACF;AAMO,SAAS,UAAU,KAA4B;QAA5B,EAAE,QAAQ,EAAkB,GAA5B;IACxB,qBACE,6LAAC,gNAAmB;QAAC,QAAQ;kBAC3B,cAAA,6LAAC,oJAAa;sBACZ,cAAA,6LAAC,kJAAY;0BACX,cAAA,6LAAC,oKAAqB;8BACpB,cAAA,6LAAC,gKAAmB;kCAClB,cAAA,6LAAC,0JAAgB;sCACd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQjB;KAhBgB","debugId":null}},
    {"offset": {"line": 2859, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ErrorBoundary.tsx"],"sourcesContent":["'use client';\n\nimport React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { errorHandler, ErrorSeverity } from '@/lib/errorHandler';\nimport { AlertTriangle, RefreshCw, Home } from 'lucide-react';\n\ninterface Props {\n  children: ReactNode;\n  fallback?: ReactNode;\n  onError?: (error: Error, errorInfo: ErrorInfo) => void;\n}\n\ninterface State {\n  hasError: boolean;\n  error?: Error;\n  errorInfo?: ErrorInfo;\n}\n\nclass ErrorBoundary extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: Error): State {\n    // Update state so the next render will show the fallback UI\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    // Store error info in state\n    this.setState({ errorInfo });\n\n    // Use centralized error handler\n    errorHandler.handle(error, 'ErrorBoundary');\n\n    // Call custom error handler if provided\n    if (this.props.onError) {\n      this.props.onError(error, errorInfo);\n    }\n  }\n\n  handleRetry = () => {\n    this.setState({ hasError: false, error: undefined, errorInfo: undefined });\n  };\n\n  handleGoHome = () => {\n    // Use router navigation instead of window.location for better hydration\n    if (typeof window !== 'undefined') {\n      window.location.href = '/dashboard';\n    }\n  };\n\n  render() {\n    if (this.state.hasError) {\n      // Custom fallback UI\n      if (this.props.fallback) {\n        return this.props.fallback;\n      }\n\n      // Default fallback UI\n      return (\n        <div className=\"min-h-screen flex items-center justify-center p-4 bg-gray-50 dark:bg-gray-900\">\n          <div className=\"w-full max-w-md bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700\">\n            <div className=\"p-6 text-center\">\n              <div className=\"mx-auto mb-4 w-12 h-12 bg-red-100 dark:bg-red-900/20 rounded-full flex items-center justify-center\">\n                <AlertTriangle className=\"w-6 h-6 text-red-600 dark:text-red-400\" />\n              </div>\n              <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4\">\n                Oops! Something went wrong\n              </h2>\n            </div>\n            <div className=\"px-6 pb-6 space-y-4\">\n              <p className=\"text-sm text-gray-600 dark:text-gray-400 text-center\">\n                We encountered an unexpected error. This has been logged and our team will look into it.\n              </p>\n              \n              {process.env.NODE_ENV === 'development' && this.state.error && (\n                <details className=\"mt-4 p-3 bg-gray-100 dark:bg-gray-800 rounded-lg\">\n                  <summary className=\"cursor-pointer text-sm font-medium text-gray-700 dark:text-gray-300\">\n                    Error Details (Development)\n                  </summary>\n                  <div className=\"mt-2 text-xs text-gray-600 dark:text-gray-400 font-mono\">\n                    <div className=\"mb-2\">\n                      <strong>Error:</strong> {this.state.error.message}\n                    </div>\n                    {this.state.error.stack && (\n                      <div className=\"mb-2\">\n                        <strong>Stack:</strong>\n                        <pre className=\"whitespace-pre-wrap mt-1\">{this.state.error.stack}</pre>\n                      </div>\n                    )}\n                    {this.state.errorInfo?.componentStack && (\n                      <div>\n                        <strong>Component Stack:</strong>\n                        <pre className=\"whitespace-pre-wrap mt-1\">{this.state.errorInfo.componentStack}</pre>\n                      </div>\n                    )}\n                  </div>\n                </details>\n              )}\n              \n              <div className=\"flex flex-col sm:flex-row gap-3 pt-4\">\n                <button \n                  onClick={this.handleRetry}\n                  className=\"flex-1 flex items-center justify-center gap-2 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors\"\n                >\n                  <RefreshCw className=\"w-4 h-4\" />\n                  Try Again\n                </button>\n                <button \n                  onClick={this.handleGoHome}\n                  className=\"flex-1 flex items-center justify-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n                >\n                  <Home className=\"w-4 h-4\" />\n                  Go Home\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n\n// Hook version for functional components (React 18+)\nexport function useErrorHandler() {\n  return (error: Error, errorInfo?: ErrorInfo) => {\n      // Use centralized error handler\n      errorHandler.handle(error, 'useErrorHandler');\n  };\n}\n\n// Higher-order component for wrapping components with error boundary\nexport function withErrorBoundary<P extends object>(\n  Component: React.ComponentType<P>,\n  errorBoundaryProps?: Omit<Props, 'children'>\n) {\n  const WrappedComponent = (props: P) => (\n    <ErrorBoundary {...errorBoundaryProps}>\n      <Component {...props} />\n    </ErrorBoundary>\n  );\n  \n  WrappedComponent.displayName = `withErrorBoundary(${Component.displayName || Component.name})`;\n  \n  return WrappedComponent;\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3162, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/lib/chunkErrorHandler.ts"],"sourcesContent":["'use client';\n\nimport { errorHandler, ErrorSeverity } from './errorHandler';\n\n// Chunk loading error handler\nexport class ChunkLoadErrorHandler {\n  private static retryAttempts = new Map<string, number>();\n  private static maxRetries = 3;\n  private static retryDelay = 1000; // 1 second\n\n  static handleChunkError(error: any, chunkId?: string): Promise<void> {\n    const errorMessage = error?.message || 'Unknown chunk loading error';\n    const isChunkError = errorMessage.includes('ChunkLoadError') || \n                        errorMessage.includes('Loading chunk') ||\n                        errorMessage.includes('Loading CSS chunk');\n\n    if (!isChunkError) {\n      // Not a chunk error, handle normally\n      errorHandler.handle(error, 'ChunkErrorHandler');\n      return Promise.reject(error);\n    }\n\n    const key = chunkId || errorMessage;\n    const attempts = this.retryAttempts.get(key) || 0;\n\n    if (attempts >= this.maxRetries) {\n      // Max retries reached, log error and reload page\n      errorHandler.handle(error, 'ChunkErrorHandler - Max Retries Reached');\n\n      // Clear retry attempts for this chunk\n      this.retryAttempts.delete(key);\n      \n      // Reload the page as last resort\n      if (typeof window !== 'undefined') {\n        window.location.reload();\n      }\n      \n      return Promise.reject(error);\n    }\n\n    // Increment retry count\n    this.retryAttempts.set(key, attempts + 1);\n\n    // Log retry attempt\n    errorHandler.handle(error, 'ChunkErrorHandler - Retry Attempt');\n\n    // Return a promise that resolves after retry delay\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        // Try to reload the failed chunk\n        if (typeof window !== 'undefined' && chunkId) {\n          // Clear any cached modules for this chunk\n          this.clearChunkCache(chunkId);\n        }\n        resolve();\n      }, this.retryDelay * (attempts + 1)); // Exponential backoff\n    });\n  }\n\n  private static clearChunkCache(chunkId: string): void {\n    try {\n      // Clear webpack chunk cache if available\n      if (typeof window !== 'undefined' && (window as any).__webpack_require__) {\n        const webpackRequire = (window as any).__webpack_require__;\n        \n        // Clear chunk from cache\n        if (webpackRequire.cache) {\n          Object.keys(webpackRequire.cache).forEach(key => {\n            if (key.includes(chunkId)) {\n              delete webpackRequire.cache[key];\n            }\n          });\n        }\n\n        // Clear installed chunks\n        if (webpackRequire.installedChunks) {\n          delete webpackRequire.installedChunks[chunkId];\n        }\n      }\n    } catch (cacheError) {\n      // Ignore cache clearing errors\n      console.warn('Failed to clear chunk cache:', cacheError);\n    }\n  }\n\n  static resetRetryCount(chunkId?: string): void {\n    if (chunkId) {\n      this.retryAttempts.delete(chunkId);\n    } else {\n      this.retryAttempts.clear();\n    }\n  }\n\n  static getRetryCount(chunkId: string): number {\n    return this.retryAttempts.get(chunkId) || 0;\n  }\n}\n\n// Global error handler for unhandled chunk loading errors\nif (typeof window !== 'undefined') {\n  // Handle unhandled promise rejections (common for chunk loading errors)\n  window.addEventListener('unhandledrejection', (event) => {\n    const error = event.reason;\n    if (error && (error.name === 'ChunkLoadError' || \n                  (error.message && error.message.includes('Loading chunk')))) {\n      event.preventDefault(); // Prevent default browser error handling\n      ChunkLoadErrorHandler.handleChunkError(error);\n    }\n  });\n\n  // Handle general errors that might be chunk-related\n  window.addEventListener('error', (event) => {\n    const error = event.error;\n    if (error && (error.name === 'ChunkLoadError' || \n                  (error.message && error.message.includes('Loading chunk')))) {\n      event.preventDefault();\n      ChunkLoadErrorHandler.handleChunkError(error);\n    }\n  });\n}\n\n// React error boundary integration\nexport function withChunkErrorHandling<T extends (...args: any[]) => any>(\n  fn: T\n): T {\n  return ((...args: any[]) => {\n    try {\n      const result = fn(...args);\n      \n      // Handle promises that might reject with chunk errors\n      if (result && typeof result.catch === 'function') {\n        return result.catch((error: any) => {\n          if (error && (error.name === 'ChunkLoadError' || \n                       (error.message && error.message.includes('Loading chunk')))) {\n            return ChunkLoadErrorHandler.handleChunkError(error);\n          }\n          throw error;\n        });\n      }\n      \n      return result;\n    } catch (error) {\n      if (error && ((error as any).name === 'ChunkLoadError' || \n                   ((error as any).message && (error as any).message.includes('Loading chunk')))) {\n        ChunkLoadErrorHandler.handleChunkError(error);\n        return;\n      }\n      throw error;\n    }\n  }) as T;\n}\n\n// Hook for React components\nexport function useChunkErrorHandler() {\n  return {\n    handleChunkError: ChunkLoadErrorHandler.handleChunkError,\n    resetRetryCount: ChunkLoadErrorHandler.resetRetryCount,\n    getRetryCount: ChunkLoadErrorHandler.getRetryCount\n  };\n}\n\nexport default ChunkLoadErrorHandler;"],"names":[],"mappings":"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","debugId":null}}]
}