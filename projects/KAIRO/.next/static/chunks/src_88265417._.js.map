{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function formatCurrency(amount: number): string {\n  if (typeof amount !== 'number' || isNaN(amount)) return '$0.00'\n  try {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n    }).format(amount)\n  } catch (error) {\n    return '$0.00'\n  }\n}\n\nexport function formatPercent(value: number): string {\n  if (typeof value !== 'number' || isNaN(value)) return '0.00%'\n  try {\n    return `${value >= 0 ? '+' : ''}${value.toFixed(2)}%`\n  } catch (error) {\n    return '0.00%'\n  }\n}\n\nexport function formatNumber(value: number): string {\n  if (typeof value !== 'number' || isNaN(value)) return '0'\n  try {\n    return new Intl.NumberFormat('en-US').format(value)\n  } catch (error) {\n    return '0'\n  }\n}"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,IAAA,yKAAO,EAAC,IAAA,gJAAI,EAAC;AACtB;AAEO,SAAS,eAAe,MAAc;IAC3C,IAAI,OAAO,WAAW,YAAY,MAAM,SAAS,OAAO;IACxD,IAAI;QACF,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;YACpC,OAAO;YACP,UAAU;QACZ,GAAG,MAAM,CAAC;IACZ,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,SAAS,cAAc,KAAa;IACzC,IAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,OAAO;IACtD,IAAI;QACF,OAAO,AAAC,GAA0B,OAAxB,SAAS,IAAI,MAAM,IAAsB,OAAjB,MAAM,OAAO,CAAC,IAAG;IACrD,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,SAAS,aAAa,KAAa;IACxC,IAAI,OAAO,UAAU,YAAY,MAAM,QAAQ,OAAO;IACtD,IAAI;QACF,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS,MAAM,CAAC;IAC/C,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;;;;AAEA,MAAM,qBAAO,2KAAgB,MAG3B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,4DACA;QAED,GAAG,KAAK;;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,2KAAgB,OAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,2KAAgB,OAGhC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,2KAAgB,OAGtC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QAAI,KAAK;QAAK,WAAW,IAAA,4HAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,2KAAgB,QAGjC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,MAAM,iBAAiB,IAAA,0KAAG,EACxB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,2KAAgB,MAC7B,QAA0D;QAAzD,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO;IACtD,MAAM,OAAO,UAAU,2KAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,IAAA,4HAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAKA,MAAM,sBAAQ,2KAAgB,MAC5B,QAAgC;QAA/B,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO;IAC5B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,IAAA,4HAAE,EACX,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }"],"names":[],"mappings":";;;;;;;AACA;AACA;;;;AAEA,MAAM,gBAAgB,IAAA,0KAAG,EACvB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,KAA4C;QAA5C,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB,GAA5C;IACb,qBACE,6LAAC;QAAI,WAAW,IAAA,4HAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 336, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/tabs.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\ninterface TabsContextValue {\n  value: string\n  onValueChange: (value: string) => void\n}\n\nconst TabsContext = React.createContext<TabsContextValue | undefined>(undefined)\n\ninterface TabsProps {\n  value: string\n  onValueChange: (value: string) => void\n  children: React.ReactNode\n  className?: string\n}\n\nconst Tabs = ({ value, onValueChange, children, className }: TabsProps) => {\n  return (\n    <TabsContext.Provider value={{ value, onValueChange }}>\n      <div className={cn(\"w-full\", className)}>\n        {children}\n      </div>\n    </TabsContext.Provider>\n  )\n}\n\nconst TabsList = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = \"TabsList\"\n\ninterface TabsTriggerProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  value: string\n}\n\nconst TabsTrigger = React.forwardRef<HTMLButtonElement, TabsTriggerProps>(\n  ({ className, value: triggerValue, ...props }, ref) => {\n    const context = React.useContext(TabsContext)\n    if (!context) {\n      throw new Error('TabsTrigger must be used within a Tabs component')\n    }\n    \n    const { value, onValueChange } = context\n    const isActive = value === triggerValue\n    \n    return (\n      <button\n        ref={ref}\n        className={cn(\n          \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n          isActive\n            ? \"bg-background text-foreground shadow-sm\"\n            : \"hover:bg-background/50\",\n          className\n        )}\n        onClick={() => onValueChange(triggerValue)}\n        {...props}\n      />\n    )\n  }\n)\nTabsTrigger.displayName = \"TabsTrigger\"\n\ninterface TabsContentProps extends React.HTMLAttributes<HTMLDivElement> {\n  value: string\n}\n\nconst TabsContent = React.forwardRef<HTMLDivElement, TabsContentProps>(\n  ({ className, value: contentValue, ...props }, ref) => {\n    const context = React.useContext(TabsContext)\n    if (!context) {\n      throw new Error('TabsContent must be used within a Tabs component')\n    }\n    \n    const { value } = context\n    \n    if (value !== contentValue) {\n      return null\n    }\n    \n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n          className\n        )}\n        {...props}\n      />\n    )\n  }\n)\nTabsContent.displayName = \"TabsContent\"\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }"],"names":[],"mappings":";;;;;;;;;;;AAAA;AACA;;;;;AAOA,MAAM,4BAAc,8KAAmB,CAA+B;AAStE,MAAM,OAAO;QAAC,EAAE,KAAK,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,EAAa;IACpE,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAO;QAAc;kBAClD,cAAA,6LAAC;YAAI,WAAW,IAAA,4HAAE,EAAC,UAAU;sBAC1B;;;;;;;;;;;AAIT;KARM;AAUN,MAAM,yBAAW,2KAAgB,OAG/B,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,8FACA;QAED,GAAG,KAAK;;;;;;;;AAGb,SAAS,WAAW,GAAG;AAMvB,MAAM,4BAAc,GAAA,2KAAgB,UAClC,QAA+C;QAA9C,EAAE,SAAS,EAAE,OAAO,YAAY,EAAE,GAAG,OAAO;;IAC3C,MAAM,UAAU,2KAAgB,CAAC;IACjC,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG;IACjC,MAAM,WAAW,UAAU;IAE3B,qBACE,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,mSACA,WACI,4CACA,0BACJ;QAEF,SAAS,IAAM,cAAc;QAC5B,GAAG,KAAK;;;;;;AAGf;;AAEF,YAAY,WAAW,GAAG;AAM1B,MAAM,4BAAc,IAAA,2KAAgB,WAClC,QAA+C;QAA9C,EAAE,SAAS,EAAE,OAAO,YAAY,EAAE,GAAG,OAAO;;IAC3C,MAAM,UAAU,2KAAgB,CAAC;IACjC,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,EAAE,KAAK,EAAE,GAAG;IAElB,IAAI,UAAU,cAAc;QAC1B,OAAO;IACT;IAEA,qBACE,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,mIACA;QAED,GAAG,KAAK;;;;;;AAGf;;AAEF,YAAY,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 451, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,6KAAoB;AAEnC,MAAM,cAAc,8KAAqB;AAEzC,MAAM,cAAc,8KAAqB;AAEzC,MAAM,8BAAgB,2KAAgB,MAGpC,QAAoC;QAAnC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;yBAClC,6LAAC,gLAAuB;QACtB,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,mTACA;QAED,GAAG,KAAK;;YAER;0BACD,6LAAC,6KAAoB;gBAAC,OAAO;0BAC3B,cAAA,6LAAC,sOAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;;;AAI7B,cAAc,WAAW,GAAG,gLAAuB,CAAC,WAAW;AAE/D,MAAM,qCAAuB,2KAAgB,CAG3C,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,uLAA8B;QAC7B,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,gOAAS;YAAC,WAAU;;;;;;;;;;;;MAZnB;AAeN,qBAAqB,WAAW,GAAG,uLAA8B,CAAC,WAAW;AAE7E,MAAM,uCAAyB,2KAAgB,CAG7C,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,yLAAgC;QAC/B,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,sOAAW;YAAC,WAAU;;;;;;;;;;;;MAZrB;AAeN,uBAAuB,WAAW,GAChC,yLAAgC,CAAC,WAAW;AAE9C,MAAM,8BAAgB,2KAAgB,OAGpC,QAAyD;QAAxD,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,QAAQ,EAAE,GAAG,OAAO;yBACvD,6LAAC,+KAAsB;kBACrB,cAAA,6LAAC,gLAAuB;YACtB,KAAK;YACL,WAAW,IAAA,4HAAE,EACX,ucACA,aAAa,YACX,mIACF;YAEF,UAAU;YACT,GAAG,KAAK;;8BAET,6LAAC;;;;;8BACD,6LAAC,iLAAwB;oBACvB,WAAW,IAAA,4HAAE,EACX,OACA,aAAa,YACX;8BAGH;;;;;;8BAEH,6LAAC;;;;;;;;;;;;;;;;;;AAIP,cAAc,WAAW,GAAG,gLAAuB,CAAC,WAAW;AAE/D,MAAM,4BAAc,2KAAgB,OAGlC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,8KAAqB;QACpB,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,0CAA0C;QACvD,GAAG,KAAK;;;;;;;;AAGb,YAAY,WAAW,GAAG,8KAAqB,CAAC,WAAW;AAE3D,MAAM,2BAAa,2KAAgB,OAGjC,QAAoC;QAAnC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO;yBAClC,6LAAC,6KAAoB;QACnB,KAAK;QACL,WAAW,IAAA,4HAAE,EACX,6NACA;QAED,GAAG,KAAK;;0BAET,6LAAC;gBAAK,WAAU;0BACd,cAAA,6LAAC,sLAA6B;8BAC5B,cAAA,6LAAC,gNAAK;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAIrB,6LAAC,iLAAwB;0BAAE;;;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAoB,CAAC,WAAW;AAEzD,MAAM,gCAAkB,2KAAgB,QAGtC,QAA0B;QAAzB,EAAE,SAAS,EAAE,GAAG,OAAO;yBACxB,6LAAC,kLAAyB;QACxB,KAAK;QACL,WAAW,IAAA,4HAAE,EAAC,4BAA4B;QACzC,GAAG,KAAK;;;;;;;;AAGb,gBAAgB,WAAW,GAAG,kLAAyB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 695, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/services/marketDataService.ts"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\n\n// Types\nexport interface MarketData {\n  symbol: string;\n  name: string;\n  price: number;\n  change: number;\n  changePercent: number;\n  volume: number;\n  high24h: number;\n  low24h: number;\n  bid: number;\n  ask: number;\n  spread: number;\n  marketCap?: number;\n  sector?: string;\n  type: 'stock' | 'crypto' | 'forex' | 'commodity';\n}\n\nexport interface OrderBookEntry {\n  price: number;\n  quantity: number;\n  total: number;\n}\n\nexport interface OrderBook {\n  bids: OrderBookEntry[];\n  asks: OrderBookEntry[];\n  lastUpdate: number;\n}\n\nexport interface Trade {\n  price: number;\n  quantity: number;\n  time: string;\n  side: 'buy' | 'sell';\n  timestamp: number;\n}\n\nexport interface TickerData {\n  symbol: string;\n  price: number;\n  change: number;\n  changePercent: number;\n  volume: number;\n  timestamp: number;\n}\n\n// Market symbols configuration\nexport const MARKET_SYMBOLS = {\n  crypto: [\n    { symbol: 'BTCUSDT', name: 'Bitcoin', basePrice: 43000 },\n    { symbol: 'ETHUSDT', name: 'Ethereum', basePrice: 2600 },\n    { symbol: 'LINKUSDT', name: 'Chainlink', basePrice: 21.5 },\n    { symbol: 'ADAUSDT', name: 'Cardano', basePrice: 0.65 },\n    { symbol: 'DOTUSDT', name: 'Polkadot', basePrice: 8.5 },\n    { symbol: 'SOLUSDT', name: 'Solana', basePrice: 95 },\n    { symbol: 'MATICUSDT', name: 'Polygon', basePrice: 1.1 },\n    { symbol: 'AVAXUSDT', name: 'Avalanche', basePrice: 42 }\n  ],\n  stocks: [\n    { symbol: 'AAPL', name: 'Apple Inc.', basePrice: 185 },\n    { symbol: 'GOOGL', name: 'Alphabet Inc.', basePrice: 140 },\n    { symbol: 'MSFT', name: 'Microsoft Corp.', basePrice: 380 },\n    { symbol: 'AMZN', name: 'Amazon.com Inc.', basePrice: 155 },\n    { symbol: 'TSLA', name: 'Tesla Inc.', basePrice: 240 },\n    { symbol: 'NVDA', name: 'NVIDIA Corp.', basePrice: 480 },\n    { symbol: 'META', name: 'Meta Platforms', basePrice: 350 },\n    { symbol: 'NFLX', name: 'Netflix Inc.', basePrice: 450 }\n  ],\n  forex: [\n    { symbol: 'EURUSD', name: 'Euro/US Dollar', basePrice: 1.08 },\n    { symbol: 'GBPUSD', name: 'British Pound/US Dollar', basePrice: 1.27 },\n    { symbol: 'USDJPY', name: 'US Dollar/Japanese Yen', basePrice: 150 },\n    { symbol: 'AUDUSD', name: 'Australian Dollar/US Dollar', basePrice: 0.66 },\n    { symbol: 'USDCAD', name: 'US Dollar/Canadian Dollar', basePrice: 1.35 }\n  ]\n};\n\nclass MarketDataService {\n  private subscribers: Map<string, Set<(data: MarketData) => void>> = new Map();\n  private orderBookSubscribers: Map<string, Set<(data: OrderBook) => void>> = new Map();\n  private tradeSubscribers: Map<string, Set<(data: Trade[]) => void>> = new Map();\n  private marketData: Map<string, MarketData> = new Map();\n  private orderBooks: Map<string, OrderBook> = new Map();\n  private recentTrades: Map<string, Trade[]> = new Map();\n  private intervals: Map<string, NodeJS.Timeout> = new Map();\n  private isConnected = false;\n\n  constructor() {\n    this.initializeMarketData();\n  }\n\n  private initializeMarketData() {\n    // Initialize crypto data\n    MARKET_SYMBOLS.crypto.forEach(({ symbol, name, basePrice }) => {\n      this.marketData.set(symbol, {\n        symbol,\n        name,\n        price: basePrice + (Math.random() - 0.5) * basePrice * 0.1,\n        change: (Math.random() - 0.5) * basePrice * 0.05,\n        changePercent: (Math.random() - 0.5) * 10,\n        volume: Math.random() * 10000000 + 1000000,\n        high24h: basePrice * (1 + Math.random() * 0.1),\n        low24h: basePrice * (1 - Math.random() * 0.1),\n        bid: basePrice * (1 - Math.random() * 0.001),\n        ask: basePrice * (1 + Math.random() * 0.001),\n        spread: basePrice * Math.random() * 0.002,\n        type: 'crypto'\n      });\n      \n      this.initializeOrderBook(symbol);\n      this.initializeRecentTrades(symbol);\n    });\n\n    // Initialize stock data\n    MARKET_SYMBOLS.stocks.forEach(({ symbol, name, basePrice }) => {\n      this.marketData.set(symbol, {\n        symbol,\n        name,\n        price: basePrice + (Math.random() - 0.5) * basePrice * 0.05,\n        change: (Math.random() - 0.5) * basePrice * 0.03,\n        changePercent: (Math.random() - 0.5) * 5,\n        volume: Math.random() * 50000000 + 5000000,\n        high24h: basePrice * (1 + Math.random() * 0.05),\n        low24h: basePrice * (1 - Math.random() * 0.05),\n        bid: basePrice * (1 - Math.random() * 0.0005),\n        ask: basePrice * (1 + Math.random() * 0.0005),\n        spread: basePrice * Math.random() * 0.001,\n        marketCap: basePrice * Math.random() * 1000000000 + 100000000000,\n        sector: ['Technology', 'Consumer', 'Healthcare', 'Finance'][Math.floor(Math.random() * 4)],\n        type: 'stock'\n      });\n      \n      this.initializeOrderBook(symbol);\n      this.initializeRecentTrades(symbol);\n    });\n\n    // Initialize forex data\n    MARKET_SYMBOLS.forex.forEach(({ symbol, name, basePrice }) => {\n      this.marketData.set(symbol, {\n        symbol,\n        name,\n        price: basePrice + (Math.random() - 0.5) * basePrice * 0.02,\n        change: (Math.random() - 0.5) * basePrice * 0.01,\n        changePercent: (Math.random() - 0.5) * 2,\n        volume: Math.random() * 100000000 + 10000000,\n        high24h: basePrice * (1 + Math.random() * 0.02),\n        low24h: basePrice * (1 - Math.random() * 0.02),\n        bid: basePrice * (1 - Math.random() * 0.0001),\n        ask: basePrice * (1 + Math.random() * 0.0001),\n        spread: basePrice * Math.random() * 0.0002,\n        type: 'forex'\n      });\n      \n      this.initializeOrderBook(symbol);\n      this.initializeRecentTrades(symbol);\n    });\n  }\n\n  private initializeOrderBook(symbol: string) {\n    const marketData = this.marketData.get(symbol);\n    if (!marketData) return;\n\n    const bids: OrderBookEntry[] = [];\n    const asks: OrderBookEntry[] = [];\n    \n    // Generate order book data\n    for (let i = 0; i < 10; i++) {\n      const bidPrice = marketData.price * (1 - (i + 1) * 0.001);\n      const askPrice = marketData.price * (1 + (i + 1) * 0.001);\n      const bidQuantity = Math.random() * 1000 + 100;\n      const askQuantity = Math.random() * 1000 + 100;\n      \n      bids.push({\n        price: bidPrice,\n        quantity: bidQuantity,\n        total: bidPrice * bidQuantity\n      });\n      \n      asks.push({\n        price: askPrice,\n        quantity: askQuantity,\n        total: askPrice * askQuantity\n      });\n    }\n\n    this.orderBooks.set(symbol, {\n      bids: bids.sort((a, b) => b.price - a.price),\n      asks: asks.sort((a, b) => a.price - b.price),\n      lastUpdate: Date.now()\n    });\n  }\n\n  private initializeRecentTrades(symbol: string) {\n    const marketData = this.marketData.get(symbol);\n    if (!marketData) return;\n\n    const trades: Trade[] = [];\n    const now = Date.now();\n    \n    for (let i = 0; i < 20; i++) {\n      const timestamp = now - i * 1000 * Math.random() * 60;\n      const price = marketData.price * (1 + (Math.random() - 0.5) * 0.01);\n      const quantity = Math.random() * 100 + 10;\n      const side = Math.random() > 0.5 ? 'buy' : 'sell';\n      \n      trades.push({\n        price,\n        quantity,\n        time: new Date(timestamp).toLocaleTimeString(),\n        side,\n        timestamp\n      });\n    }\n\n    this.recentTrades.set(symbol, trades.sort((a, b) => b.timestamp - a.timestamp));\n  }\n\n  connect() {\n    if (this.isConnected) return;\n    \n    this.isConnected = true;\n    \n    // Start real-time updates for all symbols\n    Array.from(this.marketData.keys()).forEach(symbol => {\n      this.startRealTimeUpdates(symbol);\n    });\n  }\n\n  disconnect() {\n    this.isConnected = false;\n    \n    // Clear all intervals\n    this.intervals.forEach(interval => clearInterval(interval));\n    this.intervals.clear();\n  }\n\n  private startRealTimeUpdates(symbol: string) {\n    // Price updates every 1-3 seconds\n    const priceInterval = setInterval(() => {\n      this.updateMarketData(symbol);\n    }, 1000 + Math.random() * 2000);\n    \n    // Order book updates every 2-5 seconds\n    const orderBookInterval = setInterval(() => {\n      this.updateOrderBook(symbol);\n    }, 2000 + Math.random() * 3000);\n    \n    // Trade updates every 3-8 seconds\n    const tradeInterval = setInterval(() => {\n      this.addNewTrade(symbol);\n    }, 3000 + Math.random() * 5000);\n    \n    this.intervals.set(`${symbol}_price`, priceInterval);\n    this.intervals.set(`${symbol}_orderbook`, orderBookInterval);\n    this.intervals.set(`${symbol}_trades`, tradeInterval);\n  }\n\n  private updateMarketData(symbol: string) {\n    const data = this.marketData.get(symbol);\n    if (!data) return;\n\n    const volatility = data.type === 'crypto' ? 0.02 : data.type === 'stock' ? 0.01 : 0.005;\n    const priceChange = (Math.random() - 0.5) * data.price * volatility;\n    const newPrice = Math.max(0.001, data.price + priceChange);\n    \n    const updatedData: MarketData = {\n      ...data,\n      price: newPrice,\n      change: data.change + priceChange * 0.1,\n      changePercent: ((newPrice - (data.price - data.change)) / (data.price - data.change)) * 100,\n      volume: data.volume + Math.random() * 100000,\n      bid: newPrice * (1 - Math.random() * 0.001),\n      ask: newPrice * (1 + Math.random() * 0.001)\n    };\n    \n    updatedData.spread = updatedData.ask - updatedData.bid;\n    \n    this.marketData.set(symbol, updatedData);\n    \n    // Notify subscribers\n    const symbolSubscribers = this.subscribers.get(symbol);\n    if (symbolSubscribers) {\n      symbolSubscribers.forEach(callback => callback(updatedData));\n    }\n  }\n\n  private updateOrderBook(symbol: string) {\n    const orderBook = this.orderBooks.get(symbol);\n    const marketData = this.marketData.get(symbol);\n    if (!orderBook || !marketData) return;\n\n    // Update a few random entries\n    const updateCount = Math.floor(Math.random() * 3) + 1;\n    \n    for (let i = 0; i < updateCount; i++) {\n      // Update bids\n      const bidIndex = Math.floor(Math.random() * orderBook.bids.length);\n      if (orderBook.bids[bidIndex]) {\n        orderBook.bids[bidIndex].quantity += (Math.random() - 0.5) * 100;\n        orderBook.bids[bidIndex].quantity = Math.max(1, orderBook.bids[bidIndex].quantity);\n        orderBook.bids[bidIndex].total = orderBook.bids[bidIndex].price * orderBook.bids[bidIndex].quantity;\n      }\n      \n      // Update asks\n      const askIndex = Math.floor(Math.random() * orderBook.asks.length);\n      if (orderBook.asks[askIndex]) {\n        orderBook.asks[askIndex].quantity += (Math.random() - 0.5) * 100;\n        orderBook.asks[askIndex].quantity = Math.max(1, orderBook.asks[askIndex].quantity);\n        orderBook.asks[askIndex].total = orderBook.asks[askIndex].price * orderBook.asks[askIndex].quantity;\n      }\n    }\n\n    orderBook.lastUpdate = Date.now();\n    \n    // Notify subscribers\n    const subscribers = this.orderBookSubscribers.get(symbol);\n    if (subscribers) {\n      subscribers.forEach(callback => callback(orderBook));\n    }\n  }\n\n  private addNewTrade(symbol: string) {\n    const trades = this.recentTrades.get(symbol);\n    const marketData = this.marketData.get(symbol);\n    if (!trades || !marketData) return;\n\n    const newTrade: Trade = {\n      price: marketData.price * (1 + (Math.random() - 0.5) * 0.005),\n      quantity: Math.random() * 100 + 10,\n      time: new Date().toLocaleTimeString(),\n      side: Math.random() > 0.5 ? 'buy' : 'sell',\n      timestamp: Date.now()\n    };\n\n    trades.unshift(newTrade);\n    if (trades.length > 50) {\n      trades.pop();\n    }\n\n    // Notify subscribers\n    const subscribers = this.tradeSubscribers.get(symbol);\n    if (subscribers) {\n      subscribers.forEach(callback => callback([...trades]));\n    }\n  }\n\n  // Public API\n  subscribe(symbol: string, callback: (data: MarketData) => void) {\n    if (!this.subscribers.has(symbol)) {\n      this.subscribers.set(symbol, new Set());\n    }\n    this.subscribers.get(symbol)!.add(callback);\n    \n    // Send initial data\n    const data = this.marketData.get(symbol);\n    if (data) {\n      callback(data);\n    }\n    \n    return () => {\n      const symbolSubscribers = this.subscribers.get(symbol);\n      if (symbolSubscribers) {\n        symbolSubscribers.delete(callback);\n      }\n    };\n  }\n\n  subscribeOrderBook(symbol: string, callback: (data: OrderBook) => void) {\n    if (!this.orderBookSubscribers.has(symbol)) {\n      this.orderBookSubscribers.set(symbol, new Set());\n    }\n    this.orderBookSubscribers.get(symbol)!.add(callback);\n    \n    // Send initial data\n    const data = this.orderBooks.get(symbol);\n    if (data) {\n      callback(data);\n    }\n    \n    return () => {\n      const subscribers = this.orderBookSubscribers.get(symbol);\n      if (subscribers) {\n        subscribers.delete(callback);\n      }\n    };\n  }\n\n  subscribeTrades(symbol: string, callback: (data: Trade[]) => void) {\n    if (!this.tradeSubscribers.has(symbol)) {\n      this.tradeSubscribers.set(symbol, new Set());\n    }\n    this.tradeSubscribers.get(symbol)!.add(callback);\n    \n    // Send initial data\n    const data = this.recentTrades.get(symbol);\n    if (data) {\n      callback([...data]);\n    }\n    \n    return () => {\n      const subscribers = this.tradeSubscribers.get(symbol);\n      if (subscribers) {\n        subscribers.delete(callback);\n      }\n    };\n  }\n\n  getMarketData(symbol: string): MarketData | undefined {\n    return this.marketData.get(symbol);\n  }\n\n  getOrderBook(symbol: string): OrderBook | undefined {\n    return this.orderBooks.get(symbol);\n  }\n\n  getRecentTrades(symbol: string): Trade[] {\n    return this.recentTrades.get(symbol) || [];\n  }\n\n  getAllSymbols(): string[] {\n    return Array.from(this.marketData.keys());\n  }\n\n  searchSymbols(query: string): MarketData[] {\n    const results: MarketData[] = [];\n    const lowerQuery = query.toLowerCase();\n    \n    this.marketData.forEach(data => {\n      if (data.symbol.toLowerCase().includes(lowerQuery) || \n          data.name.toLowerCase().includes(lowerQuery)) {\n        results.push(data);\n      }\n    });\n    \n    return results;\n  }\n}\n\n// Singleton instance\nconst marketDataService = new MarketDataService();\n\n// React hooks\nexport const useMarketData = (symbol: string) => {\n  const [data, setData] = useState<MarketData | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const unsubscribe = marketDataService.subscribe(symbol, (newData) => {\n      setData(newData);\n      setIsLoading(false);\n    });\n\n    return unsubscribe;\n  }, [symbol]);\n\n  return { data, isLoading };\n};\n\nexport const useOrderBook = (symbol: string) => {\n  const [orderBook, setOrderBook] = useState<OrderBook | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const unsubscribe = marketDataService.subscribeOrderBook(symbol, (newData) => {\n      setOrderBook(newData);\n      setIsLoading(false);\n    });\n\n    return unsubscribe;\n  }, [symbol]);\n\n  return { orderBook, isLoading };\n};\n\nexport const useTrades = (symbol: string) => {\n  const [trades, setTrades] = useState<Trade[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const unsubscribe = marketDataService.subscribeTrades(symbol, (newTrades) => {\n      setTrades(newTrades);\n      setIsLoading(false);\n    });\n\n    return unsubscribe;\n  }, [symbol]);\n\n  return { trades, isLoading };\n};\n\nexport const useMarketConnection = () => {\n  const [isConnected, setIsConnected] = useState(false);\n\n  const connect = useCallback(() => {\n    marketDataService.connect();\n    setIsConnected(true);\n  }, []);\n\n  const disconnect = useCallback(() => {\n    marketDataService.disconnect();\n    setIsConnected(false);\n  }, []);\n\n  useEffect(() => {\n    // Auto-connect on mount\n    connect();\n    \n    return () => {\n      disconnect();\n    };\n  }, [connect, disconnect]);\n\n  return { isConnected, connect, disconnect };\n};\n\nexport default marketDataService;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1258, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/trading/TradingViewChart.tsx"],"sourcesContent":["'use client';\n\nimport React, { useEffect, useRef, memo, useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { BarChart3, Maximize2, Settings, TrendingUp, TrendingDown, Wifi, WifiOff } from 'lucide-react';\nimport { useMarketData, useMarketConnection } from '@/services/marketDataService';\nimport { cn } from '@/lib/utils';\n\ninterface TradingViewChartProps {\n  symbol: string;\n  interval?: string;\n  theme?: 'light' | 'dark';\n  height?: number;\n  width?: string;\n  autosize?: boolean;\n  timezone?: string;\n  locale?: string;\n  toolbar_bg?: string;\n  enable_publishing?: boolean;\n  allow_symbol_change?: boolean;\n  container_id?: string;\n  studies?: string[];\n  show_popup_button?: boolean;\n  popup_width?: string;\n  popup_height?: string;\n  enableLiveData?: boolean;\n  onReady?: () => void;\n}\n\ninterface TradingViewWidget {\n  new (config: any): any;\n}\n\ndeclare global {\n  interface Window {\n    TradingView: {\n      widget: TradingViewWidget;\n    };\n  }\n}\n\nconst TradingViewChart: React.FC<TradingViewChartProps> = ({\n  symbol = 'BINANCE:BTCUSDT',\n  interval = '15',\n  theme = 'dark',\n  height = 500,\n  width = '100%',\n  autosize = true,\n  timezone = 'Etc/UTC',\n  locale = 'en',\n  toolbar_bg = '#f1f3f6',\n  enable_publishing = false,\n  allow_symbol_change = true,\n  container_id,\n  studies = ['RSI', 'MACD'],\n  show_popup_button = false,\n  popup_width = '1000',\n  popup_height = '650',\n  enableLiveData = true,\n  onReady\n}) => {\n  const [isLiveDataEnabled, setIsLiveDataEnabled] = useState(enableLiveData);\n  const [lastUpdate, setLastUpdate] = useState<Date | null>(null);\n  \n  // Get live market data\n  const marketData = useMarketData(symbol.replace('BINANCE:', '').replace('NASDAQ:', ''));\n  const { isConnected, connect, disconnect } = useMarketConnection();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const widgetRef = useRef<any>(null);\n  const scriptRef = useRef<HTMLScriptElement | null>(null);\n  const containerId = container_id || `tradingview_${Math.random().toString(36).substr(2, 9)}`;\n\n  // Create datafeed for live data\n  const createDatafeed = () => {\n    return {\n      onReady: (callback: any) => {\n        setTimeout(() => callback({\n          supported_resolutions: ['1', '5', '15', '30', '60', '240', '1D'],\n          supports_marks: false,\n          supports_timescale_marks: false,\n        }), 0);\n      },\n      searchSymbols: (userInput: string, exchange: string, symbolType: string, onResultReadyCallback: any) => {\n        onResultReadyCallback([]);\n      },\n      resolveSymbol: (symbolName: string, onSymbolResolvedCallback: any, onResolveErrorCallback: any) => {\n        const symbolInfo = {\n          name: symbolName,\n          ticker: symbolName,\n          description: symbolName,\n          type: 'crypto',\n          session: '24x7',\n          timezone: 'Etc/UTC',\n          exchange: 'BINANCE',\n          minmov: 1,\n          pricescale: 100,\n          has_intraday: true,\n          supported_resolutions: ['1', '5', '15', '30', '60', '240', '1D'],\n          volume_precision: 2,\n          data_status: 'streaming',\n        };\n        setTimeout(() => onSymbolResolvedCallback(symbolInfo), 0);\n      },\n      getBars: (symbolInfo: any, resolution: string, periodParams: any, onHistoryCallback: any, onErrorCallback: any) => {\n        // Generate mock historical data\n        const bars = [];\n        const now = Date.now();\n        const interval = resolution === '1D' ? 24 * 60 * 60 * 1000 : parseInt(resolution) * 60 * 1000;\n        \n        for (let i = 100; i >= 0; i--) {\n           const time = now - (i * interval);\n           const basePrice = marketData?.data?.price || 43000;\n           const randomChange = (Math.random() - 0.5) * 0.02;\n           const price = basePrice * (1 + randomChange);\n          \n          bars.push({\n            time: time,\n            low: price * 0.995,\n            high: price * 1.005,\n            open: price,\n            close: price,\n            volume: Math.random() * 1000000\n          });\n        }\n        \n        onHistoryCallback(bars, { noData: false });\n      },\n      subscribeBars: (symbolInfo: any, resolution: string, onRealtimeCallback: any, subscriberUID: string, onResetCacheNeededCallback: any) => {\n        // Subscribe to real-time updates\n        const interval = setInterval(() => {\n           if (marketData?.data && isLiveDataEnabled) {\n             const now = Date.now();\n             const price = marketData.data.price;\n             const bar = {\n              time: now,\n              low: price * 0.999,\n              high: price * 1.001,\n              open: price,\n              close: price,\n              volume: Math.random() * 100000\n            };\n            onRealtimeCallback(bar);\n            setLastUpdate(new Date());\n          }\n        }, 1000);\n        \n        return () => clearInterval(interval);\n      },\n      unsubscribeBars: (subscriberUID: string) => {\n        // Cleanup subscription\n      }\n    };\n  };\n\n  // Toggle live data\n  const toggleLiveData = () => {\n    setIsLiveDataEnabled(!isLiveDataEnabled);\n    if (!isLiveDataEnabled && !isConnected) {\n      connect();\n    } else if (isLiveDataEnabled && isConnected) {\n      disconnect();\n    }\n  };\n\n  // Connect to market data when live data is enabled\n  useEffect(() => {\n    if (isLiveDataEnabled && !isConnected) {\n      connect();\n    }\n  }, [isLiveDataEnabled, isConnected, connect]);\n\n  // Convert symbol to TradingView format\n  const formatSymbol = (sym: string): string => {\n    // Handle different symbol formats\n    if (sym.includes('USDT')) {\n      return `BINANCE:${sym}`;\n    }\n    if (sym.includes('-PERP')) {\n      const base = sym.replace('-PERP', '');\n      return `BINANCE:${base}USDT`;\n    }\n    if (sym.includes('-C-') || sym.includes('-P-')) {\n      // Options - use underlying\n      const underlying = sym.split('-')[0];\n      return `NASDAQ:${underlying}`;\n    }\n    // Futures\n    const futuresMap: { [key: string]: string } = {\n      'ES': 'CME_MINI:ES1!',\n      'NQ': 'CME_MINI:NQ1!',\n      'YM': 'CBOT_MINI:YM1!',\n      'RTY': 'CME_MINI:RTY1!',\n      'CL': 'NYMEX:CL1!',\n      'GC': 'COMEX:GC1!',\n      'SI': 'COMEX:SI1!',\n      'NG': 'NYMEX:NG1!',\n      'ZB': 'CBOT:ZB1!',\n      'ZN': 'CBOT:ZN1!',\n      'ZF': 'CBOT:ZF1!',\n      'ZT': 'CBOT:ZT1!'\n    };\n    \n    if (futuresMap[sym]) {\n      return futuresMap[sym];\n    }\n    \n    // Default to NASDAQ for stocks\n    return `NASDAQ:${sym}`;\n  };\n\n  const loadTradingViewScript = (): Promise<void> => {\n    return new Promise((resolve, reject) => {\n      if (window.TradingView) {\n        resolve();\n        return;\n      }\n\n      const script = document.createElement('script');\n      script.src = 'https://s3.tradingview.com/tv.js';\n      script.async = true;\n      script.onload = () => resolve();\n      script.onerror = () => reject(new Error('Failed to load TradingView script'));\n      \n      document.head.appendChild(script);\n      scriptRef.current = script;\n    });\n  };\n\n  const createWidget = () => {\n    // Check if container exists and is mounted\n    if (!containerRef.current) {\n      console.warn('Container not ready, skipping widget creation');\n      return;\n    }\n\n    // Cleanup existing widget\n    if (widgetRef.current) {\n      try {\n        widgetRef.current.remove();\n      } catch (e) {\n        console.warn('Error removing existing widget:', e);\n      }\n    }\n\n    // Clear container\n    if (containerRef.current) {\n      containerRef.current.innerHTML = '';\n    }\n\n    try {\n      const widgetConfig = {\n        autosize,\n        symbol: formatSymbol(symbol),\n        interval,\n        timezone,\n        theme,\n        style: '1', // Candlestick\n        locale,\n        toolbar_bg,\n        enable_publishing,\n        allow_symbol_change,\n        container: containerRef.current,\n        width,\n        height,\n        studies,\n        show_popup_button,\n        popup_width,\n        popup_height,\n        hide_side_toolbar: false,\n        hide_top_toolbar: false,\n        hide_legend: false,\n        save_image: false,\n        calendar: false,\n        hotlist: false,\n        news: [],\n        details: false,\n        withdateranges: true,\n        range: '3M',\n        hide_volume: false,\n        support_host: 'https://www.tradingview.com',\n        // Enable real-time data\n        datafeed: isLiveDataEnabled ? createDatafeed() : undefined,\n        library_path: '/charting_library/',\n        custom_css_url: '/charting_library/custom.css'\n      };\n\n      widgetRef.current = new window.TradingView.widget(widgetConfig);\n      \n      if (onReady) {\n        widgetRef.current.onChartReady(() => {\n          onReady();\n        });\n      }\n    } catch (error) {\n      console.error('Error creating TradingView widget:', error);\n    }\n  };\n\n  useEffect(() => {\n    let mounted = true;\n\n    const initializeWidget = async () => {\n      try {\n        await loadTradingViewScript();\n        if (mounted && containerRef.current && window.TradingView) {\n          // Small delay to ensure DOM is ready\n          setTimeout(() => {\n            if (mounted && containerRef.current) {\n              createWidget();\n            }\n          }, 100);\n        }\n      } catch (error) {\n        console.error('Failed to initialize TradingView widget:', error);\n      }\n    };\n\n    initializeWidget();\n\n    return () => {\n      mounted = false;\n      if (widgetRef.current) {\n        try {\n          widgetRef.current.remove();\n        } catch (e) {\n          console.warn('Error cleaning up widget:', e);\n        }\n      }\n    };\n  }, []);\n\n  // Update widget when symbol or interval changes\n  useEffect(() => {\n    if (widgetRef.current && window.TradingView && containerRef.current) {\n      createWidget();\n    }\n  }, [symbol, interval, theme]);\n\n  return (\n    <Card className=\"w-full\">\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"flex items-center gap-2 text-lg\">\n            <BarChart3 className=\"h-5 w-5\" />\n            Advanced Chart\n            <Badge variant=\"outline\" className=\"ml-2\">\n              {formatSymbol(symbol).replace(':', ' ')}\n            </Badge>\n            {isLiveDataEnabled && (\n              <Badge \n                variant={isConnected ? \"default\" : \"secondary\"} \n                className={cn(\n                  \"ml-2 flex items-center gap-1\",\n                  isConnected ? \"bg-green-500 hover:bg-green-600\" : \"bg-gray-500\"\n                )}\n              >\n                {isConnected ? <Wifi className=\"h-3 w-3\" /> : <WifiOff className=\"h-3 w-3\" />}\n                {isConnected ? 'LIVE' : 'OFFLINE'}\n              </Badge>\n            )}\n          </CardTitle>\n          <div className=\"flex items-center gap-2\">\n            {lastUpdate && isLiveDataEnabled && (\n              <span className=\"text-xs text-gray-500\">\n                Last update: {lastUpdate.toLocaleTimeString()}\n              </span>\n            )}\n            <Button \n              variant={isLiveDataEnabled ? \"default\" : \"outline\"} \n              size=\"sm\"\n              onClick={toggleLiveData}\n              className={cn(\n                isLiveDataEnabled && \"bg-green-500 hover:bg-green-600\"\n              )}\n            >\n              {isLiveDataEnabled ? <Wifi className=\"h-4 w-4\" /> : <WifiOff className=\"h-4 w-4\" />}\n              {isLiveDataEnabled ? 'Live' : 'Static'}\n            </Button>\n            <Button variant=\"outline\" size=\"sm\">\n              <Settings className=\"h-4 w-4\" />\n            </Button>\n            <Button variant=\"outline\" size=\"sm\">\n              <Maximize2 className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </div>\n        {isLiveDataEnabled && marketData?.data && (\n           <div className=\"flex items-center gap-4 text-sm text-gray-600 dark:text-gray-400 mt-2\">\n             <span>Price: <span className=\"font-medium\">${marketData.data.price.toLocaleString()}</span></span>\n             <span className={cn(\n               \"flex items-center gap-1\",\n               marketData.data.changePercent >= 0 ? \"text-green-500\" : \"text-red-500\"\n             )}>\n               {marketData.data.changePercent >= 0 ? <TrendingUp className=\"h-3 w-3\" /> : <TrendingDown className=\"h-3 w-3\" />}\n               {marketData.data.changePercent.toFixed(2)}%\n             </span>\n             <span>Volume: <span className=\"font-medium\">{marketData.data.volume.toLocaleString()}</span></span>\n           </div>\n         )}\n      </CardHeader>\n      <CardContent className=\"p-0\">\n        <div \n          ref={containerRef}\n          id={containerId}\n          className=\"w-full\"\n          style={{ height: autosize ? '100%' : `${height}px`, minHeight: '400px' }}\n        />\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default memo(TradingViewChart);"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1844, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/trading/TradingPanelDashboard.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport {\n  TrendingUp,\n  TrendingDown,\n  DollarSign,\n  BarChart3,\n  Activity,\n  Search,\n  Star,\n  Volume2,\n  RefreshCw,\n  Settings,\n  Maximize2,\n  ChevronUp,\n  ChevronDown,\n  Clock,\n  Target,\n  Bot,\n  Users,\n  Shield,\n  Play,\n  Pause,\n  TrendingUpIcon,\n  AlertTriangle\n} from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { toast } from 'react-hot-toast';\nimport TradingViewChart from './TradingViewChart';\nimport { \n  useMarketData, \n  useOrderBook, \n  useTrades, \n  useMarketConnection,\n  MarketData,\n  OrderBookEntry,\n  Trade,\n  MARKET_SYMBOLS\n} from '@/services/marketDataService';\n\n// Types\ninterface Position {\n  symbol: string;\n  side: 'long' | 'short';\n  size: number;\n  entryPrice: number;\n  markPrice: number;\n  pnl: number;\n  pnlPercent: number;\n  margin: number;\n  leverage: number;\n}\n\ninterface TradingPanelDashboardProps {\n  initialParams?: {\n    symbol?: string;\n    orderType?: 'market' | 'limit' | 'stop';\n    orderSide?: 'buy' | 'sell';\n    quantity?: string;\n    price?: string;\n  };\n}\n\nconst TradingPanelDashboard: React.FC<TradingPanelDashboardProps> = ({ initialParams }) => {\n  // State - Initialize with URL parameters if provided\n  const [selectedSymbol, setSelectedSymbol] = useState(initialParams?.symbol || 'LINKUSDT');\n  const [orderType, setOrderType] = useState<'market' | 'limit' | 'stop'>(initialParams?.orderType || 'limit');\n  const [orderSide, setOrderSide] = useState<'buy' | 'sell'>(initialParams?.orderSide || 'buy');\n  const [orderQuantity, setOrderQuantity] = useState(initialParams?.quantity || '');\n  const [orderPrice, setOrderPrice] = useState(initialParams?.price || '');\n  const [leverage, setLeverage] = useState(10);\n  const [isLoading, setIsLoading] = useState(false);\n  const [activeTab, setActiveTab] = useState('spot');\n  const [rightPanelTab, setRightPanelTab] = useState('orderbook');\n  \n  // GainzAlgo V2 Pro state\n  const [gainzAlgoEnabled, setGainzAlgoEnabled] = useState(false);\n  const [gainzAlgoStrategy, setGainzAlgoStrategy] = useState('momentum');\n  const [gainzAlgoRiskLevel, setGainzAlgoRiskLevel] = useState('medium');\n  const [gainzAlgoCapital, setGainzAlgoCapital] = useState('1000');\n  \n  // Copy Trading state\n  const [copyTradingEnabled, setCopyTradingEnabled] = useState(false);\n  const [selectedTrader, setSelectedTrader] = useState('');\n  const [copyRatio, setCopyRatio] = useState(100);\n  \n  // Risk Management state\n  const [stopLossEnabled, setStopLossEnabled] = useState(false);\n  const [takeProfitEnabled, setTakeProfitEnabled] = useState(false);\n  const [stopLossPercent, setStopLossPercent] = useState('5');\n  const [takeProfitPercent, setTakeProfitPercent] = useState('10');\n  const [maxDailyLoss, setMaxDailyLoss] = useState('500');\n  \n  // Real market data hooks\n  const { isConnected } = useMarketConnection();\n  const { data: marketData, isLoading: marketDataLoading } = useMarketData(selectedSymbol);\n  const { orderBook, isLoading: orderBookLoading } = useOrderBook(selectedSymbol);\n  const { trades: recentTrades, isLoading: tradesLoading } = useTrades(selectedSymbol);\n\n  // Get all available symbols for the dropdown\n  const allSymbols = [\n    ...MARKET_SYMBOLS.crypto,\n    ...MARKET_SYMBOLS.stocks,\n    ...MARKET_SYMBOLS.forex\n  ];\n\n  // Mock positions - in real app, this would come from user's portfolio API\n  const [positions, setPositions] = useState<Position[]>([\n    {\n      symbol: 'LINKUSDT',\n      side: 'long',\n      size: 500,\n      entryPrice: 21.250,\n      markPrice: 21.575,\n      pnl: 162.5,\n      pnlPercent: 1.53,\n      margin: 1062.5,\n      leverage: 10\n    }\n  ]);\n\n  // Update order price when market data changes\n  useEffect(() => {\n    if (marketData && orderType === 'limit' && !orderPrice) {\n      setOrderPrice(marketData.price.toString());\n    }\n  }, [marketData, orderType, orderPrice]);\n\n  const handlePlaceOrder = useCallback(async () => {\n    if (!orderQuantity || (!orderPrice && orderType !== 'market')) {\n      toast.error('Please fill in all required fields');\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      toast.success(`${orderSide.toUpperCase()} order placed successfully`);\n      setOrderQuantity('');\n      setOrderPrice('');\n    } catch (error) {\n      toast.error('Failed to place order');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [orderQuantity, orderPrice, orderType, orderSide]);\n\n  const formatNumber = (num: number, decimals: number = 3) => {\n    return num.toFixed(decimals);\n  };\n\n  const formatCurrency = (num: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2\n    }).format(num);\n  };\n\n  return (\n    <div className=\"h-screen flex flex-col bg-white dark:bg-gray-900\">\n      {/* Header */}\n      <div className=\"border-b border-gray-200 dark:border-gray-700 p-4\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-6\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex items-center space-x-2\">\n                <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                  {marketData?.symbol || selectedSymbol}\n                </h1>\n                <Badge variant=\"secondary\">{marketData?.name || 'Loading...'}</Badge>\n              </div>\n              \n              {/* Symbol Selector */}\n              <Select value={selectedSymbol} onValueChange={setSelectedSymbol}>\n                <SelectTrigger className=\"w-48\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <div className=\"px-2 py-1 text-xs font-medium text-gray-500 dark:text-gray-400\">Crypto</div>\n                  {MARKET_SYMBOLS.crypto.map((symbolData) => (\n                    <SelectItem key={symbolData.symbol} value={symbolData.symbol}>\n                      {symbolData.name} ({symbolData.symbol})\n                    </SelectItem>\n                  ))}\n                  <div className=\"px-2 py-1 text-xs font-medium text-gray-500 dark:text-gray-400 mt-2\">Stocks</div>\n                  {MARKET_SYMBOLS.stocks.map((symbolData) => (\n                    <SelectItem key={symbolData.symbol} value={symbolData.symbol}>\n                      {symbolData.name} ({symbolData.symbol})\n                    </SelectItem>\n                  ))}\n                  <div className=\"px-2 py-1 text-xs font-medium text-gray-500 dark:text-gray-400 mt-2\">Forex</div>\n                  {MARKET_SYMBOLS.forex.map((symbolData) => (\n                    <SelectItem key={symbolData.symbol} value={symbolData.symbol}>\n                      {symbolData.name} ({symbolData.symbol})\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              {marketDataLoading ? (\n                <div className=\"flex items-center space-x-2\">\n                  <RefreshCw className=\"h-6 w-6 animate-spin\" />\n                  <span>Loading...</span>\n                </div>\n              ) : marketData ? (\n                <>\n                  <div className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                    ${formatNumber(marketData.price)}\n                  </div>\n                  <div className={cn(\n                    \"flex items-center space-x-1 px-2 py-1 rounded text-sm font-medium\",\n                    marketData.change >= 0 \n                      ? \"bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400\"\n                      : \"bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400\"\n                  )}>\n                    {marketData.change >= 0 ? <TrendingUp className=\"h-4 w-4\" /> : <TrendingDown className=\"h-4 w-4\" />}\n                    <span>{formatNumber(marketData.change, 3)} ({formatNumber(marketData.changePercent, 2)}%)</span>\n                  </div>\n                </>\n              ) : (\n                <div className=\"text-red-500\">Failed to load market data</div>\n              )}\n            </div>\n          </div>\n          <div className=\"flex items-center space-x-4\">\n            <Button variant=\"outline\" size=\"sm\">\n              <Star className=\"h-4 w-4 mr-2\" />\n              Watchlist\n            </Button>\n            <Button variant=\"outline\" size=\"sm\">\n              <Settings className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </div>\n        \n        {/* Market Stats */}\n        {marketData && (\n          <div className=\"flex items-center space-x-8 mt-4 text-sm text-gray-600 dark:text-gray-400\">\n            <div>\n              <span className=\"font-medium\">24h High:</span>\n              <span className=\"ml-2\">${formatNumber(marketData.high24h)}</span>\n            </div>\n            <div>\n              <span className=\"font-medium\">24h Low:</span>\n              <span className=\"ml-2\">${formatNumber(marketData.low24h)}</span>\n            </div>\n            <div>\n              <span className=\"font-medium\">24h Volume:</span>\n              <span className=\"ml-2\">{marketData.volume.toLocaleString()}</span>\n            </div>\n            <div>\n              <span className=\"font-medium\">Spread:</span>\n              <span className=\"ml-2\">{formatNumber(marketData.spread, 4)}</span>\n            </div>\n            <div className={cn(\n              \"flex items-center space-x-1\",\n              isConnected ? \"text-green-500\" : \"text-red-500\"\n            )}>\n              <div className={cn(\n                \"w-2 h-2 rounded-full\",\n                isConnected ? \"bg-green-500\" : \"bg-red-500\"\n              )} />\n              <span>{isConnected ? 'Connected' : 'Disconnected'}</span>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Main Content */}\n      <div className=\"flex-1 flex overflow-hidden\">\n        {/* Left Panel - Chart */}\n        <div className=\"flex-1 flex flex-col\">\n          {/* Chart Header */}\n          <div className=\"border-b border-gray-200 dark:border-gray-700 p-4\">\n            <div className=\"flex items-center justify-between\">\n              <Tabs value={activeTab} onValueChange={setActiveTab}>\n                <TabsList>\n                  <TabsTrigger value=\"spot\">Spot</TabsTrigger>\n                  <TabsTrigger value=\"futures\">Futures</TabsTrigger>\n                  <TabsTrigger value=\"options\">Options</TabsTrigger>\n                </TabsList>\n              </Tabs>\n              <div className=\"flex items-center space-x-2\">\n                <Button variant=\"outline\" size=\"sm\">1m</Button>\n                <Button variant=\"outline\" size=\"sm\">5m</Button>\n                <Button variant=\"outline\" size=\"sm\">15m</Button>\n                <Button variant=\"outline\" size=\"sm\">1h</Button>\n                <Button variant=\"outline\" size=\"sm\">4h</Button>\n                <Button variant=\"default\" size=\"sm\">1D</Button>\n                <Button variant=\"outline\" size=\"sm\">\n                  <Maximize2 className=\"h-4 w-4\" />\n                </Button>\n              </div>\n            </div>\n          </div>\n          \n          {/* Chart Area */}\n          <div className=\"flex-1 overflow-hidden\">\n            <TradingViewChart\n              symbol={`BINANCE:${selectedSymbol}`}\n              interval=\"15\"\n              theme=\"dark\"\n              height={600}\n              autosize={true}\n              allow_symbol_change={true}\n              studies={['RSI', 'MACD', 'BB']}\n              enableLiveData={true}\n            />\n          </div>\n        </div>\n\n        {/* Right Panel - Order Book & Trading */}\n        <div className=\"w-96 border-l border-gray-200 dark:border-gray-700 flex flex-col\">\n          {/* Trading Form */}\n          <div className=\"border-b border-gray-200 dark:border-gray-700 p-4\">\n            <div className=\"space-y-4\">\n              {/* Order Type Tabs */}\n              <div className=\"flex space-x-1 bg-gray-100 dark:bg-gray-800 rounded-lg p-1\">\n                <button\n                  onClick={() => setOrderSide('buy')}\n                  className={cn(\n                    \"flex-1 py-2 px-3 rounded-md text-sm font-medium transition-colors\",\n                    orderSide === 'buy'\n                      ? \"bg-green-500 text-white\"\n                      : \"text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white\"\n                  )}\n                >\n                  Buy\n                </button>\n                <button\n                  onClick={() => setOrderSide('sell')}\n                  className={cn(\n                    \"flex-1 py-2 px-3 rounded-md text-sm font-medium transition-colors\",\n                    orderSide === 'sell'\n                      ? \"bg-red-500 text-white\"\n                      : \"text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white\"\n                  )}\n                >\n                  Sell\n                </button>\n              </div>\n\n              {/* Order Type */}\n              <Select value={orderType} onValueChange={(value: any) => setOrderType(value)}>\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"market\">Market</SelectItem>\n                  <SelectItem value=\"limit\">Limit</SelectItem>\n                  <SelectItem value=\"stop\">Stop</SelectItem>\n                </SelectContent>\n              </Select>\n\n              {/* Price Input */}\n              {orderType !== 'market' && (\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                    Price (USDT)\n                  </label>\n                  <Input\n                    type=\"number\"\n                    value={orderPrice}\n                    onChange={(e) => setOrderPrice(e.target.value)}\n                    placeholder=\"0.00\"\n                    step=\"0.001\"\n                  />\n                </div>\n              )}\n\n              {/* Quantity Input */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                  Quantity (LINK)\n                </label>\n                <Input\n                  type=\"number\"\n                  value={orderQuantity}\n                  onChange={(e) => setOrderQuantity(e.target.value)}\n                  placeholder=\"0.00\"\n                  step=\"0.1\"\n                />\n              </div>\n\n              {/* Leverage Slider */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                  Leverage: {leverage}x\n                </label>\n                <input\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"100\"\n                  value={leverage}\n                  onChange={(e) => setLeverage(Number(e.target.value))}\n                  className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700\"\n                />\n              </div>\n\n              {/* Order Summary */}\n              <div className=\"bg-gray-50 dark:bg-gray-800 rounded-lg p-3 space-y-2 text-sm\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600 dark:text-gray-400\">Est. Cost:</span>\n                  <span className=\"font-medium\">\n                    {orderQuantity && orderPrice \n                      ? formatCurrency(Number(orderQuantity) * Number(orderPrice))\n                      : '$0.00'\n                    }\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600 dark:text-gray-400\">Margin:</span>\n                  <span className=\"font-medium\">\n                    {orderQuantity && orderPrice \n                      ? formatCurrency((Number(orderQuantity) * Number(orderPrice)) / leverage)\n                      : '$0.00'\n                    }\n                  </span>\n                </div>\n              </div>\n\n              {/* Place Order Button */}\n              <Button\n                onClick={handlePlaceOrder}\n                disabled={isLoading}\n                className={cn(\n                  \"w-full\",\n                  orderSide === 'buy' \n                    ? \"bg-green-500 hover:bg-green-600\" \n                    : \"bg-red-500 hover:bg-red-600\"\n                )}\n              >\n                {isLoading ? (\n                  <RefreshCw className=\"h-4 w-4 animate-spin mr-2\" />\n                ) : null}\n                {orderSide === 'buy' ? 'Buy' : 'Sell'} {selectedSymbol}\n              </Button>\n            </div>\n          </div>\n\n          {/* Order Book */}\n          <div className=\"flex-1 overflow-hidden\">\n            <Tabs value={rightPanelTab} onValueChange={setRightPanelTab} className=\"h-full flex flex-col\">\n              <TabsList className=\"grid w-full grid-cols-6 mx-4 mt-4 text-xs\">\n                <TabsTrigger value=\"orderbook\">Book</TabsTrigger>\n                <TabsTrigger value=\"trades\">Trades</TabsTrigger>\n                <TabsTrigger value=\"positions\">Positions</TabsTrigger>\n                <TabsTrigger value=\"gainzalgo\">GainzAlgo</TabsTrigger>\n                <TabsTrigger value=\"copytrading\">Copy</TabsTrigger>\n                <TabsTrigger value=\"riskmanagement\">Risk</TabsTrigger>\n              </TabsList>\n              \n              <TabsContent value=\"orderbook\" className=\"flex-1 overflow-hidden mt-4\">\n                {orderBookLoading ? (\n                  <div className=\"flex items-center justify-center h-full\">\n                    <RefreshCw className=\"h-6 w-6 animate-spin\" />\n                  </div>\n                ) : orderBook ? (\n                  <div className=\"h-full flex flex-col\">\n                    {/* Asks */}\n                    <div className=\"flex-1 overflow-y-auto\">\n                      <div className=\"px-4 pb-2\">\n                        <div className=\"grid grid-cols-3 gap-2 text-xs font-medium text-gray-500 dark:text-gray-400 mb-2\">\n                          <span>Price (USDT)</span>\n                          <span className=\"text-right\">Quantity</span>\n                          <span className=\"text-right\">Total</span>\n                        </div>\n                        {orderBook.asks.slice().reverse().map((ask, index) => (\n                          <div key={index} className=\"grid grid-cols-3 gap-2 text-xs py-1 hover:bg-red-50 dark:hover:bg-red-900/10 cursor-pointer\">\n                            <span className=\"text-red-500 font-mono\">{formatNumber(ask.price)}</span>\n                            <span className=\"text-right font-mono\">{formatNumber(ask.quantity, 1)}</span>\n                            <span className=\"text-right font-mono text-gray-600 dark:text-gray-400\">{formatNumber(ask.total, 0)}</span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                    \n                    {/* Current Price */}\n                    <div className=\"px-4 py-2 border-y border-gray-200 dark:border-gray-700\">\n                      <div className=\"text-center\">\n                        {marketData && (\n                          <>\n                            <div className={cn(\n                              \"text-lg font-bold\",\n                              marketData.change >= 0 ? \"text-green-500\" : \"text-red-500\"\n                            )}>\n                              ${formatNumber(marketData.price)}\n                            </div>\n                            <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                              ${formatNumber(marketData.price)} ≈ ${formatNumber(marketData.price)}\n                            </div>\n                          </>\n                        )}\n                      </div>\n                    </div>\n                    \n                    {/* Bids */}\n                    <div className=\"flex-1 overflow-y-auto\">\n                      <div className=\"px-4 pt-2\">\n                        {orderBook.bids.map((bid, index) => (\n                          <div key={index} className=\"grid grid-cols-3 gap-2 text-xs py-1 hover:bg-green-50 dark:hover:bg-green-900/10 cursor-pointer\">\n                            <span className=\"text-green-500 font-mono\">{formatNumber(bid.price)}</span>\n                            <span className=\"text-right font-mono\">{formatNumber(bid.quantity, 1)}</span>\n                            <span className=\"text-right font-mono text-gray-600 dark:text-gray-400\">{formatNumber(bid.total, 0)}</span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"flex items-center justify-center h-full text-red-500\">\n                    Failed to load order book\n                  </div>\n                )}\n              </TabsContent>\n              \n              <TabsContent value=\"trades\" className=\"flex-1 overflow-hidden mt-4\">\n                {tradesLoading ? (\n                  <div className=\"flex items-center justify-center h-full\">\n                    <RefreshCw className=\"h-6 w-6 animate-spin\" />\n                  </div>\n                ) : recentTrades && recentTrades.length > 0 ? (\n                  <div className=\"h-full overflow-y-auto px-4\">\n                    <div className=\"grid grid-cols-3 gap-2 text-xs font-medium text-gray-500 dark:text-gray-400 mb-2\">\n                      <span>Price (USDT)</span>\n                      <span className=\"text-right\">Quantity</span>\n                      <span className=\"text-right\">Time</span>\n                    </div>\n                    {recentTrades.map((trade, index) => (\n                      <div key={index} className=\"grid grid-cols-3 gap-2 text-xs py-1\">\n                        <span className={cn(\n                          \"font-mono\",\n                          trade.side === 'buy' ? \"text-green-500\" : \"text-red-500\"\n                        )}>\n                          {formatNumber(trade.price)}\n                        </span>\n                        <span className=\"text-right font-mono\">{formatNumber(trade.quantity, 1)}</span>\n                        <span className=\"text-right text-gray-600 dark:text-gray-400\">{trade.time}</span>\n                      </div>\n                    ))}\n                  </div>\n                ) : (\n                  <div className=\"flex items-center justify-center h-full text-gray-500\">\n                    No recent trades\n                  </div>\n                )}\n              </TabsContent>\n              \n              <TabsContent value=\"positions\" className=\"flex-1 overflow-hidden mt-4\">\n                <div className=\"h-full overflow-y-auto px-4\">\n                  {positions.length > 0 ? (\n                    positions.map((position, index) => (\n                      <Card key={index} className=\"mb-4\">\n                        <CardContent className=\"p-4\">\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <span className=\"font-medium\">{position.symbol}</span>\n                            <Badge variant={position.side === 'long' ? 'default' : 'destructive'}>\n                              {position.side.toUpperCase()}\n                            </Badge>\n                          </div>\n                          <div className=\"space-y-1 text-sm\">\n                            <div className=\"flex justify-between\">\n                              <span className=\"text-gray-600 dark:text-gray-400\">Size:</span>\n                              <span>{position.size}</span>\n                            </div>\n                            <div className=\"flex justify-between\">\n                              <span className=\"text-gray-600 dark:text-gray-400\">Entry:</span>\n                              <span>${formatNumber(position.entryPrice)}</span>\n                            </div>\n                            <div className=\"flex justify-between\">\n                              <span className=\"text-gray-600 dark:text-gray-400\">Mark:</span>\n                              <span>${formatNumber(position.markPrice)}</span>\n                            </div>\n                            <div className=\"flex justify-between\">\n                              <span className=\"text-gray-600 dark:text-gray-400\">PnL:</span>\n                              <span className={cn(\n                                position.pnl >= 0 ? \"text-green-500\" : \"text-red-500\"\n                              )}>\n                                {formatCurrency(position.pnl)} ({formatNumber(position.pnlPercent, 2)}%)\n                              </span>\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    ))\n                  ) : (\n                    <div className=\"text-center text-gray-500 dark:text-gray-400 mt-8\">\n                      <Target className=\"h-8 w-8 mx-auto mb-2\" />\n                      <p>No open positions</p>\n                    </div>\n                  )}\n                </div>\n              </TabsContent>\n              \n              {/* GainzAlgo V2 Pro Tab */}\n              <TabsContent value=\"gainzalgo\" className=\"flex-1 overflow-hidden mt-4\">\n                <div className=\"h-full overflow-y-auto px-4 space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-2\">\n                      <Bot className=\"h-5 w-5 text-blue-500\" />\n                      <h3 className=\"font-semibold\">GainzAlgo V2 Pro</h3>\n                    </div>\n                    <Button\n                      onClick={() => setGainzAlgoEnabled(!gainzAlgoEnabled)}\n                      variant={gainzAlgoEnabled ? \"default\" : \"outline\"}\n                      size=\"sm\"\n                      className={cn(\n                        gainzAlgoEnabled && \"bg-green-500 hover:bg-green-600\"\n                      )}\n                    >\n                      {gainzAlgoEnabled ? <Pause className=\"h-4 w-4 mr-1\" /> : <Play className=\"h-4 w-4 mr-1\" />}\n                      {gainzAlgoEnabled ? 'Stop' : 'Start'}\n                    </Button>\n                  </div>\n                  \n                  <Card>\n                    <CardContent className=\"p-4 space-y-4\">\n                      <div>\n                        <label className=\"block text-sm font-medium mb-2\">Strategy</label>\n                        <Select value={gainzAlgoStrategy} onValueChange={setGainzAlgoStrategy}>\n                          <SelectTrigger>\n                            <SelectValue />\n                          </SelectTrigger>\n                          <SelectContent>\n                            <SelectItem value=\"momentum\">Momentum Trading</SelectItem>\n                            <SelectItem value=\"meanreversion\">Mean Reversion</SelectItem>\n                            <SelectItem value=\"breakout\">Breakout Strategy</SelectItem>\n                            <SelectItem value=\"scalping\">Scalping</SelectItem>\n                          </SelectContent>\n                        </Select>\n                      </div>\n                      \n                      <div>\n                        <label className=\"block text-sm font-medium mb-2\">Risk Level</label>\n                        <Select value={gainzAlgoRiskLevel} onValueChange={setGainzAlgoRiskLevel}>\n                          <SelectTrigger>\n                            <SelectValue />\n                          </SelectTrigger>\n                          <SelectContent>\n                            <SelectItem value=\"low\">Low Risk</SelectItem>\n                            <SelectItem value=\"medium\">Medium Risk</SelectItem>\n                            <SelectItem value=\"high\">High Risk</SelectItem>\n                          </SelectContent>\n                        </Select>\n                      </div>\n                      \n                      <div>\n                        <label className=\"block text-sm font-medium mb-2\">Capital Allocation (USDT)</label>\n                        <Input\n                          type=\"number\"\n                          value={gainzAlgoCapital}\n                          onChange={(e) => setGainzAlgoCapital(e.target.value)}\n                          placeholder=\"1000\"\n                        />\n                      </div>\n                      \n                      <div className=\"bg-blue-50 dark:bg-blue-900/20 p-3 rounded-lg\">\n                        <div className=\"flex items-center space-x-2 mb-2\">\n                          <TrendingUpIcon className=\"h-4 w-4 text-blue-500\" />\n                          <span className=\"text-sm font-medium\">Performance</span>\n                        </div>\n                        <div className=\"space-y-1 text-sm\">\n                          <div className=\"flex justify-between\">\n                            <span className=\"text-gray-600 dark:text-gray-400\">24h P&L:</span>\n                            <span className=\"text-green-500\">+$127.50 (+2.34%)</span>\n                          </div>\n                          <div className=\"flex justify-between\">\n                            <span className=\"text-gray-600 dark:text-gray-400\">Win Rate:</span>\n                            <span>68.5%</span>\n                          </div>\n                          <div className=\"flex justify-between\">\n                            <span className=\"text-gray-600 dark:text-gray-400\">Active Trades:</span>\n                            <span>3</span>\n                          </div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n               </TabsContent>\n               \n               {/* Copy Trading Tab */}\n               <TabsContent value=\"copytrading\" className=\"flex-1 overflow-hidden mt-4\">\n                 <div className=\"h-full overflow-y-auto px-4 space-y-4\">\n                   <div className=\"flex items-center justify-between\">\n                     <div className=\"flex items-center space-x-2\">\n                       <Users className=\"h-5 w-5 text-purple-500\" />\n                       <h3 className=\"font-semibold\">Copy Trading</h3>\n                     </div>\n                     <Button\n                       onClick={() => setCopyTradingEnabled(!copyTradingEnabled)}\n                       variant={copyTradingEnabled ? \"default\" : \"outline\"}\n                       size=\"sm\"\n                       className={cn(\n                         copyTradingEnabled && \"bg-purple-500 hover:bg-purple-600\"\n                       )}\n                     >\n                       {copyTradingEnabled ? 'Disconnect' : 'Connect'}\n                     </Button>\n                   </div>\n                   \n                   <Card>\n                     <CardContent className=\"p-4 space-y-4\">\n                       <div>\n                         <label className=\"block text-sm font-medium mb-2\">Select Trader</label>\n                         <Select value={selectedTrader} onValueChange={setSelectedTrader}>\n                           <SelectTrigger>\n                             <SelectValue placeholder=\"Choose a trader to copy\" />\n                           </SelectTrigger>\n                           <SelectContent>\n                             <SelectItem value=\"trader1\">CryptoKing_2024 (ROI: +245%)</SelectItem>\n                             <SelectItem value=\"trader2\">AlgoMaster (ROI: +189%)</SelectItem>\n                             <SelectItem value=\"trader3\">TradingPro (ROI: +156%)</SelectItem>\n                             <SelectItem value=\"trader4\">QuantWizard (ROI: +134%)</SelectItem>\n                           </SelectContent>\n                         </Select>\n                       </div>\n                       \n                       <div>\n                         <label className=\"block text-sm font-medium mb-2\">Copy Ratio: {copyRatio}%</label>\n                         <input\n                           type=\"range\"\n                           min=\"10\"\n                           max=\"100\"\n                           value={copyRatio}\n                           onChange={(e) => setCopyRatio(Number(e.target.value))}\n                           className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700\"\n                         />\n                         <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n                           <span>10%</span>\n                           <span>100%</span>\n                         </div>\n                       </div>\n                       \n                       {selectedTrader && (\n                         <div className=\"bg-purple-50 dark:bg-purple-900/20 p-3 rounded-lg\">\n                           <div className=\"flex items-center space-x-2 mb-2\">\n                             <Users className=\"h-4 w-4 text-purple-500\" />\n                             <span className=\"text-sm font-medium\">Trader Stats</span>\n                           </div>\n                           <div className=\"space-y-1 text-sm\">\n                             <div className=\"flex justify-between\">\n                               <span className=\"text-gray-600 dark:text-gray-400\">Total ROI:</span>\n                               <span className=\"text-green-500\">+245%</span>\n                             </div>\n                             <div className=\"flex justify-between\">\n                               <span className=\"text-gray-600 dark:text-gray-400\">Win Rate:</span>\n                               <span>72.3%</span>\n                             </div>\n                             <div className=\"flex justify-between\">\n                               <span className=\"text-gray-600 dark:text-gray-400\">Followers:</span>\n                               <span>1,247</span>\n                             </div>\n                             <div className=\"flex justify-between\">\n                               <span className=\"text-gray-600 dark:text-gray-400\">Risk Score:</span>\n                               <span className=\"text-yellow-500\">Medium</span>\n                             </div>\n                           </div>\n                         </div>\n                       )}\n                       \n                       <div className=\"bg-gray-50 dark:bg-gray-800 p-3 rounded-lg\">\n                         <div className=\"text-sm space-y-1\">\n                           <div className=\"flex justify-between\">\n                             <span className=\"text-gray-600 dark:text-gray-400\">Your Investment:</span>\n                             <span className=\"font-medium\">$1,000</span>\n                           </div>\n                           <div className=\"flex justify-between\">\n                             <span className=\"text-gray-600 dark:text-gray-400\">Copy Amount:</span>\n                             <span className=\"font-medium\">${(1000 * copyRatio / 100).toFixed(0)}</span>\n                           </div>\n                         </div>\n                       </div>\n                     </CardContent>\n                   </Card>\n                 </div>\n               </TabsContent>\n               \n               {/* Risk Management Tab */}\n               <TabsContent value=\"riskmanagement\" className=\"flex-1 overflow-hidden mt-4\">\n                 <div className=\"h-full overflow-y-auto px-4 space-y-4\">\n                   <div className=\"flex items-center space-x-2\">\n                     <Shield className=\"h-5 w-5 text-orange-500\" />\n                     <h3 className=\"font-semibold\">Risk Management</h3>\n                   </div>\n                   \n                   <Card>\n                     <CardContent className=\"p-4 space-y-4\">\n                       <div className=\"flex items-center justify-between\">\n                         <div>\n                           <label className=\"block text-sm font-medium\">Stop Loss</label>\n                           <p className=\"text-xs text-gray-500\">Automatically close losing positions</p>\n                         </div>\n                         <Button\n                           onClick={() => setStopLossEnabled(!stopLossEnabled)}\n                           variant={stopLossEnabled ? \"default\" : \"outline\"}\n                           size=\"sm\"\n                         >\n                           {stopLossEnabled ? 'ON' : 'OFF'}\n                         </Button>\n                       </div>\n                       \n                       {stopLossEnabled && (\n                          <div>\n                            <label className=\"block text-sm font-medium mb-2\">Stop Loss Percentage</label>\n                            <div className=\"relative\">\n                              <Input\n                                type=\"number\"\n                                value={stopLossPercent}\n                                onChange={(e) => setStopLossPercent(e.target.value)}\n                                placeholder=\"5\"\n                              />\n                              <span className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 text-sm\">%</span>\n                            </div>\n                          </div>\n                        )}\n                       \n                       <div className=\"flex items-center justify-between\">\n                         <div>\n                           <label className=\"block text-sm font-medium\">Take Profit</label>\n                           <p className=\"text-xs text-gray-500\">Automatically close winning positions</p>\n                         </div>\n                         <Button\n                           onClick={() => setTakeProfitEnabled(!takeProfitEnabled)}\n                           variant={takeProfitEnabled ? \"default\" : \"outline\"}\n                           size=\"sm\"\n                         >\n                           {takeProfitEnabled ? 'ON' : 'OFF'}\n                         </Button>\n                       </div>\n                       \n                       {takeProfitEnabled && (\n                          <div>\n                            <label className=\"block text-sm font-medium mb-2\">Take Profit Percentage</label>\n                            <div className=\"relative\">\n                              <Input\n                                type=\"number\"\n                                value={takeProfitPercent}\n                                onChange={(e) => setTakeProfitPercent(e.target.value)}\n                                placeholder=\"10\"\n                              />\n                              <span className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 text-sm\">%</span>\n                            </div>\n                          </div>\n                        )}\n                       \n                       <div>\n                         <label className=\"block text-sm font-medium mb-2\">Max Daily Loss (USDT)</label>\n                         <Input\n                           type=\"number\"\n                           value={maxDailyLoss}\n                           onChange={(e) => setMaxDailyLoss(e.target.value)}\n                           placeholder=\"500\"\n                         />\n                       </div>\n                       \n                       <div className=\"bg-orange-50 dark:bg-orange-900/20 p-3 rounded-lg\">\n                         <div className=\"flex items-center space-x-2 mb-2\">\n                           <AlertTriangle className=\"h-4 w-4 text-orange-500\" />\n                           <span className=\"text-sm font-medium\">Risk Summary</span>\n                         </div>\n                         <div className=\"space-y-1 text-sm\">\n                           <div className=\"flex justify-between\">\n                             <span className=\"text-gray-600 dark:text-gray-400\">Daily Loss:</span>\n                             <span className=\"text-red-500\">-$45.20 / $500</span>\n                           </div>\n                           <div className=\"flex justify-between\">\n                             <span className=\"text-gray-600 dark:text-gray-400\">Risk Level:</span>\n                             <span className=\"text-green-500\">Low</span>\n                           </div>\n                           <div className=\"flex justify-between\">\n                             <span className=\"text-gray-600 dark:text-gray-400\">Active Protections:</span>\n                             <span>{[stopLossEnabled && 'SL', takeProfitEnabled && 'TP'].filter(Boolean).join(', ') || 'None'}</span>\n                           </div>\n                         </div>\n                       </div>\n                     </CardContent>\n                   </Card>\n                 </div>\n               </TabsContent>\n             </Tabs>\n           </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TradingPanelDashboard;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4633, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/ui/DemoModeIndicator.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\nimport { Badge } from '@/components/ui/badge'\nimport { AlertTriangle, Play } from 'lucide-react'\nimport { useTradingMode } from '@/contexts/TradingModeContext'\nimport { cn } from '@/lib/utils'\n\ninterface DemoModeIndicatorProps {\n  className?: string\n  variant?: 'badge' | 'banner'\n}\n\nexport function DemoModeIndicator({ className, variant = 'badge' }: DemoModeIndicatorProps) {\n  const { isPaperTrading, tradingMode } = useTradingMode()\n\n  if (!isPaperTrading) {\n    return null\n  }\n\n  if (variant === 'banner') {\n    return (\n      <div className={cn(\n        'bg-orange-100 dark:bg-orange-900/20 border border-orange-200 dark:border-orange-800 rounded-lg p-3 mb-4',\n        className\n      )}>\n        <div className=\"flex items-center gap-2\">\n          <Play className=\"h-4 w-4 text-orange-600 dark:text-orange-400\" />\n          <span className=\"text-sm font-medium text-orange-800 dark:text-orange-200\">\n            Demo Mode Active\n          </span>\n          <span className=\"text-xs text-orange-600 dark:text-orange-400\">\n            • All trades are simulated • No real money involved\n          </span>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <Badge \n      variant=\"outline\" \n      className={cn(\n        'bg-orange-50 dark:bg-orange-900/20 border-orange-200 dark:border-orange-800 text-orange-700 dark:text-orange-300 font-medium',\n        className\n      )}\n    >\n      <Play className=\"h-3 w-3 mr-1\" />\n      Demo Mode\n    </Badge>\n  )\n}\n\nexport default DemoModeIndicator"],"names":[],"mappings":";;;;;;;AAGA;AACA;AACA;AACA;;;AANA;;;;;AAaO,SAAS,kBAAkB,KAAwD;QAAxD,EAAE,SAAS,EAAE,UAAU,OAAO,EAA0B,GAAxD;;IAChC,MAAM,EAAE,cAAc,EAAE,WAAW,EAAE,GAAG,IAAA,2JAAc;IAEtD,IAAI,CAAC,gBAAgB;QACnB,OAAO;IACT;IAEA,IAAI,YAAY,UAAU;QACxB,qBACE,6LAAC;YAAI,WAAW,IAAA,4HAAE,EAChB,2GACA;sBAEA,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,6MAAI;wBAAC,WAAU;;;;;;kCAChB,6LAAC;wBAAK,WAAU;kCAA2D;;;;;;kCAG3E,6LAAC;wBAAK,WAAU;kCAA+C;;;;;;;;;;;;;;;;;IAMvE;IAEA,qBACE,6LAAC,6IAAK;QACJ,SAAQ;QACR,WAAW,IAAA,4HAAE,EACX,gIACA;;0BAGF,6LAAC,6MAAI;gBAAC,WAAU;;;;;;YAAiB;;;;;;;AAIvC;GAtCgB;;QAC0B,2JAAc;;;KADxC;uCAwCD","debugId":null}},
    {"offset": {"line": 4734, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/services/BalanceTrackingService.ts"],"sourcesContent":["'use client'\n\ninterface BalanceData {\n  totalBalance: number\n  availableBalance: number\n  investedAmount: number\n  pendingDeposits: number\n  pendingWithdrawals: number\n  lastUpdated: Date\n}\n\ninterface BalanceUpdateListener {\n  (balance: BalanceData): void\n}\n\nclass BalanceTrackingService {\n  private balance: BalanceData = {\n    totalBalance: 125000,\n    availableBalance: 45000,\n    investedAmount: 80000,\n    pendingDeposits: 0,\n    pendingWithdrawals: 0,\n    lastUpdated: new Date()\n  }\n\n  private listeners: Set<BalanceUpdateListener> = new Set()\n  private updateInterval: NodeJS.Timeout | null = null\n\n  constructor() {\n    // Start real-time updates\n    this.startRealTimeUpdates()\n  }\n\n  /**\n   * Subscribe to balance updates\n   */\n  subscribe(listener: BalanceUpdateListener): () => void {\n    this.listeners.add(listener)\n    \n    // Immediately send current balance\n    listener(this.balance)\n    \n    // Return unsubscribe function\n    return () => {\n      this.listeners.delete(listener)\n    }\n  }\n\n  /**\n   * Get current balance\n   */\n  getCurrentBalance(): BalanceData {\n    return { ...this.balance }\n  }\n\n  /**\n   * Update balance after deposit\n   */\n  async processDeposit(amount: number): Promise<void> {\n    // Add to pending deposits first\n    this.balance.pendingDeposits += amount\n    this.notifyListeners()\n\n    // Simulate processing time\n    await new Promise(resolve => setTimeout(resolve, 2000))\n\n    // Move from pending to available balance\n    this.balance.pendingDeposits -= amount\n    this.balance.availableBalance += amount\n    this.balance.totalBalance += amount\n    this.balance.lastUpdated = new Date()\n    \n    this.notifyListeners()\n  }\n\n  /**\n   * Update balance after withdrawal\n   */\n  async processWithdrawal(amount: number): Promise<void> {\n    // Check if sufficient funds\n    if (this.balance.availableBalance < amount) {\n      throw new Error('Insufficient funds for withdrawal')\n    }\n\n    // Add to pending withdrawals\n    this.balance.pendingWithdrawals += amount\n    this.balance.availableBalance -= amount\n    this.notifyListeners()\n\n    // Simulate processing time\n    await new Promise(resolve => setTimeout(resolve, 2000))\n\n    // Complete withdrawal\n    this.balance.pendingWithdrawals -= amount\n    this.balance.totalBalance -= amount\n    this.balance.lastUpdated = new Date()\n    \n    this.notifyListeners()\n  }\n\n  /**\n   * Update invested amount\n   */\n  updateInvestedAmount(amount: number): void {\n    const difference = amount - this.balance.investedAmount\n    \n    // Adjust available balance\n    this.balance.availableBalance -= difference\n    this.balance.investedAmount = amount\n    this.balance.lastUpdated = new Date()\n    \n    this.notifyListeners()\n  }\n\n  /**\n   * Add profit from trading\n   */\n  addTradingProfit(profit: number): void {\n    this.balance.availableBalance += profit\n    this.balance.totalBalance += profit\n    this.balance.lastUpdated = new Date()\n    \n    this.notifyListeners()\n  }\n\n  /**\n   * Start real-time balance updates (simulate market changes)\n   */\n  private startRealTimeUpdates(): void {\n    this.updateInterval = setInterval(() => {\n      // Simulate small market fluctuations in invested amount\n      const fluctuation = (Math.random() - 0.5) * 100 // ±$50\n      const newInvestedValue = Math.max(0, this.balance.investedAmount + fluctuation)\n      const difference = newInvestedValue - this.balance.investedAmount\n      \n      this.balance.investedAmount = newInvestedValue\n      this.balance.totalBalance += difference\n      this.balance.lastUpdated = new Date()\n      \n      this.notifyListeners()\n    }, 5000) // Update every 5 seconds\n  }\n\n  /**\n   * Stop real-time updates\n   */\n  stopRealTimeUpdates(): void {\n    if (this.updateInterval) {\n      clearInterval(this.updateInterval)\n      this.updateInterval = null\n    }\n  }\n\n  /**\n   * Notify all listeners of balance changes\n   */\n  private notifyListeners(): void {\n    const balanceCopy = { ...this.balance }\n    this.listeners.forEach(listener => {\n      try {\n        listener(balanceCopy)\n      } catch (error) {\n        console.error('Error in balance listener:', error)\n      }\n    })\n  }\n\n  /**\n   * Format currency for display\n   */\n  formatCurrency(amount: number): string {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }).format(amount)\n  }\n\n  /**\n   * Get balance summary for display\n   */\n  getBalanceSummary(): {\n    total: string\n    available: string\n    invested: string\n    pending: string\n  } {\n    return {\n      total: this.formatCurrency(this.balance.totalBalance),\n      available: this.formatCurrency(this.balance.availableBalance),\n      invested: this.formatCurrency(this.balance.investedAmount),\n      pending: this.formatCurrency(this.balance.pendingDeposits + this.balance.pendingWithdrawals)\n    }\n  }\n}\n\n// Create singleton instance\nconst balanceTrackingService = new BalanceTrackingService()\n\nexport default balanceTrackingService\nexport type { BalanceData, BalanceUpdateListener }"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4894, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/services/AutomatedWorkflowService.ts"],"sourcesContent":["'use client';\n\nimport { toast } from 'react-hot-toast';\nimport balanceTrackingService from './BalanceTrackingService';\n\n// Types for the automated workflow\nexport interface WorkflowConfig {\n  autoDeposit: {\n    enabled: boolean;\n    amount: number;\n    frequency: 'daily' | 'weekly' | 'monthly';\n    source: 'bank' | 'card' | 'crypto';\n  };\n  autoInvest: {\n    enabled: boolean;\n    strategy: 'conservative' | 'moderate' | 'aggressive' | 'custom';\n    allocation: {\n      stocks: number;\n      crypto: number;\n      forex: number;\n      commodities: number;\n    };\n    minBalance: number;\n  };\n  autoWithdraw: {\n    enabled: boolean;\n    profitThreshold: number;\n    withdrawPercentage: number;\n    destination: 'bank' | 'card' | 'crypto';\n  };\n}\n\nexport interface WorkflowStatus {\n  isRunning: boolean;\n  lastExecution: Date | null;\n  nextExecution: Date | null;\n  totalDeposited: number;\n  totalInvested: number;\n  totalWithdrawn: number;\n  currentBalance: number;\n  totalProfit: number;\n}\n\nexport interface Transaction {\n  id: string;\n  type: 'deposit' | 'invest' | 'withdraw';\n  amount: number;\n  status: 'pending' | 'completed' | 'failed';\n  timestamp: Date;\n  description: string;\n}\n\nclass AutomatedWorkflowService {\n  private config: WorkflowConfig;\n  private status: WorkflowStatus;\n  private transactions: Transaction[];\n  private intervalId: NodeJS.Timeout | null = null;\n\n  constructor() {\n    // Load configuration from localStorage or use defaults\n    this.config = this.loadConfig();\n    this.status = this.loadStatus();\n    this.transactions = this.loadTransactions();\n    \n    // Start the workflow if enabled\n    if (this.isAnyWorkflowEnabled()) {\n      this.startWorkflow();\n    }\n  }\n\n  private loadConfig(): WorkflowConfig {\n    if (typeof window === 'undefined') {\n      return this.getDefaultConfig();\n    }\n    \n    const saved = localStorage.getItem('automatedWorkflowConfig');\n    return saved ? JSON.parse(saved) : this.getDefaultConfig();\n  }\n\n  private loadStatus(): WorkflowStatus {\n    if (typeof window === 'undefined') {\n      return this.getDefaultStatus();\n    }\n    \n    const saved = localStorage.getItem('automatedWorkflowStatus');\n    return saved ? JSON.parse(saved) : this.getDefaultStatus();\n  }\n\n  private loadTransactions(): Transaction[] {\n    if (typeof window === 'undefined') {\n      return [];\n    }\n    \n    const saved = localStorage.getItem('automatedWorkflowTransactions');\n    return saved ? JSON.parse(saved) : [];\n  }\n\n  private getDefaultConfig(): WorkflowConfig {\n    return {\n      autoDeposit: {\n        enabled: false,\n        amount: 100,\n        frequency: 'weekly',\n        source: 'bank'\n      },\n      autoInvest: {\n        enabled: false,\n        strategy: 'moderate',\n        allocation: {\n          stocks: 40,\n          crypto: 30,\n          forex: 20,\n          commodities: 10\n        },\n        minBalance: 50\n      },\n      autoWithdraw: {\n        enabled: false,\n        profitThreshold: 500,\n        withdrawPercentage: 50,\n        destination: 'bank'\n      }\n    };\n  }\n\n  private getDefaultStatus(): WorkflowStatus {\n    return {\n      isRunning: false,\n      lastExecution: null,\n      nextExecution: null,\n      totalDeposited: 0,\n      totalInvested: 0,\n      totalWithdrawn: 0,\n      currentBalance: 1250.75, // Mock current balance\n      totalProfit: 250.75 // Mock profit\n    };\n  }\n\n  private saveConfig(): void {\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('automatedWorkflowConfig', JSON.stringify(this.config));\n    }\n  }\n\n  private saveStatus(): void {\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('automatedWorkflowStatus', JSON.stringify(this.status));\n    }\n  }\n\n  private saveTransactions(): void {\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('automatedWorkflowTransactions', JSON.stringify(this.transactions));\n    }\n  }\n\n  private isAnyWorkflowEnabled(): boolean {\n    return this.config.autoDeposit.enabled || \n           this.config.autoInvest.enabled || \n           this.config.autoWithdraw.enabled;\n  }\n\n  public updateConfig(newConfig: Partial<WorkflowConfig>): void {\n    this.config = { ...this.config, ...newConfig };\n    this.saveConfig();\n    \n    // Restart workflow with new config\n    this.stopWorkflow();\n    if (this.isAnyWorkflowEnabled()) {\n      this.startWorkflow();\n    }\n    \n    toast.success('Automated workflow configuration updated');\n  }\n\n  public getConfig(): WorkflowConfig {\n    return { ...this.config };\n  }\n\n  public getStatus(): WorkflowStatus {\n    return { ...this.status };\n  }\n\n  public getTransactions(): Transaction[] {\n    return [...this.transactions];\n  }\n\n  public startWorkflow(): void {\n    if (this.intervalId) {\n      this.stopWorkflow();\n    }\n\n    this.status.isRunning = true;\n    this.status.nextExecution = this.calculateNextExecution();\n    this.saveStatus();\n\n    // Run workflow every minute (in production, this would be less frequent)\n    this.intervalId = setInterval(() => {\n      this.executeWorkflow();\n    }, 60000); // 1 minute\n\n    toast.success('Automated workflow started');\n  }\n\n  public stopWorkflow(): void {\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n      this.intervalId = null;\n    }\n\n    this.status.isRunning = false;\n    this.status.nextExecution = null;\n    this.saveStatus();\n\n    toast.success('Automated workflow stopped');\n  }\n\n  private calculateNextExecution(): Date {\n    const now = new Date();\n    const next = new Date(now);\n    \n    // For demo purposes, set next execution to 1 minute from now\n    next.setMinutes(next.getMinutes() + 1);\n    \n    return next;\n  }\n\n  private async executeWorkflow(): Promise<void> {\n    try {\n      this.status.lastExecution = new Date();\n      \n      // Execute auto deposit\n      if (this.config.autoDeposit.enabled) {\n        await this.executeAutoDeposit();\n      }\n\n      // Execute auto invest\n      if (this.config.autoInvest.enabled && this.status.currentBalance >= this.config.autoInvest.minBalance) {\n        await this.executeAutoInvest();\n      }\n\n      // Execute auto withdraw\n      if (this.config.autoWithdraw.enabled && this.status.totalProfit >= this.config.autoWithdraw.profitThreshold) {\n        await this.executeAutoWithdraw();\n      }\n\n      this.status.nextExecution = this.calculateNextExecution();\n      this.saveStatus();\n      \n    } catch (error) {\n      console.error('Workflow execution failed:', error);\n      toast.error('Automated workflow execution failed');\n    }\n  }\n\n  private async executeAutoDeposit(): Promise<void> {\n    const transaction: Transaction = {\n      id: `dep_${Date.now()}`,\n      type: 'deposit',\n      amount: this.config.autoDeposit.amount,\n      status: 'pending',\n      timestamp: new Date(),\n      description: `Auto deposit from ${this.config.autoDeposit.source}`\n    };\n\n    this.transactions.unshift(transaction);\n    this.saveTransactions();\n\n    // Simulate deposit processing\n    setTimeout(() => {\n      transaction.status = 'completed';\n      this.status.totalDeposited += transaction.amount;\n      this.status.currentBalance += transaction.amount;\n      this.saveStatus();\n      this.saveTransactions();\n      \n      toast.success(`Auto deposit of $${transaction.amount} completed`);\n    }, 2000);\n  }\n\n  private async executeAutoInvest(): Promise<void> {\n    const investAmount = Math.min(\n      this.status.currentBalance - this.config.autoInvest.minBalance,\n      this.status.currentBalance * 0.8 // Invest max 80% of available balance\n    );\n\n    if (investAmount <= 0) return;\n\n    const transaction: Transaction = {\n      id: `inv_${Date.now()}`,\n      type: 'invest',\n      amount: investAmount,\n      status: 'pending',\n      timestamp: new Date(),\n      description: `Auto investment using ${this.config.autoInvest.strategy} strategy`\n    };\n\n    this.transactions.unshift(transaction);\n    this.saveTransactions();\n\n    // Simulate investment processing\n    setTimeout(() => {\n      transaction.status = 'completed';\n      this.status.totalInvested += transaction.amount;\n      this.status.currentBalance -= transaction.amount;\n      \n      // Simulate profit generation (random between 1-5%)\n      const profitRate = (Math.random() * 4 + 1) / 100;\n      const profit = transaction.amount * profitRate;\n      this.status.totalProfit += profit;\n      this.status.currentBalance += profit;\n      \n      this.saveStatus();\n      this.saveTransactions();\n      \n      toast.success(`Auto investment of $${transaction.amount.toFixed(2)} completed`);\n    }, 3000);\n  }\n\n  private async executeAutoWithdraw(): Promise<void> {\n    const withdrawAmount = (this.status.totalProfit * this.config.autoWithdraw.withdrawPercentage) / 100;\n\n    if (withdrawAmount <= 0) return;\n\n    const transaction: Transaction = {\n      id: `wit_${Date.now()}`,\n      type: 'withdraw',\n      amount: withdrawAmount,\n      status: 'pending',\n      timestamp: new Date(),\n      description: `Auto withdrawal to ${this.config.autoWithdraw.destination}`\n    };\n\n    this.transactions.unshift(transaction);\n    this.saveTransactions();\n\n    // Simulate withdrawal processing\n    setTimeout(() => {\n      transaction.status = 'completed';\n      this.status.totalWithdrawn += transaction.amount;\n      this.status.currentBalance -= transaction.amount;\n      this.status.totalProfit -= transaction.amount;\n      this.saveStatus();\n      this.saveTransactions();\n      \n      toast.success(`Auto withdrawal of $${transaction.amount.toFixed(2)} completed`);\n    }, 4000);\n  }\n\n  public async manualDeposit(amount: number, source: string): Promise<void> {\n    try {\n      const transaction: Transaction = {\n        id: `man_dep_${Date.now()}`,\n        type: 'deposit',\n        amount,\n        status: 'pending',\n        timestamp: new Date(),\n        description: `Manual deposit from ${source}`\n      };\n\n      this.transactions.unshift(transaction);\n      this.saveTransactions();\n\n      // Process deposit with balance tracking\n      await balanceTrackingService.processDeposit(amount);\n      \n      transaction.status = 'completed';\n      this.status.totalDeposited += amount;\n      this.status.currentBalance += amount;\n      this.saveStatus();\n      this.saveTransactions();\n      \n      toast.success(`Deposit of $${amount} completed`);\n    } catch (error) {\n      toast.error('Deposit failed. Please try again.');\n      throw error;\n    }\n  }\n\n  public async manualWithdraw(amount: number, destination: string): Promise<void> {\n    try {\n      if (amount > this.status.currentBalance) {\n        toast.error('Insufficient balance for withdrawal');\n        throw new Error('Insufficient balance');\n      }\n\n      const transaction: Transaction = {\n        id: `man_wit_${Date.now()}`,\n        type: 'withdraw',\n        amount,\n        status: 'pending',\n        timestamp: new Date(),\n        description: `Manual withdrawal to ${destination}`\n      };\n\n      this.transactions.unshift(transaction);\n      this.saveTransactions();\n\n      // Process withdrawal with balance tracking\n      await balanceTrackingService.processWithdrawal(amount);\n      \n      transaction.status = 'completed';\n      this.status.totalWithdrawn += amount;\n      this.status.currentBalance -= amount;\n      this.saveStatus();\n      this.saveTransactions();\n      \n      toast.success(`Withdrawal of $${amount} completed`);\n    } catch (error) {\n      toast.error('Withdrawal failed. Please try again.');\n      throw error;\n    }\n  }\n}\n\n// Export singleton instance\nexport const automatedWorkflowService = new AutomatedWorkflowService();\nexport default automatedWorkflowService;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5215, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/modals/DepositWithdrawModal.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { X, CreditCard, Banknote, Smartphone, ArrowUpRight, ArrowDownLeft, DollarSign, Clock, Shield, CheckCircle } from 'lucide-react';\nimport automatedWorkflowService from '@/services/AutomatedWorkflowService';\n\ninterface DepositWithdrawModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  mode: 'deposit' | 'withdraw';\n  currentBalance?: number;\n  onSuccess?: (amount: number, method: string) => void;\n}\n\ninterface PaymentMethod {\n  id: string;\n  name: string;\n  icon: React.ReactNode;\n  description: string;\n  processingTime: string;\n  fees: string;\n  minAmount: number;\n  maxAmount: number;\n}\n\nconst DepositWithdrawModal: React.FC<DepositWithdrawModalProps> = ({\n  isOpen,\n  onClose,\n  mode,\n  currentBalance = 0,\n  onSuccess\n}) => {\n  const [selectedMethod, setSelectedMethod] = useState<string>('');\n  const [amount, setAmount] = useState<string>('');\n  const [step, setStep] = useState<'method' | 'amount' | 'confirmation' | 'processing' | 'success'>('method');\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const depositMethods: PaymentMethod[] = [\n    {\n      id: 'bank-transfer',\n      name: 'Bank Transfer',\n      icon: <Banknote className=\"h-6 w-6\" />,\n      description: 'Direct transfer from your bank account',\n      processingTime: '1-3 business days',\n      fees: 'Free',\n      minAmount: 10,\n      maxAmount: 50000\n    },\n    {\n      id: 'debit-card',\n      name: 'Debit Card',\n      icon: <CreditCard className=\"h-6 w-6\" />,\n      description: 'Instant deposit with your debit card',\n      processingTime: 'Instant',\n      fees: '2.9% + $0.30',\n      minAmount: 1,\n      maxAmount: 10000\n    },\n    {\n      id: 'mobile-payment',\n      name: 'Mobile Payment',\n      icon: <Smartphone className=\"h-6 w-6\" />,\n      description: 'Apple Pay, Google Pay, Samsung Pay',\n      processingTime: 'Instant',\n      fees: '2.9% + $0.30',\n      minAmount: 1,\n      maxAmount: 5000\n    }\n  ];\n\n  const withdrawMethods: PaymentMethod[] = [\n    {\n      id: 'bank-transfer',\n      name: 'Bank Transfer',\n      icon: <Banknote className=\"h-6 w-6\" />,\n      description: 'Transfer to your linked bank account',\n      processingTime: '1-3 business days',\n      fees: 'Free',\n      minAmount: 10,\n      maxAmount: currentBalance\n    },\n    {\n      id: 'instant-withdrawal',\n      name: 'Instant Withdrawal',\n      icon: <CreditCard className=\"h-6 w-6\" />,\n      description: 'Instant transfer to your debit card',\n      processingTime: 'Instant',\n      fees: '1.5%',\n      minAmount: 1,\n      maxAmount: Math.min(currentBalance, 25000)\n    }\n  ];\n\n  const methods = mode === 'deposit' ? depositMethods : withdrawMethods;\n  const selectedMethodData = methods.find(m => m.id === selectedMethod);\n\n  const handleMethodSelect = (methodId: string) => {\n    setSelectedMethod(methodId);\n    setStep('amount');\n  };\n\n  const handleAmountSubmit = () => {\n    if (!amount || parseFloat(amount) < (selectedMethodData?.minAmount || 0)) return;\n    setStep('confirmation');\n  };\n\n  const handleConfirm = async () => {\n    setStep('processing');\n    setIsProcessing(true);\n    \n    try {\n      const amountValue = parseFloat(amount);\n      const methodName = selectedMethodData?.name || '';\n      \n      if (mode === 'deposit') {\n        await automatedWorkflowService.manualDeposit(amountValue, methodName);\n      } else {\n        await automatedWorkflowService.manualWithdraw(amountValue, methodName);\n      }\n      \n      setIsProcessing(false);\n      setStep('success');\n      onSuccess?.(amountValue, methodName);\n    } catch (error) {\n      setIsProcessing(false);\n      // Handle error - could add error step or show error message\n      console.error('Transaction failed:', error);\n    }\n  };\n\n  const resetModal = () => {\n    setSelectedMethod('');\n    setAmount('');\n    setStep('method');\n    setIsProcessing(false);\n  };\n\n  const handleClose = () => {\n    resetModal();\n    onClose();\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-2xl w-full max-w-md max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex items-center gap-3\">\n            {mode === 'deposit' ? (\n              <ArrowUpRight className=\"h-6 w-6 text-green-600\" />\n            ) : (\n              <ArrowDownLeft className=\"h-6 w-6 text-blue-600\" />\n            )}\n            <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\n              {mode === 'deposit' ? 'Deposit Funds' : 'Withdraw Funds'}\n            </h2>\n          </div>\n          <button\n            onClick={handleClose}\n            className=\"p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\n          >\n            <X className=\"h-5 w-5 text-gray-500\" />\n          </button>\n        </div>\n\n        {/* Content */}\n        <div className=\"p-6\">\n          {step === 'method' && (\n            <div className=\"space-y-4\">\n              <div className=\"text-center mb-6\">\n                <p className=\"text-gray-600 dark:text-gray-400\">\n                  {mode === 'deposit' \n                    ? 'Choose how you\\'d like to add funds to your account'\n                    : `Available balance: $${currentBalance.toFixed(2)}`\n                  }\n                </p>\n              </div>\n              \n              <div className=\"space-y-3\">\n                {methods.map((method) => (\n                  <button\n                    key={method.id}\n                    onClick={() => handleMethodSelect(method.id)}\n                    className=\"w-full p-4 border border-gray-200 dark:border-gray-700 rounded-lg hover:border-blue-500 dark:hover:border-blue-400 transition-colors text-left\"\n                  >\n                    <div className=\"flex items-start gap-3\">\n                      <div className=\"text-blue-600 dark:text-blue-400 mt-1\">\n                        {method.icon}\n                      </div>\n                      <div className=\"flex-1\">\n                        <h3 className=\"font-medium text-gray-900 dark:text-white\">\n                          {method.name}\n                        </h3>\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n                          {method.description}\n                        </p>\n                        <div className=\"flex items-center gap-4 mt-2 text-xs text-gray-500 dark:text-gray-400\">\n                          <span className=\"flex items-center gap-1\">\n                            <Clock className=\"h-3 w-3\" />\n                            {method.processingTime}\n                          </span>\n                          <span>Fee: {method.fees}</span>\n                        </div>\n                      </div>\n                    </div>\n                  </button>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {step === 'amount' && selectedMethodData && (\n            <div className=\"space-y-6\">\n              <button\n                onClick={() => setStep('method')}\n                className=\"text-blue-600 dark:text-blue-400 text-sm hover:underline\"\n              >\n                ← Back to payment methods\n              </button>\n              \n              <div className=\"text-center\">\n                <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n                  {selectedMethodData.name}\n                </h3>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                  {selectedMethodData.description}\n                </p>\n              </div>\n\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                    Amount\n                  </label>\n                  <div className=\"relative\">\n                    <DollarSign className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400\" />\n                    <input\n                      type=\"number\"\n                      value={amount}\n                      onChange={(e) => setAmount(e.target.value)}\n                      placeholder=\"0.00\"\n                      min={selectedMethodData.minAmount}\n                      max={selectedMethodData.maxAmount}\n                      className=\"w-full pl-10 pr-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                    />\n                  </div>\n                  <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                    Min: ${selectedMethodData.minAmount} • Max: ${selectedMethodData.maxAmount.toLocaleString()}\n                  </p>\n                </div>\n\n                <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\n                  <div className=\"flex justify-between text-sm\">\n                    <span className=\"text-gray-600 dark:text-gray-400\">Processing time:</span>\n                    <span className=\"text-gray-900 dark:text-white\">{selectedMethodData.processingTime}</span>\n                  </div>\n                  <div className=\"flex justify-between text-sm mt-1\">\n                    <span className=\"text-gray-600 dark:text-gray-400\">Fee:</span>\n                    <span className=\"text-gray-900 dark:text-white\">{selectedMethodData.fees}</span>\n                  </div>\n                </div>\n\n                <button\n                  onClick={handleAmountSubmit}\n                  disabled={!amount || parseFloat(amount) < selectedMethodData.minAmount || parseFloat(amount) > selectedMethodData.maxAmount}\n                  className=\"w-full py-3 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed text-white font-medium rounded-lg transition-colors\"\n                >\n                  Continue\n                </button>\n              </div>\n            </div>\n          )}\n\n          {step === 'confirmation' && selectedMethodData && (\n            <div className=\"space-y-6\">\n              <button\n                onClick={() => setStep('amount')}\n                className=\"text-blue-600 dark:text-blue-400 text-sm hover:underline\"\n              >\n                ← Back to amount\n              </button>\n              \n              <div className=\"text-center\">\n                <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n                  Confirm {mode === 'deposit' ? 'Deposit' : 'Withdrawal'}\n                </h3>\n              </div>\n\n              <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-6 space-y-4\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600 dark:text-gray-400\">Amount:</span>\n                  <span className=\"font-semibold text-gray-900 dark:text-white\">${parseFloat(amount).toFixed(2)}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600 dark:text-gray-400\">Method:</span>\n                  <span className=\"text-gray-900 dark:text-white\">{selectedMethodData.name}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600 dark:text-gray-400\">Processing time:</span>\n                  <span className=\"text-gray-900 dark:text-white\">{selectedMethodData.processingTime}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-600 dark:text-gray-400\">Fee:</span>\n                  <span className=\"text-gray-900 dark:text-white\">{selectedMethodData.fees}</span>\n                </div>\n              </div>\n\n              <div className=\"flex items-start gap-3 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n                <Shield className=\"h-5 w-5 text-blue-600 dark:text-blue-400 mt-0.5\" />\n                <div className=\"text-sm\">\n                  <p className=\"text-blue-800 dark:text-blue-200 font-medium\">\n                    Secure Transaction\n                  </p>\n                  <p className=\"text-blue-700 dark:text-blue-300 mt-1\">\n                    Your transaction is protected by bank-level encryption and security measures.\n                  </p>\n                </div>\n              </div>\n\n              <button\n                onClick={handleConfirm}\n                className=\"w-full py-3 bg-green-600 hover:bg-green-700 text-white font-medium rounded-lg transition-colors\"\n              >\n                Confirm {mode === 'deposit' ? 'Deposit' : 'Withdrawal'}\n              </button>\n            </div>\n          )}\n\n          {step === 'processing' && (\n            <div className=\"text-center py-8\">\n              <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n              <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n                Processing {mode === 'deposit' ? 'Deposit' : 'Withdrawal'}\n              </h3>\n              <p className=\"text-gray-600 dark:text-gray-400\">\n                Please wait while we process your transaction...\n              </p>\n            </div>\n          )}\n\n          {step === 'success' && (\n            <div className=\"text-center py-8\">\n              <CheckCircle className=\"h-16 w-16 text-green-600 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n                {mode === 'deposit' ? 'Deposit' : 'Withdrawal'} Successful!\n              </h3>\n              <p className=\"text-gray-600 dark:text-gray-400 mb-6\">\n                ${parseFloat(amount).toFixed(2)} has been {mode === 'deposit' ? 'added to' : 'withdrawn from'} your account.\n              </p>\n              <button\n                onClick={handleClose}\n                className=\"px-6 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors\"\n              >\n                Done\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DepositWithdrawModal;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6044, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/Navigation.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter, usePathname } from 'next/navigation';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { useTheme } from '@/contexts/ThemeContext';\nimport { useTradingMode } from '@/contexts/TradingModeContext';\nimport DemoModeIndicator from '@/components/ui/DemoModeIndicator';\nimport { toast } from 'react-hot-toast';\nimport {\n  Menu,\n  X,\n  Home,\n  TrendingUp,\n  BarChart3,\n  Users,\n  Copy,\n  Bell,\n  Settings,\n  LogOut,\n  Sun,\n  Moon,\n  User,\n  ChevronDown,\n  Search,\n  Wallet,\n  Activity,\n  Shield,\n  HelpCircle,\n  Zap,\n  Radio,\n  CreditCard,\n  Crown,\n  Award,\n  Bot,\n  Link,\n  ArrowUpRight,\n  ArrowDownLeft,\n  Plus\n} from 'lucide-react';\nimport DepositWithdrawModal from '@/components/modals/DepositWithdrawModal';\n\ninterface NavigationItem {\n  name: string;\n  href: string;\n  icon: any;\n  badge?: number;\n  description?: string;\n}\n\n// All navigation items (available in user profile)\nconst allNavigationItems: NavigationItem[] = [\n  {\n    name: 'Dashboard',\n    href: '/dashboard',\n    icon: Home,\n    description: 'Overview and portfolio summary'\n  },\n  {\n    name: 'User Dashboard',\n    href: '/user-dashboard',\n    icon: User,\n    description: 'Personal account and subscription management'\n  },\n  {\n    name: 'Trading',\n    href: '/trading',\n    icon: TrendingUp,\n    description: 'Execute trades and view market data'\n  },\n  {\n    name: 'Live Trading',\n    href: '/trading/live',\n    icon: Radio,\n    description: 'Real-time trading dashboard'\n  },\n  {\n    name: 'Trading Panel',\n    href: '/trading/panel',\n    icon: TrendingUp,\n    description: 'Advanced trading interface with live market data'\n  },\n  {\n    name: 'Futures Trading',\n    href: '/trading/futures',\n    icon: TrendingUp,\n    description: 'Futures contracts trading'\n  },\n  {\n    name: 'Options Trading',\n    href: '/trading/options',\n    icon: BarChart3,\n    description: 'Options contracts trading'\n  },\n  {\n    name: 'Market Updates',\n    href: '/trading/market-updates',\n    icon: Bell,\n    description: 'Real-time market news and updates'\n  },\n  {\n    name: 'Pine Editor',\n    href: '/trading/pine-editor',\n    icon: Settings,\n    description: 'Pine Script editor for custom indicators'\n  },\n  {\n    name: 'Profit Targets',\n    href: '/trading/profit-targets',\n    icon: Award,\n    description: 'Set and manage profit targets'\n  },\n  {\n    name: 'Portfolio',\n    href: '/portfolio',\n    icon: BarChart3,\n    description: 'Manage your investments'\n  },\n  {\n    name: 'Copy Trade',\n    href: '/copy-trade',\n    icon: Copy,\n    description: 'Follow and copy successful traders'\n  },\n  {\n    name: 'Creators',\n    href: '/creators',\n    icon: Award,\n    description: 'Discover top trading creators and investors'\n  },\n  {\n    name: 'Social',\n    href: '/social',\n    icon: Users,\n    badge: 3,\n    description: 'Connect with the trading community'\n  },\n  {\n    name: 'Pricing',\n    href: '/pricing',\n    icon: Crown,\n    description: 'View subscription plans and pricing'\n  },\n  {\n    name: 'Payment',\n    href: '/payment',\n    icon: CreditCard,\n    description: 'Manage payment methods and billing'\n  },\n  {\n    name: 'Security',\n    href: '/security',\n    icon: Shield,\n    description: 'Security settings and compliance'\n  },\n  {\n    name: 'Automation',\n    href: '/automation',\n    icon: Bot,\n    description: 'Automated trading and system management'\n  },\n  {\n    name: 'Trading Bot',\n    href: '/automation/trading-bot',\n    icon: Bot,\n    description: 'Configure and manage trading bots'\n  },\n  {\n    name: 'Copy Trading Auto',\n    href: '/automation/copy-trading',\n    icon: Copy,\n    description: 'Automated copy trading settings'\n  },\n  {\n    name: 'Risk Management',\n    href: '/automation/risk-management',\n    icon: Shield,\n    description: 'Automated risk management rules'\n  },\n  {\n    name: 'Data Pipeline',\n    href: '/automation/data-pipeline',\n    icon: Activity,\n    description: 'Automated data processing and analysis'\n  },\n  {\n    name: 'Auto Notifications',\n    href: '/automation/notifications',\n    icon: Bell,\n    description: 'Automated notification settings'\n  },\n  {\n    name: 'Auto Payments',\n    href: '/automation/payments',\n    icon: CreditCard,\n    description: 'Automated payment processing'\n  },\n  {\n    name: 'Auto Reporting',\n    href: '/automation/reporting',\n    icon: BarChart3,\n    description: 'Automated report generation'\n  },\n  {\n    name: 'Auto Onboarding',\n    href: '/automation/onboarding',\n    icon: User,\n    description: 'Automated user onboarding process'\n  },\n  {\n    name: 'Brokers',\n    href: '/brokers',\n    icon: Link,\n    description: 'Connect and manage broker accounts'\n  },\n  {\n    name: 'Demo',\n    href: '/demo',\n    icon: Activity,\n    description: 'Practice trading with demo account'\n  },\n  {\n    name: 'Settings',\n    href: '/settings',\n    icon: Settings,\n    description: 'Application settings and preferences'\n  },\n  {\n    name: 'Profile',\n    href: '/profile',\n    icon: User,\n    description: 'Manage your profile and account details'\n  },\n  {\n    name: 'Help',\n    href: '/help',\n    icon: HelpCircle,\n    description: 'Get help and support'\n  }\n];\n\n// Items to hide from main navigation but keep in profile\nconst hiddenFromMainNav = ['Dashboard', 'User Dashboard', 'Trading', 'Live Trading', 'Futures Trading'];\n\n// Filtered navigation items for main navigation (excludes specified items)\nconst navigationItems = allNavigationItems.filter(item => !hiddenFromMainNav.includes(item.name));\n\nexport default function Navigation() {\n  const { user, logout } = useAuth();\n  const { theme, setTheme } = useTheme();\n  const { isPaperTrading } = useTradingMode();\n  const router = useRouter();\n  const pathname = usePathname();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [isProfileMenuOpen, setIsProfileMenuOpen] = useState(false);\n  const [mounted, setMounted] = useState(false);\n  const [focusedItemIndex, setFocusedItemIndex] = useState(-1);\n  const [isDepositWithdrawModalOpen, setIsDepositWithdrawModalOpen] = useState(false);\n  const [depositWithdrawMode, setDepositWithdrawMode] = useState<'deposit' | 'withdraw'>('deposit');\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  const handleLogout = async () => {\n    try {\n      await logout();\n      router.push('/login');\n      toast.success('Logged out successfully');\n    } catch (error) {\n      toast.error('Failed to logout. Please try again.');\n    }\n  };\n\n  const toggleTheme = () => {\n    setTheme(theme === 'dark' ? 'light' : 'dark');\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent, action: () => void) => {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n      action();\n    }\n  };\n\n  const handleNavigationKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === 'ArrowDown') {\n      event.preventDefault();\n      setFocusedItemIndex(prev => (prev + 1) % allNavigationItems.length);\n    } else if (event.key === 'ArrowUp') {\n      event.preventDefault();\n      setFocusedItemIndex(prev => prev <= 0 ? allNavigationItems.length - 1 : prev - 1);\n    } else if (event.key === 'Enter' && focusedItemIndex >= 0) {\n      event.preventDefault();\n      router.push(allNavigationItems[focusedItemIndex].href);\n    } else if (event.key === 'Escape') {\n      setIsProfileMenuOpen(false);\n      setIsMobileMenuOpen(false);\n    }\n  };\n\n  const isActive = (href: string) => {\n    return pathname === href;\n  };\n\n  if (!mounted) {\n    return null;\n  }\n\n  return (\n    <>\n      {/* Desktop Top Navigation Bar */}\n      <div className=\"hidden lg:block lg:fixed lg:top-0 lg:left-64 lg:right-0 lg:h-16 lg:bg-white lg:dark:bg-gray-800 lg:border-b lg:border-gray-200 lg:dark:border-gray-700 lg:shadow-sm lg:z-40\">\n        <div className=\"flex items-center justify-between h-full px-6\">\n          <div className=\"flex items-center space-x-6\">\n            <div className=\"relative\">\n              <button\n                onClick={() => setIsProfileMenuOpen(!isProfileMenuOpen)}\n                className=\"flex items-center space-x-2 px-3 py-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\"\n                aria-expanded={isProfileMenuOpen}\n                aria-haspopup=\"menu\"\n                aria-label=\"Quick navigation menu\"\n              >\n                <Menu className=\"h-4 w-4 text-gray-500 dark:text-gray-400\" />\n                <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Quick Menu</span>\n                <ChevronDown className={`h-4 w-4 text-gray-400 transition-transform ${\n                  isProfileMenuOpen ? 'rotate-180' : ''\n                }`} />\n              </button>\n              \n              {/* Quick Access Dropdown */}\n              {isProfileMenuOpen && (\n                <div className=\"absolute top-full left-0 mt-2 w-64 bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 py-2 max-h-96 overflow-y-auto z-50\">\n                  <div className=\"px-2 py-2\">\n                    <p className=\"px-2 py-1 text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Quick Access</p>\n                    {navigationItems.slice(0, 8).map((item) => {\n                      const active = isActive(item.href);\n                      return (\n                        <button\n                          key={item.href}\n                          onClick={() => {\n                            router.push(item.href);\n                            setIsProfileMenuOpen(false);\n                          }}\n                          className={`w-full flex items-center space-x-3 px-3 py-2 mb-1 rounded-lg transition-all duration-200 group text-sm ${\n                            active\n                              ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-sm'\n                              : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 hover:text-gray-900 dark:hover:text-white'\n                          }`}\n                          title={item.description}\n                        >\n                          <item.icon className={`h-4 w-4 transition-colors ${\n                            active ? 'text-white' : 'text-gray-500 dark:text-gray-400 group-hover:text-gray-700 dark:group-hover:text-gray-300'\n                          }`} aria-hidden=\"true\" />\n                          <span className=\"flex-1 text-left\">{item.name}</span>\n                        </button>\n                      );\n                    })}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n          \n          <div className=\"flex items-center space-x-4\">\n            <button\n              onClick={toggleTheme}\n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n              aria-label={`Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`}\n            >\n              {theme === 'dark' ? <Sun className=\"h-4 w-4\" /> : <Moon className=\"h-4 w-4\" />}\n            </button>\n            <button className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors relative\">\n              <Bell className=\"h-4 w-4\" />\n              <span className=\"absolute -top-1 -right-1 h-2 w-2 bg-red-500 rounded-full\"></span>\n            </button>\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"h-8 w-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full flex items-center justify-center\">\n                <span className=\"text-white font-semibold text-xs\">\n                  {user ? `${user.firstName?.[0] || ''}${user.lastName?.[0] || ''}` || 'U' : 'U'}\n                </span>\n              </div>\n              <div className=\"text-left\">\n                <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                  {user ? `${user.firstName || ''} ${user.lastName || ''}`.trim() || 'User' : 'User'}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Desktop Navigation */}\n      <nav className=\"hidden lg:flex lg:flex-col lg:w-64 lg:fixed lg:inset-y-0 lg:border-r lg:border-gray-200 lg:dark:border-gray-700 lg:bg-white lg:dark:bg-gray-800 lg:shadow-sm\">\n        {/* Logo */}\n        <div className=\"flex items-center justify-center h-16 px-6 border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex flex-col items-center space-y-1\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"h-8 w-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center\">\n                <Zap className=\"h-5 w-5 text-white\" />\n              </div>\n              <span className=\"text-xl font-bold text-gray-900 dark:text-white\">KAIRO</span>\n            </div>\n            {isPaperTrading && <DemoModeIndicator className=\"text-xs\" />}\n          </div>\n        </div>\n\n        {/* Simplified Navigation - Only Logo Area */}\n        <div className=\"flex-1 flex items-center justify-center px-4 py-6\">\n          <div className=\"text-center text-gray-500 dark:text-gray-400\">\n            <p className=\"text-sm\">Navigation Menu</p>\n            <p className=\"text-xs mt-1\">Available in Profile</p>\n          </div>\n        </div>\n\n        {/* User Profile Section */}\n        <div className=\"border-t border-gray-200 dark:border-gray-700 p-4\">\n          <div className=\"relative\">\n            <button\n              onClick={() => setIsProfileMenuOpen(!isProfileMenuOpen)}\n              className=\"w-full flex items-center space-x-3 p-3 rounded-xl hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\"\n              aria-expanded={isProfileMenuOpen}\n              aria-haspopup=\"menu\"\n              aria-label=\"User profile menu\"\n            >\n              <div className=\"h-10 w-10 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full flex items-center justify-center\">\n                <span className=\"text-white font-semibold text-sm\">\n                  {user ? `${user.firstName?.[0] || ''}${user.lastName?.[0] || ''}` || 'U' : 'U'}\n                </span>\n              </div>\n              <div className=\"flex-1 text-left\">\n                <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                  {user ? `${user.firstName || ''} ${user.lastName || ''}`.trim() || 'User' : 'User'}\n                </p>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  {user?.email || 'user@example.com'}\n                </p>\n              </div>\n              <ChevronDown className={`h-4 w-4 text-gray-400 transition-transform ${\n                isProfileMenuOpen ? 'rotate-180' : ''\n              }`} />\n            </button>\n\n            {/* Profile Dropdown with Navigation Menu */}\n            {isProfileMenuOpen && (\n              <div \n                className=\"absolute bottom-full left-0 right-0 mb-2 bg-white dark:bg-gray-800 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700 py-2 max-h-96 overflow-y-auto\"\n                role=\"menu\"\n                aria-label=\"User profile and navigation menu\"\n              >\n                {/* Navigation Items */}\n                <div className=\"px-2 py-2\">\n                    <p className=\"px-2 py-1 text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Navigation</p>\n                    <div onKeyDown={handleNavigationKeyDown}>\n                      {allNavigationItems.map((item, index) => {\n                      const active = isActive(item.href);\n                      const isFocused = focusedItemIndex === index;\n                      const isPortfolio = item.name === 'Portfolio';\n                      \n                      return (\n                        <div key={item.href} className=\"mb-1\">\n                          <button\n                            onClick={() => {\n                              router.push(item.href);\n                              setIsProfileMenuOpen(false);\n                            }}\n                            onKeyDown={(e) => handleKeyDown(e, () => {\n                              router.push(item.href);\n                              setIsProfileMenuOpen(false);\n                            })}\n                            className={`w-full flex items-center space-x-3 px-3 py-2 rounded-lg transition-all duration-200 group text-sm ${\n                              active\n                                ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-sm'\n                                : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 hover:text-gray-900 dark:hover:text-white'\n                            } ${\n                              isFocused ? 'ring-2 ring-blue-500 ring-offset-2 dark:ring-offset-gray-800' : ''\n                            }`}\n                            aria-current={active ? 'page' : undefined}\n                            title={item.description}\n                          >\n                            <item.icon className={`h-4 w-4 transition-colors ${\n                              active ? 'text-white' : 'text-gray-500 dark:text-gray-400 group-hover:text-gray-700 dark:group-hover:text-gray-300'\n                            }`} aria-hidden=\"true\" />\n                            <span className=\"flex-1 text-left\">{item.name}</span>\n                            {item.badge && (\n                              <span className={`ml-2 inline-flex items-center justify-center px-1.5 py-0.5 text-xs font-bold rounded-full ${\n                                active \n                                  ? 'bg-white/20 text-white' \n                                  : 'bg-blue-100 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400'\n                              }`} aria-label={`${item.badge} notifications`}>\n                                {item.badge}\n                              </span>\n                            )}\n                          </button>\n                          \n                          {/* Quick Action Buttons for Portfolio */}\n                          {isPortfolio && (\n                            <div className=\"flex space-x-1 mt-1 px-3\">\n                              <button\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  setDepositWithdrawMode('deposit');\n                                  setIsDepositWithdrawModalOpen(true);\n                                  setIsProfileMenuOpen(false);\n                                }}\n                                className=\"flex-1 flex items-center justify-center space-x-1 px-2 py-1 text-xs bg-green-100 dark:bg-green-900/20 text-green-700 dark:text-green-400 rounded-md hover:bg-green-200 dark:hover:bg-green-900/30 transition-colors\"\n                                title=\"Quick Deposit\"\n                              >\n                                <ArrowUpRight className=\"h-3 w-3\" />\n                                <span>Deposit</span>\n                              </button>\n                              <button\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  setDepositWithdrawMode('withdraw');\n                                  setIsDepositWithdrawModalOpen(true);\n                                  setIsProfileMenuOpen(false);\n                                }}\n                                className=\"flex-1 flex items-center justify-center space-x-1 px-2 py-1 text-xs bg-blue-100 dark:bg-blue-900/20 text-blue-700 dark:text-blue-400 rounded-md hover:bg-blue-200 dark:hover:bg-blue-900/30 transition-colors\"\n                                title=\"Quick Withdraw\"\n                              >\n                                <ArrowDownLeft className=\"h-3 w-3\" />\n                                <span>Withdraw</span>\n                              </button>\n                            </div>\n                          )}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n                \n                {/* Profile Actions */}\n                <div className=\"border-t border-gray-200 dark:border-gray-700 mt-2 pt-2\">\n                  <p className=\"px-4 py-1 text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Account</p>\n                  <button\n                    onClick={() => {\n                      router.push('/profile');\n                      setIsProfileMenuOpen(false);\n                    }}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                    role=\"menuitem\"\n                    aria-label=\"Go to profile page\"\n                  >\n                    <User className=\"h-4 w-4\" aria-hidden=\"true\" />\n                    <span>Profile</span>\n                  </button>\n                  <button\n                    onClick={() => {\n                      router.push('/settings');\n                      setIsProfileMenuOpen(false);\n                    }}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                  >\n                    <Settings className=\"h-4 w-4\" />\n                    <span>Settings</span>\n                  </button>\n                  <button\n                    onClick={toggleTheme}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700\"\n                  >\n                    {theme === 'dark' ? <Sun className=\"h-4 w-4\" /> : <Moon className=\"h-4 w-4\" />}\n                    <span>{theme === 'dark' ? 'Light Mode' : 'Dark Mode'}</span>\n                  </button>\n                  <div className=\"border-t border-gray-200 dark:border-gray-700 my-2\"></div>\n                  <button\n                    onClick={handleLogout}\n                    className=\"w-full flex items-center space-x-3 px-4 py-2 text-sm text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20\"\n                  >\n                    <LogOut className=\"h-4 w-4\" />\n                    <span>Sign Out</span>\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </nav>\n\n      {/* Mobile Navigation */}\n      <div className=\"lg:hidden\">\n        {/* Mobile Header */}\n        <div className=\"flex items-center justify-between h-16 px-4 bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 shadow-sm\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"h-8 w-8 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center\" role=\"img\" aria-label=\"KAIRO logo\">\n                <Zap className=\"h-5 w-5 text-white\" aria-hidden=\"true\" />\n              </div>\n              <span className=\"text-xl font-bold text-gray-900 dark:text-white\">KAIRO</span>\n            </div>\n            {isPaperTrading && <DemoModeIndicator className=\"text-xs\" />}\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={toggleTheme}\n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n              aria-label={`Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`}\n              title={`Switch to ${theme === 'dark' ? 'light' : 'dark'} mode`}\n            >\n              {theme === 'dark' ? <Sun className=\"h-5 w-5\" aria-hidden=\"true\" /> : <Moon className=\"h-5 w-5\" aria-hidden=\"true\" />}\n            </button>\n            <button \n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors relative\"\n              aria-label=\"Notifications\"\n              title=\"View notifications\"\n            >\n              <Bell className=\"h-5 w-5\" />\n              <span className=\"absolute -top-1 -right-1 h-3 w-3 bg-red-500 rounded-full\"></span>\n            </button>\n            <button\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n              className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\n              aria-label=\"Open navigation menu\"\n              title=\"Open navigation menu\"\n            >\n              <Menu className=\"h-5 w-5\" aria-hidden=\"true\" />\n            </button>\n          </div>\n        </div>\n\n        {/* Mobile Menu Overlay */}\n        {isMobileMenuOpen && (\n          <div className=\"fixed inset-0 z-50 lg:hidden\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"mobile-menu-title\">\n            <div className=\"fixed inset-0 bg-black bg-opacity-25\" onClick={() => setIsMobileMenuOpen(false)} aria-hidden=\"true\"></div>\n            <div className=\"fixed top-0 right-0 bottom-0 w-full max-w-sm bg-white dark:bg-gray-800 shadow-xl\">\n              {/* Mobile Menu Header */}\n              <div className=\"flex items-center justify-between h-16 px-4 border-b border-gray-200 dark:border-gray-700\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"h-10 w-10 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full flex items-center justify-center\">\n                    <span className=\"text-white font-semibold text-sm\">\n                      {user ? `${user.firstName?.[0] || ''}${user.lastName?.[0] || ''}` || 'U' : 'U'}\n                    </span>\n                  </div>\n                  <div>\n                    <h2 id=\"mobile-menu-title\" className=\"text-sm font-medium text-gray-900 dark:text-white\">\n                      {user ? `${user.firstName || ''} ${user.lastName || ''}`.trim() || 'User' : 'User'}\n                    </h2>\n                    <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                      {user?.email || 'user@example.com'}\n                    </p>\n                  </div>\n                </div>\n                <button\n                  onClick={() => setIsMobileMenuOpen(false)}\n                  className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 rounded-lg\"\n                  aria-label=\"Close navigation menu\"\n                  title=\"Close navigation menu\"\n                >\n                  <X className=\"h-6 w-6\" aria-hidden=\"true\" />\n                </button>\n              </div>\n\n              {/* Mobile Navigation Items */}\n              <div className=\"px-4 py-6 space-y-2\" onKeyDown={handleNavigationKeyDown} role=\"navigation\" aria-label=\"Mobile navigation menu\">\n                {allNavigationItems.map((item, index) => {\n                  const Icon = item.icon;\n                  const active = isActive(item.href);\n                  const isFocused = focusedItemIndex === index;\n                  \n                  return (\n                    <button\n                      key={item.name}\n                      onClick={() => {\n                        router.push(item.href);\n                        setIsMobileMenuOpen(false);\n                      }}\n                      onKeyDown={(e) => handleKeyDown(e, () => {\n                        router.push(item.href);\n                        setIsMobileMenuOpen(false);\n                      })}\n                      className={`w-full group flex items-center px-4 py-3 text-sm font-medium rounded-xl transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800 ${\n                        active\n                          ? 'bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-lg'\n                          : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n                      } ${\n                        isFocused ? 'ring-2 ring-blue-500 ring-offset-2 dark:ring-offset-gray-800' : ''\n                      }`}\n                      aria-current={active ? 'page' : undefined}\n                      aria-describedby={item.description ? `${item.href}-mobile-desc` : undefined}\n                      title={item.description}\n                    >\n                      <Icon className={`mr-3 h-5 w-5 ${\n                        active ? 'text-white' : 'text-gray-400'\n                      }`} aria-hidden=\"true\" />\n                      <div className=\"flex-1 text-left\">\n                        <div className=\"font-medium\">{item.name}</div>\n                        {item.description && (\n                          <div className={`text-xs mt-1 ${\n                            active ? 'text-white/80' : 'text-gray-500 dark:text-gray-400'\n                          }`} id={`${item.href}-mobile-desc`}>\n                            {item.description}\n                          </div>\n                        )}\n                      </div>\n                      {item.badge && (\n                        <span className={`ml-2 inline-flex items-center justify-center px-2 py-1 text-xs font-bold rounded-full ${\n                          active \n                            ? 'bg-white/20 text-white' \n                            : 'bg-blue-100 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400'\n                        }`} aria-label={`${item.badge} notifications`}>\n                          {item.badge}\n                        </span>\n                      )}\n                    </button>\n                  );\n                })}\n              </div>\n\n              {/* Mobile Menu Footer */}\n              <div className=\"border-t border-gray-200 dark:border-gray-700 px-4 py-4 space-y-2\">\n                <button\n                  onClick={() => {\n                    router.push('/profile');\n                    setIsMobileMenuOpen(false);\n                  }}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-xl transition-colors\"\n                >\n                  <User className=\"h-5 w-5 text-gray-400\" />\n                  <span>Profile</span>\n                </button>\n                <button\n                  onClick={() => {\n                    router.push('/settings');\n                    setIsMobileMenuOpen(false);\n                  }}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-xl transition-colors\"\n                >\n                  <Settings className=\"h-5 w-5 text-gray-400\" />\n                  <span>Settings</span>\n                </button>\n                <button\n                  onClick={() => {\n                    router.push('/help');\n                    setIsMobileMenuOpen(false);\n                  }}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-xl transition-colors\"\n                >\n                  <HelpCircle className=\"h-5 w-5 text-gray-400\" />\n                  <span>Help & Support</span>\n                </button>\n                <button\n                  onClick={handleLogout}\n                  className=\"w-full flex items-center space-x-3 px-4 py-3 text-sm text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20 rounded-xl transition-colors\"\n                >\n                  <LogOut className=\"h-5 w-5\" />\n                  <span>Sign Out</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Mobile Bottom Navigation */}\n      <div className=\"lg:hidden fixed bottom-0 left-0 right-0 bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700 shadow-lg\">\n        <div className=\"grid grid-cols-5 h-16\">\n          {/* Show only the 5 most important navigation items in bottom bar (filtered) */}\n          {navigationItems.slice(0, 5).map((item) => {\n            const Icon = item.icon;\n            const active = isActive(item.href);\n            \n            return (\n              <button\n                key={item.name}\n                onClick={() => router.push(item.href)}\n                className={`flex flex-col items-center justify-center space-y-1 transition-colors ${\n                  active\n                    ? 'text-blue-600 dark:text-blue-400'\n                    : 'text-gray-400 hover:text-gray-600 dark:hover:text-gray-300'\n                }`}\n              >\n                <div className=\"relative\">\n                  <Icon className=\"h-5 w-5\" />\n                  {item.badge && (\n                    <span className=\"absolute -top-2 -right-2 h-4 w-4 bg-red-500 text-white text-xs rounded-full flex items-center justify-center\">\n                      {item.badge}\n                    </span>\n                  )}\n                </div>\n                <span className=\"text-xs font-medium truncate\">{item.name}</span>\n              </button>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Deposit/Withdraw Modal */}\n      <DepositWithdrawModal\n        isOpen={isDepositWithdrawModalOpen}\n        onClose={() => setIsDepositWithdrawModalOpen(false)}\n        mode={depositWithdrawMode}\n      />\n    </>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+BA;;;AAxCA;;;;;;;;;;AAkDA,mDAAmD;AACnD,MAAM,qBAAuC;IAC3C;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,mOAAU;QAChB,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gNAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,mOAAU;QAChB,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,mOAAU;QAChB,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,oOAAS;QACf,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,yNAAQ;QACd,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gNAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,oOAAS;QACf,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,6MAAI;QACV,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gNAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gNAAK;QACX,OAAO;QACP,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,gNAAK;QACX,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,mOAAU;QAChB,aAAa;IACf;IACA;QACE,MAAM;QACN,MAAM;QACN,MAAM,mNAAM;QACZ,aAAa;IACf;IACA;QACE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","debugId":null}},
    {"offset": {"line": 7574, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/components/layouts/AppLayout.tsx"],"sourcesContent":["'use client';\n\nimport { ReactNode } from 'react';\nimport Navigation from '@/components/Navigation';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { useRouter, usePathname } from 'next/navigation';\nimport { useEffect } from 'react';\n\ninterface AppLayoutProps {\n  children: ReactNode;\n  requireAuth?: boolean;\n}\n\nexport default function AppLayout({ children, requireAuth = true }: AppLayoutProps) {\n  const { user, loading } = useAuth();\n  const router = useRouter();\n  const pathname = usePathname();\n\n  // Public routes that don't require authentication\n  const publicRoutes = ['/login', '/register', '/demo', '/'];\n  const isPublicRoute = publicRoutes.includes(pathname);\n\n  useEffect(() => {\n    if (!loading && requireAuth && !user && !isPublicRoute) {\n      router.push('/login');\n    }\n  }, [user, loading, requireAuth, isPublicRoute, router]);\n\n  // Show loading spinner while checking authentication\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  // For public routes or when auth is not required, show content without navigation\n  if (!requireAuth || isPublicRoute) {\n    return <>{children}</>;\n  }\n\n  // For authenticated routes, show navigation + content\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      <Navigation />\n      \n      {/* Main content area with proper spacing for navigation */}\n      <div className=\"lg:pl-64 lg:pt-16\">\n        {/* Content wrapper with padding */}\n        <main className=\"min-h-screen\">\n          {children}\n        </main>\n      </div>\n      \n      {/* Bottom spacing for mobile navigation */}\n      <div className=\"h-16 lg:hidden\"></div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AACA;;;AANA;;;;;AAae,SAAS,UAAU,KAAgD;QAAhD,EAAE,QAAQ,EAAE,cAAc,IAAI,EAAkB,GAAhD;;IAChC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,IAAA,6IAAO;IACjC,MAAM,SAAS,IAAA,kJAAS;IACxB,MAAM,WAAW,IAAA,oJAAW;IAE5B,kDAAkD;IAClD,MAAM,eAAe;QAAC;QAAU;QAAa;QAAS;KAAI;IAC1D,MAAM,gBAAgB,aAAa,QAAQ,CAAC;IAE5C,IAAA,0KAAS;+BAAC;YACR,IAAI,CAAC,WAAW,eAAe,CAAC,QAAQ,CAAC,eAAe;gBACtD,OAAO,IAAI,CAAC;YACd;QACF;8BAAG;QAAC;QAAM;QAAS;QAAa;QAAe;KAAO;IAEtD,qDAAqD;IACrD,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;;;;;;;;;;IAGrB;IAEA,kFAAkF;IAClF,IAAI,CAAC,eAAe,eAAe;QACjC,qBAAO;sBAAG;;IACZ;IAEA,sDAAsD;IACtD,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,8IAAU;;;;;0BAGX,6LAAC;gBAAI,WAAU;0BAEb,cAAA,6LAAC;oBAAK,WAAU;8BACb;;;;;;;;;;;0BAKL,6LAAC;gBAAI,WAAU;;;;;;;;;;;;AAGrB;GA9CwB;;QACI,6IAAO;QAClB,kJAAS;QACP,oJAAW;;;KAHN","debugId":null}},
    {"offset": {"line": 7695, "column": 0}, "map": {"version":3,"sources":["file:///Users/blvckdlphn/projects/KAIRO/src/app/trading/panel/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { Suspense } from 'react';\nimport TradingPanelDashboard from '@/components/trading/TradingPanelDashboard';\nimport AppLayout from '@/components/layouts/AppLayout';\nimport { useSearchParams } from 'next/navigation';\n\nfunction TradingPanelContent() {\n  const searchParams = useSearchParams();\n  \n  // Extract URL parameters for automated workflow\n  const urlParams = {\n    symbol: searchParams.get('symbol') || 'LINKUSDT',\n    orderType: searchParams.get('orderType') as 'market' | 'limit' | 'stop' || 'limit',\n    orderSide: searchParams.get('orderSide') as 'buy' | 'sell' || 'buy',\n    quantity: searchParams.get('quantity') || '',\n    price: searchParams.get('price') || ''\n  };\n\n  return (\n    <AppLayout>\n      <div className=\"h-screen overflow-hidden bg-gray-50 dark:bg-gray-900\">\n        <TradingPanelDashboard initialParams={urlParams} />\n      </div>\n    </AppLayout>\n  );\n}\n\nconst TradingPanelPage: React.FC = () => {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <TradingPanelContent />\n    </Suspense>\n  );\n};\n\nexport default TradingPanelPage;"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAOA,SAAS;;IACP,MAAM,eAAe,IAAA,wJAAe;IAEpC,gDAAgD;IAChD,MAAM,YAAY;QAChB,QAAQ,aAAa,GAAG,CAAC,aAAa;QACtC,WAAW,aAAa,GAAG,CAAC,gBAA+C;QAC3E,WAAW,aAAa,GAAG,CAAC,gBAAkC;QAC9D,UAAU,aAAa,GAAG,CAAC,eAAe;QAC1C,OAAO,aAAa,GAAG,CAAC,YAAY;IACtC;IAEA,qBACE,6LAAC,wJAAS;kBACR,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC,oKAAqB;gBAAC,eAAe;;;;;;;;;;;;;;;;AAI9C;GAnBS;;QACc,wJAAe;;;KAD7B;AAqBT,MAAM,mBAA6B;IACjC,qBACE,6LAAC,yKAAQ;QAAC,wBAAU,6LAAC;sBAAI;;;;;;kBACvB,cAAA,6LAAC;;;;;;;;;;AAGP;MANM;uCAQS","debugId":null}}]
}